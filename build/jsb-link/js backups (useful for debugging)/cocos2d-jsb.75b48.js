(function(t, e, i) {
function n(i, r) {
var s = e[i];
if (!s) {
var o = t[i];
if (!o) return;
var a = {};
s = e[i] = {
exports: a
};
o[0]((function(t) {
return n(o[1][t] || t);
}), s, a);
}
return s.exports;
}
for (var r = 0; r < i.length; r++) n(i[r]);
})({
1: [ (function(t, e, i) {
"use strict";
t("../core/platform/CCClass");
var n = t("../core/utils/misc");
cc.Action = cc.Class({
name: "cc.Action",
ctor: function() {
this.originalTarget = null;
this.target = null;
this.tag = cc.Action.TAG_INVALID;
},
clone: function() {
var t = new cc.Action();
t.originalTarget = null;
t.target = null;
t.tag = this.tag;
return t;
},
isDone: function() {
return !0;
},
startWithTarget: function(t) {
this.originalTarget = t;
this.target = t;
},
stop: function() {
this.target = null;
},
step: function(t) {
cc.logID(1006);
},
update: function(t) {
cc.logID(1007);
},
getTarget: function() {
return this.target;
},
setTarget: function(t) {
this.target = t;
},
getOriginalTarget: function() {
return this.originalTarget;
},
setOriginalTarget: function(t) {
this.originalTarget = t;
},
getTag: function() {
return this.tag;
},
setTag: function(t) {
this.tag = t;
},
retain: function() {},
release: function() {}
});
cc.Action.TAG_INVALID = -1;
cc.FiniteTimeAction = cc.Class({
name: "cc.FiniteTimeAction",
extends: cc.Action,
ctor: function() {
this._duration = 0;
},
getDuration: function() {
return this._duration * (this._timesForRepeat || 1);
},
setDuration: function(t) {
this._duration = t;
},
reverse: function() {
cc.logID(1008);
return null;
},
clone: function() {
return new cc.FiniteTimeAction();
}
});
cc.Speed = cc.Class({
name: "cc.Speed",
extends: cc.Action,
ctor: function(t, e) {
this._speed = 0;
this._innerAction = null;
t && this.initWithAction(t, e);
},
getSpeed: function() {
return this._speed;
},
setSpeed: function(t) {
this._speed = t;
},
initWithAction: function(t, e) {
if (!t) {
cc.errorID(1021);
return !1;
}
this._innerAction = t;
this._speed = e;
return !0;
},
clone: function() {
var t = new cc.Speed();
t.initWithAction(this._innerAction.clone(), this._speed);
return t;
},
startWithTarget: function(t) {
cc.Action.prototype.startWithTarget.call(this, t);
this._innerAction.startWithTarget(t);
},
stop: function() {
this._innerAction.stop();
cc.Action.prototype.stop.call(this);
},
step: function(t) {
this._innerAction.step(t * this._speed);
},
isDone: function() {
return this._innerAction.isDone();
},
reverse: function() {
return new cc.Speed(this._innerAction.reverse(), this._speed);
},
setInnerAction: function(t) {
this._innerAction !== t && (this._innerAction = t);
},
getInnerAction: function() {
return this._innerAction;
}
});
cc.speed = function(t, e) {
return new cc.Speed(t, e);
};
cc.Follow = cc.Class({
name: "cc.Follow",
extends: cc.Action,
ctor: function(t, e) {
this._followedNode = null;
this._boundarySet = !1;
this._boundaryFullyCovered = !1;
this._halfScreenSize = null;
this._fullScreenSize = null;
this.leftBoundary = 0;
this.rightBoundary = 0;
this.topBoundary = 0;
this.bottomBoundary = 0;
this._worldRect = cc.rect(0, 0, 0, 0);
t && (e ? this.initWithTarget(t, e) : this.initWithTarget(t));
},
clone: function() {
var t = new cc.Follow(), e = this._worldRect, i = new cc.Rect(e.x, e.y, e.width, e.height);
t.initWithTarget(this._followedNode, i);
return t;
},
isBoundarySet: function() {
return this._boundarySet;
},
setBoudarySet: function(t) {
this._boundarySet = t;
},
initWithTarget: function(t, e) {
if (!t) {
cc.errorID(1022);
return !1;
}
e = e || cc.rect(0, 0, 0, 0);
this._followedNode = t;
this._worldRect = e;
this._boundarySet = !(0 === e.width && 0 === e.height);
this._boundaryFullyCovered = !1;
var i = cc.winSize;
this._fullScreenSize = cc.v2(i.width, i.height);
this._halfScreenSize = this._fullScreenSize.mul(.5);
if (this._boundarySet) {
this.leftBoundary = -(e.x + e.width - this._fullScreenSize.x);
this.rightBoundary = -e.x;
this.topBoundary = -e.y;
this.bottomBoundary = -(e.y + e.height - this._fullScreenSize.y);
this.rightBoundary < this.leftBoundary && (this.rightBoundary = this.leftBoundary = (this.leftBoundary + this.rightBoundary) / 2);
this.topBoundary < this.bottomBoundary && (this.topBoundary = this.bottomBoundary = (this.topBoundary + this.bottomBoundary) / 2);
this.topBoundary === this.bottomBoundary && this.leftBoundary === this.rightBoundary && (this._boundaryFullyCovered = !0);
}
return !0;
},
step: function(t) {
var e = this.target.convertToWorldSpaceAR(cc.Vec2.ZERO), i = this._followedNode.convertToWorldSpaceAR(cc.Vec2.ZERO), r = e.sub(i), s = this.target.parent.convertToNodeSpaceAR(r.add(this._halfScreenSize));
if (this._boundarySet) {
if (this._boundaryFullyCovered) return;
this.target.setPosition(n.clampf(s.x, this.leftBoundary, this.rightBoundary), n.clampf(s.y, this.bottomBoundary, this.topBoundary));
} else this.target.setPosition(s.x, s.y);
},
isDone: function() {
return !this._followedNode.activeInHierarchy;
},
stop: function() {
this.target = null;
cc.Action.prototype.stop.call(this);
}
});
cc.follow = function(t, e) {
return new cc.Follow(t, e);
};
}), {
"../core/platform/CCClass": 230,
"../core/utils/misc": 313
} ],
2: [ (function(t, e, i) {
"use strict";
function n(t, e, i, n, r, s) {
var o = s * s, a = o * s, c = (1 - r) / 2, l = c * (2 * o - a - s), u = c * (-a + o) + (2 * a - 3 * o + 1), h = c * (a - 2 * o + s) + (-2 * a + 3 * o), f = c * (a - o), _ = t.x * l + e.x * u + i.x * h + n.x * f, d = t.y * l + e.y * u + i.y * h + n.y * f;
return cc.v2(_, d);
}
function r(t, e) {
return t[Math.min(t.length - 1, Math.max(e, 0))];
}
function s(t) {
for (var e = [], i = t.length - 1; i >= 0; i--) e.push(cc.v2(t[i].x, t[i].y));
return e;
}
function o(t) {
for (var e = [], i = 0; i < t.length; i++) e.push(cc.v2(t[i].x, t[i].y));
return e;
}
cc.CardinalSplineTo = cc.Class({
name: "cc.CardinalSplineTo",
extends: cc.ActionInterval,
ctor: function(t, e, i) {
this._points = [];
this._deltaT = 0;
this._tension = 0;
this._previousPosition = null;
this._accumulatedDiff = null;
void 0 !== i && cc.CardinalSplineTo.prototype.initWithDuration.call(this, t, e, i);
},
initWithDuration: function(t, e, i) {
if (!e || 0 === e.length) {
cc.errorID(1024);
return !1;
}
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this.setPoints(e);
this._tension = i;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.CardinalSplineTo();
t.initWithDuration(this._duration, o(this._points), this._tension);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._deltaT = 1 / (this._points.length - 1);
this._previousPosition = cc.v2(this.target.x, this.target.y);
this._accumulatedDiff = cc.v2(0, 0);
},
update: function(t) {
t = this._computeEaseTime(t);
var e, i, s = this._points;
if (1 === t) {
e = s.length - 1;
i = 1;
} else {
var o = this._deltaT;
i = (t - o * (e = 0 | t / o)) / o;
}
var a = n(r(s, e - 1), r(s, e - 0), r(s, e + 1), r(s, e + 2), this._tension, i);
if (cc.macro.ENABLE_STACKABLE_ACTIONS) {
var c, l;
c = this.target.x - this._previousPosition.x;
l = this.target.y - this._previousPosition.y;
if (0 !== c || 0 !== l) {
var u = this._accumulatedDiff;
c = u.x + c;
l = u.y + l;
u.x = c;
u.y = l;
a.x += c;
a.y += l;
}
}
this.updatePosition(a);
},
reverse: function() {
var t = s(this._points);
return cc.cardinalSplineTo(this._duration, t, this._tension);
},
updatePosition: function(t) {
this.target.setPosition(t);
this._previousPosition = t;
},
getPoints: function() {
return this._points;
},
setPoints: function(t) {
this._points = t;
}
});
cc.cardinalSplineTo = function(t, e, i) {
return new cc.CardinalSplineTo(t, e, i);
};
cc.CardinalSplineBy = cc.Class({
name: "cc.CardinalSplineBy",
extends: cc.CardinalSplineTo,
ctor: function(t, e, i) {
this._startPosition = cc.v2(0, 0);
void 0 !== i && this.initWithDuration(t, e, i);
},
startWithTarget: function(t) {
cc.CardinalSplineTo.prototype.startWithTarget.call(this, t);
this._startPosition.x = t.x;
this._startPosition.y = t.y;
},
reverse: function() {
for (var t, e = this._points.slice(), i = e[0], n = 1; n < e.length; ++n) {
t = e[n];
e[n] = t.sub(i);
i = t;
}
var r = s(e);
i = r[r.length - 1];
r.pop();
i.x = -i.x;
i.y = -i.y;
r.unshift(i);
for (n = 1; n < r.length; ++n) {
(t = r[n]).x = -t.x;
t.y = -t.y;
t.x += i.x;
t.y += i.y;
r[n] = t;
i = t;
}
return cc.cardinalSplineBy(this._duration, r, this._tension);
},
updatePosition: function(t) {
var e = this._startPosition, i = t.x + e.x, n = t.y + e.y;
this._previousPosition.x = i;
this._previousPosition.y = n;
this.target.setPosition(i, n);
},
clone: function() {
var t = new cc.CardinalSplineBy();
t.initWithDuration(this._duration, o(this._points), this._tension);
return t;
}
});
cc.cardinalSplineBy = function(t, e, i) {
return new cc.CardinalSplineBy(t, e, i);
};
cc.CatmullRomTo = cc.Class({
name: "cc.CatmullRomTo",
extends: cc.CardinalSplineTo,
ctor: function(t, e) {
e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
return cc.CardinalSplineTo.prototype.initWithDuration.call(this, t, e, .5);
},
clone: function() {
var t = new cc.CatmullRomTo();
t.initWithDuration(this._duration, o(this._points));
return t;
}
});
cc.catmullRomTo = function(t, e) {
return new cc.CatmullRomTo(t, e);
};
cc.CatmullRomBy = cc.Class({
name: "cc.CatmullRomBy",
extends: cc.CardinalSplineBy,
ctor: function(t, e) {
e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
return cc.CardinalSplineTo.prototype.initWithDuration.call(this, t, e, .5);
},
clone: function() {
var t = new cc.CatmullRomBy();
t.initWithDuration(this._duration, o(this._points));
return t;
}
});
cc.catmullRomBy = function(t, e) {
return new cc.CatmullRomBy(t, e);
};
}), {} ],
3: [ (function(t, e, i) {
"use strict";
cc.easeIn = function(t) {
return {
_rate: t,
easing: function(t) {
return Math.pow(t, this._rate);
},
reverse: function() {
return cc.easeIn(1 / this._rate);
}
};
};
cc.easeOut = function(t) {
return {
_rate: t,
easing: function(t) {
return Math.pow(t, 1 / this._rate);
},
reverse: function() {
return cc.easeOut(1 / this._rate);
}
};
};
cc.easeInOut = function(t) {
return {
_rate: t,
easing: function(t) {
return (t *= 2) < 1 ? .5 * Math.pow(t, this._rate) : 1 - .5 * Math.pow(2 - t, this._rate);
},
reverse: function() {
return cc.easeInOut(this._rate);
}
};
};
var n = {
easing: function(t) {
return 0 === t ? 0 : Math.pow(2, 10 * (t - 1));
},
reverse: function() {
return r;
}
};
cc.easeExponentialIn = function() {
return n;
};
var r = {
easing: function(t) {
return 1 === t ? 1 : 1 - Math.pow(2, -10 * t);
},
reverse: function() {
return n;
}
};
cc.easeExponentialOut = function() {
return r;
};
var s = {
easing: function(t) {
return 1 !== t && 0 !== t ? (t *= 2) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1))) : t;
},
reverse: function() {
return s;
}
};
cc.easeExponentialInOut = function() {
return s;
};
var o = {
easing: function(t) {
return 0 === t || 1 === t ? t : -1 * Math.cos(t * Math.PI / 2) + 1;
},
reverse: function() {
return a;
}
};
cc.easeSineIn = function() {
return o;
};
var a = {
easing: function(t) {
return 0 === t || 1 === t ? t : Math.sin(t * Math.PI / 2);
},
reverse: function() {
return o;
}
};
cc.easeSineOut = function() {
return a;
};
var c = {
easing: function(t) {
return 0 === t || 1 === t ? t : -.5 * (Math.cos(Math.PI * t) - 1);
},
reverse: function() {
return c;
}
};
cc.easeSineInOut = function() {
return c;
};
var l = {
easing: function(t) {
if (0 === t || 1 === t) return t;
t -= 1;
return -Math.pow(2, 10 * t) * Math.sin((t - .075) * Math.PI * 2 / .3);
},
reverse: function() {
return u;
}
};
cc.easeElasticIn = function(t) {
return t && .3 !== t ? {
_period: t,
easing: function(t) {
if (0 === t || 1 === t) return t;
t -= 1;
return -Math.pow(2, 10 * t) * Math.sin((t - this._period / 4) * Math.PI * 2 / this._period);
},
reverse: function() {
return cc.easeElasticOut(this._period);
}
} : l;
};
var u = {
easing: function(t) {
return 0 === t || 1 === t ? t : Math.pow(2, -10 * t) * Math.sin((t - .075) * Math.PI * 2 / .3) + 1;
},
reverse: function() {
return l;
}
};
cc.easeElasticOut = function(t) {
return t && .3 !== t ? {
_period: t,
easing: function(t) {
return 0 === t || 1 === t ? t : Math.pow(2, -10 * t) * Math.sin((t - this._period / 4) * Math.PI * 2 / this._period) + 1;
},
reverse: function() {
return cc.easeElasticIn(this._period);
}
} : u;
};
cc.easeElasticInOut = function(t) {
return {
_period: t = t || .3,
easing: function(t) {
var e = 0, i = this._period;
if (0 === t || 1 === t) e = t; else {
t *= 2;
i || (i = this._period = .3 * 1.5);
var n = i / 4;
e = (t -= 1) < 0 ? -.5 * Math.pow(2, 10 * t) * Math.sin((t - n) * Math.PI * 2 / i) : Math.pow(2, -10 * t) * Math.sin((t - n) * Math.PI * 2 / i) * .5 + 1;
}
return e;
},
reverse: function() {
return cc.easeElasticInOut(this._period);
}
};
};
function h(t) {
return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
}
var f = {
easing: function(t) {
return 1 - h(1 - t);
},
reverse: function() {
return _;
}
};
cc.easeBounceIn = function() {
return f;
};
var _ = {
easing: function(t) {
return h(t);
},
reverse: function() {
return f;
}
};
cc.easeBounceOut = function() {
return _;
};
var d = {
easing: function(t) {
return t < .5 ? .5 * (1 - h(1 - (t *= 2))) : .5 * h(2 * t - 1) + .5;
},
reverse: function() {
return d;
}
};
cc.easeBounceInOut = function() {
return d;
};
var p = {
easing: function(t) {
return 0 === t || 1 === t ? t : t * t * (2.70158 * t - 1.70158);
},
reverse: function() {
return m;
}
};
cc.easeBackIn = function() {
return p;
};
var m = {
easing: function(t) {
return (t -= 1) * t * (2.70158 * t + 1.70158) + 1;
},
reverse: function() {
return p;
}
};
cc.easeBackOut = function() {
return m;
};
var y = {
easing: function(t) {
return (t *= 2) < 1 ? t * t * (3.5949095 * t - 2.5949095) / 2 : (t -= 2) * t * (3.5949095 * t + 2.5949095) / 2 + 1;
},
reverse: function() {
return y;
}
};
cc.easeBackInOut = function() {
return y;
};
cc.easeBezierAction = function(t, e, i, n) {
return {
easing: function(r) {
return Math.pow(1 - r, 3) * t + 3 * r * Math.pow(1 - r, 2) * e + 3 * Math.pow(r, 2) * (1 - r) * i + Math.pow(r, 3) * n;
},
reverse: function() {
return cc.easeBezierAction(n, i, e, t);
}
};
};
var v = {
easing: function(t) {
return Math.pow(t, 2);
},
reverse: function() {
return v;
}
};
cc.easeQuadraticActionIn = function() {
return v;
};
var g = {
easing: function(t) {
return -t * (t - 2);
},
reverse: function() {
return g;
}
};
cc.easeQuadraticActionOut = function() {
return g;
};
var b = {
easing: function(t) {
return (t *= 2) < 1 ? t * t * .5 : -.5 * (--t * (t - 2) - 1);
},
reverse: function() {
return b;
}
};
cc.easeQuadraticActionInOut = function() {
return b;
};
var C = {
easing: function(t) {
return t * t * t * t;
},
reverse: function() {
return C;
}
};
cc.easeQuarticActionIn = function() {
return C;
};
var x = {
easing: function(t) {
return -((t -= 1) * t * t * t - 1);
},
reverse: function() {
return x;
}
};
cc.easeQuarticActionOut = function() {
return x;
};
var A = {
easing: function(t) {
return (t *= 2) < 1 ? .5 * t * t * t * t : -.5 * ((t -= 2) * t * t * t - 2);
},
reverse: function() {
return A;
}
};
cc.easeQuarticActionInOut = function() {
return A;
};
var S = {
easing: function(t) {
return t * t * t * t * t;
},
reverse: function() {
return S;
}
};
cc.easeQuinticActionIn = function() {
return S;
};
var w = {
easing: function(t) {
return (t -= 1) * t * t * t * t + 1;
},
reverse: function() {
return w;
}
};
cc.easeQuinticActionOut = function() {
return w;
};
var T = {
easing: function(t) {
return (t *= 2) < 1 ? .5 * t * t * t * t * t : .5 * ((t -= 2) * t * t * t * t + 2);
},
reverse: function() {
return T;
}
};
cc.easeQuinticActionInOut = function() {
return T;
};
var E = {
easing: function(t) {
return -1 * (Math.sqrt(1 - t * t) - 1);
},
reverse: function() {
return E;
}
};
cc.easeCircleActionIn = function() {
return E;
};
var M = {
easing: function(t) {
t -= 1;
return Math.sqrt(1 - t * t);
},
reverse: function() {
return M;
}
};
cc.easeCircleActionOut = function() {
return M;
};
var B = {
easing: function(t) {
if ((t *= 2) < 1) return -.5 * (Math.sqrt(1 - t * t) - 1);
t -= 2;
return .5 * (Math.sqrt(1 - t * t) + 1);
},
reverse: function() {
return B;
}
};
cc.easeCircleActionInOut = function() {
return B;
};
var D = {
easing: function(t) {
return t * t * t;
},
reverse: function() {
return D;
}
};
cc.easeCubicActionIn = function() {
return D;
};
var R = {
easing: function(t) {
return (t -= 1) * t * t + 1;
},
reverse: function() {
return R;
}
};
cc.easeCubicActionOut = function() {
return R;
};
var I = {
easing: function(t) {
return (t *= 2) < 1 ? .5 * t * t * t : .5 * ((t -= 2) * t * t + 2);
},
reverse: function() {
return I;
}
};
cc.easeCubicActionInOut = function() {
return I;
};
}), {} ],
4: [ (function(t, e, i) {
"use strict";
cc.ActionInstant = cc.Class({
name: "cc.ActionInstant",
extends: cc.FiniteTimeAction,
isDone: function() {
return !0;
},
step: function(t) {
this.update(1);
},
update: function(t) {},
reverse: function() {
return this.clone();
},
clone: function() {
return new cc.ActionInstant();
}
});
cc.Show = cc.Class({
name: "cc.Show",
extends: cc.ActionInstant,
update: function(t) {
for (var e = this.target.getComponentsInChildren(cc.RenderComponent), i = 0; i < e.length; ++i) {
e[i].enabled = !0;
}
},
reverse: function() {
return new cc.Hide();
},
clone: function() {
return new cc.Show();
}
});
cc.show = function() {
return new cc.Show();
};
cc.Hide = cc.Class({
name: "cc.Hide",
extends: cc.ActionInstant,
update: function(t) {
for (var e = this.target.getComponentsInChildren(cc.RenderComponent), i = 0; i < e.length; ++i) {
e[i].enabled = !1;
}
},
reverse: function() {
return new cc.Show();
},
clone: function() {
return new cc.Hide();
}
});
cc.hide = function() {
return new cc.Hide();
};
cc.ToggleVisibility = cc.Class({
name: "cc.ToggleVisibility",
extends: cc.ActionInstant,
update: function(t) {
for (var e = this.target.getComponentsInChildren(cc.RenderComponent), i = 0; i < e.length; ++i) {
var n = e[i];
n.enabled = !n.enabled;
}
},
reverse: function() {
return new cc.ToggleVisibility();
},
clone: function() {
return new cc.ToggleVisibility();
}
});
cc.toggleVisibility = function() {
return new cc.ToggleVisibility();
};
cc.RemoveSelf = cc.Class({
name: "cc.RemoveSelf",
extends: cc.ActionInstant,
ctor: function(t) {
this._isNeedCleanUp = !0;
void 0 !== t && this.init(t);
},
update: function(t) {
this.target.removeFromParent(this._isNeedCleanUp);
},
init: function(t) {
this._isNeedCleanUp = t;
return !0;
},
reverse: function() {
return new cc.RemoveSelf(this._isNeedCleanUp);
},
clone: function() {
return new cc.RemoveSelf(this._isNeedCleanUp);
}
});
cc.removeSelf = function(t) {
return new cc.RemoveSelf(t);
};
cc.DestroySelf = cc.Class({
name: "cc.DestroySelf",
extends: cc.ActionInstant,
update: function() {
this.target.destroy();
},
reverse: function() {
return new cc.DestroySelf();
},
clone: function() {
return new cc.DestroySelf();
}
});
cc.destroySelf = function() {
return new cc.DestroySelf();
};
cc.FlipX = cc.Class({
name: "cc.FlipX",
extends: cc.ActionInstant,
ctor: function(t) {
this._flippedX = !1;
void 0 !== t && this.initWithFlipX(t);
},
initWithFlipX: function(t) {
this._flippedX = t;
return !0;
},
update: function(t) {
this.target.scaleX = Math.abs(this.target.scaleX) * (this._flippedX ? -1 : 1);
},
reverse: function() {
return new cc.FlipX(!this._flippedX);
},
clone: function() {
var t = new cc.FlipX();
t.initWithFlipX(this._flippedX);
return t;
}
});
cc.flipX = function(t) {
return new cc.FlipX(t);
};
cc.FlipY = cc.Class({
name: "cc.FlipY",
extends: cc.ActionInstant,
ctor: function(t) {
this._flippedY = !1;
void 0 !== t && this.initWithFlipY(t);
},
initWithFlipY: function(t) {
this._flippedY = t;
return !0;
},
update: function(t) {
this.target.scaleY = Math.abs(this.target.scaleY) * (this._flippedY ? -1 : 1);
},
reverse: function() {
return new cc.FlipY(!this._flippedY);
},
clone: function() {
var t = new cc.FlipY();
t.initWithFlipY(this._flippedY);
return t;
}
});
cc.flipY = function(t) {
return new cc.FlipY(t);
};
cc.Place = cc.Class({
name: "cc.Place",
extends: cc.ActionInstant,
ctor: function(t, e) {
this._x = 0;
this._y = 0;
if (void 0 !== t) {
if (void 0 !== t.x) {
e = t.y;
t = t.x;
}
this.initWithPosition(t, e);
}
},
initWithPosition: function(t, e) {
this._x = t;
this._y = e;
return !0;
},
update: function(t) {
this.target.setPosition(this._x, this._y);
},
clone: function() {
var t = new cc.Place();
t.initWithPosition(this._x, this._y);
return t;
}
});
cc.place = function(t, e) {
return new cc.Place(t, e);
};
cc.CallFunc = cc.Class({
name: "cc.CallFunc",
extends: cc.ActionInstant,
ctor: function(t, e, i) {
this._selectorTarget = null;
this._function = null;
this._data = null;
this.initWithFunction(t, e, i);
},
initWithFunction: function(t, e, i) {
t && (this._function = t);
e && (this._selectorTarget = e);
void 0 !== i && (this._data = i);
return !0;
},
execute: function() {
this._function && this._function.call(this._selectorTarget, this.target, this._data);
},
update: function(t) {
this.execute();
},
getTargetCallback: function() {
return this._selectorTarget;
},
setTargetCallback: function(t) {
if (t !== this._selectorTarget) {
this._selectorTarget && (this._selectorTarget = null);
this._selectorTarget = t;
}
},
clone: function() {
var t = new cc.CallFunc();
t.initWithFunction(this._function, this._selectorTarget, this._data);
return t;
}
});
cc.callFunc = function(t, e, i) {
return new cc.CallFunc(t, e, i);
};
}), {} ],
5: [ (function(t, e, i) {
"use strict";
cc.ActionInterval = cc.Class({
name: "cc.ActionInterval",
extends: cc.FiniteTimeAction,
ctor: function(t) {
this.MAX_VALUE = 2;
this._elapsed = 0;
this._firstTick = !1;
this._easeList = null;
this._speed = 1;
this._timesForRepeat = 1;
this._repeatForever = !1;
this._repeatMethod = !1;
this._speedMethod = !1;
void 0 !== t && cc.ActionInterval.prototype.initWithDuration.call(this, t);
},
getElapsed: function() {
return this._elapsed;
},
initWithDuration: function(t) {
this._duration = 0 === t ? cc.macro.FLT_EPSILON : t;
this._elapsed = 0;
this._firstTick = !0;
return !0;
},
isDone: function() {
return this._elapsed >= this._duration;
},
_cloneDecoration: function(t) {
t._repeatForever = this._repeatForever;
t._speed = this._speed;
t._timesForRepeat = this._timesForRepeat;
t._easeList = this._easeList;
t._speedMethod = this._speedMethod;
t._repeatMethod = this._repeatMethod;
},
_reverseEaseList: function(t) {
if (this._easeList) {
t._easeList = [];
for (var e = 0; e < this._easeList.length; e++) t._easeList.push(this._easeList[e].reverse());
}
},
clone: function() {
var t = new cc.ActionInterval(this._duration);
this._cloneDecoration(t);
return t;
},
easing: function(t) {
this._easeList ? this._easeList.length = 0 : this._easeList = [];
for (var e = 0; e < arguments.length; e++) this._easeList.push(arguments[e]);
return this;
},
_computeEaseTime: function(t) {
var e = this._easeList;
if (!e || 0 === e.length) return t;
for (var i = 0, n = e.length; i < n; i++) t = e[i].easing(t);
return t;
},
step: function(t) {
if (this._firstTick) {
this._firstTick = !1;
this._elapsed = 0;
} else this._elapsed += t;
var e = this._elapsed / (this._duration > 1.192092896e-7 ? this._duration : 1.192092896e-7);
e = 1 > e ? e : 1;
this.update(e > 0 ? e : 0);
if (this._repeatMethod && this._timesForRepeat > 1 && this.isDone()) {
this._repeatForever || this._timesForRepeat--;
this.startWithTarget(this.target);
this.step(this._elapsed - this._duration);
}
},
startWithTarget: function(t) {
cc.Action.prototype.startWithTarget.call(this, t);
this._elapsed = 0;
this._firstTick = !0;
},
reverse: function() {
cc.logID(1010);
return null;
},
setAmplitudeRate: function(t) {
cc.logID(1011);
},
getAmplitudeRate: function() {
cc.logID(1012);
return 0;
},
speed: function(t) {
if (t <= 0) {
cc.logID(1013);
return this;
}
this._speedMethod = !0;
this._speed *= t;
return this;
},
getSpeed: function() {
return this._speed;
},
setSpeed: function(t) {
this._speed = t;
return this;
},
repeat: function(t) {
t = Math.round(t);
if (isNaN(t) || t < 1) {
cc.logID(1014);
return this;
}
this._repeatMethod = !0;
this._timesForRepeat *= t;
return this;
},
repeatForever: function() {
this._repeatMethod = !0;
this._timesForRepeat = this.MAX_VALUE;
this._repeatForever = !0;
return this;
}
});
cc.actionInterval = function(t) {
return new cc.ActionInterval(t);
};
cc.Sequence = cc.Class({
name: "cc.Sequence",
extends: cc.ActionInterval,
ctor: function(t) {
this._actions = [];
this._split = null;
this._last = 0;
this._reversed = !1;
var e = t instanceof Array ? t : arguments;
if (1 !== e.length) {
var i = e.length - 1;
i >= 0 && null == e[i] && cc.logID(1015);
if (i >= 0) {
for (var n, r = e[0], s = 1; s < i; s++) if (e[s]) {
n = r;
r = cc.Sequence._actionOneTwo(n, e[s]);
}
this.initWithTwoActions(r, e[i]);
}
} else cc.errorID(1019);
},
initWithTwoActions: function(t, e) {
if (!t || !e) {
cc.errorID(1025);
return !1;
}
var i = t._duration, n = e._duration, r = (i *= t._repeatMethod ? t._timesForRepeat : 1) + (n *= e._repeatMethod ? e._timesForRepeat : 1);
this.initWithDuration(r);
this._actions[0] = t;
this._actions[1] = e;
return !0;
},
clone: function() {
var t = new cc.Sequence();
this._cloneDecoration(t);
t.initWithTwoActions(this._actions[0].clone(), this._actions[1].clone());
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._split = this._actions[0]._duration / this._duration;
this._split *= this._actions[0]._repeatMethod ? this._actions[0]._timesForRepeat : 1;
this._last = -1;
},
stop: function() {
-1 !== this._last && this._actions[this._last].stop();
cc.Action.prototype.stop.call(this);
},
update: function(t) {
var e, i, n = 0, r = this._split, s = this._actions, o = this._last;
if ((t = this._computeEaseTime(t)) < r) {
e = 0 !== r ? t / r : 1;
if (0 === n && 1 === o && this._reversed) {
s[1].update(0);
s[1].stop();
}
} else {
n = 1;
e = 1 === r ? 1 : (t - r) / (1 - r);
if (-1 === o) {
s[0].startWithTarget(this.target);
s[0].update(1);
s[0].stop();
}
if (0 === o) {
s[0].update(1);
s[0].stop();
}
}
i = s[n];
if (o !== n || !i.isDone()) {
o !== n && i.startWithTarget(this.target);
e *= i._timesForRepeat;
i.update(e > 1 ? e % 1 : e);
this._last = n;
}
},
reverse: function() {
var t = cc.Sequence._actionOneTwo(this._actions[1].reverse(), this._actions[0].reverse());
this._cloneDecoration(t);
this._reverseEaseList(t);
t._reversed = !0;
return t;
}
});
cc.sequence = function(t) {
var e = t instanceof Array ? t : arguments;
if (1 === e.length) {
cc.errorID(1019);
return null;
}
var i = e.length - 1;
i >= 0 && null == e[i] && cc.logID(1015);
var n = null;
if (i >= 0) {
n = e[0];
for (var r = 1; r <= i; r++) e[r] && (n = cc.Sequence._actionOneTwo(n, e[r]));
}
return n;
};
cc.Sequence._actionOneTwo = function(t, e) {
var i = new cc.Sequence();
i.initWithTwoActions(t, e);
return i;
};
cc.Repeat = cc.Class({
name: "cc.Repeat",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._times = 0;
this._total = 0;
this._nextDt = 0;
this._actionInstant = !1;
this._innerAction = null;
void 0 !== e && this.initWithAction(t, e);
},
initWithAction: function(t, e) {
var i = t._duration * e;
if (this.initWithDuration(i)) {
this._times = e;
this._innerAction = t;
if (t instanceof cc.ActionInstant) {
this._actionInstant = !0;
this._times -= 1;
}
this._total = 0;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.Repeat();
this._cloneDecoration(t);
t.initWithAction(this._innerAction.clone(), this._times);
return t;
},
startWithTarget: function(t) {
this._total = 0;
this._nextDt = this._innerAction._duration / this._duration;
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._innerAction.startWithTarget(t);
},
stop: function() {
this._innerAction.stop();
cc.Action.prototype.stop.call(this);
},
update: function(t) {
t = this._computeEaseTime(t);
var e = this._innerAction, i = this._duration, n = this._times, r = this._nextDt;
if (t >= r) {
for (;t > r && this._total < n; ) {
e.update(1);
this._total++;
e.stop();
e.startWithTarget(this.target);
r += e._duration / i;
this._nextDt = r > 1 ? 1 : r;
}
if (t >= 1 && this._total < n) {
e.update(1);
this._total++;
}
this._actionInstant || (this._total === n ? e.stop() : e.update(t - (r - e._duration / i)));
} else e.update(t * n % 1);
},
isDone: function() {
return this._total === this._times;
},
reverse: function() {
var t = new cc.Repeat(this._innerAction.reverse(), this._times);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
setInnerAction: function(t) {
this._innerAction !== t && (this._innerAction = t);
},
getInnerAction: function() {
return this._innerAction;
}
});
cc.repeat = function(t, e) {
return new cc.Repeat(t, e);
};
cc.RepeatForever = cc.Class({
name: "cc.RepeatForever",
extends: cc.ActionInterval,
ctor: function(t) {
this._innerAction = null;
t && this.initWithAction(t);
},
initWithAction: function(t) {
if (!t) {
cc.errorID(1026);
return !1;
}
this._innerAction = t;
return !0;
},
clone: function() {
var t = new cc.RepeatForever();
this._cloneDecoration(t);
t.initWithAction(this._innerAction.clone());
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._innerAction.startWithTarget(t);
},
step: function(t) {
var e = this._innerAction;
e.step(t);
if (e.isDone()) {
e.startWithTarget(this.target);
e.step(e.getElapsed() - e._duration);
}
},
isDone: function() {
return !1;
},
reverse: function() {
var t = new cc.RepeatForever(this._innerAction.reverse());
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
setInnerAction: function(t) {
this._innerAction !== t && (this._innerAction = t);
},
getInnerAction: function() {
return this._innerAction;
}
});
cc.repeatForever = function(t) {
return new cc.RepeatForever(t);
};
cc.Spawn = cc.Class({
name: "cc.Spawn",
extends: cc.ActionInterval,
ctor: function(t) {
this._one = null;
this._two = null;
var e = t instanceof Array ? t : arguments;
if (1 !== e.length) {
var i = e.length - 1;
i >= 0 && null == e[i] && cc.logID(1015);
if (i >= 0) {
for (var n, r = e[0], s = 1; s < i; s++) if (e[s]) {
n = r;
r = cc.Spawn._actionOneTwo(n, e[s]);
}
this.initWithTwoActions(r, e[i]);
}
} else cc.errorID(1020);
},
initWithTwoActions: function(t, e) {
if (!t || !e) {
cc.errorID(1027);
return !1;
}
var i = !1, n = t._duration, r = e._duration;
if (this.initWithDuration(Math.max(n, r))) {
this._one = t;
this._two = e;
n > r ? this._two = cc.Sequence._actionOneTwo(e, cc.delayTime(n - r)) : n < r && (this._one = cc.Sequence._actionOneTwo(t, cc.delayTime(r - n)));
i = !0;
}
return i;
},
clone: function() {
var t = new cc.Spawn();
this._cloneDecoration(t);
t.initWithTwoActions(this._one.clone(), this._two.clone());
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._one.startWithTarget(t);
this._two.startWithTarget(t);
},
stop: function() {
this._one.stop();
this._two.stop();
cc.Action.prototype.stop.call(this);
},
update: function(t) {
t = this._computeEaseTime(t);
this._one && this._one.update(t);
this._two && this._two.update(t);
},
reverse: function() {
var t = cc.Spawn._actionOneTwo(this._one.reverse(), this._two.reverse());
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.spawn = function(t) {
var e = t instanceof Array ? t : arguments;
if (1 === e.length) {
cc.errorID(1020);
return null;
}
e.length > 0 && null == e[e.length - 1] && cc.logID(1015);
for (var i = e[0], n = 1; n < e.length; n++) null != e[n] && (i = cc.Spawn._actionOneTwo(i, e[n]));
return i;
};
cc.Spawn._actionOneTwo = function(t, e) {
var i = new cc.Spawn();
i.initWithTwoActions(t, e);
return i;
};
cc.RotateTo = cc.Class({
name: "cc.RotateTo",
extends: cc.ActionInterval,
statics: {
_reverse: !1
},
ctor: function(t, e) {
this._startAngle = 0;
this._dstAngle = 0;
this._angle = 0;
void 0 !== e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._dstAngle = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.RotateTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._dstAngle);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.angle % 360, i = cc.RotateTo._reverse ? this._dstAngle - e : this._dstAngle + e;
i > 180 && (i -= 360);
i < -180 && (i += 360);
this._startAngle = e;
this._angle = cc.RotateTo._reverse ? i : -i;
},
reverse: function() {
cc.logID(1016);
},
update: function(t) {
t = this._computeEaseTime(t);
this.target && (this.target.angle = this._startAngle + this._angle * t);
}
});
cc.rotateTo = function(t, e) {
return new cc.RotateTo(t, e);
};
cc.RotateBy = cc.Class({
name: "cc.RotateBy",
extends: cc.ActionInterval,
statics: {
_reverse: !1
},
ctor: function(t, e) {
e *= cc.RotateBy._reverse ? 1 : -1;
this._deltaAngle = 0;
this._startAngle = 0;
void 0 !== e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._deltaAngle = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.RotateBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._deltaAngle);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._startAngle = t.angle;
},
update: function(t) {
t = this._computeEaseTime(t);
this.target && (this.target.angle = this._startAngle + this._deltaAngle * t);
},
reverse: function() {
var t = new cc.RotateBy();
t.initWithDuration(this._duration, -this._deltaAngle);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.rotateBy = function(t, e) {
return new cc.RotateBy(t, e);
};
cc.MoveBy = cc.Class({
name: "cc.MoveBy",
extends: cc.ActionInterval,
ctor: function(t, e, i) {
this._positionDelta = cc.v2(0, 0);
this._startPosition = cc.v2(0, 0);
this._previousPosition = cc.v2(0, 0);
void 0 !== e && cc.MoveBy.prototype.initWithDuration.call(this, t, e, i);
},
initWithDuration: function(t, e, i) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
if (void 0 !== e.x) {
i = e.y;
e = e.x;
}
this._positionDelta.x = e;
this._positionDelta.y = i;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.MoveBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._positionDelta);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.x, i = t.y;
this._previousPosition.x = e;
this._previousPosition.y = i;
this._startPosition.x = e;
this._startPosition.y = i;
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target) {
var e = this._positionDelta.x * t, i = this._positionDelta.y * t, n = this._startPosition;
if (cc.macro.ENABLE_STACKABLE_ACTIONS) {
var r = this.target.x, s = this.target.y, o = this._previousPosition;
n.x = n.x + r - o.x;
n.y = n.y + s - o.y;
e += n.x;
i += n.y;
o.x = e;
o.y = i;
this.target.setPosition(e, i);
} else this.target.setPosition(n.x + e, n.y + i);
}
},
reverse: function() {
var t = new cc.MoveBy(this._duration, cc.v2(-this._positionDelta.x, -this._positionDelta.y));
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.moveBy = function(t, e, i) {
return new cc.MoveBy(t, e, i);
};
cc.MoveTo = cc.Class({
name: "cc.MoveTo",
extends: cc.MoveBy,
ctor: function(t, e, i) {
this._endPosition = cc.v2(0, 0);
void 0 !== e && this.initWithDuration(t, e, i);
},
initWithDuration: function(t, e, i) {
if (cc.MoveBy.prototype.initWithDuration.call(this, t, e, i)) {
if (void 0 !== e.x) {
i = e.y;
e = e.x;
}
this._endPosition.x = e;
this._endPosition.y = i;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.MoveTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._endPosition);
return t;
},
startWithTarget: function(t) {
cc.MoveBy.prototype.startWithTarget.call(this, t);
this._positionDelta.x = this._endPosition.x - t.x;
this._positionDelta.y = this._endPosition.y - t.y;
}
});
cc.moveTo = function(t, e, i) {
return new cc.MoveTo(t, e, i);
};
cc.SkewTo = cc.Class({
name: "cc.SkewTo",
extends: cc.ActionInterval,
ctor: function(t, e, i) {
this._skewX = 0;
this._skewY = 0;
this._startSkewX = 0;
this._startSkewY = 0;
this._endSkewX = 0;
this._endSkewY = 0;
this._deltaX = 0;
this._deltaY = 0;
void 0 !== i && cc.SkewTo.prototype.initWithDuration.call(this, t, e, i);
},
initWithDuration: function(t, e, i) {
var n = !1;
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._endSkewX = e;
this._endSkewY = i;
n = !0;
}
return n;
},
clone: function() {
var t = new cc.SkewTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._endSkewX, this._endSkewY);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._startSkewX = t.skewX % 180;
this._deltaX = this._endSkewX - this._startSkewX;
this._deltaX > 180 && (this._deltaX -= 360);
this._deltaX < -180 && (this._deltaX += 360);
this._startSkewY = t.skewY % 360;
this._deltaY = this._endSkewY - this._startSkewY;
this._deltaY > 180 && (this._deltaY -= 360);
this._deltaY < -180 && (this._deltaY += 360);
},
update: function(t) {
t = this._computeEaseTime(t);
this.target.skewX = this._startSkewX + this._deltaX * t;
this.target.skewY = this._startSkewY + this._deltaY * t;
}
});
cc.skewTo = function(t, e, i) {
return new cc.SkewTo(t, e, i);
};
cc.SkewBy = cc.Class({
name: "cc.SkewBy",
extends: cc.SkewTo,
ctor: function(t, e, i) {
void 0 !== i && this.initWithDuration(t, e, i);
},
initWithDuration: function(t, e, i) {
var n = !1;
if (cc.SkewTo.prototype.initWithDuration.call(this, t, e, i)) {
this._skewX = e;
this._skewY = i;
n = !0;
}
return n;
},
clone: function() {
var t = new cc.SkewBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._skewX, this._skewY);
return t;
},
startWithTarget: function(t) {
cc.SkewTo.prototype.startWithTarget.call(this, t);
this._deltaX = this._skewX;
this._deltaY = this._skewY;
this._endSkewX = this._startSkewX + this._deltaX;
this._endSkewY = this._startSkewY + this._deltaY;
},
reverse: function() {
var t = new cc.SkewBy(this._duration, -this._skewX, -this._skewY);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.skewBy = function(t, e, i) {
return new cc.SkewBy(t, e, i);
};
cc.JumpBy = cc.Class({
name: "cc.JumpBy",
extends: cc.ActionInterval,
ctor: function(t, e, i, n, r) {
this._startPosition = cc.v2(0, 0);
this._previousPosition = cc.v2(0, 0);
this._delta = cc.v2(0, 0);
this._height = 0;
this._jumps = 0;
void 0 !== n && cc.JumpBy.prototype.initWithDuration.call(this, t, e, i, n, r);
},
initWithDuration: function(t, e, i, n, r) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
if (void 0 === r) {
r = n;
n = i;
i = e.y;
e = e.x;
}
this._delta.x = e;
this._delta.y = i;
this._height = n;
this._jumps = r;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.JumpBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._delta, this._height, this._jumps);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.x, i = t.y;
this._previousPosition.x = e;
this._previousPosition.y = i;
this._startPosition.x = e;
this._startPosition.y = i;
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target) {
var e = t * this._jumps % 1, i = 4 * this._height * e * (1 - e);
i += this._delta.y * t;
var n = this._delta.x * t, r = this._startPosition;
if (cc.macro.ENABLE_STACKABLE_ACTIONS) {
var s = this.target.x, o = this.target.y, a = this._previousPosition;
r.x = r.x + s - a.x;
r.y = r.y + o - a.y;
n += r.x;
i += r.y;
a.x = n;
a.y = i;
this.target.setPosition(n, i);
} else this.target.setPosition(r.x + n, r.y + i);
}
},
reverse: function() {
var t = new cc.JumpBy(this._duration, cc.v2(-this._delta.x, -this._delta.y), this._height, this._jumps);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.jumpBy = function(t, e, i, n, r) {
return new cc.JumpBy(t, e, i, n, r);
};
cc.JumpTo = cc.Class({
name: "cc.JumpTo",
extends: cc.JumpBy,
ctor: function(t, e, i, n, r) {
this._endPosition = cc.v2(0, 0);
void 0 !== n && this.initWithDuration(t, e, i, n, r);
},
initWithDuration: function(t, e, i, n, r) {
if (cc.JumpBy.prototype.initWithDuration.call(this, t, e, i, n, r)) {
if (void 0 === r) {
i = e.y;
e = e.x;
}
this._endPosition.x = e;
this._endPosition.y = i;
return !0;
}
return !1;
},
startWithTarget: function(t) {
cc.JumpBy.prototype.startWithTarget.call(this, t);
this._delta.x = this._endPosition.x - this._startPosition.x;
this._delta.y = this._endPosition.y - this._startPosition.y;
},
clone: function() {
var t = new cc.JumpTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._endPosition, this._height, this._jumps);
return t;
}
});
cc.jumpTo = function(t, e, i, n, r) {
return new cc.JumpTo(t, e, i, n, r);
};
function n(t, e, i, n, r) {
return Math.pow(1 - r, 3) * t + 3 * r * Math.pow(1 - r, 2) * e + 3 * Math.pow(r, 2) * (1 - r) * i + Math.pow(r, 3) * n;
}
cc.BezierBy = cc.Class({
name: "cc.BezierBy",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._config = [];
this._startPosition = cc.v2(0, 0);
this._previousPosition = cc.v2(0, 0);
e && cc.BezierBy.prototype.initWithDuration.call(this, t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._config = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.BezierBy();
this._cloneDecoration(t);
for (var e = [], i = 0; i < this._config.length; i++) {
var n = this._config[i];
e.push(cc.v2(n.x, n.y));
}
t.initWithDuration(this._duration, e);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.x, i = t.y;
this._previousPosition.x = e;
this._previousPosition.y = i;
this._startPosition.x = e;
this._startPosition.y = i;
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target) {
var e = this._config, i = e[0].x, r = e[1].x, s = e[2].x, o = e[0].y, a = e[1].y, c = e[2].y, l = n(0, i, r, s, t), u = n(0, o, a, c, t), h = this._startPosition;
if (cc.macro.ENABLE_STACKABLE_ACTIONS) {
var f = this.target.x, _ = this.target.y, d = this._previousPosition;
h.x = h.x + f - d.x;
h.y = h.y + _ - d.y;
l += h.x;
u += h.y;
d.x = l;
d.y = u;
this.target.setPosition(l, u);
} else this.target.setPosition(h.x + l, h.y + u);
}
},
reverse: function() {
var t = this._config, e = t[0].x, i = t[0].y, n = t[1].x, r = t[1].y, s = t[2].x, o = t[2].y, a = [ cc.v2(n - s, r - o), cc.v2(e - s, i - o), cc.v2(-s, -o) ], c = new cc.BezierBy(this._duration, a);
this._cloneDecoration(c);
this._reverseEaseList(c);
return c;
}
});
cc.bezierBy = function(t, e) {
return new cc.BezierBy(t, e);
};
cc.BezierTo = cc.Class({
name: "cc.BezierTo",
extends: cc.BezierBy,
ctor: function(t, e) {
this._toConfig = [];
e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._toConfig = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.BezierTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._toConfig);
return t;
},
startWithTarget: function(t) {
cc.BezierBy.prototype.startWithTarget.call(this, t);
var e = this._startPosition, i = this._toConfig, n = this._config;
n[0] = i[0].sub(e);
n[1] = i[1].sub(e);
n[2] = i[2].sub(e);
}
});
cc.bezierTo = function(t, e) {
return new cc.BezierTo(t, e);
};
cc.ScaleTo = cc.Class({
name: "cc.ScaleTo",
extends: cc.ActionInterval,
ctor: function(t, e, i) {
this._scaleX = 1;
this._scaleY = 1;
this._startScaleX = 1;
this._startScaleY = 1;
this._endScaleX = 0;
this._endScaleY = 0;
this._deltaX = 0;
this._deltaY = 0;
void 0 !== e && cc.ScaleTo.prototype.initWithDuration.call(this, t, e, i);
},
initWithDuration: function(t, e, i) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._endScaleX = e;
this._endScaleY = null != i ? i : e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.ScaleTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._endScaleX, this._endScaleY);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._startScaleX = t.scaleX;
this._startScaleY = t.scaleY;
this._deltaX = this._endScaleX - this._startScaleX;
this._deltaY = this._endScaleY - this._startScaleY;
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target) {
this.target.scaleX = this._startScaleX + this._deltaX * t;
this.target.scaleY = this._startScaleY + this._deltaY * t;
}
}
});
cc.scaleTo = function(t, e, i) {
return new cc.ScaleTo(t, e, i);
};
cc.ScaleBy = cc.Class({
name: "cc.ScaleBy",
extends: cc.ScaleTo,
startWithTarget: function(t) {
cc.ScaleTo.prototype.startWithTarget.call(this, t);
this._deltaX = this._startScaleX * this._endScaleX - this._startScaleX;
this._deltaY = this._startScaleY * this._endScaleY - this._startScaleY;
},
reverse: function() {
var t = new cc.ScaleBy(this._duration, 1 / this._endScaleX, 1 / this._endScaleY);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
clone: function() {
var t = new cc.ScaleBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._endScaleX, this._endScaleY);
return t;
}
});
cc.scaleBy = function(t, e, i) {
return new cc.ScaleBy(t, e, i);
};
cc.Blink = cc.Class({
name: "cc.Blink",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._times = 0;
this._originalState = !1;
void 0 !== e && this.initWithDuration(t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._times = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.Blink();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._times);
return t;
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target && !this.isDone()) {
var e = 1 / this._times, i = t % e;
this.target.opacity = i > e / 2 ? 255 : 0;
}
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._originalState = t.opacity;
},
stop: function() {
this.target.opacity = this._originalState;
cc.ActionInterval.prototype.stop.call(this);
},
reverse: function() {
var t = new cc.Blink(this._duration, this._times);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.blink = function(t, e) {
return new cc.Blink(t, e);
};
cc.FadeTo = cc.Class({
name: "cc.FadeTo",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._toOpacity = 0;
this._fromOpacity = 0;
void 0 !== e && cc.FadeTo.prototype.initWithDuration.call(this, t, e);
},
initWithDuration: function(t, e) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._toOpacity = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.FadeTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._toOpacity);
return t;
},
update: function(t) {
t = this._computeEaseTime(t);
var e = void 0 !== this._fromOpacity ? this._fromOpacity : 255;
this.target.opacity = e + (this._toOpacity - e) * t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._fromOpacity = t.opacity;
}
});
cc.fadeTo = function(t, e) {
return new cc.FadeTo(t, e);
};
cc.FadeIn = cc.Class({
name: "cc.FadeIn",
extends: cc.FadeTo,
ctor: function(t) {
null == t && (t = 0);
this._reverseAction = null;
this.initWithDuration(t, 255);
},
reverse: function() {
var t = new cc.FadeOut();
t.initWithDuration(this._duration, 0);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
clone: function() {
var t = new cc.FadeIn();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._toOpacity);
return t;
},
startWithTarget: function(t) {
this._reverseAction && (this._toOpacity = this._reverseAction._fromOpacity);
cc.FadeTo.prototype.startWithTarget.call(this, t);
}
});
cc.fadeIn = function(t) {
return new cc.FadeIn(t);
};
cc.FadeOut = cc.Class({
name: "cc.FadeOut",
extends: cc.FadeTo,
ctor: function(t) {
null == t && (t = 0);
this._reverseAction = null;
this.initWithDuration(t, 0);
},
reverse: function() {
var t = new cc.FadeIn();
t._reverseAction = this;
t.initWithDuration(this._duration, 255);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
clone: function() {
var t = new cc.FadeOut();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._toOpacity);
return t;
}
});
cc.fadeOut = function(t) {
return new cc.FadeOut(t);
};
cc.TintTo = cc.Class({
name: "cc.TintTo",
extends: cc.ActionInterval,
ctor: function(t, e, i, n) {
this._to = cc.color(0, 0, 0);
this._from = cc.color(0, 0, 0);
if (e instanceof cc.Color) {
n = e.b;
i = e.g;
e = e.r;
}
void 0 !== n && this.initWithDuration(t, e, i, n);
},
initWithDuration: function(t, e, i, n) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._to = cc.color(e, i, n);
return !0;
}
return !1;
},
clone: function() {
var t = new cc.TintTo();
this._cloneDecoration(t);
var e = this._to;
t.initWithDuration(this._duration, e.r, e.g, e.b);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._from = this.target.color;
},
update: function(t) {
t = this._computeEaseTime(t);
var e = this._from, i = this._to;
e && (this.target.color = cc.color(e.r + (i.r - e.r) * t, e.g + (i.g - e.g) * t, e.b + (i.b - e.b) * t));
}
});
cc.tintTo = function(t, e, i, n) {
return new cc.TintTo(t, e, i, n);
};
cc.TintBy = cc.Class({
name: "cc.TintBy",
extends: cc.ActionInterval,
ctor: function(t, e, i, n) {
this._deltaR = 0;
this._deltaG = 0;
this._deltaB = 0;
this._fromR = 0;
this._fromG = 0;
this._fromB = 0;
void 0 !== n && this.initWithDuration(t, e, i, n);
},
initWithDuration: function(t, e, i, n) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
this._deltaR = e;
this._deltaG = i;
this._deltaB = n;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.TintBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._deltaR, this._deltaG, this._deltaB);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.color;
this._fromR = e.r;
this._fromG = e.g;
this._fromB = e.b;
},
update: function(t) {
t = this._computeEaseTime(t);
this.target.color = cc.color(this._fromR + this._deltaR * t, this._fromG + this._deltaG * t, this._fromB + this._deltaB * t);
},
reverse: function() {
var t = new cc.TintBy(this._duration, -this._deltaR, -this._deltaG, -this._deltaB);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
}
});
cc.tintBy = function(t, e, i, n) {
return new cc.TintBy(t, e, i, n);
};
cc.DelayTime = cc.Class({
name: "cc.DelayTime",
extends: cc.ActionInterval,
update: function(t) {},
reverse: function() {
var t = new cc.DelayTime(this._duration);
this._cloneDecoration(t);
this._reverseEaseList(t);
return t;
},
clone: function() {
var t = new cc.DelayTime();
this._cloneDecoration(t);
t.initWithDuration(this._duration);
return t;
}
});
cc.delayTime = function(t) {
return new cc.DelayTime(t);
};
cc.ReverseTime = cc.Class({
name: "cc.ReverseTime",
extends: cc.ActionInterval,
ctor: function(t) {
this._other = null;
t && this.initWithAction(t);
},
initWithAction: function(t) {
if (!t) {
cc.errorID(1028);
return !1;
}
if (t === this._other) {
cc.errorID(1029);
return !1;
}
if (cc.ActionInterval.prototype.initWithDuration.call(this, t._duration)) {
this._other = t;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.ReverseTime();
this._cloneDecoration(t);
t.initWithAction(this._other.clone());
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._other.startWithTarget(t);
},
update: function(t) {
t = this._computeEaseTime(t);
this._other && this._other.update(1 - t);
},
reverse: function() {
return this._other.clone();
},
stop: function() {
this._other.stop();
cc.Action.prototype.stop.call(this);
}
});
cc.reverseTime = function(t) {
return new cc.ReverseTime(t);
};
cc.TargetedAction = cc.Class({
name: "cc.TargetedAction",
extends: cc.ActionInterval,
ctor: function(t, e) {
this._action = null;
this._forcedTarget = null;
e && this.initWithTarget(t, e);
},
initWithTarget: function(t, e) {
if (this.initWithDuration(e._duration)) {
this._forcedTarget = t;
this._action = e;
return !0;
}
return !1;
},
clone: function() {
var t = new cc.TargetedAction();
this._cloneDecoration(t);
t.initWithTarget(this._forcedTarget, this._action.clone());
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._action.startWithTarget(this._forcedTarget);
},
stop: function() {
this._action.stop();
},
update: function(t) {
t = this._computeEaseTime(t);
this._action.update(t);
},
getForcedTarget: function() {
return this._forcedTarget;
},
setForcedTarget: function(t) {
this._forcedTarget !== t && (this._forcedTarget = t);
}
});
cc.targetedAction = function(t, e) {
return new cc.TargetedAction(t, e);
};
}), {} ],
6: [ (function(t, e, i) {
"use strict";
t("../core/platform/CCClass");
var n = t("../core/platform/js"), r = function() {
this.actions = [];
this.target = null;
this.actionIndex = 0;
this.currentAction = null;
this.paused = !1;
this.lock = !1;
};
cc.ActionManager = function() {
this._hashTargets = n.createMap(!0);
this._arrayTargets = [];
this._currentTarget = null;
cc.director._scheduler && cc.director._scheduler.enableForTarget(this);
};
cc.ActionManager.prototype = {
constructor: cc.ActionManager,
_elementPool: [],
_searchElementByTarget: function(t, e) {
for (var i = 0; i < t.length; i++) if (e === t[i].target) return t[i];
return null;
},
_getElement: function(t, e) {
var i = this._elementPool.pop();
i || (i = new r());
i.target = t;
i.paused = !!e;
return i;
},
_putElement: function(t) {
t.actions.length = 0;
t.actionIndex = 0;
t.currentAction = null;
t.paused = !1;
t.target = null;
t.lock = !1;
this._elementPool.push(t);
},
addAction: function(t, e, i) {
if (t && e) {
var n = this._hashTargets[e._id];
if (n) n.actions || (n.actions = []); else {
n = this._getElement(e, i);
this._hashTargets[e._id] = n;
this._arrayTargets.push(n);
}
n.actions.push(t);
t.startWithTarget(e);
} else cc.errorID(1e3);
},
removeAllActions: function() {
for (var t = this._arrayTargets, e = 0; e < t.length; e++) {
var i = t[e];
i && this._putElement(i);
}
this._arrayTargets.length = 0;
this._hashTargets = n.createMap(!0);
},
removeAllActionsFromTarget: function(t, e) {
if (null != t) {
var i = this._hashTargets[t._id];
if (i) {
i.actions.length = 0;
this._deleteHashElement(i);
}
}
},
removeAction: function(t) {
if (null != t) {
var e = t.getOriginalTarget(), i = this._hashTargets[e._id];
if (i) {
for (var n = 0; n < i.actions.length; n++) if (i.actions[n] === t) {
i.actions.splice(n, 1);
i.actionIndex >= n && i.actionIndex--;
break;
}
} else cc.logID(1001);
}
},
_removeActionByTag: function(t, e, i) {
for (var n = 0, r = e.actions.length; n < r; ++n) {
var s = e.actions[n];
if (s && s.getTag() === t) {
if (i && s.getOriginalTarget() !== i) continue;
this._removeActionAtIndex(n, e);
break;
}
}
},
removeActionByTag: function(t, e) {
t === cc.Action.TAG_INVALID && cc.logID(1002);
var i = this._hashTargets;
if (e) {
var n = i[e._id];
n && this._removeActionByTag(t, n, e);
} else for (var r in i) {
var s = i[r];
this._removeActionByTag(t, s);
}
},
getActionByTag: function(t, e) {
t === cc.Action.TAG_INVALID && cc.logID(1004);
var i = this._hashTargets[e._id];
if (i) {
if (null != i.actions) for (var n = 0; n < i.actions.length; ++n) {
var r = i.actions[n];
if (r && r.getTag() === t) return r;
}
cc.logID(1005, t);
}
return null;
},
getNumberOfRunningActionsInTarget: function(t) {
var e = this._hashTargets[t._id];
return e && e.actions ? e.actions.length : 0;
},
pauseTarget: function(t) {
var e = this._hashTargets[t._id];
e && (e.paused = !0);
},
resumeTarget: function(t) {
var e = this._hashTargets[t._id];
e && (e.paused = !1);
},
pauseAllRunningActions: function() {
for (var t = [], e = this._arrayTargets, i = 0; i < e.length; i++) {
var n = e[i];
if (n && !n.paused) {
n.paused = !0;
t.push(n.target);
}
}
return t;
},
resumeTargets: function(t) {
if (t) for (var e = 0; e < t.length; e++) t[e] && this.resumeTarget(t[e]);
},
pauseTargets: function(t) {
if (t) for (var e = 0; e < t.length; e++) t[e] && this.pauseTarget(t[e]);
},
purgeSharedManager: function() {
cc.director.getScheduler().unscheduleUpdate(this);
},
_removeActionAtIndex: function(t, e) {
e.actions[t];
e.actions.splice(t, 1);
e.actionIndex >= t && e.actionIndex--;
0 === e.actions.length && this._deleteHashElement(e);
},
_deleteHashElement: function(t) {
var e = !1;
if (t && !t.lock && this._hashTargets[t.target._id]) {
delete this._hashTargets[t.target._id];
for (var i = this._arrayTargets, n = 0, r = i.length; n < r; n++) if (i[n] === t) {
i.splice(n, 1);
break;
}
this._putElement(t);
e = !0;
}
return e;
},
update: function(t) {
for (var e, i = this._arrayTargets, n = 0; n < i.length; n++) {
this._currentTarget = i[n];
if (!(e = this._currentTarget).paused && e.actions) {
e.lock = !0;
for (e.actionIndex = 0; e.actionIndex < e.actions.length; e.actionIndex++) {
e.currentAction = e.actions[e.actionIndex];
if (e.currentAction) {
e.currentAction.step(t * (e.currentAction._speedMethod ? e.currentAction._speed : 1));
if (e.currentAction && e.currentAction.isDone()) {
e.currentAction.stop();
var r = e.currentAction;
e.currentAction = null;
this.removeAction(r);
}
e.currentAction = null;
}
}
e.lock = !1;
}
0 === e.actions.length && this._deleteHashElement(e) && n--;
}
}
};
0;
}), {
"../core/platform/CCClass": 230,
"../core/platform/js": 250
} ],
7: [ (function(t, e, i) {
"use strict";
t("./CCActionManager");
t("./CCAction");
t("./CCActionInterval");
t("./CCActionInstant");
t("./CCActionEase");
t("./CCActionCatmullRom");
t("./tween");
}), {
"./CCAction": 1,
"./CCActionCatmullRom": 2,
"./CCActionEase": 3,
"./CCActionInstant": 4,
"./CCActionInterval": 5,
"./CCActionManager": 6,
"./tween": 8
} ],
8: [ (function(t, e, i) {
"use strict";
var n = t("../animation/bezier"), r = 0, s = cc.Class({
name: "cc.TweenAction",
extends: cc.ActionInterval,
ctor: function(t, e, i) {
this._opts = i = i || Object.create(null);
this._props = Object.create(null);
i.progress = i.progress || this.progress;
if (i.easing && "string" == typeof i.easing) {
var n = i.easing;
i.easing = cc.easing[n];
!i.easing && cc.warnID(1031, n);
}
var r = this._opts.relative;
for (var s in e) {
var o = e[s], a = void 0, c = void 0;
if (void 0 !== o.value && (o.easing || o.progress)) {
"string" == typeof o.easing ? !(a = cc.easing[o.easing]) && cc.warnID(1031, o.easing) : a = o.easing;
c = o.progress;
o = o.value;
}
if ("number" == typeof o || o.lerp && (!r || o.add || o.mul) && o.clone) {
var l = Object.create(null);
l.value = o;
l.easing = a;
l.progress = c;
this._props[s] = l;
} else cc.warn("Can not animate " + s + " property, because it do not have [lerp, (add|mul), clone] function.");
}
this._originProps = e;
this.initWithDuration(t);
},
clone: function() {
var t = new s(this._duration, this._originProps, this._opts);
this._cloneDecoration(t);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = !!this._opts.relative, i = this._props;
for (var n in i) {
var r = t[n], s = i[n];
if ("number" == typeof r) {
s.start = r;
s.current = r;
s.end = e ? r + s.value : s.value;
} else {
s.start = r.clone();
s.current = r.clone();
s.end = e ? (r.add || r.mul).call(r, s.value) : s.value;
}
}
},
update: function(t) {
var e = this._opts, i = t;
e.easing && (i = e.easing(t));
var n = this.target;
if (n) {
var r = this._props, s = this._opts.progress;
for (var o in r) {
var a = r[o], c = a.easing ? a.easing(t) : i, l = a.current = (a.progress || s)(a.start, a.end, a.current, c);
n[o] = l;
}
}
},
progress: function(t, e, i, n) {
"number" == typeof t ? i = t + (e - t) * n : t.lerp(e, n, i);
return i;
}
}), o = cc.Class({
name: "cc.SetAction",
extends: cc.ActionInstant,
ctor: function(t) {
this._props = {};
void 0 !== t && this.init(t);
},
init: function(t) {
for (var e in t) this._props[e] = t[e];
return !0;
},
update: function() {
var t = this._props, e = this.target;
for (var i in t) e[i] = t[i];
},
clone: function() {
var t = new o();
t.init(this._props);
return t;
}
});
function a(t) {
this._actions = [];
this._finalAction = null;
this._target = t;
this._tag = cc.Action.TAG_INVALID;
}
a.stopAll = function() {
cc.director.getActionManager().removeAllActions();
};
a.stopAllByTag = function(t) {
cc.director.getActionManager().removeActionByTag(t);
};
a.stopAllByTarget = function(t) {
cc.director.getActionManager().removeAllActionsFromTarget(t);
};
a.prototype.then = function(t) {
t instanceof cc.Action ? this._actions.push(t.clone()) : this._actions.push(t._union());
return this;
};
a.prototype.target = function(t) {
this._target = t;
return this;
};
a.prototype.start = function() {
var t = this._target;
if (!t) {
cc.warn("Please set target to tween first");
return this;
}
if (!(t instanceof cc.Object) || t.isValid) {
this._finalAction && cc.director.getActionManager().removeAction(this._finalAction);
this._finalAction = this._union();
void 0 === t._id && (t._id = ++r);
this._finalAction.setTag(this._tag);
cc.director.getActionManager().addAction(this._finalAction, t, !1);
return this;
}
};
a.prototype.stop = function() {
this._finalAction && cc.director.getActionManager().removeAction(this._finalAction);
return this;
};
a.prototype.tag = function(t) {
this._tag = t;
return this;
};
a.prototype.clone = function(t) {
var e = this._union();
return cc.tween(t).then(e.clone());
};
a.prototype.union = function() {
var t = this._union();
this._actions.length = 0;
this._actions.push(t);
return this;
};
a.prototype._union = function() {
var t = this._actions;
return t = 1 === t.length ? t[0] : cc.sequence(t);
};
Object.assign(a.prototype, {
bezierTo: function(t, e, i, r, s) {
var o = e.x, a = e.y, c = i.x, l = i.y;
(s = s || Object.create(null)).progress = function(t, e, i, r) {
i.x = (0, n.bezier)(t.x, o, c, e.x, r);
i.y = (0, n.bezier)(t.y, a, l, e.y, r);
return i;
};
return this.to(t, {
position: r
}, s);
},
bezierBy: function(t, e, i, r, s) {
var o = e.x, a = e.y, c = i.x, l = i.y;
(s = s || Object.create(null)).progress = function(t, e, i, r) {
var s = t.x, u = t.y;
i.x = (0, n.bezier)(s, o + s, c + s, e.x, r);
i.y = (0, n.bezier)(u, a + u, l + u, e.y, r);
return i;
};
return this.by(t, {
position: r
}, s);
},
flipX: function() {
var t = this;
return this.call((function() {
t._target.scaleX *= -1;
}), this);
},
flipY: function() {
var t = this;
return this.call((function() {
t._target.scaleY *= -1;
}), this);
},
blink: function(t, e, i) {
var n = 1 / e;
(i = i || Object.create(null)).progress = function(t, e, i, r) {
return r >= 1 ? t : r % n > n / 2 ? 255 : 0;
};
return this.to(t, {
opacity: 1
}, i);
}
});
var c = [];
function l(t) {
return function() {
c.length = 0;
for (var e = arguments.length, i = 0; i < e; i++) {
var n = c[i] = arguments[i];
n instanceof a && (c[i] = n._union());
}
return t.apply(this, c);
};
}
for (var u = {
to: function(t, e, i) {
(i = i || Object.create(null)).relative = !1;
return new s(t, e, i);
},
by: function(t, e, i) {
(i = i || Object.create(null)).relative = !0;
return new s(t, e, i);
},
set: function(t) {
return new o(t);
},
delay: cc.delayTime,
call: cc.callFunc,
hide: cc.hide,
show: cc.show,
removeSelf: cc.removeSelf,
sequence: l(cc.sequence),
parallel: l(cc.spawn)
}, h = {
repeat: cc.repeat,
repeatForever: function(t) {
return cc.repeat(t, 1e9);
},
reverseTime: cc.reverseTime
}, f = Object.keys(u), _ = function(t) {
var e = f[t];
a.prototype[e] = function() {
var t = u[e].apply(this, arguments);
this._actions.push(t);
return this;
};
}, d = 0; d < f.length; d++) _(d);
f = Object.keys(h);
for (var p = function(t) {
var e = f[t];
a.prototype[e] = function() {
var t = this._actions, i = arguments[arguments.length - 1], n = arguments.length - 1;
if (i instanceof cc.Tween) i = i._union(); else if (!(i instanceof cc.Action)) {
i = t[t.length - 1];
t.length -= 1;
n += 1;
}
for (var r = [ i ], s = 0; s < n; s++) r.push(arguments[s]);
i = h[e].apply(this, r);
t.push(i);
return this;
};
}, m = 0; m < f.length; m++) p(m);
cc.tween = function(t) {
return new a(t);
};
cc.Tween = a;
}), {
"../animation/bezier": 14
} ],
9: [ (function(t, e, i) {
"use strict";
var n = cc.js, r = t("./playable"), s = t("./animation-curves"), o = s.EventAnimCurve, a = s.EventInfo, c = t("./types").WrapModeMask, l = t("../core/utils/binary-search").binarySearchEpsilon;
function u(t, e) {
r.call(this);
this.target = t;
this.animation = e;
this._anims = new n.array.MutableForwardIterator([]);
}
n.extend(u, r);
var h = u.prototype;
h.playState = function(t, e) {
if (t.clip) {
t.curveLoaded || f(this.target, t);
t.animator = this;
t.play();
"number" == typeof e && t.setTime(e);
this.play();
}
};
h.stopStatesExcept = function(t) {
var e = this._anims, i = e.array;
for (e.i = 0; e.i < i.length; ++e.i) {
var n = i[e.i];
n !== t && this.stopState(n);
}
};
h.addAnimation = function(t) {
-1 === this._anims.array.indexOf(t) && this._anims.push(t);
t._setEventTarget(this.animation);
};
h.removeAnimation = function(t) {
var e = this._anims.array.indexOf(t);
if (e >= 0) {
this._anims.fastRemoveAt(e);
0 === this._anims.array.length && this.stop();
} else cc.errorID(3907);
t.animator = null;
};
h.sample = function() {
var t = this._anims, e = t.array;
for (t.i = 0; t.i < e.length; ++t.i) {
e[t.i].sample();
}
};
h.stopState = function(t) {
t && t.stop();
};
h.pauseState = function(t) {
t && t.pause();
};
h.resumeState = function(t) {
t && t.resume();
this.isPaused && this.resume();
};
h.setStateTime = function(t, e) {
if (void 0 !== e) {
if (t) {
t.setTime(e);
t.sample();
}
} else {
e = t;
for (var i = this._anims.array, n = 0; n < i.length; ++n) {
var r = i[n];
r.setTime(e);
r.sample();
}
}
};
h.onStop = function() {
var t = this._anims, e = t.array;
for (t.i = 0; t.i < e.length; ++t.i) {
e[t.i].stop();
}
};
h.onPause = function() {
for (var t = this._anims.array, e = 0; e < t.length; ++e) {
var i = t[e];
i.pause();
i.animator = null;
}
};
h.onResume = function() {
for (var t = this._anims.array, e = 0; e < t.length; ++e) {
var i = t[e];
i.animator = this;
i.resume();
}
};
h._reloadClip = function(t) {
f(this.target, t);
};
0;
function f(t, e) {
var i = e.clip;
e.duration = i.duration;
e.speed = i.speed;
e.wrapMode = i.wrapMode;
e.frameRate = i.sample;
(e.wrapMode & c.Loop) === c.Loop ? e.repeatCount = Infinity : e.repeatCount = 1;
var n = e.curves = i.createCurves(e, t), r = i.events;
if (r) for (var s, u = 0, h = r.length; u < h; u++) {
if (!s) {
(s = new o()).target = t;
n.push(s);
}
var f = r[u], _ = f.frame / e.duration, d = void 0, p = l(s.ratios, _);
if (p >= 0) d = s.events[p]; else {
d = new a();
s.ratios.push(_);
s.events.push(d);
}
d.add(f.func, f.params);
}
}
0;
e.exports = u;
}), {
"../core/utils/binary-search": 305,
"./animation-curves": 11,
"./playable": 18,
"./types": 19
} ],
10: [ (function(t, e, i) {
"use strict";
var n = t("./types").WrapMode, r = t("./animation-curves"), s = r.DynamicAnimCurve, o = r.quickFindIndex, a = t("./motion-path-helper").sampleMotionPaths, c = t("../core/utils/binary-search").binarySearchEpsilon, l = cc.Class({
name: "cc.AnimationClip",
extends: cc.Asset,
properties: {
_duration: {
default: 0,
type: cc.Float
},
duration: {
get: function() {
return this._duration;
}
},
sample: {
default: 60
},
speed: {
default: 1
},
wrapMode: {
default: n.Normal
},
curveData: {
default: {},
visible: !1
},
events: {
default: [],
visible: !1
}
},
statics: {
createWithSpriteFrames: function(t, e) {
if (!Array.isArray(t)) {
cc.errorID(3905);
return null;
}
var i = new l();
i.sample = e || i.sample;
i._duration = t.length / i.sample;
for (var n = [], r = 1 / i.sample, s = 0, o = t.length; s < o; s++) n[s] = {
frame: s * r,
value: t[s]
};
i.curveData = {
comps: {
"cc.Sprite": {
spriteFrame: n
}
}
};
return i;
}
},
onLoad: function() {
this._duration = Number.parseFloat(this.duration);
this.speed = Number.parseFloat(this.speed);
this.wrapMode = Number.parseInt(this.wrapMode);
this.frameRate = Number.parseFloat(this.sample);
},
createPropCurve: function(t, e, i) {
var n = [], r = t instanceof cc.Node && "position" === e, l = new s();
l.target = t;
l.prop = e;
for (var u = 0, h = i.length; u < h; u++) {
var f = i[u], _ = f.frame / this.duration;
l.ratios.push(_);
r && n.push(f.motionPath);
var d = f.value;
l.values.push(d);
var p = f.curve;
if (p) {
if ("string" == typeof p) {
l.types.push(p);
continue;
}
if (Array.isArray(p)) {
p[0] === p[1] && p[2] === p[3] ? l.types.push(s.Linear) : l.types.push(s.Bezier(p));
continue;
}
}
l.types.push(s.Linear);
}
r && a(n, l, this.duration, this.sample, t);
for (var m, y, v = l.ratios, g = !0, b = 1, C = v.length; b < C; b++) {
m = v[b] - v[b - 1];
if (1 === b) y = m; else if (Math.abs(m - y) > 1e-6) {
g = !1;
break;
}
}
l._findFrameIndex = g ? o : c;
var x = l.values[0];
void 0 === x || null === x || l._lerp || ("number" == typeof x ? l._lerp = s.prototype._lerpNumber : x instanceof cc.Quat ? l._lerp = s.prototype._lerpQuat : x instanceof cc.Vec2 || x instanceof cc.Vec3 ? l._lerp = s.prototype._lerpVector : x.lerp && (l._lerp = s.prototype._lerpObject));
return l;
},
createTargetCurves: function(t, e, i) {
var n = e.props, r = e.comps;
if (n) for (var s in n) {
var o = n[s], a = this.createPropCurve(t, s, o);
i.push(a);
}
if (r) for (var c in r) {
var l = t.getComponent(c);
if (l) {
var u = r[c];
for (var h in u) {
var f = u[h], _ = this.createPropCurve(l, h, f);
i.push(_);
}
}
}
},
createCurves: function(t, e) {
var i = this.curveData, n = i.paths, r = [];
this.createTargetCurves(e, i, r);
for (var s in n) {
var o = cc.find(s, e);
if (o) {
var a = n[s];
this.createTargetCurves(o, a, r);
}
}
return r;
}
});
cc.AnimationClip = e.exports = l;
}), {
"../core/utils/binary-search": 305,
"./animation-curves": 11,
"./motion-path-helper": 17,
"./types": 19
} ],
11: [ (function(t, e, i) {
"use strict";
var n = t("./bezier").bezierByTime, r = t("../core/utils/binary-search").binarySearchEpsilon, s = t("./types").WrapModeMask, o = t("./types").WrappedInfo;
function a(t, e) {
if ("string" == typeof e) {
var i = cc.easing[e];
i ? t = i(t) : cc.errorID(3906, e);
} else Array.isArray(e) && (t = n(e, t));
return t;
}
var c = cc.Class({
name: "cc.AnimCurve",
sample: function(t, e, i) {},
onTimeChangedManually: void 0
});
function l(t, e) {
var i = t.length - 1;
if (0 === i) return 0;
var n = t[0];
if (e < n) return 0;
var r = t[i];
if (e > r) return ~t.length;
var s = (e = (e - n) / (r - n)) / (1 / i), o = 0 | s;
return s - o < 1e-6 ? o : o + 1 - s < 1e-6 ? o + 1 : ~(o + 1);
}
var u = cc.Class({
name: "cc.DynamicAnimCurve",
extends: c,
ctor: function() {
this._cachedIndex = 0;
},
properties: {
target: null,
prop: "",
values: [],
ratios: [],
types: []
},
_findFrameIndex: r,
_lerp: void 0,
_lerpNumber: function(t, e, i) {
return t + (e - t) * i;
},
_lerpObject: function(t, e, i) {
return t.lerp(e, i);
},
_lerpQuat: (function() {
var t = cc.quat();
return function(e, i, n) {
return e.lerp(i, n, t);
};
})(),
_lerpVector: (function() {
var t = cc.v3();
return function(e, i, n) {
return e.lerp(i, n, t);
};
})(),
sample: function(t, e, i) {
var n = this.values, r = this.ratios, s = r.length;
if (0 !== s) {
var o, c = !0, l = this._cachedIndex;
if (l < 0 && (l = ~l) > 0 && l < r.length) {
var u = r[l - 1], h = r[l];
e > u && e < h && (c = !1);
}
c && (this._cachedIndex = this._findFrameIndex(r, e));
var f = this._cachedIndex;
if (f < 0) if ((f = ~f) <= 0) o = n[0]; else if (f >= s) o = n[s - 1]; else {
var _ = n[f - 1];
if (this._lerp) {
var d = r[f - 1], p = r[f], m = this.types[f - 1], y = (e - d) / (p - d);
m && (y = a(y, m));
var v = n[f];
o = this._lerp(_, v, y);
} else o = _;
} else o = n[f];
this.target[this.prop] = o;
}
}
});
u.Linear = null;
u.Bezier = function(t) {
return t;
};
var h = function() {
this.events = [];
};
h.prototype.add = function(t, e) {
this.events.push({
func: t || "",
params: e || []
});
};
var f = cc.Class({
name: "cc.EventAnimCurve",
extends: c,
properties: {
target: null,
ratios: [],
events: [],
_wrappedInfo: {
default: function() {
return new o();
}
},
_lastWrappedInfo: null,
_ignoreIndex: NaN
},
_wrapIterations: function(t) {
t - (0 | t) == 0 && (t -= 1);
return 0 | t;
},
sample: function(t, e, i) {
var n = this.ratios.length, a = i.getWrappedInfo(i.time, this._wrappedInfo), c = a.direction, l = r(this.ratios, a.ratio);
if (l < 0) {
l = ~l - 1;
c < 0 && (l += 1);
}
this._ignoreIndex !== l && (this._ignoreIndex = NaN);
a.frameIndex = l;
if (this._lastWrappedInfo) {
var u = i.wrapMode, h = this._wrapIterations(a.iterations), f = this._lastWrappedInfo, _ = this._wrapIterations(f.iterations), d = f.frameIndex, p = f.direction, m = -1 !== _ && h !== _;
if (d === l && m && 1 === n) this._fireEvent(0); else if (d !== l || m) {
c = p;
do {
if (d !== l) {
if (-1 === c && 0 === d && l > 0) {
(u & s.PingPong) === s.PingPong ? c *= -1 : d = n;
_++;
} else if (1 === c && d === n - 1 && l < n - 1) {
(u & s.PingPong) === s.PingPong ? c *= -1 : d = -1;
_++;
}
if (d === l) break;
if (_ > h) break;
}
d += c;
cc.director.getAnimationManager().pushDelayEvent(this, "_fireEvent", [ d ]);
} while (d !== l && d > -1 && d < n);
}
this._lastWrappedInfo.set(a);
} else {
this._fireEvent(l);
this._lastWrappedInfo = new o(a);
}
},
_fireEvent: function(t) {
if (!(t < 0 || t >= this.events.length || this._ignoreIndex === t)) {
var e = this.events[t].events;
if (this.target.isValid) for (var i = this.target._components, n = 0; n < e.length; n++) for (var r = e[n], s = r.func, o = 0; o < i.length; o++) {
var a = i[o], c = a[s];
c && c.apply(a, r.params);
}
}
},
onTimeChangedManually: function(t, e) {
this._lastWrappedInfo = null;
this._ignoreIndex = NaN;
var i = e.getWrappedInfo(t, this._wrappedInfo), n = i.direction, s = r(this.ratios, i.ratio);
if (s < 0) {
s = ~s - 1;
n < 0 && (s += 1);
this._ignoreIndex = s;
}
}
});
0;
e.exports = {
AnimCurve: c,
DynamicAnimCurve: u,
EventAnimCurve: f,
EventInfo: h,
computeRatioByType: a,
quickFindIndex: l
};
}), {
"../core/utils/binary-search": 305,
"./bezier": 14,
"./types": 19
} ],
12: [ (function(t, e, i) {
"use strict";
var n = cc.js, r = cc.Class({
ctor: function() {
this._anims = new n.array.MutableForwardIterator([]);
this._delayEvents = [];
cc.director._scheduler && cc.director._scheduler.enableForTarget(this);
},
update: function(t) {
var e = this._anims, i = e.array;
for (e.i = 0; e.i < i.length; ++e.i) {
var n = i[e.i];
n._isPlaying && !n._isPaused && n.update(t);
}
for (var r = this._delayEvents, s = 0; s < r.length; s++) {
var o = r[s];
o.target[o.func].apply(o.target, o.args);
}
r.length = 0;
},
destruct: function() {},
addAnimation: function(t) {
-1 === this._anims.array.indexOf(t) && this._anims.push(t);
},
removeAnimation: function(t) {
var e = this._anims.array.indexOf(t);
e >= 0 ? this._anims.fastRemoveAt(e) : cc.errorID(3907);
},
pushDelayEvent: function(t, e, i) {
this._delayEvents.push({
target: t,
func: e,
args: i
});
}
});
cc.AnimationManager = e.exports = r;
}), {} ],
13: [ (function(t, e, i) {
"use strict";
var n = cc.js, r = t("./playable"), s = t("./types"), o = s.WrappedInfo, a = s.WrapMode, c = s.WrapModeMask;
function l(t, e) {
r.call(this);
this._currentFramePlayed = !1;
this._delay = 0;
this._delayTime = 0;
this._wrappedInfo = new o();
this._lastWrappedInfo = null;
this._process = h;
this._clip = t;
this._name = e || t && t.name;
this.animator = null;
this.curves = [];
this.delay = 0;
this.repeatCount = 1;
this.duration = 1;
this.speed = 1;
this.wrapMode = a.Normal;
this.time = 0;
this._target = null;
this._lastframeEventOn = !1;
this.emit = function() {
for (var t = new Array(arguments.length), e = 0, i = t.length; e < i; e++) t[e] = arguments[e];
cc.director.getAnimationManager().pushDelayEvent(this, "_emit", t);
};
}
n.extend(l, r);
var u = l.prototype;
u._emit = function(t, e) {
this._target && this._target.isValid && this._target.emit(t, t, e);
};
u.on = function(t, e, i) {
if (this._target && this._target.isValid) {
"lastframe" === t && (this._lastframeEventOn = !0);
return this._target.on(t, e, i);
}
return null;
};
u.once = function(t, e, i) {
if (this._target && this._target.isValid) {
"lastframe" === t && (this._lastframeEventOn = !0);
var n = this;
return this._target.once(t, (function(t) {
e.call(i, t);
n._lastframeEventOn = !1;
}));
}
return null;
};
u.off = function(t, e, i) {
if (this._target && this._target.isValid) {
"lastframe" === t && (this._target.hasEventListener(t) || (this._lastframeEventOn = !1));
this._target.off(t, e, i);
}
};
u._setEventTarget = function(t) {
this._target = t;
};
u.onPlay = function() {
this.setTime(0);
this._delayTime = this._delay;
cc.director.getAnimationManager().addAnimation(this);
this.animator && this.animator.addAnimation(this);
this.emit("play", this);
};
u.onStop = function() {
this.isPaused || cc.director.getAnimationManager().removeAnimation(this);
this.animator && this.animator.removeAnimation(this);
this.emit("stop", this);
};
u.onResume = function() {
cc.director.getAnimationManager().addAnimation(this);
this.emit("resume", this);
};
u.onPause = function() {
cc.director.getAnimationManager().removeAnimation(this);
this.emit("pause", this);
};
u.setTime = function(t) {
this._currentFramePlayed = !1;
this.time = t || 0;
for (var e = this.curves, i = 0, n = e.length; i < n; i++) {
var r = e[i];
r.onTimeChangedManually && r.onTimeChangedManually(t, this);
}
};
function h() {
var t = this.sample();
if (this._lastframeEventOn) {
var e;
e = this._lastWrappedInfo ? this._lastWrappedInfo : this._lastWrappedInfo = new o(t);
this.repeatCount > 1 && (0 | t.iterations) > (0 | e.iterations) && this.emit("lastframe", this);
e.set(t);
}
if (t.stopped) {
this.stop();
this.emit("finished", this);
}
}
function f() {
var t = this.time, e = this.duration;
t > e ? 0 === (t %= e) && (t = e) : t < 0 && 0 !== (t %= e) && (t += e);
for (var i = t / e, n = this.curves, r = 0, s = n.length; r < s; r++) {
n[r].sample(t, i, this);
}
if (this._lastframeEventOn) {
void 0 === this._lastIterations && (this._lastIterations = i);
(this.time > 0 && this._lastIterations > i || this.time < 0 && this._lastIterations < i) && this.emit("lastframe", this);
this._lastIterations = i;
}
}
u.update = function(t) {
if (this._delayTime > 0) {
this._delayTime -= t;
if (this._delayTime > 0) return;
}
this._currentFramePlayed ? this.time += t * this.speed : this._currentFramePlayed = !0;
this._process();
};
u._needRevers = function(t) {
var e = this.wrapMode, i = !1;
if ((e & c.PingPong) === c.PingPong) {
t - (0 | t) == 0 && t > 0 && (t -= 1);
1 & t && (i = !i);
}
(e & c.Reverse) === c.Reverse && (i = !i);
return i;
};
u.getWrappedInfo = function(t, e) {
e = e || new o();
var i = !1, n = this.duration, r = this.repeatCount, s = t > 0 ? t / n : -t / n;
if (s >= r) {
s = r;
i = !0;
var a = r - (0 | r);
0 === a && (a = 1);
t = a * n * (t > 0 ? 1 : -1);
}
if (t > n) {
var l = t % n;
t = 0 === l ? n : l;
} else t < 0 && 0 !== (t %= n) && (t += n);
var u = !1, h = this._wrapMode & c.ShouldWrap;
h && (u = this._needRevers(s));
var f = u ? -1 : 1;
this.speed < 0 && (f *= -1);
h && u && (t = n - t);
e.ratio = t / n;
e.time = t;
e.direction = f;
e.stopped = i;
e.iterations = s;
return e;
};
u.sample = function() {
for (var t = this.getWrappedInfo(this.time, this._wrappedInfo), e = this.curves, i = 0, n = e.length; i < n; i++) {
e[i].sample(t.time, t.ratio, this);
}
return t;
};
n.get(u, "clip", (function() {
return this._clip;
}));
n.get(u, "name", (function() {
return this._name;
}));
n.obsolete(u, "AnimationState.length", "duration");
n.getset(u, "curveLoaded", (function() {
return this.curves.length > 0;
}), (function() {
this.curves.length = 0;
}));
n.getset(u, "wrapMode", (function() {
return this._wrapMode;
}), (function(t) {
this._wrapMode = t;
0;
this.time = 0;
t & c.Loop ? this.repeatCount = Infinity : this.repeatCount = 1;
}));
n.getset(u, "repeatCount", (function() {
return this._repeatCount;
}), (function(t) {
this._repeatCount = t;
var e = this._wrapMode & c.ShouldWrap, i = (this.wrapMode & c.Reverse) === c.Reverse;
this._process = Infinity !== t || e || i ? h : f;
}));
n.getset(u, "delay", (function() {
return this._delay;
}), (function(t) {
this._delayTime = this._delay = t;
}));
cc.AnimationState = e.exports = l;
}), {
"./playable": 18,
"./types": 19
} ],
14: [ (function(t, e, i) {
"use strict";
function n(t, e, i, n, r) {
var s = 1 - r;
return s * (s * (t + (3 * e - t) * r) + 3 * i * r * r) + n * r * r * r;
}
var r = Math.cos, s = Math.acos, o = Math.max, a = 2 * Math.PI, c = Math.sqrt;
function l(t) {
return t < 0 ? -Math.pow(-t, 1 / 3) : Math.pow(t, 1 / 3);
}
function u(t, e) {
var i, n, u, h, f = e - 0, _ = e - t[0], d = 3 * f, p = 3 * _, m = 3 * (e - t[2]), y = 1 / (-f + p - m + (e - 1)), v = (d - 6 * _ + m) * y, g = v * (1 / 3), b = (-d + p) * y, C = 1 / 3 * (3 * b - v * v), x = C * (1 / 3), A = (2 * v * v * v - 9 * v * b + 27 * (f * y)) / 27, S = A / 2, w = S * S + x * x * x;
if (w < 0) {
var T = 1 / 3 * -C, E = c(T * T * T), M = -A / (2 * E), B = s(M < -1 ? -1 : M > 1 ? 1 : M), D = 2 * l(E);
n = D * r(B * (1 / 3)) - g;
u = D * r((B + a) * (1 / 3)) - g;
h = D * r((B + 2 * a) * (1 / 3)) - g;
return 0 <= n && n <= 1 ? 0 <= u && u <= 1 ? 0 <= h && h <= 1 ? o(n, u, h) : o(n, u) : 0 <= h && h <= 1 ? o(n, h) : n : 0 <= u && u <= 1 ? 0 <= h && h <= 1 ? o(u, h) : u : h;
}
if (0 === w) {
u = -(i = S < 0 ? l(-S) : -l(S)) - g;
return 0 <= (n = 2 * i - g) && n <= 1 ? 0 <= u && u <= 1 ? o(n, u) : n : u;
}
var R = c(w);
return n = (i = l(-S + R)) - l(S + R) - g;
}
function h(t, e) {
var i = u(t, e), n = t[1];
return ((1 - i) * (n + (t[3] - n) * i) * 3 + i * i) * i;
}
0;
e.exports = {
bezier: n,
bezierByTime: h
};
}), {} ],
15: [ (function(t, e, i) {
"use strict";
var n = {
constant: function() {
return 0;
},
linear: function(t) {
return t;
},
quadIn: function(t) {
return t * t;
},
quadOut: function(t) {
return t * (2 - t);
},
quadInOut: function(t) {
return (t *= 2) < 1 ? .5 * t * t : -.5 * (--t * (t - 2) - 1);
},
cubicIn: function(t) {
return t * t * t;
},
cubicOut: function(t) {
return --t * t * t + 1;
},
cubicInOut: function(t) {
return (t *= 2) < 1 ? .5 * t * t * t : .5 * ((t -= 2) * t * t + 2);
},
quartIn: function(t) {
return t * t * t * t;
},
quartOut: function(t) {
return 1 - --t * t * t * t;
},
quartInOut: function(t) {
return (t *= 2) < 1 ? .5 * t * t * t * t : -.5 * ((t -= 2) * t * t * t - 2);
},
quintIn: function(t) {
return t * t * t * t * t;
},
quintOut: function(t) {
return --t * t * t * t * t + 1;
},
quintInOut: function(t) {
return (t *= 2) < 1 ? .5 * t * t * t * t * t : .5 * ((t -= 2) * t * t * t * t + 2);
},
sineIn: function(t) {
return 1 - Math.cos(t * Math.PI / 2);
},
sineOut: function(t) {
return Math.sin(t * Math.PI / 2);
},
sineInOut: function(t) {
return .5 * (1 - Math.cos(Math.PI * t));
},
expoIn: function(t) {
return 0 === t ? 0 : Math.pow(1024, t - 1);
},
expoOut: function(t) {
return 1 === t ? 1 : 1 - Math.pow(2, -10 * t);
},
expoInOut: function(t) {
return 0 === t ? 0 : 1 === t ? 1 : (t *= 2) < 1 ? .5 * Math.pow(1024, t - 1) : .5 * (2 - Math.pow(2, -10 * (t - 1)));
},
circIn: function(t) {
return 1 - Math.sqrt(1 - t * t);
},
circOut: function(t) {
return Math.sqrt(1 - --t * t);
},
circInOut: function(t) {
return (t *= 2) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
},
elasticIn: function(t) {
var e, i = .1;
if (0 === t) return 0;
if (1 === t) return 1;
if (!i || i < 1) {
i = 1;
e = .1;
} else e = .4 * Math.asin(1 / i) / (2 * Math.PI);
return -i * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - e) * (2 * Math.PI) / .4);
},
elasticOut: function(t) {
var e, i = .1;
if (0 === t) return 0;
if (1 === t) return 1;
if (!i || i < 1) {
i = 1;
e = .1;
} else e = .4 * Math.asin(1 / i) / (2 * Math.PI);
return i * Math.pow(2, -10 * t) * Math.sin((t - e) * (2 * Math.PI) / .4) + 1;
},
elasticInOut: function(t) {
var e, i = .1;
if (0 === t) return 0;
if (1 === t) return 1;
if (!i || i < 1) {
i = 1;
e = .1;
} else e = .4 * Math.asin(1 / i) / (2 * Math.PI);
return (t *= 2) < 1 ? i * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - e) * (2 * Math.PI) / .4) * -.5 : i * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - e) * (2 * Math.PI) / .4) * .5 + 1;
},
backIn: function(t) {
var e = 1.70158;
return t * t * ((e + 1) * t - e);
},
backOut: function(t) {
var e = 1.70158;
return --t * t * ((e + 1) * t + e) + 1;
},
backInOut: function(t) {
var e = 2.5949095;
return (t *= 2) < 1 ? t * t * ((e + 1) * t - e) * .5 : .5 * ((t -= 2) * t * ((e + 1) * t + e) + 2);
},
bounceIn: function(t) {
return 1 - n.bounceOut(1 - t);
},
bounceOut: function(t) {
return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
},
bounceInOut: function(t) {
return t < .5 ? .5 * n.bounceIn(2 * t) : .5 * n.bounceOut(2 * t - 1) + .5;
},
smooth: function(t) {
return t <= 0 ? 0 : t >= 1 ? 1 : t * t * (3 - 2 * t);
},
fade: function(t) {
return t <= 0 ? 0 : t >= 1 ? 1 : t * t * t * (t * (6 * t - 15) + 10);
}
};
function r(t, e) {
return function(i) {
return i < .5 ? e(2 * i) / 2 : t(2 * i - 1) / 2 + .5;
};
}
n.quadOutIn = r(n.quadIn, n.quadOut);
n.cubicOutIn = r(n.cubicIn, n.cubicOut);
n.quartOutIn = r(n.quartIn, n.quartOut);
n.quintOutIn = r(n.quintIn, n.quintOut);
n.sineOutIn = r(n.sineIn, n.sineOut);
n.expoOutIn = r(n.expoIn, n.expoOut);
n.circOutIn = r(n.circIn, n.circOut);
n.backOutIn = r(n.backIn, n.backOut);
n.bounceIn = function(t) {
return 1 - n.bounceOut(1 - t);
};
n.bounceInOut = function(t) {
return t < .5 ? .5 * n.bounceIn(2 * t) : .5 * n.bounceOut(2 * t - 1) + .5;
};
n.bounceOutIn = r(n.bounceIn, n.bounceOut);
cc.easing = e.exports = n;
}), {} ],
16: [ (function(t, e, i) {
"use strict";
t("./bezier");
t("./easing");
t("./types");
t("./motion-path-helper");
t("./animation-curves");
t("./animation-clip");
t("./animation-manager");
t("./animation-state");
t("./animation-animator");
}), {
"./animation-animator": 9,
"./animation-clip": 10,
"./animation-curves": 11,
"./animation-manager": 12,
"./animation-state": 13,
"./bezier": 14,
"./easing": 15,
"./motion-path-helper": 17,
"./types": 19
} ],
17: [ (function(t, e, i) {
"use strict";
var n = t("./animation-curves").DynamicAnimCurve, r = t("./animation-curves").computeRatioByType, s = t("./bezier").bezier, o = t("../core/utils/binary-search").binarySearchEpsilon, a = cc.v2;
function c(t) {
this.points = t || [];
this.beziers = [];
this.ratios = [];
this.progresses = [];
this.length = 0;
this.computeBeziers();
}
c.prototype.computeBeziers = function() {
this.beziers.length = 0;
this.ratios.length = 0;
this.progresses.length = 0;
this.length = 0;
for (var t, e = 1; e < this.points.length; e++) {
var i = this.points[e - 1], n = this.points[e];
(t = new l()).start = i.pos;
t.startCtrlPoint = i.out;
t.end = n.pos;
t.endCtrlPoint = n.in;
this.beziers.push(t);
this.length += t.getLength();
}
var r = 0;
for (e = 0; e < this.beziers.length; e++) {
t = this.beziers[e];
this.ratios[e] = t.getLength() / this.length;
this.progresses[e] = r += this.ratios[e];
}
return this.beziers;
};
function l() {
this.start = a();
this.end = a();
this.startCtrlPoint = a();
this.endCtrlPoint = a();
}
l.prototype.getPointAt = function(t) {
var e = this.getUtoTmapping(t);
return this.getPoint(e);
};
l.prototype.getPoint = function(t) {
var e = s(this.start.x, this.startCtrlPoint.x, this.endCtrlPoint.x, this.end.x, t), i = s(this.start.y, this.startCtrlPoint.y, this.endCtrlPoint.y, this.end.y, t);
return new a(e, i);
};
l.prototype.getLength = function() {
var t = this.getLengths();
return t[t.length - 1];
};
l.prototype.getLengths = function(t) {
t || (t = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200);
if (this.cacheArcLengths && this.cacheArcLengths.length === t + 1) return this.cacheArcLengths;
var e, i, n = [], r = this.getPoint(0), s = a(), o = 0;
n.push(0);
for (i = 1; i <= t; i++) {
e = this.getPoint(i / t);
s.x = r.x - e.x;
s.y = r.y - e.y;
o += s.mag();
n.push(o);
r = e;
}
this.cacheArcLengths = n;
return n;
};
l.prototype.getUtoTmapping = function(t, e) {
var i, n = this.getLengths(), r = 0, s = n.length;
i = e || t * n[s - 1];
for (var o, a = 0, c = s - 1; a <= c; ) if ((o = n[r = Math.floor(a + (c - a) / 2)] - i) < 0) a = r + 1; else {
if (!(o > 0)) {
c = r;
break;
}
c = r - 1;
}
if (n[r = c] === i) {
return r / (s - 1);
}
var l = n[r];
return (r + (i - l) / (n[r + 1] - l)) / (s - 1);
};
function u(t) {
if (!Array.isArray(t)) return !1;
for (var e = 0, i = t.length; e < i; e++) {
var n = t[e];
if (!Array.isArray(n) || 6 !== n.length) return !1;
}
return !0;
}
function h(t, e, i, s, l) {
function h(t) {
return t instanceof cc.Vec2 ? {
in: t,
pos: t,
out: t
} : Array.isArray(t) && 6 === t.length ? {
in: a(t[2], t[3]),
pos: a(t[0], t[1]),
out: a(t[4], t[5])
} : {
in: cc.Vec2.ZERO,
pos: cc.Vec2.ZERO,
out: cc.Vec2.ZERO
};
}
var f = e.values = e.values.map((function(t) {
Array.isArray(t) && (t = 2 === t.length ? cc.v2(t[0], t[1]) : cc.v3(t[0], t[1], t[2]));
return t;
}));
if (0 !== t.length && 0 !== f.length) {
for (var _ = !1, d = 0; d < t.length; d++) {
var p = t[d];
if (p && !u(p)) {
cc.errorID(3904, l ? l.name : "", "position", d);
p = null;
}
if (p && p.length > 0) {
_ = !0;
break;
}
}
if (_ && 1 !== f.length) {
for (var m = e.types, y = e.ratios, v = e.values = [], g = e.types = [], b = e.ratios = [], C = 0, x = n.Linear, A = 0, S = t.length; A < S - 1; A++) {
var w, T = t[A], E = y[A], M = y[A + 1] - E, B = f[A], D = f[A + 1], R = m[A], I = [], P = C / M, O = 1 / (M * i * s);
if (T && T.length > 0) {
var L = [];
L.push(h(B));
for (var V = 0, N = T.length; V < N; V++) {
var F = h(T[V]);
L.push(F);
}
L.push(h(D));
var z = new c(L);
z.computeBeziers();
for (var k = z.progresses; 1 - P > 1e-6; ) {
var G, U, j, H;
if ((w = r(w = P, R)) < 0) {
H = (0 - w) * (U = z.beziers[0]).getLength();
j = U.start.sub(U.endCtrlPoint).normalize();
G = U.start.add(j.mul(H));
} else if (w > 1) {
H = (w - 1) * (U = z.beziers[z.beziers.length - 1]).getLength();
j = U.end.sub(U.startCtrlPoint).normalize();
G = U.end.add(j.mul(H));
} else {
var W = o(k, w);
W < 0 && (W = ~W);
w -= W > 0 ? k[W - 1] : 0;
w /= z.ratios[W];
G = z.beziers[W].getPointAt(w);
}
I.push(G);
P += O;
}
} else for (;1 - P > 1e-6; ) {
w = r(w = P, R);
I.push(B.lerp(D, w));
P += O;
}
x = "constant" === R ? R : n.Linear;
for (V = 0, N = I.length; V < N; V++) {
var q = E + C + O * V * M;
X(I[V], x, q);
}
C = Math.abs(P - 1) > 1e-6 ? (P - 1) * M : 0;
}
y[y.length - 1] !== b[b.length - 1] && X(f[f.length - 1], x, y[y.length - 1]);
}
}
function X(t, e, i) {
v.push(t);
g.push(e);
b.push(i);
}
}
0;
e.exports = {
sampleMotionPaths: h,
Curve: c,
Bezier: l
};
}), {
"../core/utils/binary-search": 305,
"./animation-curves": 11,
"./bezier": 14
} ],
18: [ (function(t, e, i) {
"use strict";
var n = cc.js, r = t("../core/CCDebug");
function s() {
this._isPlaying = !1;
this._isPaused = !1;
this._stepOnce = !1;
}
var o = s.prototype;
n.get(o, "isPlaying", (function() {
return this._isPlaying;
}), !0);
n.get(o, "isPaused", (function() {
return this._isPaused;
}), !0);
var a = function() {};
o.onPlay = a;
o.onPause = a;
o.onResume = a;
o.onStop = a;
o.onError = a;
o.play = function() {
if (this._isPlaying) if (this._isPaused) {
this._isPaused = !1;
this.onResume();
} else this.onError(r.getError(3912)); else {
this._isPlaying = !0;
this.onPlay();
}
};
o.stop = function() {
if (this._isPlaying) {
this._isPlaying = !1;
this.onStop();
this._isPaused = !1;
}
};
o.pause = function() {
if (this._isPlaying && !this._isPaused) {
this._isPaused = !0;
this.onPause();
}
};
o.resume = function() {
if (this._isPlaying && this._isPaused) {
this._isPaused = !1;
this.onResume();
}
};
o.step = function() {
this.pause();
this._stepOnce = !0;
this._isPlaying || this.play();
};
e.exports = s;
}), {
"../core/CCDebug": 69
} ],
19: [ (function(t, e, i) {
"use strict";
var n = {
Loop: 2,
ShouldWrap: 4,
PingPong: 22,
Reverse: 36
}, r = cc.Enum({
Default: 0,
Normal: 1,
Reverse: n.Reverse,
Loop: n.Loop,
LoopReverse: n.Loop | n.Reverse,
PingPong: n.PingPong,
PingPongReverse: n.PingPong | n.Reverse
});
cc.WrapMode = r;
function s(t) {
if (t) this.set(t); else {
this.ratio = 0;
this.time = 0;
this.direction = 1;
this.stopped = !0;
this.iterations = 0;
this.frameIndex = void 0;
}
}
s.prototype.set = function(t) {
this.ratio = t.ratio;
this.time = t.time;
this.direction = t.direction;
this.stopped = t.stopped;
this.iterations = t.iterations;
this.frameIndex = t.frameIndex;
};
e.exports = {
WrapModeMask: n,
WrapMode: r,
WrappedInfo: s
};
}), {} ],
20: [ (function(t, e, i) {
"use strict";
var n, r = t("../core/event/event-target"), s = t("../core/platform/CCSys"), o = t("../core/assets/CCAudioClip").LoadMode, a = !1, c = [], l = function t(e) {
r.call(this);
this._shouldRecycleOnEnded = !1;
this._src = e;
this._element = null;
this.id = 0;
this._volume = 1;
this._loop = !1;
this._nextTime = 0;
this._state = t.State.INITIALZING;
this._onended = function() {
this._state = t.State.STOPPED;
this.emit("ended");
}.bind(this);
};
cc.js.extend(l, r);
l.State = {
ERROR: -1,
INITIALZING: 0,
PLAYING: 1,
PAUSED: 2,
STOPPED: 3
};
(function(t) {
t._bindEnded = function(t) {
t = t || this._onended;
var e = this._element;
this._src && e instanceof HTMLAudioElement ? e.addEventListener("ended", t) : e.onended = t;
};
t._unbindEnded = function() {
var t = this._element;
t instanceof HTMLAudioElement ? t.removeEventListener("ended", this._onended) : t && (t.onended = null);
};
t._onLoaded = function() {
this._createElement();
this.setVolume(this._volume);
this.setLoop(this._loop);
0 !== this._nextTime && this.setCurrentTime(this._nextTime);
this.getState(!1) === l.State.PLAYING ? this.play() : this._state = l.State.INITIALZING;
};
t._createElement = function() {
var t = this._src._nativeAsset;
if (t instanceof HTMLAudioElement) {
this._element || (this._element = document.createElement("audio"));
this._element.src = t.src;
} else this._element = new u(t, this);
};
t.play = function() {
this._state = l.State.PLAYING;
if (this._element) {
this._bindEnded();
this._element.play();
this._touchToPlay();
}
};
t._touchToPlay = function() {
this._src && this._src.loadMode === o.DOM_AUDIO && this._element.paused && c.push({
instance: this,
offset: 0,
audio: this._element
});
if (!a) {
a = !0;
var t = "ontouchend" in window ? "touchend" : "mousedown";
cc.game.canvas.addEventListener(t, (function() {
for (var t; t = c.pop(); ) t.audio.play(t.offset);
}));
}
};
t.destroy = function() {
this._element = null;
};
t.pause = function() {
if (this._element && this.getState() === l.State.PLAYING) {
this._unbindEnded();
this._element.pause();
this._state = l.State.PAUSED;
}
};
t.resume = function() {
if (this._element && this.getState() === l.State.PAUSED) {
this._bindEnded();
this._element.play();
this._state = l.State.PLAYING;
}
};
t.stop = function() {
if (this._element) {
this._element.pause();
try {
this._element.currentTime = 0;
} catch (t) {}
for (var t = 0; t < c.length; t++) if (c[t].instance === this) {
c.splice(t, 1);
break;
}
this._unbindEnded();
this.emit("stop");
this._state = l.State.STOPPED;
}
};
t.setLoop = function(t) {
this._loop = t;
this._element && (this._element.loop = t);
};
t.getLoop = function() {
return this._loop;
};
t.setVolume = function(t) {
this._volume = t;
this._element && (this._element.volume = t);
};
t.getVolume = function() {
return this._volume;
};
t.setCurrentTime = function(t) {
if (this._element) {
this._nextTime = 0;
this._unbindEnded();
this._bindEnded(function() {
this._bindEnded();
}.bind(this));
try {
this._element.currentTime = t;
} catch (i) {
var e = this._element;
if (e.addEventListener) {
e.addEventListener("loadedmetadata", (function i() {
e.removeEventListener("loadedmetadata", i);
e.currentTime = t;
}));
}
}
} else this._nextTime = t;
};
t.getCurrentTime = function() {
return this._element ? this._element.currentTime : 0;
};
t.getDuration = function() {
return this._element ? this._element.duration : 0;
};
t.getState = function(t) {
void 0 === t && (t = !0);
t && this._forceUpdatingState();
return this._state;
};
t._forceUpdatingState = function() {
var t = this._element;
t && (l.State.PLAYING === this._state && t.paused ? this._state = l.State.STOPPED : l.State.STOPPED !== this._state || t.paused || (this._state = l.State.PLAYING));
};
Object.defineProperty(t, "src", {
get: function() {
return this._src;
},
set: function(t) {
this._unbindEnded();
if (t) {
this._src = t;
if (t.loaded) this._onLoaded(); else {
var e = this;
t.once("load", (function() {
t === e._src && e._onLoaded();
}));
cc.loader.load({
url: t.nativeUrl,
skips: [ "Loader" ]
}, (function(e, i) {
e ? cc.error(e) : t.loaded || (t._nativeAsset = i);
}));
}
} else {
this._src = null;
this._element instanceof u ? this._element = null : this._element && (this._element.src = "");
this._state = l.State.INITIALZING;
}
return t;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t, "paused", {
get: function() {
return !this._element || this._element.paused;
},
enumerable: !0,
configurable: !0
});
})(l.prototype);
n = cc.sys.browserType === cc.sys.BROWSER_TYPE_EDGE || cc.sys.browserType === cc.sys.BROWSER_TYPE_BAIDU || cc.sys.browserType === cc.sys.BROWSER_TYPE_UC ? .01 : 0;
var u = function(t, e) {
this._audio = e;
this._context = s.__audioSupport.context;
this._buffer = t;
this._gainObj = this._context.createGain();
this.volume = 1;
this._gainObj.connect(this._context.destination);
this._loop = !1;
this._startTime = -1;
this._currentSource = null;
this.playedLength = 0;
this._currentTimer = null;
this._endCallback = function() {
this.onended && this.onended(this);
}.bind(this);
};
(function(t) {
t.play = function(t) {
if (this._currentSource && !this.paused) {
this._currentSource.onended = null;
this._currentSource.stop(0);
this.playedLength = 0;
}
var e = this._context.createBufferSource();
e.buffer = this._buffer;
e.connect(this._gainObj);
e.loop = this._loop;
this._startTime = this._context.currentTime;
(t = t || this.playedLength) && (this._startTime -= t);
var i, n = this._buffer.duration, r = t;
if (this._loop) e.start ? e.start(0, r) : e.notoGrainOn ? e.noteGrainOn(0, r) : e.noteOn(0, r); else {
i = n - t;
e.start ? e.start(0, r, i) : e.noteGrainOn ? e.noteGrainOn(0, r, i) : e.noteOn(0, r, i);
}
this._currentSource = e;
e.onended = this._endCallback;
if ((!e.context.state || "suspended" === e.context.state) && 0 === this._context.currentTime) {
var s = this;
clearTimeout(this._currentTimer);
this._currentTimer = setTimeout((function() {
0 === s._context.currentTime && c.push({
instance: s._audio,
offset: t,
audio: s
});
}), 10);
}
cc.sys.browserType === cc.sys.BROWSER_TYPE_SAFARI && cc.sys.isMobile && "interrupted" === e.context.state && e.context.resume();
};
t.pause = function() {
clearTimeout(this._currentTimer);
if (!this.paused) {
this.playedLength = this._context.currentTime - this._startTime;
this.playedLength %= this._buffer.duration;
var t = this._currentSource;
this._currentSource = null;
this._startTime = -1;
t && t.stop(0);
}
};
Object.defineProperty(t, "paused", {
get: function() {
return (!this._currentSource || !this._currentSource.loop) && (-1 === this._startTime || this._context.currentTime - this._startTime > this._buffer.duration);
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t, "loop", {
get: function() {
return this._loop;
},
set: function(t) {
this._currentSource && (this._currentSource.loop = t);
return this._loop = t;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t, "volume", {
get: function() {
return this._volume;
},
set: function(t) {
this._volume = t;
if (this._gainObj.gain.setTargetAtTime) try {
this._gainObj.gain.setTargetAtTime(t, this._context.currentTime, n);
} catch (e) {
this._gainObj.gain.setTargetAtTime(t, this._context.currentTime, .01);
} else this._gainObj.gain.value = t;
if (s.os === s.OS_IOS && !this.paused && this._currentSource) {
this._currentSource.onended = null;
this.pause();
this.play();
}
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t, "currentTime", {
get: function() {
if (this.paused) return this.playedLength;
this.playedLength = this._context.currentTime - this._startTime;
this.playedLength %= this._buffer.duration;
return this.playedLength;
},
set: function(t) {
if (this.paused) this.playedLength = t; else {
this.pause();
this.playedLength = t;
this.play();
}
return t;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t, "duration", {
get: function() {
return this._buffer.duration;
},
enumerable: !0,
configurable: !0
});
})(u.prototype);
e.exports = cc.Audio = l;
}), {
"../core/assets/CCAudioClip": 77,
"../core/event/event-target": 156,
"../core/platform/CCSys": 239
} ],
21: [ (function(t, e, i) {
"use strict";
var n = t("./CCAudio"), r = t("../core/assets/CCAudioClip"), s = cc.js, o = 0, a = s.createMap(!0), c = {}, l = [], u = function(t) {
if (t._shouldRecycleOnEnded) {
t._finishCallback = null;
t.off("ended");
t.off("stop");
t.src = null;
l.includes(t) || (l.length < 32 ? l.push(t) : t.destroy());
t._shouldRecycleOnEnded = !1;
}
}, h = function(t) {
var e = o++, i = c[t];
i || (i = c[t] = []);
if (d._maxAudioInstance <= i.length) {
var r = i.shift();
f(r).stop();
}
var s = l.pop() || new n(), h = function() {
if (f(this.id)) {
delete a[this.id];
var t = i.indexOf(this.id);
cc.js.array.fastRemoveAt(i, t);
}
u(this);
};
s.on("ended", (function() {
this._finishCallback && this._finishCallback();
h.call(this);
}), s);
s.on("stop", h, s);
s.id = e;
a[e] = s;
i.push(e);
return s;
}, f = function(t) {
return a[t];
}, _ = function(t) {
void 0 === t ? t = 1 : "string" == typeof t && (t = Number.parseFloat(t));
return t;
}, d = {
AudioState: n.State,
_maxWebAudioSize: 2097152,
_maxAudioInstance: 24,
_id2audio: a,
play: function(t, e, i) {
var n, s = t;
if ("string" == typeof t) {
cc.warnID(8401, "cc.audioEngine", "cc.AudioClip", "AudioClip", "cc.AudioClip", "audio");
n = h(s = t);
r._loadByUrl(s, (function(t, e) {
e && (n.src = e);
}));
} else {
if (!t) return;
s = t.nativeUrl;
(n = h(s)).src = t;
}
n._shouldRecycleOnEnded = !0;
n.setLoop(e || !1);
i = _(i);
n.setVolume(i);
n.play();
return n.id;
},
setLoop: function(t, e) {
var i = f(t);
i && i.setLoop && i.setLoop(e);
},
isLoop: function(t) {
var e = f(t);
return !(!e || !e.getLoop) && e.getLoop();
},
setVolume: function(t, e) {
var i = f(t);
i && i.setVolume(e);
},
getVolume: function(t) {
var e = f(t);
return e ? e.getVolume() : 1;
},
setCurrentTime: function(t, e) {
var i = f(t);
if (i) {
i.setCurrentTime(e);
return !0;
}
return !1;
},
getCurrentTime: function(t) {
var e = f(t);
return e ? e.getCurrentTime() : 0;
},
getDuration: function(t) {
var e = f(t);
return e ? e.getDuration() : 0;
},
getState: function(t) {
var e = f(t);
return e ? e.getState() : this.AudioState.ERROR;
},
setFinishCallback: function(t, e) {
var i = f(t);
i && (i._finishCallback = e);
},
pause: function(t) {
var e = f(t);
if (e) {
e.pause();
return !0;
}
return !1;
},
_pauseIDCache: [],
pauseAll: function() {
for (var t in a) {
var e = a[t];
if (e.getState() === n.State.PLAYING) {
this._pauseIDCache.push(t);
e.pause();
}
}
},
resume: function(t) {
var e = f(t);
e && e.resume();
},
resumeAll: function() {
for (var t = 0; t < this._pauseIDCache.length; ++t) {
var e = this._pauseIDCache[t], i = f(e);
i && i.resume();
}
this._pauseIDCache.length = 0;
},
stop: function(t) {
var e = f(t);
if (e) {
e.stop();
return !0;
}
return !1;
},
stopAll: function() {
for (var t in a) {
var e = a[t];
e && e.stop();
}
},
setMaxAudioInstance: function(t) {
this._maxAudioInstance = t;
},
getMaxAudioInstance: function() {
return this._maxAudioInstance;
},
uncache: function(t) {
var e = t;
if ("string" == typeof t) {
cc.warnID(8401, "cc.audioEngine", "cc.AudioClip", "AudioClip", "cc.AudioClip", "audio");
e = t;
} else {
if (!t) return;
e = t.nativeUrl;
}
var i = c[e];
if (i) for (;i.length > 0; ) {
var n = i.pop(), r = a[n];
if (r) {
r.stop();
delete a[n];
}
}
},
uncacheAll: function() {
this.stopAll();
var t;
for (var e in a) (t = a[e]) && t.destroy();
for (;t = l.pop(); ) t.destroy();
a = s.createMap(!0);
c = {};
},
getProfile: function(t) {},
preload: function(t, e) {
0;
cc.loader.load(t, e && function(t) {
t || e();
});
},
setMaxWebAudioSize: function(t) {
this._maxWebAudioSize = 1024 * t;
},
_breakCache: null,
_break: function() {
this._breakCache = [];
for (var t in a) {
var e = a[t];
if (e.getState() === n.State.PLAYING) {
this._breakCache.push(t);
e.pause();
}
}
},
_restore: function() {
if (this._breakCache) {
for (;this._breakCache.length > 0; ) {
var t = this._breakCache.pop(), e = f(t);
e && e.resume && e.resume();
}
this._breakCache = null;
}
},
_music: {
id: -1,
loop: !1,
volume: 1
},
_effect: {
volume: 1,
pauseCache: []
},
playMusic: function(t, e) {
var i = this._music;
this.stop(i.id);
i.id = this.play(t, e, i.volume);
i.loop = e;
return i.id;
},
stopMusic: function() {
this.stop(this._music.id);
},
pauseMusic: function() {
this.pause(this._music.id);
return this._music.id;
},
resumeMusic: function() {
this.resume(this._music.id);
return this._music.id;
},
getMusicVolume: function() {
return this._music.volume;
},
setMusicVolume: function(t) {
t = _(t);
var e = this._music;
e.volume = t;
this.setVolume(e.id, e.volume);
return e.volume;
},
isMusicPlaying: function() {
return this.getState(this._music.id) === this.AudioState.PLAYING;
},
playEffect: function(t, e) {
return this.play(t, e || !1, this._effect.volume);
},
setEffectsVolume: function(t) {
t = _(t);
var e = this._music.id;
this._effect.volume = t;
for (var i in a) {
var n = a[i];
n && n.id !== e && d.setVolume(i, t);
}
},
getEffectsVolume: function() {
return this._effect.volume;
},
pauseEffect: function(t) {
return this.pause(t);
},
pauseAllEffects: function() {
var t = this._music.id, e = this._effect;
e.pauseCache.length = 0;
for (var i in a) {
var n = a[i];
if (n && n.id !== t) {
if (n.getState() === this.AudioState.PLAYING) {
e.pauseCache.push(i);
n.pause();
}
}
}
},
resumeEffect: function(t) {
this.resume(t);
},
resumeAllEffects: function() {
for (var t = this._effect.pauseCache, e = 0; e < t.length; ++e) {
var i = t[e], n = a[i];
n && n.resume();
}
},
stopEffect: function(t) {
return this.stop(t);
},
stopAllEffects: function() {
var t = this._music.id;
for (var e in a) {
var i = a[e];
if (i && i.id !== t) {
i.getState() === d.AudioState.PLAYING && i.stop();
}
}
}
};
e.exports = cc.audioEngine = d;
}), {
"../core/assets/CCAudioClip": 77,
"./CCAudio": 20
} ],
22: [ (function(t, e, i) {
"use strict";
var n = {
name: "Jacob__Codec"
};
n.Base64 = t("./base64");
n.GZip = t("./gzip");
n.unzip = function() {
return n.GZip.gunzip.apply(n.GZip, arguments);
};
n.unzipBase64 = function() {
var t = n.Base64.decode.apply(n.Base64, arguments);
try {
return n.GZip.gunzip.call(n.GZip, t);
} catch (e) {
return t.slice(7);
}
};
n.unzipBase64AsArray = function(t, e) {
e = e || 1;
var i, n, r, s = this.unzipBase64(t), o = [];
for (i = 0, r = s.length / e; i < r; i++) {
o[i] = 0;
for (n = e - 1; n >= 0; --n) o[i] += s.charCodeAt(i * e + n) << 8 * n;
}
return o;
};
n.unzipAsArray = function(t, e) {
e = e || 1;
var i, n, r, s = this.unzip(t), o = [];
for (i = 0, r = s.length / e; i < r; i++) {
o[i] = 0;
for (n = e - 1; n >= 0; --n) o[i] += s.charCodeAt(i * e + n) << 8 * n;
}
return o;
};
cc.codec = e.exports = n;
}), {
"./base64": 23,
"./gzip": 24
} ],
23: [ (function(t, e, i) {
"use strict";
var n = t("../core/utils/misc").BASE64_VALUES, r = {
name: "Jacob__Codec__Base64",
decode: function(t) {
var e, i, r, s, o, a, c, l = [], u = 0;
t = t.replace(/[^A-Za-z0-9\+\/\=]/g, "");
for (;u < t.length; ) {
s = n[t.charCodeAt(u++)];
o = n[t.charCodeAt(u++)];
a = n[t.charCodeAt(u++)];
c = n[t.charCodeAt(u++)];
e = s << 2 | o >> 4;
i = (15 & o) << 4 | a >> 2;
r = (3 & a) << 6 | c;
l.push(String.fromCharCode(e));
64 !== a && l.push(String.fromCharCode(i));
64 !== c && l.push(String.fromCharCode(r));
}
return l = l.join("");
},
decodeAsArray: function(t, e) {
var i, n, r, s = this.decode(t), o = [];
for (i = 0, r = s.length / e; i < r; i++) {
o[i] = 0;
for (n = e - 1; n >= 0; --n) o[i] += s.charCodeAt(i * e + n) << 8 * n;
}
return o;
}
};
e.exports = r;
}), {
"../core/utils/misc": 313
} ],
24: [ (function(t, e, i) {
"use strict";
var n = function(t) {
this.data = t;
this.debug = !1;
this.gpflags = void 0;
this.files = 0;
this.unzipped = [];
this.buf32k = new Array(32768);
this.bIdx = 0;
this.modeZIP = !1;
this.bytepos = 0;
this.bb = 1;
this.bits = 0;
this.nameBuf = [];
this.fileout = void 0;
this.literalTree = new Array(n.LITERALS);
this.distanceTree = new Array(32);
this.treepos = 0;
this.Places = null;
this.len = 0;
this.fpos = new Array(17);
this.fpos[0] = 0;
this.flens = void 0;
this.fmax = void 0;
};
n.gunzip = function(t) {
t.constructor === Array || (t.constructor, String);
return new n(t).gunzip()[0][0];
};
n.HufNode = function() {
this.b0 = 0;
this.b1 = 0;
this.jump = null;
this.jumppos = -1;
};
n.LITERALS = 288;
n.NAMEMAX = 256;
n.bitReverse = [ 0, 128, 64, 192, 32, 160, 96, 224, 16, 144, 80, 208, 48, 176, 112, 240, 8, 136, 72, 200, 40, 168, 104, 232, 24, 152, 88, 216, 56, 184, 120, 248, 4, 132, 68, 196, 36, 164, 100, 228, 20, 148, 84, 212, 52, 180, 116, 244, 12, 140, 76, 204, 44, 172, 108, 236, 28, 156, 92, 220, 60, 188, 124, 252, 2, 130, 66, 194, 34, 162, 98, 226, 18, 146, 82, 210, 50, 178, 114, 242, 10, 138, 74, 202, 42, 170, 106, 234, 26, 154, 90, 218, 58, 186, 122, 250, 6, 134, 70, 198, 38, 166, 102, 230, 22, 150, 86, 214, 54, 182, 118, 246, 14, 142, 78, 206, 46, 174, 110, 238, 30, 158, 94, 222, 62, 190, 126, 254, 1, 129, 65, 193, 33, 161, 97, 225, 17, 145, 81, 209, 49, 177, 113, 241, 9, 137, 73, 201, 41, 169, 105, 233, 25, 153, 89, 217, 57, 185, 121, 249, 5, 133, 69, 197, 37, 165, 101, 229, 21, 149, 85, 213, 53, 181, 117, 245, 13, 141, 77, 205, 45, 173, 109, 237, 29, 157, 93, 221, 61, 189, 125, 253, 3, 131, 67, 195, 35, 163, 99, 227, 19, 147, 83, 211, 51, 179, 115, 243, 11, 139, 75, 203, 43, 171, 107, 235, 27, 155, 91, 219, 59, 187, 123, 251, 7, 135, 71, 199, 39, 167, 103, 231, 23, 151, 87, 215, 55, 183, 119, 247, 15, 143, 79, 207, 47, 175, 111, 239, 31, 159, 95, 223, 63, 191, 127, 255 ];
n.cplens = [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0 ];
n.cplext = [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 99, 99 ];
n.cpdist = [ 1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];
n.cpdext = [ 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13 ];
n.border = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];
n.prototype.gunzip = function() {
this.outputArr = [];
this.nextFile();
return this.unzipped;
};
n.prototype.readByte = function() {
this.bits += 8;
return this.bytepos < this.data.length ? this.data.charCodeAt(this.bytepos++) : -1;
};
n.prototype.byteAlign = function() {
this.bb = 1;
};
n.prototype.readBit = function() {
var t;
this.bits++;
t = 1 & this.bb;
this.bb >>= 1;
if (0 === this.bb) {
this.bb = this.readByte();
t = 1 & this.bb;
this.bb = this.bb >> 1 | 128;
}
return t;
};
n.prototype.readBits = function(t) {
for (var e = 0, i = t; i--; ) e = e << 1 | this.readBit();
t && (e = n.bitReverse[e] >> 8 - t);
return e;
};
n.prototype.flushBuffer = function() {
this.bIdx = 0;
};
n.prototype.addBuffer = function(t) {
this.buf32k[this.bIdx++] = t;
this.outputArr.push(String.fromCharCode(t));
32768 === this.bIdx && (this.bIdx = 0);
};
n.prototype.IsPat = function() {
for (;;) {
if (this.fpos[this.len] >= this.fmax) return -1;
if (this.flens[this.fpos[this.len]] === this.len) return this.fpos[this.len]++;
this.fpos[this.len]++;
}
};
n.prototype.Rec = function() {
var t, e = this.Places[this.treepos];
if (17 === this.len) return -1;
this.treepos++;
this.len++;
if ((t = this.IsPat()) >= 0) e.b0 = t; else {
e.b0 = 32768;
if (this.Rec()) return -1;
}
if ((t = this.IsPat()) >= 0) {
e.b1 = t;
e.jump = null;
} else {
e.b1 = 32768;
e.jump = this.Places[this.treepos];
e.jumppos = this.treepos;
if (this.Rec()) return -1;
}
this.len--;
return 0;
};
n.prototype.CreateTree = function(t, e, i, n) {
var r;
this.Places = t;
this.treepos = 0;
this.flens = i;
this.fmax = e;
for (r = 0; r < 17; r++) this.fpos[r] = 0;
this.len = 0;
return this.Rec() ? -1 : 0;
};
n.prototype.DecodeValue = function(t) {
for (var e, i, n = 0, r = t[n]; ;) if (this.readBit()) {
if (!(32768 & r.b1)) return r.b1;
r = r.jump;
e = t.length;
for (i = 0; i < e; i++) if (t[i] === r) {
n = i;
break;
}
} else {
if (!(32768 & r.b0)) return r.b0;
r = t[++n];
}
return -1;
};
n.prototype.DeflateLoop = function() {
var t, e, i;
do {
t = this.readBit();
if (0 === (e = this.readBits(2))) {
var r, s;
this.byteAlign();
r = this.readByte();
r |= this.readByte() << 8;
s = this.readByte();
65535 & (r ^ ~(s |= this.readByte() << 8)) && document.write("BlockLen checksum mismatch\n");
for (;r--; ) {
o = this.readByte();
this.addBuffer(o);
}
} else if (1 === e) for (;;) {
(a = n.bitReverse[this.readBits(7)] >> 1) > 23 ? (a = a << 1 | this.readBit()) > 199 ? a = (a -= 128) << 1 | this.readBit() : (a -= 48) > 143 && (a += 136) : a += 256;
if (a < 256) this.addBuffer(a); else {
if (256 === a) break;
a -= 257;
p = this.readBits(n.cplext[a]) + n.cplens[a];
a = n.bitReverse[this.readBits(5)] >> 3;
if (n.cpdext[a] > 8) {
m = this.readBits(8);
m |= this.readBits(n.cpdext[a] - 8) << 8;
} else m = this.readBits(n.cpdext[a]);
m += n.cpdist[a];
for (a = 0; a < p; a++) {
var o = this.buf32k[this.bIdx - m & 32767];
this.addBuffer(o);
}
}
} else if (2 === e) {
var a, c, l, u, h, f = new Array(320);
l = 257 + this.readBits(5);
u = 1 + this.readBits(5);
h = 4 + this.readBits(4);
for (a = 0; a < 19; a++) f[a] = 0;
for (a = 0; a < h; a++) f[n.border[a]] = this.readBits(3);
p = this.distanceTree.length;
for (i = 0; i < p; i++) this.distanceTree[i] = new n.HufNode();
if (this.CreateTree(this.distanceTree, 19, f, 0)) {
this.flushBuffer();
return 1;
}
c = l + u;
i = 0;
for (;i < c; ) {
0;
if ((a = this.DecodeValue(this.distanceTree)) < 16) f[i++] = a; else if (16 === a) {
var _;
if (i + (a = 3 + this.readBits(2)) > c) {
this.flushBuffer();
return 1;
}
_ = i ? f[i - 1] : 0;
for (;a--; ) f[i++] = _;
} else {
if (i + (a = 17 === a ? 3 + this.readBits(3) : 11 + this.readBits(7)) > c) {
this.flushBuffer();
return 1;
}
for (;a--; ) f[i++] = 0;
}
}
p = this.literalTree.length;
for (i = 0; i < p; i++) this.literalTree[i] = new n.HufNode();
if (this.CreateTree(this.literalTree, l, f, 0)) {
this.flushBuffer();
return 1;
}
p = this.literalTree.length;
for (i = 0; i < p; i++) this.distanceTree[i] = new n.HufNode();
var d = new Array();
for (i = l; i < f.length; i++) d[i - l] = f[i];
if (this.CreateTree(this.distanceTree, u, d, 0)) {
this.flushBuffer();
return 1;
}
for (;;) if ((a = this.DecodeValue(this.literalTree)) >= 256) {
var p, m;
if (0 === (a -= 256)) break;
a--;
p = this.readBits(n.cplext[a]) + n.cplens[a];
a = this.DecodeValue(this.distanceTree);
if (n.cpdext[a] > 8) {
m = this.readBits(8);
m |= this.readBits(n.cpdext[a] - 8) << 8;
} else m = this.readBits(n.cpdext[a]);
m += n.cpdist[a];
for (;p--; ) {
o = this.buf32k[this.bIdx - m & 32767];
this.addBuffer(o);
}
} else this.addBuffer(a);
}
} while (!t);
this.flushBuffer();
this.byteAlign();
return 0;
};
n.prototype.unzipFile = function(t) {
var e;
this.gunzip();
for (e = 0; e < this.unzipped.length; e++) if (this.unzipped[e][1] === t) return this.unzipped[e][0];
};
n.prototype.nextFile = function() {
this.outputArr = [];
this.modeZIP = !1;
var t = [];
t[0] = this.readByte();
t[1] = this.readByte();
if (120 === t[0] && 218 === t[1]) {
this.DeflateLoop();
this.unzipped[this.files] = [ this.outputArr.join(""), "geonext.gxt" ];
this.files++;
}
if (31 === t[0] && 139 === t[1]) {
this.skipdir();
this.unzipped[this.files] = [ this.outputArr.join(""), "file" ];
this.files++;
}
if (80 === t[0] && 75 === t[1]) {
this.modeZIP = !0;
t[2] = this.readByte();
t[3] = this.readByte();
if (3 === t[2] && 4 === t[3]) {
t[0] = this.readByte();
t[1] = this.readByte();
this.gpflags = this.readByte();
this.gpflags |= this.readByte() << 8;
var e = this.readByte();
e |= this.readByte() << 8;
this.readByte();
this.readByte();
this.readByte();
this.readByte();
this.readByte();
this.readByte() << 8;
this.readByte() << 16;
this.readByte() << 24;
this.readByte();
this.readByte() << 8;
this.readByte() << 16;
this.readByte() << 24;
var i = this.readByte();
i |= this.readByte() << 8;
var r = this.readByte();
r |= this.readByte() << 8;
o = 0;
this.nameBuf = [];
for (;i--; ) {
var s = this.readByte();
"/" === s | ":" === s ? o = 0 : o < n.NAMEMAX - 1 && (this.nameBuf[o++] = String.fromCharCode(s));
}
this.fileout || (this.fileout = this.nameBuf);
for (var o = 0; o < r; ) {
s = this.readByte();
o++;
}
if (8 === e) {
this.DeflateLoop();
this.unzipped[this.files] = [ this.outputArr.join(""), this.nameBuf.join("") ];
this.files++;
}
this.skipdir();
}
}
};
n.prototype.skipdir = function() {
var t, e, i = [];
if (8 & this.gpflags) {
i[0] = this.readByte();
i[1] = this.readByte();
i[2] = this.readByte();
i[3] = this.readByte();
this.readByte();
this.readByte() << 8;
this.readByte() << 16;
this.readByte() << 24;
this.readByte();
this.readByte() << 8;
this.readByte() << 16;
this.readByte() << 24;
}
this.modeZIP && this.nextFile();
i[0] = this.readByte();
if (8 !== i[0]) return 0;
this.gpflags = this.readByte();
this.readByte();
this.readByte();
this.readByte();
this.readByte();
this.readByte();
this.readByte();
if (4 & this.gpflags) {
i[0] = this.readByte();
i[2] = this.readByte();
this.len = i[0] + 256 * i[1];
for (t = 0; t < this.len; t++) this.readByte();
}
if (8 & this.gpflags) {
t = 0;
this.nameBuf = [];
for (;e = this.readByte(); ) {
"7" !== e && ":" !== e || (t = 0);
t < n.NAMEMAX - 1 && (this.nameBuf[t++] = e);
}
}
if (16 & this.gpflags) for (;e = this.readByte(); ) ;
if (2 & this.gpflags) {
this.readByte();
this.readByte();
}
this.DeflateLoop();
this.readByte();
this.readByte() << 8;
this.readByte() << 16;
this.readByte() << 24;
this.modeZIP && this.nextFile();
};
e.exports = n;
}), {} ],
25: [ (function(t, e, i) {
"use strict";
(function() {
function t(t) {
throw t;
}
var e = void 0, i = !0, n = this;
function r(t, i) {
var r, s = t.split("."), o = n;
!(s[0] in o) && o.execScript && o.execScript("var " + s[0]);
for (;s.length && (r = s.shift()); ) s.length || i === e ? o = o[r] ? o[r] : o[r] = {} : o[r] = i;
}
var s = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array;
function o(t) {
if ("string" == typeof t) {
var e, i, n = t.split("");
e = 0;
for (i = n.length; e < i; e++) n[e] = (255 & n[e].charCodeAt(0)) >>> 0;
t = n;
}
for (var r, s = 1, o = 0, a = t.length, c = 0; 0 < a; ) {
a -= r = 1024 < a ? 1024 : a;
do {
o += s += t[c++];
} while (--r);
s %= 65521;
o %= 65521;
}
return (o << 16 | s) >>> 0;
}
function a(e, i) {
this.index = "number" == typeof i ? i : 0;
this.i = 0;
this.buffer = e instanceof (s ? Uint8Array : Array) ? e : new (s ? Uint8Array : Array)(32768);
2 * this.buffer.length <= this.index && t(Error("invalid index"));
this.buffer.length <= this.index && this.f();
}
a.prototype.f = function() {
var t, e = this.buffer, i = e.length, n = new (s ? Uint8Array : Array)(i << 1);
if (s) n.set(e); else for (t = 0; t < i; ++t) n[t] = e[t];
return this.buffer = n;
};
a.prototype.d = function(t, e, i) {
var n, r = this.buffer, s = this.index, o = this.i, a = r[s];
i && 1 < e && (t = 8 < e ? (_[255 & t] << 24 | _[t >>> 8 & 255] << 16 | _[t >>> 16 & 255] << 8 | _[t >>> 24 & 255]) >> 32 - e : _[t] >> 8 - e);
if (8 > e + o) a = a << e | t, o += e; else for (n = 0; n < e; ++n) a = a << 1 | t >> e - n - 1 & 1, 
8 == ++o && (o = 0, r[s++] = _[a], a = 0, s === r.length && (r = this.f()));
r[s] = a;
this.buffer = r;
this.i = o;
this.index = s;
};
a.prototype.finish = function() {
var t, e = this.buffer, i = this.index;
0 < this.i && (e[i] <<= 8 - this.i, e[i] = _[e[i]], i++);
s ? t = e.subarray(0, i) : (e.length = i, t = e);
return t;
};
var c, l = new (s ? Uint8Array : Array)(256);
for (c = 0; 256 > c; ++c) {
for (var u = f = c, h = 7, f = f >>> 1; f; f >>>= 1) u <<= 1, u |= 1 & f, --h;
l[c] = (u << h & 255) >>> 0;
}
var _ = l;
s && new Uint32Array([ 0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117 ]);
function d(t) {
this.buffer = new (s ? Uint16Array : Array)(2 * t);
this.length = 0;
}
d.prototype.getParent = function(t) {
return 2 * ((t - 2) / 4 | 0);
};
d.prototype.push = function(t, e) {
var i, n, r, s = this.buffer;
i = this.length;
s[this.length++] = e;
for (s[this.length++] = t; 0 < i && (n = this.getParent(i), s[i] > s[n]); ) r = s[i], 
s[i] = s[n], s[n] = r, r = s[i + 1], s[i + 1] = s[n + 1], s[n + 1] = r, i = n;
return this.length;
};
d.prototype.pop = function() {
var t, e, i, n, r, s = this.buffer;
e = s[0];
t = s[1];
this.length -= 2;
s[0] = s[this.length];
s[1] = s[this.length + 1];
for (r = 0; !((n = 2 * r + 2) >= this.length); ) {
n + 2 < this.length && s[n + 2] > s[n] && (n += 2);
if (!(s[n] > s[r])) break;
i = s[r], s[r] = s[n], s[n] = i, i = s[r + 1], s[r + 1] = s[n + 1], s[n + 1] = i;
r = n;
}
return {
index: t,
value: e,
length: this.length
};
};
function p(t) {
var e, i, n, r, o, a, c, l, u, h = t.length, f = 0, _ = Number.POSITIVE_INFINITY;
for (l = 0; l < h; ++l) t[l] > f && (f = t[l]), t[l] < _ && (_ = t[l]);
e = 1 << f;
i = new (s ? Uint32Array : Array)(e);
n = 1;
r = 0;
for (o = 2; n <= f; ) {
for (l = 0; l < h; ++l) if (t[l] === n) {
a = 0;
c = r;
for (u = 0; u < n; ++u) a = a << 1 | 1 & c, c >>= 1;
for (u = a; u < e; u += o) i[u] = n << 16 | l;
++r;
}
++n;
r <<= 1;
o <<= 1;
}
return [ i, f, _ ];
}
function m(t, e) {
this.h = v;
this.w = 0;
this.input = t;
this.b = 0;
e && (e.lazy && (this.w = e.lazy), "number" == typeof e.compressionType && (this.h = e.compressionType), 
e.outputBuffer && (this.a = s && e.outputBuffer instanceof Array ? new Uint8Array(e.outputBuffer) : e.outputBuffer), 
"number" == typeof e.outputIndex && (this.b = e.outputIndex));
this.a || (this.a = new (s ? Uint8Array : Array)(32768));
}
var y, v = 2, g = {
NONE: 0,
r: 1,
j: v,
N: 3
}, b = [];
for (y = 0; 288 > y; y++) switch (i) {
case 143 >= y:
b.push([ y + 48, 8 ]);
break;

case 255 >= y:
b.push([ y - 144 + 400, 9 ]);
break;

case 279 >= y:
b.push([ y - 256 + 0, 7 ]);
break;

case 287 >= y:
b.push([ y - 280 + 192, 8 ]);
break;

default:
t("invalid literal: " + y);
}
m.prototype.n = function() {
var n, r, o, c, l = this.input;
switch (this.h) {
case 0:
o = 0;
for (c = l.length; o < c; ) {
var u, h, f, _ = r = s ? l.subarray(o, o + 65535) : l.slice(o, o + 65535), d = (o += r.length) === c, p = e, m = e, y = this.a, g = this.b;
if (s) {
for (y = new Uint8Array(this.a.buffer); y.length <= g + _.length + 5; ) y = new Uint8Array(y.length << 1);
y.set(this.a);
}
u = d ? 1 : 0;
y[g++] = 0 | u;
f = 65536 + ~(h = _.length) & 65535;
y[g++] = 255 & h;
y[g++] = h >>> 8 & 255;
y[g++] = 255 & f;
y[g++] = f >>> 8 & 255;
if (s) y.set(_, g), g += _.length, y = y.subarray(0, g); else {
p = 0;
for (m = _.length; p < m; ++p) y[g++] = _[p];
y.length = g;
}
this.b = g;
this.a = y;
}
break;

case 1:
var C = new a(new Uint8Array(this.a.buffer), this.b);
C.d(1, 1, i);
C.d(1, 2, i);
var x, A, S, w = E(this, l);
x = 0;
for (A = w.length; x < A; x++) if (S = w[x], a.prototype.d.apply(C, b[S]), 256 < S) C.d(w[++x], w[++x], i), 
C.d(w[++x], 5), C.d(w[++x], w[++x], i); else if (256 === S) break;
this.a = C.finish();
this.b = this.a.length;
break;

case v:
var T, D, R, I, P, O, L, V, N, F, z, k, G, U, j, H = new a(new Uint8Array(this.a), this.b), W = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ], q = Array(19);
T = v;
H.d(1, 1, i);
H.d(T, 2, i);
D = E(this, l);
L = B(O = M(this.L, 15));
N = B(V = M(this.K, 7));
for (R = 286; 257 < R && 0 === O[R - 1]; R--) ;
for (I = 30; 1 < I && 0 === V[I - 1]; I--) ;
var X, Y, J, Z, K, Q, $ = R, tt = I, et = new (s ? Uint32Array : Array)($ + tt), it = new (s ? Uint32Array : Array)(316), nt = new (s ? Uint8Array : Array)(19);
for (X = Y = 0; X < $; X++) et[Y++] = O[X];
for (X = 0; X < tt; X++) et[Y++] = V[X];
if (!s) {
X = 0;
for (Z = nt.length; X < Z; ++X) nt[X] = 0;
}
X = K = 0;
for (Z = et.length; X < Z; X += Y) {
for (Y = 1; X + Y < Z && et[X + Y] === et[X]; ++Y) ;
J = Y;
if (0 === et[X]) if (3 > J) for (;0 < J--; ) it[K++] = 0, nt[0]++; else for (;0 < J; ) (Q = 138 > J ? J : 138) > J - 3 && Q < J && (Q = J - 3), 
10 >= Q ? (it[K++] = 17, it[K++] = Q - 3, nt[17]++) : (it[K++] = 18, it[K++] = Q - 11, 
nt[18]++), J -= Q; else if (it[K++] = et[X], nt[et[X]]++, 3 > --J) for (;0 < J--; ) it[K++] = et[X], 
nt[et[X]]++; else for (;0 < J; ) (Q = 6 > J ? J : 6) > J - 3 && Q < J && (Q = J - 3), 
it[K++] = 16, it[K++] = Q - 3, nt[16]++, J -= Q;
}
n = s ? it.subarray(0, K) : it.slice(0, K);
F = M(nt, 7);
for (U = 0; 19 > U; U++) q[U] = F[W[U]];
for (P = 19; 4 < P && 0 === q[P - 1]; P--) ;
z = B(F);
H.d(R - 257, 5, i);
H.d(I - 1, 5, i);
H.d(P - 4, 4, i);
for (U = 0; U < P; U++) H.d(q[U], 3, i);
U = 0;
for (j = n.length; U < j; U++) if (k = n[U], H.d(z[k], F[k], i), 16 <= k) {
U++;
switch (k) {
case 16:
G = 2;
break;

case 17:
G = 3;
break;

case 18:
G = 7;
break;

default:
t("invalid code: " + k);
}
H.d(n[U], G, i);
}
var rt, st, ot, at, ct, lt, ut, ht, ft = [ L, O ], _t = [ N, V ];
ct = ft[0];
lt = ft[1];
ut = _t[0];
ht = _t[1];
rt = 0;
for (st = D.length; rt < st; ++rt) if (ot = D[rt], H.d(ct[ot], lt[ot], i), 256 < ot) H.d(D[++rt], D[++rt], i), 
at = D[++rt], H.d(ut[at], ht[at], i), H.d(D[++rt], D[++rt], i); else if (256 === ot) break;
this.a = H.finish();
this.b = this.a.length;
break;

default:
t("invalid compression type");
}
return this.a;
};
function C(t, e) {
this.length = t;
this.G = e;
}
function x() {
var e = A;
switch (i) {
case 3 === e:
return [ 257, e - 3, 0 ];

case 4 === e:
return [ 258, e - 4, 0 ];

case 5 === e:
return [ 259, e - 5, 0 ];

case 6 === e:
return [ 260, e - 6, 0 ];

case 7 === e:
return [ 261, e - 7, 0 ];

case 8 === e:
return [ 262, e - 8, 0 ];

case 9 === e:
return [ 263, e - 9, 0 ];

case 10 === e:
return [ 264, e - 10, 0 ];

case 12 >= e:
return [ 265, e - 11, 1 ];

case 14 >= e:
return [ 266, e - 13, 1 ];

case 16 >= e:
return [ 267, e - 15, 1 ];

case 18 >= e:
return [ 268, e - 17, 1 ];

case 22 >= e:
return [ 269, e - 19, 2 ];

case 26 >= e:
return [ 270, e - 23, 2 ];

case 30 >= e:
return [ 271, e - 27, 2 ];

case 34 >= e:
return [ 272, e - 31, 2 ];

case 42 >= e:
return [ 273, e - 35, 3 ];

case 50 >= e:
return [ 274, e - 43, 3 ];

case 58 >= e:
return [ 275, e - 51, 3 ];

case 66 >= e:
return [ 276, e - 59, 3 ];

case 82 >= e:
return [ 277, e - 67, 4 ];

case 98 >= e:
return [ 278, e - 83, 4 ];

case 114 >= e:
return [ 279, e - 99, 4 ];

case 130 >= e:
return [ 280, e - 115, 4 ];

case 162 >= e:
return [ 281, e - 131, 5 ];

case 194 >= e:
return [ 282, e - 163, 5 ];

case 226 >= e:
return [ 283, e - 195, 5 ];

case 257 >= e:
return [ 284, e - 227, 5 ];

case 258 === e:
return [ 285, e - 258, 0 ];

default:
t("invalid length: " + e);
}
}
var A, S, w = [];
for (A = 3; 258 >= A; A++) S = x(), w[A] = S[2] << 24 | S[1] << 16 | S[0];
var T = s ? new Uint32Array(w) : w;
function E(n, r) {
function o(e, n) {
var r, s, o, a, c = e.G, l = [], u = 0;
r = T[e.length];
l[u++] = 65535 & r;
l[u++] = r >> 16 & 255;
l[u++] = r >> 24;
switch (i) {
case 1 === c:
s = [ 0, c - 1, 0 ];
break;

case 2 === c:
s = [ 1, c - 2, 0 ];
break;

case 3 === c:
s = [ 2, c - 3, 0 ];
break;

case 4 === c:
s = [ 3, c - 4, 0 ];
break;

case 6 >= c:
s = [ 4, c - 5, 1 ];
break;

case 8 >= c:
s = [ 5, c - 7, 1 ];
break;

case 12 >= c:
s = [ 6, c - 9, 2 ];
break;

case 16 >= c:
s = [ 7, c - 13, 2 ];
break;

case 24 >= c:
s = [ 8, c - 17, 3 ];
break;

case 32 >= c:
s = [ 9, c - 25, 3 ];
break;

case 48 >= c:
s = [ 10, c - 33, 4 ];
break;

case 64 >= c:
s = [ 11, c - 49, 4 ];
break;

case 96 >= c:
s = [ 12, c - 65, 5 ];
break;

case 128 >= c:
s = [ 13, c - 97, 5 ];
break;

case 192 >= c:
s = [ 14, c - 129, 6 ];
break;

case 256 >= c:
s = [ 15, c - 193, 6 ];
break;

case 384 >= c:
s = [ 16, c - 257, 7 ];
break;

case 512 >= c:
s = [ 17, c - 385, 7 ];
break;

case 768 >= c:
s = [ 18, c - 513, 8 ];
break;

case 1024 >= c:
s = [ 19, c - 769, 8 ];
break;

case 1536 >= c:
s = [ 20, c - 1025, 9 ];
break;

case 2048 >= c:
s = [ 21, c - 1537, 9 ];
break;

case 3072 >= c:
s = [ 22, c - 2049, 10 ];
break;

case 4096 >= c:
s = [ 23, c - 3073, 10 ];
break;

case 6144 >= c:
s = [ 24, c - 4097, 11 ];
break;

case 8192 >= c:
s = [ 25, c - 6145, 11 ];
break;

case 12288 >= c:
s = [ 26, c - 8193, 12 ];
break;

case 16384 >= c:
s = [ 27, c - 12289, 12 ];
break;

case 24576 >= c:
s = [ 28, c - 16385, 13 ];
break;

case 32768 >= c:
s = [ 29, c - 24577, 13 ];
break;

default:
t("invalid distance");
}
r = s;
l[u++] = r[0];
l[u++] = r[1];
l[u++] = r[2];
o = 0;
for (a = l.length; o < a; ++o) y[v++] = l[o];
b[l[0]]++;
x[l[3]]++;
g = e.length + n - 1;
d = null;
}
var a, c, l, u, h, f, _, d, p, m = {}, y = s ? new Uint16Array(2 * r.length) : [], v = 0, g = 0, b = new (s ? Uint32Array : Array)(286), x = new (s ? Uint32Array : Array)(30), A = n.w;
if (!s) {
for (l = 0; 285 >= l; ) b[l++] = 0;
for (l = 0; 29 >= l; ) x[l++] = 0;
}
b[256] = 1;
a = 0;
for (c = r.length; a < c; ++a) {
l = h = 0;
for (u = 3; l < u && a + l !== c; ++l) h = h << 8 | r[a + l];
m[h] === e && (m[h] = []);
f = m[h];
if (!(0 < g--)) {
for (;0 < f.length && 32768 < a - f[0]; ) f.shift();
if (a + 3 >= c) {
d && o(d, -1);
l = 0;
for (u = c - a; l < u; ++l) p = r[a + l], y[v++] = p, ++b[p];
break;
}
if (0 < f.length) {
var S = e, w = e, E = 0, M = e, B = e, D = e, R = r.length, I = (B = 0, f.length);
t: for (;B < I; B++) {
S = f[I - B - 1];
M = 3;
if (3 < E) {
for (D = E; 3 < D; D--) if (r[S + D - 1] !== r[a + D - 1]) continue t;
M = E;
}
for (;258 > M && a + M < R && r[S + M] === r[a + M]; ) ++M;
M > E && (w = S, E = M);
if (258 === M) break;
}
_ = new C(E, a - w);
d ? d.length < _.length ? (p = r[a - 1], y[v++] = p, ++b[p], o(_, 0)) : o(d, -1) : _.length < A ? d = _ : o(_, 0);
} else d ? o(d, -1) : (p = r[a], y[v++] = p, ++b[p]);
}
f.push(a);
}
y[v++] = 256;
b[256]++;
n.L = b;
n.K = x;
return s ? y.subarray(0, v) : y;
}
function M(t, e) {
function i(t) {
var e = A[t][S[t]];
e === v ? (i(t + 1), i(t + 1)) : --C[e];
++S[t];
}
var n, r, o, a, c, l = t.length, u = new d(572), h = new (s ? Uint8Array : Array)(l);
if (!s) for (a = 0; a < l; a++) h[a] = 0;
for (a = 0; a < l; ++a) 0 < t[a] && u.push(a, t[a]);
n = Array(u.length / 2);
r = new (s ? Uint32Array : Array)(u.length / 2);
if (1 === n.length) return h[u.pop().index] = 1, h;
a = 0;
for (c = u.length / 2; a < c; ++a) n[a] = u.pop(), r[a] = n[a].value;
var f, _, p, m, y, v = r.length, g = new (s ? Uint16Array : Array)(e), b = new (s ? Uint8Array : Array)(e), C = new (s ? Uint8Array : Array)(v), x = Array(e), A = Array(e), S = Array(e), w = (1 << e) - v, T = 1 << e - 1;
g[e - 1] = v;
for (_ = 0; _ < e; ++_) w < T ? b[_] = 0 : (b[_] = 1, w -= T), w <<= 1, g[e - 2 - _] = (g[e - 1 - _] / 2 | 0) + v;
g[0] = b[0];
x[0] = Array(g[0]);
A[0] = Array(g[0]);
for (_ = 1; _ < e; ++_) g[_] > 2 * g[_ - 1] + b[_] && (g[_] = 2 * g[_ - 1] + b[_]), 
x[_] = Array(g[_]), A[_] = Array(g[_]);
for (f = 0; f < v; ++f) C[f] = e;
for (p = 0; p < g[e - 1]; ++p) x[e - 1][p] = r[p], A[e - 1][p] = p;
for (f = 0; f < e; ++f) S[f] = 0;
1 === b[e - 1] && (--C[0], ++S[e - 1]);
for (_ = e - 2; 0 <= _; --_) {
m = f = 0;
y = S[_ + 1];
for (p = 0; p < g[_]; p++) (m = x[_ + 1][y] + x[_ + 1][y + 1]) > r[f] ? (x[_][p] = m, 
A[_][p] = v, y += 2) : (x[_][p] = r[f], A[_][p] = f, ++f);
S[_] = 0;
1 === b[_] && i(_);
}
o = C;
a = 0;
for (c = n.length; a < c; ++a) h[n[a].index] = o[a];
return h;
}
function B(e) {
var i, n, r, o, a = new (s ? Uint16Array : Array)(e.length), c = [], l = [], u = 0;
i = 0;
for (n = e.length; i < n; i++) c[e[i]] = 1 + (0 | c[e[i]]);
i = 1;
for (n = 16; i <= n; i++) l[i] = u, (u += 0 | c[i]) > 1 << i && t("overcommitted"), 
u <<= 1;
65536 > u && t("undercommitted");
i = 0;
for (n = e.length; i < n; i++) {
u = l[e[i]];
l[e[i]] += 1;
r = a[i] = 0;
for (o = e[i]; r < o; r++) a[i] = a[i] << 1 | 1 & u, u >>>= 1;
}
return a;
}
function D(t, e) {
this.input = t;
this.a = new (s ? Uint8Array : Array)(32768);
this.h = R.j;
var i, n = {};
!e && (e = {}) || "number" != typeof e.compressionType || (this.h = e.compressionType);
for (i in e) n[i] = e[i];
n.outputBuffer = this.a;
this.z = new m(this.input, n);
}
var R = g;
D.prototype.n = function() {
var e, i, n, r, a, c, l, u = 0;
l = this.a;
switch (e = ut) {
case ut:
i = Math.LOG2E * Math.log(32768) - 8;
break;

default:
t(Error("invalid compression method"));
}
n = i << 4 | e;
l[u++] = n;
switch (e) {
case ut:
switch (this.h) {
case R.NONE:
a = 0;
break;

case R.r:
a = 1;
break;

case R.j:
a = 2;
break;

default:
t(Error("unsupported compression type"));
}
break;

default:
t(Error("invalid compression method"));
}
r = a << 6 | 0;
l[u++] = r | 31 - (256 * n + r) % 31;
c = o(this.input);
this.z.b = u;
u = (l = this.z.n()).length;
s && ((l = new Uint8Array(l.buffer)).length <= u + 4 && (this.a = new Uint8Array(l.length + 4), 
this.a.set(l), l = this.a), l = l.subarray(0, u + 4));
l[u++] = c >> 24 & 255;
l[u++] = c >> 16 & 255;
l[u++] = c >> 8 & 255;
l[u++] = 255 & c;
return l;
};
r("Zlib.Deflate", D);
r("Zlib.Deflate.compress", (function(t, e) {
return new D(t, e).n();
}));
r("Zlib.Deflate.CompressionType", R);
r("Zlib.Deflate.CompressionType.NONE", R.NONE);
r("Zlib.Deflate.CompressionType.FIXED", R.r);
r("Zlib.Deflate.CompressionType.DYNAMIC", R.j);
function I(e, i) {
this.k = [];
this.l = 32768;
this.e = this.g = this.c = this.q = 0;
this.input = s ? new Uint8Array(e) : e;
this.s = !1;
this.m = O;
this.B = !1;
!i && (i = {}) || (i.index && (this.c = i.index), i.bufferSize && (this.l = i.bufferSize), 
i.bufferType && (this.m = i.bufferType), i.resize && (this.B = i.resize));
switch (this.m) {
case P:
this.b = 32768;
this.a = new (s ? Uint8Array : Array)(32768 + this.l + 258);
break;

case O:
this.b = 0;
this.a = new (s ? Uint8Array : Array)(this.l);
this.f = this.J;
this.t = this.H;
this.o = this.I;
break;

default:
t(Error("invalid inflate mode"));
}
}
var P = 0, O = 1, L = {
D: P,
C: O
};
I.prototype.p = function() {
for (;!this.s; ) {
var n = tt(this, 3);
1 & n && (this.s = i);
switch (n >>>= 1) {
case 0:
var r = this.input, o = this.c, a = this.a, c = this.b, l = e, u = e, h = e, f = a.length, _ = e;
this.e = this.g = 0;
(l = r[o++]) === e && t(Error("invalid uncompressed block header: LEN (first byte)"));
u = l;
(l = r[o++]) === e && t(Error("invalid uncompressed block header: LEN (second byte)"));
u |= l << 8;
(l = r[o++]) === e && t(Error("invalid uncompressed block header: NLEN (first byte)"));
h = l;
(l = r[o++]) === e && t(Error("invalid uncompressed block header: NLEN (second byte)"));
u === ~(h |= l << 8) && t(Error("invalid uncompressed block header: length verify"));
o + u > r.length && t(Error("input buffer is broken"));
switch (this.m) {
case P:
for (;c + u > a.length; ) {
u -= _ = f - c;
if (s) a.set(r.subarray(o, o + _), c), c += _, o += _; else for (;_--; ) a[c++] = r[o++];
this.b = c;
a = this.f();
c = this.b;
}
break;

case O:
for (;c + u > a.length; ) a = this.f({
v: 2
});
break;

default:
t(Error("invalid inflate mode"));
}
if (s) a.set(r.subarray(o, o + u), c), c += u, o += u; else for (;u--; ) a[c++] = r[o++];
this.c = o;
this.b = c;
this.a = a;
break;

case 1:
this.o(K, $);
break;

case 2:
it(this);
break;

default:
t(Error("unknown BTYPE: " + n));
}
}
return this.t();
};
var V, N, F = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ], z = s ? new Uint16Array(F) : F, k = [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258 ], G = s ? new Uint16Array(k) : k, U = [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0 ], j = s ? new Uint8Array(U) : U, H = [ 1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ], W = s ? new Uint16Array(H) : H, q = [ 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13 ], X = s ? new Uint8Array(q) : q, Y = new (s ? Uint8Array : Array)(288);
V = 0;
for (N = Y.length; V < N; ++V) Y[V] = 143 >= V ? 8 : 255 >= V ? 9 : 279 >= V ? 7 : 8;
var J, Z, K = p(Y), Q = new (s ? Uint8Array : Array)(30);
J = 0;
for (Z = Q.length; J < Z; ++J) Q[J] = 5;
var $ = p(Q);
function tt(i, n) {
for (var r, s = i.g, o = i.e, a = i.input, c = i.c; o < n; ) (r = a[c++]) === e && t(Error("input buffer is broken")), 
s |= r << o, o += 8;
r = s & (1 << n) - 1;
i.g = s >>> n;
i.e = o - n;
i.c = c;
return r;
}
function et(i, n) {
for (var r, s, o, a = i.g, c = i.e, l = i.input, u = i.c, h = n[0], f = n[1]; c < f; ) (r = l[u++]) === e && t(Error("input buffer is broken")), 
a |= r << c, c += 8;
o = (s = h[a & (1 << f) - 1]) >>> 16;
i.g = a >> o;
i.e = c - o;
i.c = u;
return 65535 & s;
}
function it(t) {
function e(t, e, i) {
var n, r, s, o;
for (o = 0; o < t; ) switch (n = et(this, e)) {
case 16:
for (s = 3 + tt(this, 2); s--; ) i[o++] = r;
break;

case 17:
for (s = 3 + tt(this, 3); s--; ) i[o++] = 0;
r = 0;
break;

case 18:
for (s = 11 + tt(this, 7); s--; ) i[o++] = 0;
r = 0;
break;

default:
r = i[o++] = n;
}
return i;
}
var i, n, r, o, a = tt(t, 5) + 257, c = tt(t, 5) + 1, l = tt(t, 4) + 4, u = new (s ? Uint8Array : Array)(z.length);
for (o = 0; o < l; ++o) u[z[o]] = tt(t, 3);
i = p(u);
n = new (s ? Uint8Array : Array)(a);
r = new (s ? Uint8Array : Array)(c);
t.o(p(e.call(t, a, i, n)), p(e.call(t, c, i, r)));
}
I.prototype.o = function(t, e) {
var i = this.a, n = this.b;
this.u = t;
for (var r, s, o, a, c = i.length - 258; 256 !== (r = et(this, t)); ) if (256 > r) n >= c && (this.b = n, 
i = this.f(), n = this.b), i[n++] = r; else {
a = G[s = r - 257];
0 < j[s] && (a += tt(this, j[s]));
r = et(this, e);
o = W[r];
0 < X[r] && (o += tt(this, X[r]));
n >= c && (this.b = n, i = this.f(), n = this.b);
for (;a--; ) i[n] = i[n++ - o];
}
for (;8 <= this.e; ) this.e -= 8, this.c--;
this.b = n;
};
I.prototype.I = function(t, e) {
var i = this.a, n = this.b;
this.u = t;
for (var r, s, o, a, c = i.length; 256 !== (r = et(this, t)); ) if (256 > r) n >= c && (c = (i = this.f()).length), 
i[n++] = r; else {
a = G[s = r - 257];
0 < j[s] && (a += tt(this, j[s]));
r = et(this, e);
o = W[r];
0 < X[r] && (o += tt(this, X[r]));
n + a > c && (c = (i = this.f()).length);
for (;a--; ) i[n] = i[n++ - o];
}
for (;8 <= this.e; ) this.e -= 8, this.c--;
this.b = n;
};
I.prototype.f = function() {
var t, e, i = new (s ? Uint8Array : Array)(this.b - 32768), n = this.b - 32768, r = this.a;
if (s) i.set(r.subarray(32768, i.length)); else {
t = 0;
for (e = i.length; t < e; ++t) i[t] = r[t + 32768];
}
this.k.push(i);
this.q += i.length;
if (s) r.set(r.subarray(n, n + 32768)); else for (t = 0; 32768 > t; ++t) r[t] = r[n + t];
this.b = 32768;
return r;
};
I.prototype.J = function(t) {
var e, i, n, r = this.input.length / this.c + 1 | 0, o = this.input, a = this.a;
t && ("number" == typeof t.v && (r = t.v), "number" == typeof t.F && (r += t.F));
2 > r ? i = (n = (o.length - this.c) / this.u[2] / 2 * 258 | 0) < a.length ? a.length + n : a.length << 1 : i = a.length * r;
s ? (e = new Uint8Array(i)).set(a) : e = a;
return this.a = e;
};
I.prototype.t = function() {
var t, e, i, n, r, o = 0, a = this.a, c = this.k, l = new (s ? Uint8Array : Array)(this.q + (this.b - 32768));
if (0 === c.length) return s ? this.a.subarray(32768, this.b) : this.a.slice(32768, this.b);
e = 0;
for (i = c.length; e < i; ++e) {
t = c[e];
n = 0;
for (r = t.length; n < r; ++n) l[o++] = t[n];
}
e = 32768;
for (i = this.b; e < i; ++e) l[o++] = a[e];
this.k = [];
return this.buffer = l;
};
I.prototype.H = function() {
var t, e = this.b;
s ? this.B ? (t = new Uint8Array(e)).set(this.a.subarray(0, e)) : t = this.a.subarray(0, e) : (this.a.length > e && (this.a.length = e), 
t = this.a);
return this.buffer = t;
};
function nt(e, i) {
var n, r;
this.input = e;
this.c = 0;
!i && (i = {}) || (i.index && (this.c = i.index), i.verify && (this.M = i.verify));
n = e[this.c++];
r = e[this.c++];
switch (15 & n) {
case ut:
this.method = ut;
break;

default:
t(Error("unsupported compression method"));
}
0 != ((n << 8) + r) % 31 && t(Error("invalid fcheck flag:" + ((n << 8) + r) % 31));
32 & r && t(Error("fdict flag is not supported"));
this.A = new I(e, {
index: this.c,
bufferSize: i.bufferSize,
bufferType: i.bufferType,
resize: i.resize
});
}
nt.prototype.p = function() {
var e, i = this.input;
e = this.A.p();
this.c = this.A.c;
this.M && ((i[this.c++] << 24 | i[this.c++] << 16 | i[this.c++] << 8 | i[this.c++]) >>> 0 !== o(e) && t(Error("invalid adler-32 checksum")));
return e;
};
r("Zlib.Inflate", nt);
r("Zlib.Inflate.BufferType", L);
L.ADAPTIVE = L.C;
L.BLOCK = L.D;
r("Zlib.Inflate.prototype.decompress", nt.prototype.p);
s && new Uint16Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);
s && new Uint16Array([ 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258 ]);
s && new Uint8Array([ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0 ]);
s && new Uint16Array([ 1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ]);
s && new Uint8Array([ 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13 ]);
var rt, st, ot = new (s ? Uint8Array : Array)(288);
rt = 0;
for (st = ot.length; rt < st; ++rt) ot[rt] = 143 >= rt ? 8 : 255 >= rt ? 9 : 279 >= rt ? 7 : 8;
p(ot);
var at, ct, lt = new (s ? Uint8Array : Array)(30);
at = 0;
for (ct = lt.length; at < ct; ++at) lt[at] = 5;
p(lt);
var ut = 8;
}).call(window);
var n = window.Zlib;
n.Deflate = n.Deflate;
n.Deflate.compress = n.Deflate.compress;
n.Inflate = n.Inflate;
n.Inflate.BufferType = n.Inflate.BufferType;
n.Inflate.prototype.decompress = n.Inflate.prototype.decompress;
e.exports = n;
}), {} ],
26: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y, v, g, b, C, x, A, S, w = I(t("../../renderer/enums")), T = I(t("../value-types/color")), E = t("../value-types"), M = I(t("../renderer/index")), B = I(t("../platform/CCEnum")), D = I(t("../components/CCComponent")), R = t("../platform/CCClassDecorator");
function I(t) {
return t && t.__esModule ? t : {
default: t
};
}
function P(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function O(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function L(t, e, i) {
e && O(t.prototype, e);
i && O(t, i);
return t;
}
function V(t) {
return function() {
var e, i = k(t);
if (z()) {
var n = k(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return N(this, e);
};
}
function N(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? F(t) : e;
}
function F(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function z() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function k(t) {
return (k = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function G(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
function U(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var j = null;
j = window.renderer.Light;
var H = (0, B.default)({
DIRECTIONAL: 0,
POINT: 1,
SPOT: 2,
AMBIENT: 3
}), W = (0, B.default)({
NONE: 0,
HARD: 2,
SOFT_PCF3X3: 3,
SOFT_PCF5X5: 4
}), q = (n = (0, R.ccclass)("cc.Light"), r = (0, R.menu)("i18n:MAIN_MENU.component.renderers/Light"), 
s = (0, R.inspector)("packages://inspector/inspectors/comps/light.js"), o = (0, 
R.property)({
type: H
}), a = (0, R.property)({
type: W
}), n(c = r(c = (0, R.executeInEditMode)(c = s(c = (l = (S = A = (function(t) {
G(e, t);
V(e);
L(e, [ {
key: "type",
get: function() {
return this._type;
},
set: function(t) {
this._type = t;
var e = w.default.LIGHT_DIRECTIONAL;
t === H.POINT ? e = w.default.LIGHT_POINT : t === H.SPOT ? e = w.default.LIGHT_SPOT : t === H.AMBIENT && (e = w.default.LIGHT_AMBIENT);
this._light.setType(e);
}
}, {
key: "color",
get: function() {
return this._color;
},
set: function(t) {
this._color = t;
this._light.setColor(t.r / 255, t.g / 255, t.b / 255);
}
}, {
key: "intensity",
get: function() {
return this._intensity;
},
set: function(t) {
this._intensity = t;
this._light.setIntensity(t);
}
}, {
key: "range",
get: function() {
return this._range;
},
set: function(t) {
this._range = t;
this._light.setRange(t);
}
}, {
key: "spotAngle",
get: function() {
return this._spotAngle;
},
set: function(t) {
this._spotAngle = t;
this._light.setSpotAngle((0, E.toRadian)(t));
}
}, {
key: "spotExp",
get: function() {
return this._spotExp;
},
set: function(t) {
this._spotExp = t;
this._light.setSpotExp(t);
}
}, {
key: "shadowType",
get: function() {
return this._shadowType;
},
set: function(t) {
this._shadowType = t;
this._light.setShadowType(t);
}
}, {
key: "shadowResolution",
get: function() {
return this._shadowResolution;
},
set: function(t) {
this._shadowResolution = t;
this._light.setShadowResolution(t);
}
}, {
key: "shadowDarkness",
get: function() {
return this._shadowDarkness;
},
set: function(t) {
this._shadowDarkness = t;
this._light.setShadowDarkness(t);
}
}, {
key: "shadowMinDepth",
get: function() {
return this._shadowMinDepth;
},
set: function(t) {
this._shadowMinDepth = t;
this._light.setShadowMinDepth(t);
}
}, {
key: "shadowMaxDepth",
get: function() {
return this._shadowMaxDepth;
},
set: function(t) {
this._shadowMaxDepth = t;
this._light.setShadowMaxDepth(t);
}
}, {
key: "shadowFrustumSize",
get: function() {
return this._shadowFrustumSize;
},
set: function(t) {
this._shadowFrustumSize = t;
this._light.setShadowFrustumSize(t);
}
} ]);
function e() {
var e;
P(e = t.call(this) || this, "_type", u, F(e));
P(e, "_color", h, F(e));
P(e, "_intensity", f, F(e));
P(e, "_range", _, F(e));
P(e, "_spotAngle", d, F(e));
P(e, "_spotExp", p, F(e));
P(e, "_shadowType", m, F(e));
P(e, "_shadowResolution", y, F(e));
P(e, "_shadowDarkness", v, F(e));
P(e, "_shadowMinDepth", g, F(e));
P(e, "_shadowMaxDepth", b, F(e));
P(e, "_shadowFrustumSize", C, F(e));
P(e, "_shadowBias", x, F(e));
e._light = new j();
return e;
}
var i = e.prototype;
i.onLoad = function() {
this._light.setNode(this.node);
this.type = this._type;
this.color = this._color;
this.intensity = this._intensity;
this.range = this._range;
this.spotAngle = this._spotAngle;
this.spotExp = this._spotExp;
this.shadowType = this._shadowType;
this.shadowResolution = this._shadowResolution;
this.shadowDarkness = this._shadowDarkness;
this.shadowMaxDepth = this._shadowMaxDepth;
this.shadowFrustumSize = this._shadowFrustumSize;
this.shadowBias = this._shadowBias;
};
i.onEnable = function() {
M.default.scene.addLight(this._light);
};
i.onDisable = function() {
M.default.scene.removeLight(this._light);
};
return e;
})(D.default), A.Type = H, A.ShadowType = W, S), u = U(l.prototype, "_type", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return H.DIRECTIONAL;
}
}), h = U(l.prototype, "_color", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return T.default.WHITE;
}
}), f = U(l.prototype, "_intensity", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), _ = U(l.prototype, "_range", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1e3;
}
}), d = U(l.prototype, "_spotAngle", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 60;
}
}), p = U(l.prototype, "_spotExp", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), m = U(l.prototype, "_shadowType", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return W.NONE;
}
}), y = U(l.prototype, "_shadowResolution", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1024;
}
}), v = U(l.prototype, "_shadowDarkness", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return .5;
}
}), g = U(l.prototype, "_shadowMinDepth", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), b = U(l.prototype, "_shadowMaxDepth", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 4096;
}
}), C = U(l.prototype, "_shadowFrustumSize", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1024;
}
}), x = U(l.prototype, "_shadowBias", [ R.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 5e-4;
}
}), U(l.prototype, "type", [ o ], Object.getOwnPropertyDescriptor(l.prototype, "type"), l.prototype), 
U(l.prototype, "color", [ R.property ], Object.getOwnPropertyDescriptor(l.prototype, "color"), l.prototype), 
U(l.prototype, "intensity", [ R.property ], Object.getOwnPropertyDescriptor(l.prototype, "intensity"), l.prototype), 
U(l.prototype, "range", [ R.property ], Object.getOwnPropertyDescriptor(l.prototype, "range"), l.prototype), 
U(l.prototype, "spotAngle", [ R.property ], Object.getOwnPropertyDescriptor(l.prototype, "spotAngle"), l.prototype), 
U(l.prototype, "spotExp", [ R.property ], Object.getOwnPropertyDescriptor(l.prototype, "spotExp"), l.prototype), 
U(l.prototype, "shadowType", [ a ], Object.getOwnPropertyDescriptor(l.prototype, "shadowType"), l.prototype), 
U(l.prototype, "shadowResolution", [ R.property ], Object.getOwnPropertyDescriptor(l.prototype, "shadowResolution"), l.prototype), 
U(l.prototype, "shadowDarkness", [ R.property ], Object.getOwnPropertyDescriptor(l.prototype, "shadowDarkness"), l.prototype), 
U(l.prototype, "shadowMinDepth", [ R.property ], Object.getOwnPropertyDescriptor(l.prototype, "shadowMinDepth"), l.prototype), 
U(l.prototype, "shadowMaxDepth", [ R.property ], Object.getOwnPropertyDescriptor(l.prototype, "shadowMaxDepth"), l.prototype), 
U(l.prototype, "shadowFrustumSize", [ R.property ], Object.getOwnPropertyDescriptor(l.prototype, "shadowFrustumSize"), l.prototype), 
l)) || c) || c) || c) || c);
i.default = q;
cc.Light = q;
e.exports = i.default;
}), {
"../../renderer/enums": 353,
"../../renderer/scene/light": void 0,
"../components/CCComponent": 120,
"../platform/CCClassDecorator": 231,
"../platform/CCEnum": 232,
"../renderer/index": 262,
"../value-types": 328,
"../value-types/color": 327
} ],
27: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.Model",
extends: cc.Asset,
ctor: function() {
this._rootNode = null;
},
properties: {
_nodes: {
default: []
},
_precomputeJointMatrix: !1,
nodes: {
get: function() {
return this._nodes;
}
},
rootNode: {
get: function() {
return this._rootNode;
}
},
precomputeJointMatrix: {
get: function() {
return this._precomputeJointMatrix;
}
}
},
onLoad: function() {
var t = this._nodes;
this._rootNode = t[0];
for (var e = 0; e < t.length; e++) {
var i = t[e];
i.position = cc.v3.apply(this, i.position);
i.scale = cc.v3.apply(this, i.scale);
i.quat = cc.quat.apply(this, i.quat);
i.uniqueBindPose && (i.uniqueBindPose = cc.mat4.apply(this, i.uniqueBindPose));
var n = i.bindpose;
if (n) for (var r in n) n[r] = cc.mat4.apply(this, n[r]);
var s = i.children;
if (s) for (var o = 0; o < s.length; o++) s[o] = t[s[o]];
}
}
});
cc.Model = e.exports = n;
}), {} ],
28: [ (function(t, e, i) {
"use strict";
var n = s(t("../value-types/quat")), r = s(t("../value-types/vec3"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
var o = cc.quat(), a = cc.v3();
cc.Rotate3DTo = cc.Class({
name: "cc.Rotate3DTo",
extends: cc.ActionInterval,
ctor: function(t, e, i, n) {
this._startQuat = cc.quat();
this._dstQuat = cc.quat();
void 0 !== e && this.initWithDuration(t, e, i, n);
},
initWithDuration: function(t, e, i, r) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
var s = this._dstQuat;
if (e instanceof cc.Quat) s.set(e); else {
if (e instanceof cc.Vec3) {
i = e.y;
r = e.z;
e = e.x;
} else {
i = i || 0;
r = r || 0;
}
n.default.fromEuler(s, e, i, r);
}
return !0;
}
return !1;
},
clone: function() {
var t = new cc.Rotate3DTo();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._dstQuat);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
this._startQuat.set(t.quat);
},
reverse: function() {
cc.logID(1016);
},
update: function(t) {
t = this._computeEaseTime(t);
if (this.target) {
n.default.slerp(o, this._startQuat, this._dstQuat, t);
this.target.setRotation(o);
}
}
});
cc.rotate3DTo = function(t, e, i, n) {
return new cc.Rotate3DTo(t, e, i, n);
};
cc.Rotate3DBy = cc.Class({
name: "cc.Rotate3DBy",
extends: cc.ActionInterval,
ctor: function(t, e, i, n) {
this._startQuat = cc.quat();
this._dstQuat = cc.quat();
this._deltaAngle = cc.v3();
void 0 !== e && this.initWithDuration(t, e, i, n);
},
initWithDuration: function(t, e, i, n) {
if (cc.ActionInterval.prototype.initWithDuration.call(this, t)) {
if (e instanceof cc.Vec3) {
i = e.y;
n = e.z;
e = e.x;
} else {
i = i || 0;
n = n || 0;
}
r.default.set(this._deltaAngle, e, i, n);
return !0;
}
return !1;
},
clone: function() {
var t = new cc.Rotate3DBy();
this._cloneDecoration(t);
t.initWithDuration(this._duration, this._angle);
return t;
},
startWithTarget: function(t) {
cc.ActionInterval.prototype.startWithTarget.call(this, t);
var e = t.eulerAngles, i = this._deltaAngle;
n.default.fromEuler(this._dstQuat, e.x + i.x, e.y + i.y, e.z + i.z);
this._startQuat.set(t.quat);
},
update: (function() {
Math.PI;
return function(t) {
t = this._computeEaseTime(t);
if (this.target) {
n.default.slerp(o, this._startQuat, this._dstQuat, t);
this.target.setRotation(o);
}
};
})(),
reverse: function() {
var t = this._angle;
a.x = -t.x;
a.y = -t.y;
a.z = -t.z;
var e = new cc.Rotate3DBy(this._duration, a);
this._cloneDecoration(e);
this._reverseEaseList(e);
return e;
}
});
cc.rotate3DBy = function(t, e, i, n) {
return new cc.Rotate3DBy(t, e, i, n);
};
}), {
"../value-types/quat": 331,
"../value-types/vec3": 338
} ],
29: [ (function(t, e, i) {
"use strict";
t("./primitive");
t("./physics/exports/physics-builtin");
t("./physics/exports/physics-cannon");
t("./physics/exports/physics-framework");
t("./CCModel");
t("./skeleton/CCSkeleton");
t("./skeleton/CCSkeletonAnimationClip");
t("./actions");
t("./physics/framework/assets/physics-material");
t("./skeleton/CCSkeletonAnimation");
t("./skeleton/CCSkinnedMeshRenderer");
t("./skeleton/skinned-mesh-renderer");
t("./CCLightComponent");
t("./particle/particle-system-3d");
t("./particle/renderer/particle-system-3d-renderer");
}), {
"./CCLightComponent": 26,
"./CCModel": 27,
"./actions": 28,
"./particle/particle-system-3d": 45,
"./particle/renderer/particle-system-3d-renderer": 48,
"./physics/exports/physics-builtin": void 0,
"./physics/exports/physics-cannon": void 0,
"./physics/exports/physics-framework": void 0,
"./physics/framework/assets/physics-material": void 0,
"./primitive": 55,
"./skeleton/CCSkeleton": 64,
"./skeleton/CCSkeletonAnimation": 65,
"./skeleton/CCSkeletonAnimationClip": 66,
"./skeleton/CCSkinnedMeshRenderer": 67,
"./skeleton/skinned-mesh-renderer": 68
} ],
30: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l = t("../../../platform/CCClassDecorator"), u = t("../../../value-types"), h = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./gradient-range"));
function f(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function _(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var d = (n = (0, l.ccclass)("cc.ColorOvertimeModule"), r = (0, l.property)({
type: h.default
}), n(s = (o = (function() {
function t() {
f(this, "enable", a, this);
f(this, "color", c, this);
}
t.prototype.animate = function(t) {
if (this.enable) {
t.color.set(t.startColor);
t.color.multiply(this.color.evaluate(1 - t.remainingLifetime / t.startLifetime, (0, 
u.pseudoRandom)(t.randomSeed + 91041)));
}
};
return t;
})(), a = _(o.prototype, "enable", [ l.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), c = _(o.prototype, "color", [ r ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new h.default();
}
}), o)) || s);
i.default = d;
e.exports = i.default;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../value-types": 328,
"./gradient-range": 33
} ],
31: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = i.Mode = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y, v, g, b = t("../../../platform/CCClassDecorator"), C = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../platform/CCEnum")), x = t("../../../value-types"), A = t("../curve");
function S(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function w(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var T = (0, C.default)({
Constant: 0,
Curve: 1,
TwoCurves: 2,
TwoConstants: 3
});
i.Mode = T;
var E = (n = (0, b.ccclass)("cc.CurveRange"), r = (0, b.property)({
type: T
}), s = (0, b.property)({
type: A.AnimationCurve
}), o = (0, b.property)({
type: A.AnimationCurve
}), a = (0, b.property)({
type: A.AnimationCurve
}), n(c = (l = (g = v = (function() {
function t() {
S(this, "mode", u, this);
S(this, "curve", h, this);
S(this, "curveMin", f, this);
S(this, "curveMax", _, this);
S(this, "constant", d, this);
S(this, "constantMin", p, this);
S(this, "constantMax", m, this);
S(this, "multiplier", y, this);
}
var e = t.prototype;
e.evaluate = function(t, e) {
switch (this.mode) {
case T.Constant:
return this.constant;

case T.Curve:
return this.curve.evaluate(t) * this.multiplier;

case T.TwoCurves:
return (0, x.lerp)(this.curveMin.evaluate(t), this.curveMax.evaluate(t), e) * this.multiplier;

case T.TwoConstants:
return (0, x.lerp)(this.constantMin, this.constantMax, e);
}
};
e.getMax = function() {
switch (this.mode) {
case T.Constant:
return this.constant;

case T.Curve:
return this.multiplier;

case T.TwoConstants:
return this.constantMax;

case T.TwoCurves:
return this.multiplier;
}
return 0;
};
return t;
})(), v.Mode = T, g), u = w(l.prototype, "mode", [ r ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return T.Constant;
}
}), h = w(l.prototype, "curve", [ s ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new A.AnimationCurve();
}
}), f = w(l.prototype, "curveMin", [ o ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new A.AnimationCurve();
}
}), _ = w(l.prototype, "curveMax", [ a ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new A.AnimationCurve();
}
}), d = w(l.prototype, "constant", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), p = w(l.prototype, "constantMin", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), m = w(l.prototype, "constantMax", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), y = w(l.prototype, "multiplier", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), l)) || c);
i.default = E;
cc.CurveRange = E;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../platform/CCEnum": 232,
"../../../value-types": 328,
"../curve": 41
} ],
32: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p = t("../../../platform/CCClassDecorator"), m = t("../../../value-types"), y = t("../enum"), v = t("../particle-general-function"), g = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./curve-range"));
function b(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function C(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var x = cc.v3(), A = (n = (0, p.ccclass)("cc.ForceOvertimeModule"), r = (0, p.property)({
type: y.Space
}), s = (0, p.property)({
type: g.default,
range: [ -1, 1 ]
}), o = (0, p.property)({
type: g.default,
range: [ -1, 1 ]
}), a = (0, p.property)({
type: g.default,
range: [ -1, 1 ],
displayOrder: 4
}), n(c = (l = (function() {
function t() {
b(this, "enable", u, this);
b(this, "space", h, this);
b(this, "x", f, this);
b(this, "y", _, this);
b(this, "z", d, this);
this.randomized = !1;
this.rotation = null;
this.needTransform = !1;
this.rotation = new m.Quat();
this.needTransform = !1;
}
var e = t.prototype;
e.update = function(t, e) {
this.needTransform = (0, v.calculateTransform)(t, this.space, e, this.rotation);
};
e.animate = function(t, e) {
var i = 1 - t.remainingLifetime / t.startLifetime, n = m.Vec3.set(x, this.x.evaluate(i, (0, 
m.pseudoRandom)(t.randomSeed + 212165)), this.y.evaluate(i, (0, m.pseudoRandom)(t.randomSeed + 212165)), this.z.evaluate(i, (0, 
m.pseudoRandom)(t.randomSeed + 212165)));
this.needTransform && m.Vec3.transformQuat(n, n, this.rotation);
m.Vec3.scaleAndAdd(t.velocity, t.velocity, n, e);
};
return t;
})(), u = C(l.prototype, "enable", [ p.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), h = C(l.prototype, "space", [ r ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return y.Space.Local;
}
}), f = C(l.prototype, "x", [ s ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new g.default();
}
}), _ = C(l.prototype, "y", [ o ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new g.default();
}
}), d = C(l.prototype, "z", [ a ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new g.default();
}
}), l)) || c);
i.default = A;
e.exports = i.default;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../value-types": 328,
"../enum": 43,
"../particle-general-function": 44,
"./curve-range": 31
} ],
33: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y, v, g, b = t("../../../platform/CCClassDecorator"), C = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../platform/CCEnum")), x = t("./gradient");
function A(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function S(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function w(t, e, i) {
e && S(t.prototype, e);
i && S(t, i);
return t;
}
function T(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var E = (0, C.default)({
Color: 0,
Gradient: 1,
TwoColors: 2,
TwoGradients: 3,
RandomColor: 4
}), M = (n = (0, b.ccclass)("cc.GradientRange"), r = (0, b.property)({
type: E
}), s = (0, b.property)({
type: x.Gradient
}), o = (0, b.property)({
type: x.Gradient
}), a = (0, b.property)({
type: x.Gradient
}), n(c = (l = (g = v = (function() {
function t() {
A(this, "_mode", u, this);
A(this, "_color", h, this);
A(this, "color", f, this);
A(this, "colorMin", _, this);
A(this, "colorMax", d, this);
A(this, "gradient", p, this);
A(this, "gradientMin", m, this);
A(this, "gradientMax", y, this);
}
t.prototype.evaluate = function(t, e) {
switch (this._mode) {
case E.Color:
return this.color;

case E.TwoColors:
this.colorMin.lerp(this.colorMax, e, this._color);
return this._color;

case E.RandomColor:
return this.gradient.randomColor();

case E.Gradient:
return this.gradient.evaluate(t);

case E.TwoGradients:
this.gradientMin.evaluate(t).lerp(this.gradientMax.evaluate(t), e, this._color);
return this._color;

default:
return this.color;
}
};
w(t, [ {
key: "mode",
get: function() {
return this._mode;
},
set: function(t) {
0;
this._mode = t;
}
} ]);
return t;
})(), v.Mode = E, g), u = T(l.prototype, "_mode", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return E.Color;
}
}), T(l.prototype, "mode", [ r ], Object.getOwnPropertyDescriptor(l.prototype, "mode"), l.prototype), 
h = T(l.prototype, "_color", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return cc.Color.WHITE.clone();
}
}), f = T(l.prototype, "color", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return cc.Color.WHITE.clone();
}
}), _ = T(l.prototype, "colorMin", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return cc.Color.WHITE.clone();
}
}), d = T(l.prototype, "colorMax", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return cc.Color.WHITE.clone();
}
}), p = T(l.prototype, "gradient", [ s ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new x.Gradient();
}
}), m = T(l.prototype, "gradientMin", [ o ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new x.Gradient();
}
}), y = T(l.prototype, "gradientMax", [ a ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new x.Gradient();
}
}), l)) || c);
i.default = M;
cc.GradientRange = M;
e.exports = i.default;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../platform/CCEnum": 232,
"./gradient": 34
} ],
34: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.Gradient = i.AlphaKey = i.ColorKey = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y, v, g, b, C, x = t("../../../platform/CCClassDecorator"), A = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../platform/CCEnum")), S = t("../../../value-types");
function w(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function T(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var E = (0, A.default)({
Blend: 0,
Fixed: 1
}), M = (0, x.ccclass)("cc.ColorKey")(n = (r = function() {
w(this, "color", s, this);
w(this, "time", o, this);
}, s = T(r.prototype, "color", [ x.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return cc.Color.WHITE.clone();
}
}), o = T(r.prototype, "time", [ x.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), r)) || n;
i.ColorKey = M;
var B = (0, x.ccclass)("cc.AlphaKey")(a = (c = function() {
w(this, "alpha", l, this);
w(this, "time", u, this);
}, l = T(c.prototype, "alpha", [ x.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), u = T(c.prototype, "time", [ x.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), c)) || a;
i.AlphaKey = B;
var D = (h = (0, x.ccclass)("cc.Gradient"), f = (0, x.property)({
type: [ M ]
}), _ = (0, x.property)({
type: [ B ]
}), d = (0, x.property)({
type: E
}), h(p = (m = (C = b = (function() {
function t() {
w(this, "colorKeys", y, this);
w(this, "alphaKeys", v, this);
w(this, "mode", g, this);
this._color = null;
this._color = cc.Color.WHITE.clone();
}
var e = t.prototype;
e.setKeys = function(t, e) {
this.colorKeys = t;
this.alphaKeys = e;
};
e.sortKeys = function() {
this.colorKeys.length > 1 && this.colorKeys.sort((function(t, e) {
return t.time - e.time;
}));
this.alphaKeys.length > 1 && this.alphaKeys.sort((function(t, e) {
return t.time - e.time;
}));
};
e.evaluate = function(t) {
this.getRGB(t);
this._color._fastSetA(this.getAlpha(t));
return this._color;
};
e.randomColor = function() {
var t = this.colorKeys[Math.trunc(Math.random() * this.colorKeys.length)], e = this.alphaKeys[Math.trunc(Math.random() * this.alphaKeys.length)];
this._color.set(t.color);
this._color._fastSetA(e.alpha);
return this._color;
};
e.getRGB = function(t) {
if (!(this.colorKeys.length > 1)) {
if (1 === this.colorKeys.length) {
this._color.set(this.colorKeys[0].color);
return this._color;
}
this._color.set(cc.Color.WHITE);
return this._color;
}
t = (0, S.repeat)(t, 1);
for (var e = 1; e < this.colorKeys.length; ++e) {
var i = this.colorKeys[e - 1].time, n = this.colorKeys[e].time;
if (t >= i && t < n) {
if (this.mode === E.Fixed) return this.colorKeys[e].color;
var r = (t - i) / (n - i);
this.colorKeys[e - 1].color.lerp(this.colorKeys[e].color, r, this._color);
return this._color;
}
}
var s = this.colorKeys.length - 1;
t < this.colorKeys[0].time ? cc.Color.BLACK.lerp(this.colorKeys[0].color, t / this.colorKeys[0].time, this._color) : t > this.colorKeys[s].time && this.colorKeys[s].color.lerp(cc.Color.BLACK, (t - this.colorKeys[s].time) / (1 - this.colorKeys[s].time), this._color);
};
e.getAlpha = function(t) {
if (!(this.alphaKeys.length > 1)) return 1 === this.alphaKeys.length ? this.alphaKeys[0].alpha : 255;
t = (0, S.repeat)(t, 1);
for (var e = 1; e < this.alphaKeys.length; ++e) {
var i = this.alphaKeys[e - 1].time, n = this.alphaKeys[e].time;
if (t >= i && t < n) {
if (this.mode === E.Fixed) return this.alphaKeys[e].alpha;
var r = (t - i) / (n - i);
return (0, S.lerp)(this.alphaKeys[e - 1].alpha, this.alphaKeys[e].alpha, r);
}
}
var s = this.alphaKeys.length - 1;
return t < this.alphaKeys[0].time ? (0, S.lerp)(255, this.alphaKeys[0].alpha, t / this.alphaKeys[0].time) : t > this.alphaKeys[s].time ? (0, 
S.lerp)(this.alphaKeys[s].alpha, 255, (t - this.alphaKeys[s].time) / (1 - this.alphaKeys[s].time)) : void 0;
};
return t;
})(), b.Mode = E, C), y = T(m.prototype, "colorKeys", [ f ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new Array();
}
}), v = T(m.prototype, "alphaKeys", [ _ ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new Array();
}
}), g = T(m.prototype, "mode", [ d ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return E.Blend;
}
}), m)) || p);
i.Gradient = D;
cc.ColorKey = M;
cc.AlphaKey = B;
cc.Gradient = D;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../platform/CCEnum": 232,
"../../../value-types": 328
} ],
35: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y, v, g = t("../../../platform/CCClassDecorator"), b = t("../../../value-types"), C = t("../enum"), x = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./curve-range"));
function A(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function S(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var w = cc.v3(), T = cc.v3();
function E(t, e, i) {
var n = Math.sign(t), r = Math.abs(t);
r > e && (r = (0, b.lerp)(r, e, i));
return r * n;
}
var M = (n = (0, g.ccclass)("cc.LimitVelocityOvertimeModule"), r = (0, g.property)({
type: C.Space
}), s = (0, g.property)({
type: x.default,
range: [ -1, 1 ]
}), o = (0, g.property)({
type: x.default,
range: [ -1, 1 ]
}), a = (0, g.property)({
type: x.default,
range: [ -1, 1 ]
}), c = (0, g.property)({
type: x.default,
range: [ -1, 1 ]
}), n(l = (u = (function() {
function t() {
A(this, "enable", h, this);
A(this, "space", f, this);
A(this, "separateAxes", _, this);
A(this, "limit", d, this);
A(this, "limitX", p, this);
A(this, "limitY", m, this);
A(this, "limitZ", y, this);
A(this, "dampen", v, this);
this.drag = null;
this.multiplyDragByParticleSize = !1;
this.multiplyDragByParticleVelocity = !1;
this.rotation = null;
this.needTransform = !1;
this.rotation = new b.Quat();
this.needTransform = !1;
}
var e = t.prototype;
e.update = function(t, e) {
this.needTransform = calculateTransform(t, this.space, e, this.rotation);
};
e.animate = function(t) {
var e = 1 - t.remainingLifetime / t.startLifetime, i = w;
if (this.separateAxes) {
b.Vec3.set(T, this.limitX.evaluate(e, (0, b.pseudoRandom)(t.randomSeed + 23541)), this.limitY.evaluate(e, (0, 
b.pseudoRandom)(t.randomSeed + 23541)), this.limitZ.evaluate(e, (0, b.pseudoRandom)(t.randomSeed + 23541)));
this.needTransform && b.Vec3.transformQuat(T, T, this.rotation);
b.Vec3.set(i, E(t.ultimateVelocity.x, T.x, this.dampen), E(t.ultimateVelocity.y, T.y, this.dampen), E(t.ultimateVelocity.z, T.z, this.dampen));
} else {
b.Vec3.normalize(i, t.ultimateVelocity);
b.Vec3.scale(i, i, E(t.ultimateVelocity.len(), this.limit.evaluate(e, (0, b.pseudoRandom)(t.randomSeed + 23541)), this.dampen));
}
b.Vec3.copy(t.ultimateVelocity, i);
};
return t;
})(), h = S(u.prototype, "enable", [ g.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), f = S(u.prototype, "space", [ r ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return C.Space.Local;
}
}), _ = S(u.prototype, "separateAxes", [ g.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), d = S(u.prototype, "limit", [ s ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new x.default();
}
}), p = S(u.prototype, "limitX", [ o ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new x.default();
}
}), m = S(u.prototype, "limitY", [ a ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new x.default();
}
}), y = S(u.prototype, "limitZ", [ c ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new x.default();
}
}), v = S(u.prototype, "dampen", [ g.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 3;
}
}), u)) || l);
i.default = M;
e.exports = i.default;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../value-types": 328,
"../enum": 43,
"./curve-range": 31
} ],
36: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d = t("../../../platform/CCClassDecorator"), p = t("../../../value-types"), m = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./curve-range"));
function y(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function v(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function g(t, e, i) {
e && v(t.prototype, e);
i && v(t, i);
return t;
}
function b(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var C = (n = (0, d.ccclass)("cc.RotationOvertimeModule"), r = (0, d.property)({
type: m.default,
range: [ -1, 1 ],
radian: !0
}), s = (0, d.property)({
type: m.default,
range: [ -1, 1 ],
radian: !0
}), o = (0, d.property)({
type: m.default,
range: [ -1, 1 ],
radian: !0
}), n(a = (c = (function() {
g(t, [ {
key: "separateAxes",
get: function() {
return this._separateAxes;
},
set: function(t) {
t ? console.error("rotation overtime separateAxes is not supported!") : this._separateAxes = t;
}
} ]);
function t() {
y(this, "enable", l, this);
y(this, "_separateAxes", u, this);
y(this, "x", h, this);
y(this, "y", f, this);
y(this, "z", _, this);
}
t.prototype.animate = function(t, e) {
var i = 1 - t.remainingLifetime / t.startLifetime;
if (this._separateAxes) {
var n = (0, p.pseudoRandom)(t.randomSeed + 125292);
t.rotation.x += this.x.evaluate(i, n) * e;
t.rotation.y += this.y.evaluate(i, n) * e;
t.rotation.z += this.z.evaluate(i, n) * e;
} else t.rotation.x += this.z.evaluate(i, (0, p.pseudoRandom)(t.randomSeed + 125292)) * e;
};
return t;
})(), l = b(c.prototype, "enable", [ d.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), u = b(c.prototype, "_separateAxes", [ d.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), b(c.prototype, "separateAxes", [ d.property ], Object.getOwnPropertyDescriptor(c.prototype, "separateAxes"), c.prototype), 
h = b(c.prototype, "x", [ r ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new m.default();
}
}), f = b(c.prototype, "y", [ s ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new m.default();
}
}), _ = b(c.prototype, "z", [ o ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new m.default();
}
}), c)) || a);
i.default = C;
e.exports = i.default;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../value-types": 328,
"./curve-range": 31
} ],
37: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m = t("../../../platform/CCClassDecorator"), y = t("../../../value-types"), v = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./curve-range"));
function g(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function b(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var C = (n = (0, m.ccclass)("cc.SizeOvertimeModule"), r = (0, m.property)({
type: v.default
}), s = (0, m.property)({
type: v.default
}), o = (0, m.property)({
type: v.default
}), a = (0, m.property)({
type: v.default
}), n(c = (l = (function() {
function t() {
g(this, "enable", u, this);
g(this, "separateAxes", h, this);
g(this, "size", f, this);
g(this, "x", _, this);
g(this, "y", d, this);
g(this, "z", p, this);
}
t.prototype.animate = function(t) {
if (this.separateAxes) {
var e = 1 - t.remainingLifetime / t.startLifetime, i = (0, y.pseudoRandom)(t.randomSeed + 39825);
t.size.x = t.startSize.x * this.x.evaluate(e, i);
t.size.y = t.startSize.y * this.y.evaluate(e, i);
t.size.z = t.startSize.z * this.z.evaluate(e, i);
} else y.Vec3.scale(t.size, t.startSize, this.size.evaluate(1 - t.remainingLifetime / t.startLifetime, (0, 
y.pseudoRandom)(t.randomSeed + 39825)));
};
return t;
})(), u = b(l.prototype, "enable", [ m.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), h = b(l.prototype, "separateAxes", [ m.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), f = b(l.prototype, "size", [ r ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new v.default();
}
}), _ = b(l.prototype, "x", [ s ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new v.default();
}
}), d = b(l.prototype, "y", [ o ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new v.default();
}
}), p = b(l.prototype, "z", [ a ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new v.default();
}
}), l)) || c);
i.default = C;
e.exports = i.default;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../value-types": 328,
"./curve-range": 31
} ],
38: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y, v, g, b = t("../../../platform/CCClassDecorator"), C = S(t("../../../platform/CCEnum")), x = t("../../../value-types"), A = S(t("./curve-range"));
function S(t) {
return t && t.__esModule ? t : {
default: t
};
}
function w(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function T(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function E(t, e, i) {
e && T(t.prototype, e);
i && T(t, i);
return t;
}
function M(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var B = (0, C.default)({
Grid: 0
}), D = (0, C.default)({
WholeSheet: 0,
SingleRow: 1
}), R = (n = (0, b.ccclass)("cc.TextureAnimationModule"), r = (0, b.property)({
type: B
}), s = (0, b.property)({
type: D
}), o = (0, b.property)({
type: A.default
}), a = (0, b.property)({
type: A.default
}), n(c = (l = (function() {
function t() {
w(this, "_enable", u, this);
w(this, "_mode", h, this);
w(this, "numTilesX", f, this);
w(this, "numTilesY", _, this);
w(this, "animation", d, this);
w(this, "randomRow", p, this);
w(this, "rowIndex", m, this);
w(this, "frameOverTime", y, this);
w(this, "startFrame", v, this);
w(this, "cycleCount", g, this);
this._flipU = 0;
this._flipV = 0;
this._uvChannelMask = -1;
this.ps = null;
}
var e = t.prototype;
e.onInit = function(t) {
this.ps = t;
};
e.init = function(t) {
t.startRow = Math.floor(Math.random() * this.numTilesY);
};
e.animate = function(t) {
var e = 1 - t.remainingLifetime / t.startLifetime, i = this.startFrame.evaluate(e, (0, 
x.pseudoRandom)(t.randomSeed + 90794)) / (this.numTilesX * this.numTilesY);
if (this.animation === D.WholeSheet) t.frameIndex = (0, x.repeat)(this.cycleCount * (this.frameOverTime.evaluate(e, (0, 
x.pseudoRandom)(t.randomSeed + 90794)) + i), 1); else if (this.animation === D.SingleRow) {
var n = 1 / this.numTilesY;
if (this.randomRow) {
var r = (0, x.repeat)(this.cycleCount * (this.frameOverTime.evaluate(e, (0, x.pseudoRandom)(t.randomSeed + 90794)) + i), 1), s = t.startRow * n, o = s + n;
t.frameIndex = (0, x.lerp)(s, o, r);
} else {
var a = this.rowIndex * n, c = a + n;
t.frameIndex = (0, x.lerp)(a, c, (0, x.repeat)(this.cycleCount * (this.frameOverTime.evaluate(e, (0, 
x.pseudoRandom)(t.randomSeed + 90794)) + i), 1));
}
}
};
E(t, [ {
key: "enable",
get: function() {
return this._enable;
},
set: function(t) {
this._enable = t;
this.ps._assembler._updateMaterialParams();
}
}, {
key: "mode",
get: function() {
return this._mode;
},
set: function(t) {
t === B.Grid || console.error("particle texture animation's sprites is not supported!");
}
}, {
key: "flipU",
get: function() {
return this._flipU;
},
set: function(t) {
console.error("particle texture animation's flipU is not supported!");
}
}, {
key: "flipV",
get: function() {
return this._flipV;
},
set: function(t) {
console.error("particle texture animation's flipV is not supported!");
}
}, {
key: "uvChannelMask",
get: function() {
return this._uvChannelMask;
},
set: function(t) {
console.error("particle texture animation's uvChannelMask is not supported!");
}
} ]);
return t;
})(), u = M(l.prototype, "_enable", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), M(l.prototype, "enable", [ b.property ], Object.getOwnPropertyDescriptor(l.prototype, "enable"), l.prototype), 
h = M(l.prototype, "_mode", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return B.Grid;
}
}), M(l.prototype, "mode", [ r ], Object.getOwnPropertyDescriptor(l.prototype, "mode"), l.prototype), 
f = M(l.prototype, "numTilesX", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), _ = M(l.prototype, "numTilesY", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), d = M(l.prototype, "animation", [ s ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return D.WholeSheet;
}
}), p = M(l.prototype, "randomRow", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), m = M(l.prototype, "rowIndex", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), y = M(l.prototype, "frameOverTime", [ o ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new A.default();
}
}), v = M(l.prototype, "startFrame", [ a ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new A.default();
}
}), g = M(l.prototype, "cycleCount", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), M(l.prototype, "flipU", [ b.property ], Object.getOwnPropertyDescriptor(l.prototype, "flipU"), l.prototype), 
M(l.prototype, "flipV", [ b.property ], Object.getOwnPropertyDescriptor(l.prototype, "flipV"), l.prototype), 
M(l.prototype, "uvChannelMask", [ b.property ], Object.getOwnPropertyDescriptor(l.prototype, "uvChannelMask"), l.prototype), 
l)) || c);
i.default = R;
e.exports = i.default;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../platform/CCEnum": 232,
"../../../value-types": 328,
"./curve-range": 31
} ],
39: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y = t("../../../platform/CCClassDecorator"), v = t("../../../value-types"), g = t("../enum"), b = t("../particle-general-function"), C = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./curve-range"));
function x(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function A(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var S = cc.v3(), w = (n = (0, y.ccclass)("cc.VelocityOvertimeModule"), r = (0, y.property)({
type: g.Space
}), s = (0, y.property)({
type: C.default,
range: [ -1, 1 ]
}), o = (0, y.property)({
type: C.default,
range: [ -1, 1 ]
}), a = (0, y.property)({
type: C.default,
range: [ -1, 1 ]
}), c = (0, y.property)({
type: C.default,
range: [ -1, 1 ]
}), n(l = (u = (function() {
function t() {
x(this, "enable", h, this);
x(this, "space", f, this);
x(this, "x", _, this);
x(this, "y", d, this);
x(this, "z", p, this);
x(this, "speedModifier", m, this);
this.rotation = null;
this.needTransform = !1;
this.rotation = new v.Quat();
this.speedModifier.constant = 1;
this.needTransform = !1;
}
var e = t.prototype;
e.update = function(t, e) {
this.needTransform = (0, b.calculateTransform)(t, this.space, e, this.rotation);
};
e.animate = function(t) {
var e = 1 - t.remainingLifetime / t.startLifetime, i = v.Vec3.set(S, this.x.evaluate(e, (0, 
v.pseudoRandom)(t.randomSeed + 197866)), this.y.evaluate(e, (0, v.pseudoRandom)(t.randomSeed + 197866)), this.z.evaluate(e, (0, 
v.pseudoRandom)(t.randomSeed + 197866)));
this.needTransform && v.Vec3.transformQuat(i, i, this.rotation);
v.Vec3.add(t.animatedVelocity, t.animatedVelocity, i);
v.Vec3.add(t.ultimateVelocity, t.velocity, t.animatedVelocity);
v.Vec3.scale(t.ultimateVelocity, t.ultimateVelocity, this.speedModifier.evaluate(1 - t.remainingLifetime / t.startLifetime, (0, 
v.pseudoRandom)(t.randomSeed + 197866)));
};
return t;
})(), h = A(u.prototype, "enable", [ y.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), f = A(u.prototype, "space", [ r ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return g.Space.Local;
}
}), _ = A(u.prototype, "x", [ s ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new C.default();
}
}), d = A(u.prototype, "y", [ o ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new C.default();
}
}), p = A(u.prototype, "z", [ a ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new C.default();
}
}), m = A(u.prototype, "speedModifier", [ c ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new C.default();
}
}), u)) || l);
i.default = w;
e.exports = i.default;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../value-types": 328,
"../enum": 43,
"../particle-general-function": 44,
"./curve-range": 31
} ],
40: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _ = t("../../platform/CCClassDecorator"), d = t("../../value-types"), p = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./animator/curve-range"));
function m(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function y(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function v(t, e, i) {
e && y(t.prototype, e);
i && y(t, i);
return t;
}
function g(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var b = (n = (0, _.ccclass)("cc.Burst"), r = (0, _.property)({
type: p.default
}), n(s = (o = (function() {
v(t, [ {
key: "time",
get: function() {
return this._time;
},
set: function(t) {
this._time = t;
this._curTime = t;
}
}, {
key: "repeatCount",
get: function() {
return this._repeatCount;
},
set: function(t) {
this._repeatCount = t;
this._remainingCount = t;
}
} ]);
function t() {
m(this, "_time", a, this);
m(this, "minCount", c, this);
m(this, "maxCount", l, this);
m(this, "_repeatCount", u, this);
m(this, "repeatInterval", h, this);
m(this, "count", f, this);
this._remainingCount = 0;
this._curTime = 0;
this._remainingCount = 0;
this._curTime = 0;
}
var e = t.prototype;
e.update = function(t, e) {
if (0 === this._remainingCount) {
this._remainingCount = this._repeatCount;
this._curTime = this._time;
}
if (this._remainingCount > 0) {
var i = (0, d.repeat)(t._time - t.startDelay.evaluate(0, 1), t.duration) - e;
i = i > 0 ? i : 0;
var n = (0, d.repeat)(t.time - t.startDelay.evaluate(0, 1), t.duration);
if (this._curTime >= i && this._curTime < n) {
t.emit(this.count.evaluate(this._curTime / t.duration, 1), e - (n - this._curTime));
this._curTime += this.repeatInterval;
--this._remainingCount;
}
}
};
e.getMaxCount = function(t) {
return this.count.getMax() * Math.min(Math.ceil(t.duration / this.repeatInterval), this.repeatCount);
};
return t;
})(), a = g(o.prototype, "_time", [ _.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), g(o.prototype, "time", [ _.property ], Object.getOwnPropertyDescriptor(o.prototype, "time"), o.prototype), 
c = g(o.prototype, "minCount", [ _.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 30;
}
}), l = g(o.prototype, "maxCount", [ _.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 30;
}
}), u = g(o.prototype, "_repeatCount", [ _.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), g(o.prototype, "repeatCount", [ _.property ], Object.getOwnPropertyDescriptor(o.prototype, "repeatCount"), o.prototype), 
h = g(o.prototype, "repeatInterval", [ _.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), f = g(o.prototype, "count", [ r ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new p.default();
}
}), o)) || s);
i.default = b;
e.exports = i.default;
}), {
"../../platform/CCClassDecorator": 231,
"../../value-types": 328,
"./animator/curve-range": 31
} ],
41: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.evalOptCurve = T;
i.AnimationCurve = i.OptimizedKey = i.Keyframe = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y, v = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../platform/CCEnum")), g = t("../../value-types"), b = t("../../platform/CCClassDecorator");
function C(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function x(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var A = (0, v.default)({
Default: 0,
Once: 1,
Loop: 2,
PingPong: 3,
ClampForever: 4
}), S = (0, b.ccclass)("cc.Keyframe")(n = (r = function(t, e, i, n) {
C(this, "time", s, this);
C(this, "value", o, this);
C(this, "inTangent", a, this);
C(this, "outTangent", c, this);
this.time = t || 0;
this.value = e || 0;
this.inTangent = i || 0;
this.outTangent = n || 0;
}, s = x(r.prototype, "time", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), o = x(r.prototype, "value", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), a = x(r.prototype, "inTangent", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), c = x(r.prototype, "outTangent", [ b.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), r)) || n;
i.Keyframe = S;
var w = (function() {
function t() {
this.index = 0;
this.time = 0;
this.endTime = 0;
this.coefficient = null;
this.index = -1;
this.time = 0;
this.endTime = 0;
this.coefficient = new Float32Array(4);
}
t.prototype.evaluate = function(t) {
return T(t - this.time, this.coefficient);
};
return t;
})();
i.OptimizedKey = w;
function T(t, e) {
return t * (t * (t * e[0] + e[1]) + e[2]) + e[3];
}
var E = new S(0, 1, 0, 0), M = new S(1, 1, 0, 0), B = (l = (0, b.ccclass)("cc.AnimationCurve"), 
u = (0, b.property)({
default: [],
type: [ S ]
}), h = (0, b.property)({
type: cc.Enum(A),
visible: !1
}), f = (0, b.property)({
type: cc.Enum(A),
visible: !1
}), l(_ = (d = (function() {
function t(t) {
void 0 === t && (t = null);
C(this, "keyFrames", p, this);
C(this, "preWrapMode", m, this);
C(this, "postWrapMode", y, this);
this.cachedKey = null;
if (t) this.keyFrames = t; else {
this.keyFrames.push(E);
this.keyFrames.push(M);
}
this.cachedKey = new w();
}
var e = t.prototype;
e.addKey = function(t) {
null == this.keyFrames && (this.keyFrames = []);
this.keyFrames.push(t);
};
e.evaluate_slow = function(t) {
var e = t, i = t < 0 ? this.preWrapMode : this.postWrapMode, n = this.keyFrames[0].time, r = this.keyFrames[this.keyFrames.length - 1].time;
switch (i) {
case A.Loop:
e = (0, g.repeat)(t - n, r - n) + n;
break;

case A.PingPong:
e = (0, g.pingPong)(t - n, r - n) + n;
break;

case A.ClampForever:
e = (0, g.clamp)(t, n, r);
}
var s = 0;
if (e > this.keyFrames[0].time) if (e >= this.keyFrames[this.keyFrames.length - 1].time) s = this.keyFrames.length - 2; else for (var o = 0; o < this.keyFrames.length - 1; o++) if (e >= this.keyFrames[0].time && e <= this.keyFrames[o + 1].time) {
s = o;
break;
}
var a = this.keyFrames[s], c = this.keyFrames[s + 1], l = (0, g.inverseLerp)(a.time, c.time, e), u = c.time - a.time, h = a.outTangent * u, f = c.inTangent * u, _ = l * l, d = _ * l, p = d - 2 * _ + l, m = d - _, y = -2 * d + 3 * _;
return (2 * d - 3 * _ + 1) * a.value + p * h + m * f + y * c.value;
};
e.evaluate = function(t) {
var e = t, i = t < 0 ? this.preWrapMode : this.postWrapMode, n = this.keyFrames[0].time, r = this.keyFrames[this.keyFrames.length - 1].time;
switch (i) {
case A.Loop:
e = (0, g.repeat)(t - n, r - n) + n;
break;

case A.PingPong:
e = (0, g.pingPong)(t - n, r - n) + n;
break;

case A.ClampForever:
e = (0, g.clamp)(t, n, r);
}
if (e >= this.cachedKey.time && e < this.cachedKey.endTime) return this.cachedKey.evaluate(e);
var s = this.findIndex(this.cachedKey, e), o = s + 1;
o === this.keyFrames.length && (o -= 1);
this.calcOptimizedKey(this.cachedKey, s, o);
return this.cachedKey.evaluate(e);
};
e.calcOptimizedKey = function(t, e, i) {
var n = this.keyFrames[e], r = this.keyFrames[i];
t.index = e;
t.time = n.time;
t.endTime = r.time;
var s = r.time - n.time, o = r.value - n.value, a = 1 / (s * s), c = n.outTangent * s, l = r.inTangent * s;
t.coefficient[0] = (c + l - o - o) * a / s;
t.coefficient[1] = (o + o + o - c - c - l) * a;
t.coefficient[2] = n.outTangent;
t.coefficient[3] = n.value;
};
e.findIndex = function(t, e) {
var i = t.index;
if (-1 !== i) {
if (e > this.keyFrames[i].time) for (var n = 0; n < 3; n++) {
var r = i + n;
if (r + 1 < this.keyFrames.length && this.keyFrames[r + 1].time > e) return r;
} else for (var s = 0; s < 3; s++) {
var o = i - s;
if (o >= 0 && this.keyFrames[o - 1].time <= e) return o - 1;
}
}
for (var a = 0, c = this.keyFrames.length, l = Math.floor((a + c) / 2); c - a > 1; ) {
this.keyFrames[l].time >= e ? c = l : a = l + 1;
l = Math.floor((a + c) / 2);
}
return a;
};
return t;
})(), p = x(d.prototype, "keyFrames", [ u ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new Array();
}
}), m = x(d.prototype, "preWrapMode", [ h ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return A.Loop;
}
}), y = x(d.prototype, "postWrapMode", [ f ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return A.Loop;
}
}), d)) || _);
i.AnimationCurve = B;
cc.Keyframe = S;
cc.AnimationCurve = B;
}), {
"../../platform/CCClassDecorator": 231,
"../../platform/CCEnum": 232,
"../../value-types": 328
} ],
42: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y, v, g, b, C, x, A, S, w, T, E, M, B = t("../../../platform/CCClassDecorator"), D = t("../../../value-types"), R = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../animator/curve-range")), I = t("../particle-general-function"), P = t("../enum");
function O(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function L(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function V(t, e, i) {
e && L(t.prototype, e);
i && L(t, i);
return t;
}
function N(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var F = new D.Vec3(0, 0, 0), z = new Array(), k = new D.Vec3(.5, .5, .5), G = (n = (0, 
B.ccclass)("cc.ShapeModule"), r = (0, B.property)({
type: P.ShapeType
}), s = (0, B.property)({
type: P.EmitLocation
}), o = (0, B.property)({
type: P.ArcMode
}), a = (0, B.property)({
type: R.default
}), n(c = (l = (function() {
V(t, [ {
key: "shapeType",
get: function() {
return this._shapeType;
},
set: function(t) {
this._shapeType = t;
switch (this._shapeType) {
case P.ShapeType.Box:
this.emitFrom === P.EmitLocation.Base && (this.emitFrom = P.EmitLocation.Volume);
break;

case P.ShapeType.Cone:
this.emitFrom === P.EmitLocation.Edge && (this.emitFrom = P.EmitLocation.Base);
break;

case P.ShapeType.Sphere:
case P.ShapeType.Hemisphere:
this.emitFrom !== P.EmitLocation.Base && this.emitFrom !== P.EmitLocation.Edge || (this.emitFrom = P.EmitLocation.Volume);
}
}
}, {
key: "angle",
get: function() {
return Math.round(100 * (0, D.toDegree)(this._angle)) / 100;
},
set: function(t) {
this._angle = (0, D.toRadian)(t);
}
}, {
key: "arc",
get: function() {
return (0, D.toDegree)(this._arc);
},
set: function(t) {
this._arc = (0, D.toRadian)(t);
}
}, {
key: "position",
get: function() {
return this._position;
},
set: function(t) {
this._position = t;
this.constructMat();
}
}, {
key: "rotation",
get: function() {
return this._rotation;
},
set: function(t) {
this._rotation = t;
this.constructMat();
}
}, {
key: "scale",
get: function() {
return this._scale;
},
set: function(t) {
this._scale = t;
this.constructMat();
}
} ]);
function t() {
O(this, "enable", u, this);
O(this, "_shapeType", h, this);
O(this, "emitFrom", f, this);
O(this, "radius", _, this);
O(this, "radiusThickness", d, this);
O(this, "_angle", p, this);
O(this, "_arc", m, this);
O(this, "arcMode", y, this);
O(this, "arcSpread", v, this);
O(this, "arcSpeed", g, this);
O(this, "length", b, this);
O(this, "boxThickness", C, this);
O(this, "_position", x, this);
O(this, "_rotation", A, this);
O(this, "_scale", S, this);
O(this, "alignToDirection", w, this);
O(this, "randomDirectionAmount", T, this);
O(this, "sphericalDirectionAmount", E, this);
O(this, "randomPositionAmount", M, this);
this.mat = null;
this.Quat = null;
this.particleSystem = null;
this.lastTime = null;
this.totalAngle = null;
this.mat = new D.Mat4();
this.quat = new D.Quat();
this.particleSystem = null;
this.lastTime = 0;
this.totalAngle = 0;
}
var e = t.prototype;
e.onInit = function(t) {
this.particleSystem = t;
this.constructMat();
this.lastTime = this.particleSystem._time;
};
e.constructMat = function() {
D.Quat.fromEuler(this.quat, this._rotation.x, this._rotation.y, this._rotation.z);
D.Mat4.fromRTS(this.mat, this.quat, this._position, this._scale);
};
e.emit = function(t) {
switch (this.shapeType) {
case P.ShapeType.Box:
W(this.emitFrom, this.boxThickness, t.position, t.velocity);
break;

case P.ShapeType.Circle:
q(this.radius, this.radiusThickness, this.generateArcAngle(), t.position, t.velocity);
break;

case P.ShapeType.Cone:
H(this.emitFrom, this.radius, this.radiusThickness, this.generateArcAngle(), this._angle, this.length, t.position, t.velocity);
break;

case P.ShapeType.Sphere:
U(this.emitFrom, this.radius, this.radiusThickness, t.position, t.velocity);
break;

case P.ShapeType.Hemisphere:
j(this.emitFrom, this.radius, this.radiusThickness, t.position, t.velocity);
break;

default:
console.warn(this.shapeType + " shapeType is not supported by ShapeModule.");
}
if (this.randomPositionAmount > 0) {
t.position.x += (0, D.randomRange)(-this.randomPositionAmount, this.randomPositionAmount);
t.position.y += (0, D.randomRange)(-this.randomPositionAmount, this.randomPositionAmount);
t.position.z += (0, D.randomRange)(-this.randomPositionAmount, this.randomPositionAmount);
}
D.Vec3.transformQuat(t.velocity, t.velocity, this.quat);
D.Vec3.transformMat4(t.position, t.position, this.mat);
if (this.sphericalDirectionAmount > 0) {
var e = D.Vec3.normalize(F, t.position);
D.Vec3.lerp(t.velocity, t.velocity, e, this.sphericalDirectionAmount);
}
this.lastTime = this.particleSystem._time;
};
e.generateArcAngle = function() {
if (this.arcMode === P.ArcMode.Random) return (0, D.randomRange)(0, this._arc);
var t = this.totalAngle + 2 * Math.PI * this.arcSpeed.evaluate(this.particleSystem._time, 1) * (this.particleSystem._time - this.lastTime);
this.totalAngle = t;
0 !== this.arcSpread && (t = Math.floor(t / (this._arc * this.arcSpread)) * this._arc * this.arcSpread);
switch (this.arcMode) {
case P.ArcMode.Loop:
return (0, D.repeat)(t, this._arc);

case P.ArcMode.PingPong:
return (0, D.pingPong)(t, this._arc);
}
};
return t;
})(), u = N(l.prototype, "enable", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), h = N(l.prototype, "_shapeType", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return P.ShapeType.Cone;
}
}), N(l.prototype, "shapeType", [ r ], Object.getOwnPropertyDescriptor(l.prototype, "shapeType"), l.prototype), 
f = N(l.prototype, "emitFrom", [ s ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return P.EmitLocation.Volume;
}
}), _ = N(l.prototype, "radius", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), d = N(l.prototype, "radiusThickness", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), p = N(l.prototype, "_angle", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return (0, D.toRadian)(25);
}
}), N(l.prototype, "angle", [ B.property ], Object.getOwnPropertyDescriptor(l.prototype, "angle"), l.prototype), 
m = N(l.prototype, "_arc", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return (0, D.toRadian)(360);
}
}), N(l.prototype, "arc", [ B.property ], Object.getOwnPropertyDescriptor(l.prototype, "arc"), l.prototype), 
y = N(l.prototype, "arcMode", [ o ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return P.ArcMode.Random;
}
}), v = N(l.prototype, "arcSpread", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), g = N(l.prototype, "arcSpeed", [ a ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new R.default();
}
}), b = N(l.prototype, "length", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 5;
}
}), C = N(l.prototype, "boxThickness", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new D.Vec3(0, 0, 0);
}
}), x = N(l.prototype, "_position", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new D.Vec3(0, 0, 0);
}
}), N(l.prototype, "position", [ B.property ], Object.getOwnPropertyDescriptor(l.prototype, "position"), l.prototype), 
A = N(l.prototype, "_rotation", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new D.Vec3(0, 0, 0);
}
}), N(l.prototype, "rotation", [ B.property ], Object.getOwnPropertyDescriptor(l.prototype, "rotation"), l.prototype), 
S = N(l.prototype, "_scale", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new D.Vec3(1, 1, 1);
}
}), N(l.prototype, "scale", [ B.property ], Object.getOwnPropertyDescriptor(l.prototype, "scale"), l.prototype), 
w = N(l.prototype, "alignToDirection", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), T = N(l.prototype, "randomDirectionAmount", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), E = N(l.prototype, "sphericalDirectionAmount", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), M = N(l.prototype, "randomPositionAmount", [ B.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 0;
}
}), l)) || c);
i.default = G;
function U(t, e, i, n, r) {
switch (t) {
case P.EmitLocation.Volume:
(0, I.randomPointBetweenSphere)(n, e * (1 - i), e);
D.Vec3.copy(r, n);
D.Vec3.normalize(r, r);
break;

case P.EmitLocation.Shell:
(0, I.randomUnitVector)(n);
D.Vec3.scale(n, n, e);
D.Vec3.copy(r, n);
break;

default:
console.warn(t + " is not supported for sphere emitter.");
}
}
function j(t, e, i, n, r) {
switch (t) {
case P.EmitLocation.Volume:
(0, I.randomPointBetweenSphere)(n, e * (1 - i), e);
n.z > 0 && (n.z *= -1);
D.Vec3.copy(r, n);
D.Vec3.normalize(r, r);
break;

case P.EmitLocation.Shell:
(0, I.randomUnitVector)(n);
D.Vec3.scale(n, n, e);
n.z < 0 && (n.z *= -1);
D.Vec3.copy(r, n);
break;

default:
console.warn(t + " is not supported for hemisphere emitter.");
}
}
function H(t, e, i, n, r, s, o, a) {
switch (t) {
case P.EmitLocation.Base:
(0, I.randomPointBetweenCircleAtFixedAngle)(o, e * (1 - i), e, n);
D.Vec2.scale(a, o, Math.sin(r));
a.z = -Math.cos(r) * e;
D.Vec3.normalize(a, a);
o.z = 0;
break;

case P.EmitLocation.Shell:
(0, I.fixedAngleUnitVector2)(o, n);
D.Vec2.scale(a, o, Math.sin(r));
a.z = -Math.cos(r);
D.Vec3.normalize(a, a);
D.Vec2.scale(o, o, e);
o.z = 0;
break;

case P.EmitLocation.Volume:
(0, I.randomPointBetweenCircleAtFixedAngle)(o, e * (1 - i), e, n);
D.Vec2.scale(a, o, Math.sin(r));
a.z = -Math.cos(r) * e;
D.Vec3.normalize(a, a);
o.z = 0;
D.Vec3.add(o, o, D.Vec3.scale(F, a, s * (0, D.random)() / -a.z));
break;

default:
console.warn(t + " is not supported for cone emitter.");
}
}
function W(t, e, i, n) {
switch (t) {
case P.EmitLocation.Volume:
(0, I.randomPointInCube)(i, k);
break;

case P.EmitLocation.Shell:
z.splice(0, z.length);
z.push((0, D.randomRange)(-.5, .5));
z.push((0, D.randomRange)(-.5, .5));
z.push(.5 * (0, I.randomSign)());
(0, I.randomSortArray)(z);
X(z, e);
D.Vec3.set(i, z[0], z[1], z[2]);
break;

case P.EmitLocation.Edge:
z.splice(0, z.length);
z.push((0, D.randomRange)(-.5, .5));
z.push(.5 * (0, I.randomSign)());
z.push(.5 * (0, I.randomSign)());
(0, I.randomSortArray)(z);
X(z, e);
D.Vec3.set(i, z[0], z[1], z[2]);
break;

default:
console.warn(t + " is not supported for box emitter.");
}
D.Vec3.copy(n, I.particleEmitZAxis);
}
function q(t, e, i, n, r) {
(0, I.randomPointBetweenCircleAtFixedAngle)(n, t * (1 - e), t, i);
D.Vec3.normalize(r, n);
}
function X(t, e) {
if (e.x > 0) {
t[0] += .5 * (0, D.randomRange)(-e.x, e.x);
t[0] = (0, D.clamp)(t[0], -.5, .5);
}
if (e.y > 0) {
t[1] += .5 * (0, D.randomRange)(-e.y, e.y);
t[1] = (0, D.clamp)(t[1], -.5, .5);
}
if (e.z > 0) {
t[2] += .5 * (0, D.randomRange)(-e.z, e.z);
t[2] = (0, D.clamp)(t[2], -.5, .5);
}
}
e.exports = i.default;
}), {
"../../../platform/CCClassDecorator": 231,
"../../../value-types": 328,
"../animator/curve-range": 31,
"../enum": 43,
"../particle-general-function": 44
} ],
43: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.TextureMode = i.TrailMode = i.ArcMode = i.EmitLocation = i.ShapeType = i.RenderMode = i.Space = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../platform/CCEnum"));
var r = (0, n.default)({
World: 0,
Local: 1,
Custom: 2
});
i.Space = r;
var s = (0, n.default)({
Billboard: 0,
StrecthedBillboard: 1,
HorizontalBillboard: 2,
VerticalBillboard: 3,
Mesh: 4
});
i.RenderMode = s;
var o = (0, n.default)({
Box: 0,
Circle: 1,
Cone: 2,
Sphere: 3,
Hemisphere: 4
});
i.ShapeType = o;
var a = (0, n.default)({
Base: 0,
Edge: 1,
Shell: 2,
Volume: 3
});
i.EmitLocation = a;
var c = (0, n.default)({
Random: 0,
Loop: 1,
PingPong: 2
});
i.ArcMode = c;
var l = (0, n.default)({
Particles: 0,
Ribbon: 1
});
i.TrailMode = l;
var u = (0, n.default)({
Stretch: 0,
Repeat: 1
});
i.TextureMode = u;
}), {
"../../platform/CCEnum": 232
} ],
44: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.calculateTransform = function(t, e, i, r) {
if (e !== t) {
if (t === s.Space.World) n.Mat4.getRotation(r, i); else {
n.Mat4.invert(i, i);
n.Mat4.getRotation(r, i);
}
return !0;
}
n.Quat.set(r, 0, 0, 0, 1);
return !1;
};
i.fixedAngleUnitVector2 = a;
i.randomUnitVector2 = c;
i.randomUnitVector = l;
i.randomPointInUnitSphere = function(t) {
l(t);
n.Vec3.scale(t, t, (0, n.random)());
};
i.randomPointBetweenSphere = function(t, e, i) {
l(t);
n.Vec3.scale(t, t, e + (i - e) * (0, n.random)());
};
i.randomPointInUnitCircle = function(t) {
c(t);
t.z = 0;
n.Vec3.scale(t, t, (0, n.random)());
};
i.randomPointBetweenCircle = function(t, e, i) {
c(t);
t.z = 0;
n.Vec3.scale(t, t, e + (i - e) * (0, n.random)());
};
i.randomPointBetweenCircleAtFixedAngle = function(t, e, i, r) {
a(t, r);
t.z = 0;
n.Vec3.scale(t, t, e + (i - e) * (0, n.random)());
};
i.randomPointInCube = function(t, e) {
n.Vec3.set(t, (0, n.randomRange)(-e.x, e.x), (0, n.randomRange)(-e.y, e.y), (0, 
n.randomRange)(-e.z, e.z));
};
i.randomPointBetweenCube = function(t, e, i) {
for (var r = [ "x", "y", "z" ], s = (0, n.randomRangeInt)(0, 3), o = 0; o < 3; o++) if (o !== s) {
var a = 2 * (0, n.random)() - 1;
t[r[o]] = a < 0 ? -e[r[o]] + a * (i[r[o]] - e[r[o]]) : e[r[o]] + a * (i[r[o]] - e[r[o]]);
} else t[r[o]] = (0, n.randomRange)(-i[r[o]], i[r[o]]);
};
i.randomSortArray = function(t) {
for (var e = 0; e < t.length; e++) {
var i = e + (0, n.randomRangeInt)(0, t.length - e), r = t[i];
t[i] = t[e];
t[e] = r;
}
};
i.randomSign = function() {
var t = (0, n.randomRange)(-1, 1);
0 === t && t++;
return (0, r.sign)(t);
};
i.particleEmitZAxis = void 0;
var n = t("../../value-types"), r = t("../../value-types/utils"), s = t("./enum"), o = new n.Vec3(0, 0, -1);
i.particleEmitZAxis = o;
function a(t, e) {
n.Vec2.set(t, Math.cos(e), Math.sin(e));
}
function c(t) {
var e = (0, n.randomRange)(0, 2 * Math.PI), i = Math.cos(e), r = Math.sin(e);
n.Vec2.set(t, i, r);
}
function l(t) {
var e = (0, n.randomRange)(-1, 1), i = (0, n.randomRange)(0, 2 * Math.PI), r = Math.sqrt(1 - e * e), s = r * Math.cos(i), o = r * Math.sin(i);
n.Vec3.set(t, s, o, e);
}
}), {
"../../value-types": 328,
"../../value-types/utils": 335,
"./enum": 43
} ],
45: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y, v, g, b, C, x, A, S, w, T, E, M, B, D, R, I, P, O, L, V, N, F, z, k, G, U, j, H, W, q, X, Y, J, Z, K, Q, $, tt, et, it, nt, rt, st, ot, at, ct, lt, ut, ht, ft, _t, dt, pt = t("../../value-types"), mt = t("../../value-types/utils"), yt = Ot(t("../../assets/material/CCMaterial")), vt = Ot(t("./animator/color-overtime")), gt = (function(t) {
if (t && t.__esModule) return t;
if (null === t || "object" != typeof t && "function" != typeof t) return {
default: t
};
var e = Pt();
if (e && e.has(t)) return e.get(t);
var i = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
for (var r in t) if (Object.prototype.hasOwnProperty.call(t, r)) {
var s = n ? Object.getOwnPropertyDescriptor(t, r) : null;
s && (s.get || s.set) ? Object.defineProperty(i, r, s) : i[r] = t[r];
}
i.default = t;
e && e.set(t, i);
return i;
})(t("./animator/curve-range")), bt = Ot(t("./animator/force-overtime")), Ct = Ot(t("./animator/gradient-range")), xt = Ot(t("./animator/limit-velocity-overtime")), At = Ot(t("./animator/rotation-overtime")), St = Ot(t("./animator/size-overtime")), wt = Ot(t("./animator/texture-animation")), Tt = Ot(t("./animator/velocity-overtime")), Et = Ot(t("./burst")), Mt = Ot(t("./emitter/shape-module")), Bt = t("./enum"), Dt = t("./particle-general-function"), Rt = Ot(t("./renderer/trail")), It = Ot(t("../../mesh/CCMesh"));
function Pt() {
if ("function" != typeof WeakMap) return null;
var t = new WeakMap();
Pt = function() {
return t;
};
return t;
}
function Ot(t) {
return t && t.__esModule ? t : {
default: t
};
}
function Lt(t) {
var e = 0;
if ("undefined" == typeof Symbol || null == t[Symbol.iterator]) {
if (Array.isArray(t) || (t = Vt(t))) return function() {
return e >= t.length ? {
done: !0
} : {
done: !1,
value: t[e++]
};
};
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
return (e = t[Symbol.iterator]()).next.bind(e);
}
function Vt(t, e) {
if (t) {
if ("string" == typeof t) return Nt(t, e);
var i = Object.prototype.toString.call(t).slice(8, -1);
"Object" === i && t.constructor && (i = t.constructor.name);
return "Map" === i || "Set" === i ? Array.from(i) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? Nt(t, e) : void 0;
}
}
function Nt(t, e) {
(null == e || e > t.length) && (e = t.length);
for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
return n;
}
function Ft(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function zt(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function kt(t, e, i) {
e && zt(t.prototype, e);
i && zt(t, i);
return t;
}
function Gt(t) {
return function() {
var e, i = Wt(t);
if (Ht()) {
var n = Wt(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return Ut(this, e);
};
}
function Ut(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? jt(t) : e;
}
function jt(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function Ht() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function Wt(t) {
return (Wt = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function qt(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
function Xt(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var Yt = t("../../platform/CCClassDecorator"), Jt = Yt.ccclass, Zt = Yt.menu, Kt = Yt.property, Qt = Yt.executeInEditMode, $t = Yt.executionOrder, te = t("../../components/CCRenderComponent"), ee = new pt.Mat4(), ie = (n = Jt("cc.ParticleSystem3D"), 
r = Zt("i18n:MAIN_MENU.component.renderers/ParticleSystem3D"), s = $t(99), o = Kt({
animatable: !1
}), a = Kt({
animatable: !1
}), c = Kt({
type: Bt.Space,
animatable: !1
}), l = Kt({
type: gt.default
}), u = Kt({
type: gt.default
}), h = Kt({
type: Ct.default
}), f = Kt({
type: Bt.Space
}), _ = Kt({
type: gt.default
}), d = Kt({
type: gt.default,
range: [ -1, 1 ]
}), p = Kt({
type: gt.default,
range: [ -1, 1 ],
radian: !0
}), m = Kt({
type: gt.default,
range: [ -1, 1 ]
}), y = Kt({
type: gt.default
}), v = Kt({
type: gt.default
}), g = Kt({
type: [ Et.default ],
animatable: !1
}), b = Kt({
type: [ yt.default ],
displayName: "Materials",
visible: !1,
override: !0
}), C = Kt({
type: Mt.default,
animatable: !1
}), x = Kt({
type: vt.default,
animatable: !1
}), A = Kt({
type: St.default,
animatable: !1
}), S = Kt({
type: Tt.default,
animatable: !1
}), w = Kt({
type: bt.default,
animatable: !1
}), T = Kt({
type: xt.default,
animatable: !1
}), E = Kt({
type: At.default,
animatable: !1
}), M = Kt({
type: wt.default,
animatable: !1
}), B = Kt({
type: Rt.default,
animatable: !1
}), D = Kt({
type: Bt.RenderMode,
animatable: !1
}), R = Kt({
animatable: !1
}), I = Kt({
animatable: !1
}), P = Kt({
type: It.default,
animatable: !1
}), O = Kt({
type: yt.default,
animatable: !1
}), L = Kt({
type: yt.default,
animatable: !1
}), n(V = r(V = s(V = Qt(V = (N = (function(t) {
qt(e, t);
Gt(e);
kt(e, [ {
key: "capacity",
get: function() {
return this._capacity;
},
set: function(t) {
this._capacity = t;
this._assembler && this._assembler.setCapacity(this._capacity);
}
}, {
key: "prewarm",
get: function() {
return this._prewarm;
},
set: function(t) {
!0 === t && this.loop;
this._prewarm = t;
}
}, {
key: "simulationSpace",
get: function() {
return this._simulationSpace;
},
set: function(t) {
if (t !== this._simulationSpace) {
this._simulationSpace = t;
this._assembler._updateMaterialParams();
this._assembler._updateTrailMaterial();
}
}
}, {
key: "materials",
get: function() {
return this._materials;
},
set: function(t) {
this._materials = t;
this._activateMaterial();
}
}, {
key: "shapeModule",
get: function() {
return this._shapeModule;
},
set: function(t) {
this._shapeModule = t;
this._shapeModule.onInit(this);
}
}, {
key: "colorOverLifetimeModule",
get: function() {
return this._colorOverLifetimeModule;
},
set: function(t) {
this._colorOverLifetimeModule = t;
}
}, {
key: "sizeOvertimeModule",
get: function() {
return this._sizeOvertimeModule;
},
set: function(t) {
this._sizeOvertimeModule = t;
}
}, {
key: "velocityOvertimeModule",
get: function() {
return this._velocityOvertimeModule;
},
set: function(t) {
this._velocityOvertimeModule = t;
}
}, {
key: "forceOvertimeModule",
get: function() {
return this._forceOvertimeModule;
},
set: function(t) {
this._forceOvertimeModule = t;
}
}, {
key: "limitVelocityOvertimeModule",
get: function() {
return this._limitVelocityOvertimeModule;
},
set: function(t) {
this._limitVelocityOvertimeModule = t;
}
}, {
key: "rotationOvertimeModule",
get: function() {
return this._rotationOvertimeModule;
},
set: function(t) {
this._rotationOvertimeModule = t;
}
}, {
key: "textureAnimationModule",
get: function() {
return this._textureAnimationModule;
},
set: function(t) {
this._textureAnimationModule = t;
this._textureAnimationModule.onInit(this);
}
}, {
key: "trailModule",
get: function() {
return this._trailModule;
},
set: function(t) {
this._trailModule = t;
this._trailModule.onInit(this);
}
}, {
key: "renderMode",
get: function() {
return this._renderMode;
},
set: function(t) {
if (this._renderMode !== t) {
this._renderMode = t;
this._assembler._setVertexAttrib();
this._assembler._updateModel();
this._assembler._updateMaterialParams();
}
}
}, {
key: "velocityScale",
get: function() {
return this._velocityScale;
},
set: function(t) {
this._velocityScale = t;
this._assembler._updateMaterialParams();
}
}, {
key: "lengthScale",
get: function() {
return this._lengthScale;
},
set: function(t) {
this._lengthScale = t;
this._assembler._updateMaterialParams();
}
}, {
key: "mesh",
get: function() {
return this._mesh;
},
set: function(t) {
this._mesh = t;
this._assembler._updateModel();
}
}, {
key: "particleMaterial",
get: function() {
return this.getMaterial(0);
},
set: function(t) {
this.setMaterial(0, t);
this._onMaterialModified(0, t);
}
}, {
key: "trailMaterial",
get: function() {
return this.getMaterial(1);
},
set: function(t) {
this.setMaterial(1, t);
this._onMaterialModified(1, t);
}
} ]);
function e() {
var e;
Ft(e = t.call(this) || this, "duration", F, jt(e));
Ft(e, "_capacity", z, jt(e));
Ft(e, "loop", k, jt(e));
Ft(e, "playOnAwake", G, jt(e));
Ft(e, "_prewarm", U, jt(e));
Ft(e, "_simulationSpace", j, jt(e));
Ft(e, "simulationSpeed", H, jt(e));
Ft(e, "startDelay", W, jt(e));
Ft(e, "startLifetime", q, jt(e));
Ft(e, "startColor", X, jt(e));
Ft(e, "scaleSpace", Y, jt(e));
Ft(e, "startSize", J, jt(e));
Ft(e, "startSpeed", Z, jt(e));
Ft(e, "startRotation", K, jt(e));
Ft(e, "gravityModifier", Q, jt(e));
Ft(e, "rateOverTime", $, jt(e));
Ft(e, "rateOverDistance", tt, jt(e));
Ft(e, "bursts", et, jt(e));
Ft(e, "_shapeModule", it, jt(e));
Ft(e, "_colorOverLifetimeModule", nt, jt(e));
Ft(e, "_sizeOvertimeModule", rt, jt(e));
Ft(e, "_velocityOvertimeModule", st, jt(e));
Ft(e, "_forceOvertimeModule", ot, jt(e));
Ft(e, "_limitVelocityOvertimeModule", at, jt(e));
Ft(e, "_rotationOvertimeModule", ct, jt(e));
Ft(e, "_textureAnimationModule", lt, jt(e));
Ft(e, "_trailModule", ut, jt(e));
Ft(e, "_renderMode", ht, jt(e));
Ft(e, "_velocityScale", ft, jt(e));
Ft(e, "_lengthScale", _t, jt(e));
Ft(e, "_mesh", dt, jt(e));
e._isPlaying = void 0;
e._isPaused = void 0;
e._isStopped = void 0;
e._isEmitting = void 0;
e._time = void 0;
e._emitRateTimeCounter = void 0;
e._emitRateDistanceCounter = void 0;
e._oldWPos = void 0;
e._curWPos = void 0;
e._customData1 = void 0;
e._customData2 = void 0;
e._subEmitters = void 0;
e.rateOverTime.constant = 10;
e.startLifetime.constant = 5;
e.startSize.constant = 1;
e.startSpeed.constant = 5;
e._isPlaying = !1;
e._isPaused = !1;
e._isStopped = !0;
e._isEmitting = !1;
e._time = 0;
e._emitRateTimeCounter = 0;
e._emitRateDistanceCounter = 0;
e._oldWPos = new pt.Vec3(0, 0, 0);
e._curWPos = new pt.Vec3(0, 0, 0);
e._customData1 = new pt.Vec2(0, 0);
e._customData2 = new pt.Vec2(0, 0);
e._subEmitters = [];
return e;
}
var i = e.prototype;
i.onLoad = function() {
this._assembler.onInit(this);
this.shapeModule.onInit(this);
this.trailModule.onInit(this);
this.textureAnimationModule.onInit(this);
this._resetPosition();
};
i._onMaterialModified = function(t, e) {
this._assembler._onMaterialModified(t, e);
};
i._onRebuildPSO = function(t, e) {
this._assembler._onRebuildPSO(t, e);
};
i.play = function() {
this._isPaused && (this._isPaused = !1);
this._isStopped && (this._isStopped = !1);
this._isPlaying = !0;
this._isEmitting = !0;
this._resetPosition();
this._prewarm && this._prewarmSystem();
};
i.pause = function() {
if (this._isStopped) console.warn("pause(): particle system is already stopped."); else {
this._isPlaying && (this._isPlaying = !1);
this._isPaused = !0;
}
};
i.stop = function() {
(this._isPlaying || this._isPaused) && this.clear();
this._isPlaying && (this._isPlaying = !1);
this._isPaused && (this._isPaused = !1);
this._time = 0;
this._emitRateTimeCounter = 0;
this._emitRateDistanceCounter = 0;
this._isStopped = !0;
};
i.clear = function() {
if (this.enabledInHierarchy) {
this._assembler.clear();
this.trailModule.clear();
}
};
i.getParticleCount = function() {
return this._assembler.getParticleCount();
};
i.setCustomData1 = function(t, e) {
pt.Vec2.set(this._customData1, t, e);
};
i.setCustomData2 = function(t, e) {
pt.Vec2.set(this._customData2, t, e);
};
i.onDestroy = function() {
this._assembler.onDestroy();
this.trailModule.destroy();
};
i.onEnable = function() {
t.prototype.onEnable.call(this);
this.playOnAwake && this.play();
this._assembler.onEnable();
this.trailModule.onEnable();
};
i.onDisable = function() {
t.prototype.onDisable.call(this);
this._assembler.onDisable();
this.trailModule.onDisable();
};
i.update = function(t) {
var e = t * this.simulationSpeed;
if (this._isPlaying) {
this._time += e;
this._emit(e);
0 !== this._assembler._updateParticles(e) || this._isEmitting || this.stop();
this._assembler.updateParticleBuffer();
this.trailModule.enable && this.trailModule.updateTrailBuffer();
}
};
i.emit = function(t, e) {
this._simulationSpace === Bt.Space.World && this.node.getWorldMatrix(ee);
for (var i = 0; i < t; ++i) {
var n = this._assembler._getFreeParticle();
if (null === n) return;
var r = (0, pt.pseudoRandom)((0, pt.randomRangeInt)(0, mt.INT_MAX));
if (this.shapeModule.enable) this.shapeModule.emit(n); else {
pt.Vec3.set(n.position, 0, 0, 0);
pt.Vec3.copy(n.velocity, Dt.particleEmitZAxis);
}
this.textureAnimationModule.enable && this.textureAnimationModule.init(n);
pt.Vec3.scale(n.velocity, n.velocity, this.startSpeed.evaluate(this._time / this.duration, r));
switch (this._simulationSpace) {
case Bt.Space.Local:
break;

case Bt.Space.World:
pt.Vec3.transformMat4(n.position, n.position, ee);
var s = new pt.Quat();
this.node.getWorldRotation(s);
pt.Vec3.transformQuat(n.velocity, n.velocity, s);
break;

case Bt.Space.Custom:
}
pt.Vec3.copy(n.ultimateVelocity, n.velocity);
pt.Vec3.set(n.rotation, 0, 0, this.startRotation.evaluate(this._time / this.duration, r));
pt.Vec3.set(n.startSize, this.startSize.evaluate(this._time / this.duration, r), 1, 1);
n.startSize.y = n.startSize.x;
pt.Vec3.copy(n.size, n.startSize);
n.startColor.set(this.startColor.evaluate(this._time / this.duration, r));
n.color.set(n.startColor);
n.startLifetime = this.startLifetime.evaluate(this._time / this.duration, r) + e;
n.remainingLifetime = n.startLifetime;
n.randomSeed = (0, pt.randomRangeInt)(0, 233280);
this._assembler._setNewParticle(n);
}
};
i._prewarmSystem = function() {
this.startDelay.mode = gt.Mode.Constant;
this.startDelay.constant = 0;
for (var t = this.duration / 1, e = 0; e < t; ++e) {
this._time += 1;
this._emit(1);
this._assembler._updateParticles(1);
}
};
i._emit = function(t) {
var e = this.startDelay.evaluate(0, 1);
if (this._time > e) {
if (this._time > this.duration + e && !this.loop) {
this._isEmitting = !1;
return;
}
this._emitRateTimeCounter += this.rateOverTime.evaluate(this._time / this.duration, 1) * t;
if (this._emitRateTimeCounter > 1 && this._isEmitting) {
var i = Math.floor(this._emitRateTimeCounter);
this._emitRateTimeCounter -= i;
this.emit(i, t);
}
this.node.getWorldPosition(this._curWPos);
var n = pt.Vec3.distance(this._curWPos, this._oldWPos);
pt.Vec3.copy(this._oldWPos, this._curWPos);
this._emitRateDistanceCounter += n * this.rateOverDistance.evaluate(this._time / this.duration, 1);
if (this._emitRateDistanceCounter > 1 && this._isEmitting) {
var r = Math.floor(this._emitRateDistanceCounter);
this._emitRateDistanceCounter -= r;
this.emit(r, t);
}
for (var s, o = Lt(this.bursts); !(s = o()).done; ) {
s.value.update(this, t);
}
}
};
i._activateMaterial = function() {};
i._resetPosition = function() {
this.node.getWorldPosition(this._oldWPos);
pt.Vec3.copy(this._curWPos, this._oldWPos);
};
i.addSubEmitter = function(t) {
this._subEmitters.push(t);
};
i.removeSubEmitter = function(t) {
this._subEmitters.splice(this._subEmitters.indexOf(t), 1);
};
i.addBurst = function(t) {
this.bursts.push(t);
};
i.removeBurst = function(t) {
this.bursts.splice(this.bursts.indexOf(t), 1);
};
i._checkBacth = function() {};
kt(e, [ {
key: "isPlaying",
get: function() {
return this._isPlaying;
}
}, {
key: "isPaused",
get: function() {
return this._isPaused;
}
}, {
key: "isStopped",
get: function() {
return this._isStopped;
}
}, {
key: "isEmitting",
get: function() {
return this._isEmitting;
}
}, {
key: "time",
get: function() {
return this._time;
}
} ]);
return e;
})(te), F = Xt(N.prototype, "duration", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 5;
}
}), z = Xt(N.prototype, "_capacity", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 100;
}
}), Xt(N.prototype, "capacity", [ Kt ], Object.getOwnPropertyDescriptor(N.prototype, "capacity"), N.prototype), 
k = Xt(N.prototype, "loop", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !0;
}
}), G = Xt(N.prototype, "playOnAwake", [ o ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !0;
}
}), U = Xt(N.prototype, "_prewarm", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), Xt(N.prototype, "prewarm", [ a ], Object.getOwnPropertyDescriptor(N.prototype, "prewarm"), N.prototype), 
j = Xt(N.prototype, "_simulationSpace", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return Bt.Space.Local;
}
}), Xt(N.prototype, "simulationSpace", [ c ], Object.getOwnPropertyDescriptor(N.prototype, "simulationSpace"), N.prototype), 
H = Xt(N.prototype, "simulationSpeed", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), W = Xt(N.prototype, "startDelay", [ l ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new gt.default();
}
}), q = Xt(N.prototype, "startLifetime", [ u ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new gt.default();
}
}), X = Xt(N.prototype, "startColor", [ h ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new Ct.default();
}
}), Y = Xt(N.prototype, "scaleSpace", [ f ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return Bt.Space.Local;
}
}), J = Xt(N.prototype, "startSize", [ _ ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new gt.default();
}
}), Z = Xt(N.prototype, "startSpeed", [ d ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new gt.default();
}
}), K = Xt(N.prototype, "startRotation", [ p ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new gt.default();
}
}), Q = Xt(N.prototype, "gravityModifier", [ m ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new gt.default();
}
}), $ = Xt(N.prototype, "rateOverTime", [ y ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new gt.default();
}
}), tt = Xt(N.prototype, "rateOverDistance", [ v ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new gt.default();
}
}), et = Xt(N.prototype, "bursts", [ g ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new Array();
}
}), Xt(N.prototype, "materials", [ b ], Object.getOwnPropertyDescriptor(N.prototype, "materials"), N.prototype), 
it = Xt(N.prototype, "_shapeModule", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new Mt.default();
}
}), Xt(N.prototype, "shapeModule", [ C ], Object.getOwnPropertyDescriptor(N.prototype, "shapeModule"), N.prototype), 
nt = Xt(N.prototype, "_colorOverLifetimeModule", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new vt.default();
}
}), Xt(N.prototype, "colorOverLifetimeModule", [ x ], Object.getOwnPropertyDescriptor(N.prototype, "colorOverLifetimeModule"), N.prototype), 
rt = Xt(N.prototype, "_sizeOvertimeModule", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new St.default();
}
}), Xt(N.prototype, "sizeOvertimeModule", [ A ], Object.getOwnPropertyDescriptor(N.prototype, "sizeOvertimeModule"), N.prototype), 
st = Xt(N.prototype, "_velocityOvertimeModule", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new Tt.default();
}
}), Xt(N.prototype, "velocityOvertimeModule", [ S ], Object.getOwnPropertyDescriptor(N.prototype, "velocityOvertimeModule"), N.prototype), 
ot = Xt(N.prototype, "_forceOvertimeModule", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new bt.default();
}
}), Xt(N.prototype, "forceOvertimeModule", [ w ], Object.getOwnPropertyDescriptor(N.prototype, "forceOvertimeModule"), N.prototype), 
at = Xt(N.prototype, "_limitVelocityOvertimeModule", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new xt.default();
}
}), Xt(N.prototype, "limitVelocityOvertimeModule", [ T ], Object.getOwnPropertyDescriptor(N.prototype, "limitVelocityOvertimeModule"), N.prototype), 
ct = Xt(N.prototype, "_rotationOvertimeModule", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new At.default();
}
}), Xt(N.prototype, "rotationOvertimeModule", [ E ], Object.getOwnPropertyDescriptor(N.prototype, "rotationOvertimeModule"), N.prototype), 
lt = Xt(N.prototype, "_textureAnimationModule", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new wt.default();
}
}), Xt(N.prototype, "textureAnimationModule", [ M ], Object.getOwnPropertyDescriptor(N.prototype, "textureAnimationModule"), N.prototype), 
ut = Xt(N.prototype, "_trailModule", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new Rt.default();
}
}), Xt(N.prototype, "trailModule", [ B ], Object.getOwnPropertyDescriptor(N.prototype, "trailModule"), N.prototype), 
ht = Xt(N.prototype, "_renderMode", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return Bt.RenderMode.Billboard;
}
}), Xt(N.prototype, "renderMode", [ D ], Object.getOwnPropertyDescriptor(N.prototype, "renderMode"), N.prototype), 
ft = Xt(N.prototype, "_velocityScale", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), Xt(N.prototype, "velocityScale", [ R ], Object.getOwnPropertyDescriptor(N.prototype, "velocityScale"), N.prototype), 
_t = Xt(N.prototype, "_lengthScale", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return 1;
}
}), Xt(N.prototype, "lengthScale", [ I ], Object.getOwnPropertyDescriptor(N.prototype, "lengthScale"), N.prototype), 
dt = Xt(N.prototype, "_mesh", [ Kt ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return null;
}
}), Xt(N.prototype, "mesh", [ P ], Object.getOwnPropertyDescriptor(N.prototype, "mesh"), N.prototype), 
Xt(N.prototype, "particleMaterial", [ O ], Object.getOwnPropertyDescriptor(N.prototype, "particleMaterial"), N.prototype), 
Xt(N.prototype, "trailMaterial", [ L ], Object.getOwnPropertyDescriptor(N.prototype, "trailMaterial"), N.prototype), 
N)) || V) || V) || V) || V);
i.default = ie;
cc.ParticleSystem3D = ie;
e.exports = i.default;
}), {
"../../assets/material/CCMaterial": 95,
"../../components/CCRenderComponent": 131,
"../../mesh/CCMesh": 197,
"../../platform/CCClassDecorator": 231,
"../../value-types": 328,
"../../value-types/utils": 335,
"./animator/color-overtime": 30,
"./animator/curve-range": 31,
"./animator/force-overtime": 32,
"./animator/gradient-range": 33,
"./animator/limit-velocity-overtime": 35,
"./animator/rotation-overtime": 36,
"./animator/size-overtime": 37,
"./animator/texture-animation": 38,
"./animator/velocity-overtime": 39,
"./burst": 40,
"./emitter/shape-module": 42,
"./enum": 43,
"./particle-general-function": 44,
"./renderer/trail": 49
} ],
46: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("../../value-types");
i.default = function(t) {
this.particleSystem = null;
this.position = null;
this.velocity = null;
this.animatedVelocity = null;
this.ultimateVelocity = null;
this.angularVelocity = null;
this.axisOfRotation = null;
this.rotation = null;
this.startSize = null;
this.size = null;
this.startColor = null;
this.color = cc.Color.WHITE;
this.randomSeed = null;
this.remainingLifetime = null;
this.startLifetime = null;
this.emitAccumulator0 = null;
this.emitAccumulator1 = null;
this.frameIndex = null;
this.particleSystem = t;
this.position = new n.Vec3(0, 0, 0);
this.velocity = new n.Vec3(0, 0, 0);
this.animatedVelocity = new n.Vec3(0, 0, 0);
this.ultimateVelocity = new n.Vec3(0, 0, 0);
this.angularVelocity = new n.Vec3(0, 0, 0);
this.axisOfRotation = new n.Vec3(0, 0, 0);
this.rotation = new n.Vec3(0, 0, 0);
this.startSize = new n.Vec3(0, 0, 0);
this.size = new n.Vec3(0, 0, 0);
this.startColor = cc.Color.WHITE.clone();
this.color = cc.Color.WHITE.clone();
this.randomSeed = 0;
this.remainingLifetime = 0;
this.startLifetime = 0;
this.emitAccumulator0 = 0;
this.emitAccumulator1 = 0;
this.frameIndex = 0;
};
e.exports = i.default;
}), {
"../../value-types": 328
} ],
47: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = s(t("../../../../renderer/gfx")), r = (s(t("../../../../renderer/core/input-assembler")), 
t("../../../mesh/mesh-data"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
t("../../../renderer");
var o = (function() {
function t() {
this._capacity = 0;
this._vertFormat = null;
this._vertAttrsFloatCount = 0;
this._mesh = null;
this._vertCount = 0;
this._indexCount = 0;
this._material = null;
this._capacity = 0;
this._vertFormat = null;
this._vertAttrsFloatCount = 0;
this._mesh = null;
this._subDatas = [];
this._subMeshes = [];
}
var e = t.prototype;
e.setCapacity = function(t) {
var e = this._capacity !== t;
this._capacity = t;
this._inited && e && this._recreateBuffer();
};
e.setVertexAttributes = function(t, e) {
if (this._mesh !== t || this._vertFormat !== e) {
this._mesh = t;
this._vertFormat = e;
this._vertAttrsFloatCount = this._vertFormat._bytes / 4;
this._createParticleData();
this._inited = !0;
}
};
e._recreateBuffer = function() {
this._createParticleData();
};
e._createParticleData = function() {
this.destroyIAData();
this._vertCount = 4;
this._indexCount = 6;
var t = null, e = null, i = this._vertFormat._bytes;
if (this._mesh) {
var s = this._mesh._subDatas[0];
this._vertCount = s.vData.byteLength / s.vfm._bytes;
this._indexCount = s.iData.byteLength / 2;
t = new Float32Array(i * this._capacity * this._vertCount / 4);
e = new Uint16Array(this._capacity * this._indexCount);
var o = this._vertFormat.element(n.default.ATTR_TEX_COORD3), a = this._vertFormat.element(n.default.ATTR_NORMAL), c = this._vertFormat.element(n.default.ATTR_TEX_COORD), l = this._vertFormat.element(n.default.ATTR_COLOR1);
this._mesh.copyAttribute(0, n.default.ATTR_POSITION, t.buffer, i, o.offset);
this._mesh.copyAttribute(0, n.default.ATTR_NORMAL, t.buffer, i, a.offset);
this._mesh.copyAttribute(0, n.default.ATTR_UV0, t.buffer, i, c.offset);
if (!this._mesh.copyAttribute(0, n.default.ATTR_COLOR, t.buffer, i, l.offset)) for (var u = new Uint32Array(t.buffer), h = 0; h < this._vertCount; ++h) u[h * this._vertAttrsFloatCount + l.offset / 4] = cc.Color.WHITE._val;
var f = new Float32Array(t.buffer);
for (h = 1; h < this._capacity; h++) f.copyWithin(h * i * this._vertCount / 4, 0, i * this._vertCount / 4);
this._mesh.copyIndices(0, e);
for (h = 1; h < this._capacity; h++) for (var _ = 0; _ < this._indexCount; _++) e[h * this._indexCount + _] = e[_] + h * this._vertCount;
} else {
t = new Float32Array(i * this._capacity * this._vertCount / 4);
e = new Uint16Array(this._capacity * this._indexCount);
var d = 0;
for (h = 0; h < this._capacity; ++h) {
var p = 4 * h;
e[d++] = p;
e[d++] = p + 1;
e[d++] = p + 2;
e[d++] = p + 3;
e[d++] = p + 2;
e[d++] = p + 1;
}
}
var m = new r.MeshData();
m.vData = t;
m.iData = e;
m.vfm = this._vertFormat;
m.vDirty = !0;
m.iDirty = !0;
m.enable = !0;
this._subDatas[0] = m;
m.vDirty = !0;
};
e.createTrailData = function(t, e) {
if (!this._subDatas[1]) {
var i = t._bytes, n = new ArrayBuffer(i * (e + 1) * 2), s = new Uint16Array(6 * e), o = new r.MeshData();
o.vData = new Float32Array(n);
o.iData = s;
o.vfm = t;
o.vDirty = !0;
o.iDirty = !0;
o.enable = !0;
this._subDatas[1] = o;
o.vDirty = !0;
}
};
e.setModelMaterial = function(t) {
this._material = t;
};
e.addParticleVertexData = function(t, e) {
var i = this._subDatas[0], n = i.getVData(), r = i.getVData(Uint32Array);
if (this._mesh) for (var s = 0; s < this._vertCount; s++) {
var o = (t * this._vertCount + s) * this._vertAttrsFloatCount;
n[o++] = e[0].x;
n[o++] = e[0].y;
n[o++] = e[0].z;
o += 2;
n[o++] = e[1].z;
n[o++] = e[2].x;
n[o++] = e[2].y;
n[o++] = e[2].z;
n[o++] = e[3].x;
n[o++] = e[3].y;
n[o++] = e[3].z;
r[o++] = e[4];
} else {
var a = t * this._vertAttrsFloatCount;
n[a++] = e[0].x;
n[a++] = e[0].y;
n[a++] = e[0].z;
n[a++] = e[1].x;
n[a++] = e[1].y;
n[a++] = e[1].z;
n[a++] = e[2].x;
n[a++] = e[2].y;
n[a++] = e[2].z;
n[a++] = e[3].x;
n[a++] = e[3].y;
n[a++] = e[3].z;
r[a++] = e[4];
if (e[5]) {
n[a++] = e[5].x;
n[a++] = e[5].y;
n[a++] = e[5].z;
}
}
};
e._uploadData = function() {
for (var t = this._subDatas, e = this._subMeshes, i = 0, n = t.length; i < n; i++) {
var r = t[i], s = e[i];
if (r.vDirty) {
var o = s._vertexBuffer, a = r.vData;
o.update(0, a);
r.vDirty = !1;
}
if (r.iDirty) {
var c = s._indexBuffer, l = r.iData;
c.update(0, l);
r.iDirty = !1;
}
}
};
e.updateIA = function(t, e, i, n) {};
e.clear = function() {
var t = this._subMeshes[0];
t && (t.indexCount = 0);
};
e.destroy = function() {
this._subDatas.length = 0;
for (var t = this._subMeshes, e = 0, i = t.length; e < i; e++) {
var n = t[e]._vertexBuffer;
n && n.destroy();
var r = t[e]._indexBuffer;
r && r.destroy();
}
t.length = 0;
};
e.destroyIAData = function() {
if (this._subMeshes[0]) {
this._subMeshes[0]._vertexBuffer.destroy();
this._subMeshes[0]._indexBuffer.destroy();
this._subMeshes[0] = null;
}
this._subDatas[0] = null;
};
return t;
})();
i.default = o;
e.exports = i.default;
}), {
"../../../../renderer/core/input-assembler": 350,
"../../../../renderer/gfx": 354,
"../../../mesh/mesh-data": 200,
"../../../renderer": 262
} ],
48: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r = t("../../../value-types"), s = _(t("../../../../renderer/gfx")), o = _(t("./particle-batch-model")), a = _(t("../../../assets/material/material-variant")), c = _(t("../../../../renderer/memop/recycle-pool")), l = t("../enum"), u = _(t("../particle")), h = _(t("../../../renderer/assembler")), f = _(t("../particle-system-3d"));
function _(t) {
return t && t.__esModule ? t : {
default: t
};
}
function d(t) {
return function() {
var e, i = v(t);
if (y()) {
var n = v(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return p(this, e);
};
}
function p(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? m(t) : e;
}
function m(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function y() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function v(t) {
return (v = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function g(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var b = t("../../../platform/CCClassDecorator"), C = b.ccclass, x = (b.property, 
new r.Vec3()), A = (new r.Vec2(), new r.Vec4(), new r.Mat4()), S = [ 0, 0, 1, 0, 0, 1, 1, 1 ], w = new s.default.VertexFormat([ {
name: s.default.ATTR_POSITION,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_TEX_COORD,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_TEX_COORD1,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_TEX_COORD2,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_COLOR,
type: s.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
w.name = "vfmtNormal";
var T = new s.default.VertexFormat([ {
name: s.default.ATTR_POSITION,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_TEX_COORD,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_TEX_COORD1,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_TEX_COORD2,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_COLOR,
type: s.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
}, {
name: s.default.ATTR_COLOR1,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
} ]);
T.name = "vfmtStretch";
var E = new s.default.VertexFormat([ {
name: s.default.ATTR_POSITION,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_TEX_COORD,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_TEX_COORD1,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_TEX_COORD2,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_COLOR,
type: s.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
}, {
name: s.default.ATTR_TEX_COORD3,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_NORMAL,
type: s.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: s.default.ATTR_COLOR1,
type: s.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
E.name = "vfmtMesh";
var M = C("cc.ParticleSystem3DAssembler")(n = (function(t) {
g(e, t);
d(e);
function e() {
var e;
(e = t.call(this) || this)._defines = null;
e._trailDefines = null;
e._model = null;
e.frameTile_velLenScale = null;
e.attrs = [];
e._vertFormat = [];
e._particleSystem = null;
e._particles = null;
e._defaultMat = null;
e._isAssetReady = !1;
e._defaultTrailMat = null;
e._customProperties = null;
e._node_scale = null;
e._model = null;
e.frameTile_velLenScale = cc.v4(1, 1, 0, 0);
e._node_scale = cc.v4();
e.attrs = new Array(5);
e._trailDefines = {
CC_USE_WORLD_SPACE: !0
};
return e;
}
var i = e.prototype;
i.onInit = function(t) {
var e = this;
this._particleSystem = t;
this._particles = new c.default(function() {
return new u.default(e);
}, 16);
this._setVertexAttrib();
this.onEnable();
this._updateModel();
this._updateMaterialParams();
this._updateTrailMaterial();
};
i.onEnable = function() {
if (this._particleSystem) {
null == this._model && (this._model = new o.default());
this._model.inited || this._model.setCapacity(this._particleSystem.capacity);
this._model.enabled = this._particleSystem.enabledInHierarchy;
}
};
i.onDisable = function() {
this._model && (this._model.enabled = this._particleSystem.enabledInHierarchy);
};
i.onDestroy = function() {
this._model = null;
};
i.clear = function() {
this._particles.reset();
this.updateParticleBuffer();
};
i._getFreeParticle = function() {
return this._particles.length >= this._particleSystem.capacity ? null : this._particles.add();
};
i._setNewParticle = function(t) {};
i._updateParticles = function(t) {
this._particleSystem.node.getWorldMatrix(A);
switch (this._particleSystem.scaleSpace) {
case l.Space.Local:
this._particleSystem.node.getScale(this._node_scale);
break;

case l.Space.World:
this._particleSystem.node.getWorldScale(this._node_scale);
}
(this._particleSystem.materials[0] ? this._particleSystem.particleMaterial : this._defaultMat).setProperty("scale", this._node_scale);
this._particleSystem.velocityOvertimeModule.enable && this._particleSystem.velocityOvertimeModule.update(this._particleSystem._simulationSpace, A);
this._particleSystem.forceOvertimeModule.enable && this._particleSystem.forceOvertimeModule.update(this._particleSystem._simulationSpace, A);
this._particleSystem.trailModule.enable && this._particleSystem.trailModule.update();
for (var e = 0; e < this._particles.length; ++e) {
var i = this._particles.data[e];
i.remainingLifetime -= t;
r.Vec3.set(i.animatedVelocity, 0, 0, 0);
if (i.remainingLifetime < 0) {
this._particleSystem.trailModule.enable && this._particleSystem.trailModule.removeParticle(i);
this._particles.remove(e);
--e;
} else {
i.velocity.y -= 9.8 * this._particleSystem.gravityModifier.evaluate(1 - i.remainingLifetime / i.startLifetime, i.randomSeed) * t;
this._particleSystem.sizeOvertimeModule.enable && this._particleSystem.sizeOvertimeModule.animate(i);
this._particleSystem.colorOverLifetimeModule.enable && this._particleSystem.colorOverLifetimeModule.animate(i);
this._particleSystem.forceOvertimeModule.enable && this._particleSystem.forceOvertimeModule.animate(i, t);
this._particleSystem.velocityOvertimeModule.enable ? this._particleSystem.velocityOvertimeModule.animate(i) : r.Vec3.copy(i.ultimateVelocity, i.velocity);
this._particleSystem.limitVelocityOvertimeModule.enable && this._particleSystem.limitVelocityOvertimeModule.animate(i);
this._particleSystem.rotationOvertimeModule.enable && this._particleSystem.rotationOvertimeModule.animate(i, t);
this._particleSystem.textureAnimationModule.enable && this._particleSystem.textureAnimationModule.animate(i);
r.Vec3.scaleAndAdd(i.position, i.position, i.ultimateVelocity, t);
this._particleSystem.trailModule.enable && this._particleSystem.trailModule.animate(i, t);
}
}
return this._particles.length;
};
i.updateParticleBuffer = function() {
for (var t = 0, e = this._particleSystem.renderMode === l.RenderMode.StrecthedBillboard, i = 0; i < this._particles.length; ++i) {
var n = this._particles.data[i], r = 0;
this._particleSystem.textureAnimationModule.enable && (r = n.frameIndex);
t = 4 * i;
var s = 0;
if (this._particleSystem.renderMode !== l.RenderMode.Mesh) for (var o = 0; o < 4; ++o) {
s = 0;
this.attrs[s++] = n.position;
x.x = S[2 * o];
x.y = S[2 * o + 1];
x.z = r;
this.attrs[s++] = x;
this.attrs[s++] = n.size;
this.attrs[s++] = n.rotation;
this.attrs[s++] = n.color._val;
this.attrs[s++] = e ? n.ultimateVelocity : null;
this._model.addParticleVertexData(t++, this.attrs);
} else {
s = 0;
this.attrs[s++] = n.position;
x.z = r;
this.attrs[s++] = x;
this.attrs[s++] = n.size;
this.attrs[s++] = n.rotation;
this.attrs[s++] = n.color._val;
this._model.addParticleVertexData(i, this.attrs);
}
}
this.updateIA(0, this._particles.length * this._model._indexCount, !0);
};
i.updateShaderUniform = function() {};
i.updateIA = function(t, e, i, n) {
this._model && this._model.updateIA(t, e, i, n);
};
i.getParticleCount = function() {
return this._particles.data.length;
};
i._onMaterialModified = function(t, e) {
if (0 === t) {
this._updateModel();
this._updateMaterialParams();
} else this._updateTrailMaterial();
};
i._onRebuildPSO = function(t, e) {
this._model && 0 === t && this._model.setModelMaterial(e);
this._particleSystem.trailModule._trailModel && 1 === t && this._particleSystem.trailModule._trailModel.setModelMaterial(e);
};
i._ensureLoadMesh = function() {
this._particleSystem.mesh && !this._particleSystem.mesh.loaded && postLoadMesh(this._particleSystem.mesh);
};
i.setCapacity = function(t) {
this._model && this._model.setCapacity(t);
};
i._setVertexAttrib = function() {
switch (this._particleSystem.renderMode) {
case l.RenderMode.StrecthedBillboard:
this._vertFormat = T;
break;

case l.RenderMode.Mesh:
this._vertFormat = E;
break;

default:
this._vertFormat = w;
}
};
i._updateMaterialParams = function() {
if (this._particleSystem) {
var t = this._particleSystem.materials[0];
t = (t = null == t && null == this._defaultMat ? this._defaultMat = a.default.createWithBuiltin("3d-particle", this) : a.default.create(t, this._particleSystem)) || this._defaultMat;
this._particleSystem._simulationSpace === l.Space.World ? t.define("CC_USE_WORLD_SPACE", !0) : t.define("CC_USE_WORLD_SPACE", !1);
if (this._particleSystem.renderMode === l.RenderMode.Billboard) {
t.define("CC_USE_BILLBOARD", !0);
t.define("CC_USE_STRETCHED_BILLBOARD", !1);
t.define("CC_USE_HORIZONTAL_BILLBOARD", !1);
t.define("CC_USE_VERTICAL_BILLBOARD", !1);
t.define("CC_USE_MESH", !1);
} else if (this._particleSystem.renderMode === l.RenderMode.StrecthedBillboard) {
t.define("CC_USE_BILLBOARD", !1);
t.define("CC_USE_STRETCHED_BILLBOARD", !0);
t.define("CC_USE_HORIZONTAL_BILLBOARD", !1);
t.define("CC_USE_VERTICAL_BILLBOARD", !1);
t.define("CC_USE_MESH", !1);
this.frameTile_velLenScale.z = this._particleSystem.velocityScale;
this.frameTile_velLenScale.w = this._particleSystem.lengthScale;
} else if (this._particleSystem.renderMode === l.RenderMode.HorizontalBillboard) {
t.define("CC_USE_BILLBOARD", !1);
t.define("CC_USE_STRETCHED_BILLBOARD", !1);
t.define("CC_USE_HORIZONTAL_BILLBOARD", !0);
t.define("CC_USE_VERTICAL_BILLBOARD", !1);
t.define("CC_USE_MESH", !1);
} else if (this._particleSystem.renderMode === l.RenderMode.VerticalBillboard) {
t.define("CC_USE_BILLBOARD", !1);
t.define("CC_USE_STRETCHED_BILLBOARD", !1);
t.define("CC_USE_HORIZONTAL_BILLBOARD", !1);
t.define("CC_USE_VERTICAL_BILLBOARD", !0);
t.define("CC_USE_MESH", !1);
} else if (this._particleSystem.renderMode === l.RenderMode.Mesh) {
t.define("CC_USE_BILLBOARD", !1);
t.define("CC_USE_STRETCHED_BILLBOARD", !1);
t.define("CC_USE_HORIZONTAL_BILLBOARD", !1);
t.define("CC_USE_VERTICAL_BILLBOARD", !1);
t.define("CC_USE_MESH", !0);
} else console.warn("particle system renderMode " + this._particleSystem.renderMode + " not support.");
this._particleSystem.textureAnimationModule.enable && r.Vec2.set(this.frameTile_velLenScale, this._particleSystem.textureAnimationModule.numTilesX, this._particleSystem.textureAnimationModule.numTilesY);
t.setProperty("frameTile_velLenScale", this.frameTile_velLenScale);
this._particleSystem.setMaterial(0, t);
}
};
i._updateTrailMaterial = function() {
var t = this._particleSystem.trailMaterial;
if (this._particleSystem.trailModule.enable) {
null === t && null === this._defaultTrailMat && (this._defaultTrailMat = a.default.createWithBuiltin("3d-trail", this));
if (null === t) {
t = this._defaultTrailMat;
this._particleSystem.trailMaterial = t;
}
this._particleSystem._simulationSpace === l.Space.World || this._particleSystem.trailModule.space === l.Space.World ? t.define("CC_USE_WORLD_SPACE", !0) : t.define("CC_USE_WORLD_SPACE", !1);
this._particleSystem.trailModule._updateMaterial();
}
};
i._updateTrailEnable = function(t) {
if (this._model) {
var e = this._model._subDatas[1];
e && (e.enable = t);
}
};
i._updateModel = function() {
this._model && this._model.setVertexAttributes(this._particleSystem.renderMode === l.RenderMode.Mesh ? this._particleSystem.mesh : null, this._vertFormat);
};
i.setVertexAttributes = function(t, e) {
this._model && this._model.setVertexAttributes(t, e);
};
i.fillBuffers = function(t, e) {
if (this._model) {
this._model._uploadData();
var i = this._model._subMeshes, n = this._model._subDatas, r = t.materials;
e._flush();
for (var s = 0, o = i.length; s < o; s++) {
var a = i[s], c = n[s], l = r[s];
if (c.enable) {
e.material = l;
e.cullingMask = t.node._cullingMask;
e.node = t.node;
e._flushIA(a);
}
}
}
};
return e;
})(h.default)) || n;
i.default = M;
Object.assign(M, {
uv: S
});
h.default.register(f.default, M);
e.exports = i.default;
}), {
"../../../../renderer/gfx": 354,
"../../../../renderer/memop/recycle-pool": 356,
"../../../assets/material/material-variant": 102,
"../../../platform/CCClassDecorator": 231,
"../../../renderer/assembler": 259,
"../../../value-types": 328,
"../enum": 43,
"../particle": 46,
"../particle-system-3d": 45,
"./particle-batch-model": 47
} ],
49: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r, s, o, a, c, l, u, h, f, _, d, p, m, y, v, g, b, C, x, A, S, w = t("../../../platform/CCClassDecorator"), T = t("../../../value-types"), E = P(t("../../../../renderer/gfx")), M = P(t("../../../../renderer/memop/pool")), B = P(t("../animator/curve-range")), D = P(t("../animator/gradient-range")), R = t("../enum"), I = P(t("../utils"));
function P(t) {
return t && t.__esModule ? t : {
default: t
};
}
function O(t) {
var e = 0;
if ("undefined" == typeof Symbol || null == t[Symbol.iterator]) {
if (Array.isArray(t) || (t = L(t))) return function() {
return e >= t.length ? {
done: !0
} : {
done: !1,
value: t[e++]
};
};
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
return (e = t[Symbol.iterator]()).next.bind(e);
}
function L(t, e) {
if (t) {
if ("string" == typeof t) return V(t, e);
var i = Object.prototype.toString.call(t).slice(8, -1);
"Object" === i && t.constructor && (i = t.constructor.name);
return "Map" === i || "Set" === i ? Array.from(i) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? V(t, e) : void 0;
}
}
function V(t, e) {
(null == e || e > t.length) && (e = t.length);
for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
return n;
}
function N(t, e, i, n) {
i && Object.defineProperty(t, e, {
enumerable: i.enumerable,
configurable: i.configurable,
writable: i.writable,
value: i.initializer ? i.initializer.call(n) : void 0
});
}
function F(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function z(t, e, i) {
e && F(t.prototype, e);
i && F(t, i);
return t;
}
function k(t, e, i, n, r) {
var s = {};
Object.keys(n).forEach((function(t) {
s[t] = n[t];
}));
s.enumerable = !!s.enumerable;
s.configurable = !!s.configurable;
("value" in s || s.initializer) && (s.writable = !0);
s = i.slice().reverse().reduce((function(i, n) {
return n(t, e, i) || i;
}), s);
if (r && void 0 !== s.initializer) {
s.value = s.initializer ? s.initializer.call(r) : void 0;
s.initializer = void 0;
}
if (void 0 === s.initializer) {
Object.defineProperty(t, e, s);
s = null;
}
return s;
}
var G = Math.cos((0, T.toRadian)(100)), U = {
position: cc.v3(),
velocity: cc.v3()
}, j = cc.quat(), H = cc.mat4(), W = cc.v3(), q = cc.v3(), X = cc.color(), Y = (function() {
function t(t) {
this.start = void 0;
this.end = void 0;
this.trailElements = [];
this.start = -1;
this.end = -1;
this.trailElements = [];
for (;t--; ) this.trailElements.push({
position: cc.v3(),
lifetime: 0,
width: 0,
velocity: cc.v3(),
direction: 0,
color: cc.color()
});
}
var e = t.prototype;
e.getElement = function(t) {
if (-1 === this.start) return null;
t < 0 && (t = (t + this.trailElements.length) % this.trailElements.length);
t >= this.trailElements.length && (t %= this.trailElements.length);
return this.trailElements[t];
};
e.addElement = function() {
if (0 === this.trailElements.length) return null;
if (-1 === this.start) {
this.start = 0;
this.end = 1;
return this.trailElements[0];
}
if (this.start === this.end) {
this.trailElements.splice(this.end, 0, {
position: cc.v3(),
lifetime: 0,
width: 0,
velocity: cc.v3(),
direction: 0,
color: cc.color()
});
this.start++;
this.start %= this.trailElements.length;
}
var t = this.end++;
this.end %= this.trailElements.length;
return this.trailElements[t];
};
e.iterateElement = function(t, e, i, n) {
for (var r = this.start >= this.end ? this.end + this.trailElements.length : this.end, s = this.start; s < r; s++) if (e(t, this.trailElements[s % this.trailElements.length], i, n)) {
this.start++;
this.start %= this.trailElements.length;
}
if (this.start === r) {
this.start = -1;
this.end = -1;
}
};
e.count = function() {
return this.start < this.end ? this.end - this.start : this.trailElements.length + this.end - this.start;
};
e.clear = function() {
this.start = -1;
this.end = -1;
};
return t;
})(), J = (n = (0, w.ccclass)("cc.TrailModule"), r = (0, w.property)({
type: R.TrailMode
}), s = (0, w.property)({
type: B.default
}), o = (0, w.property)({
type: R.Space
}), a = (0, w.property)({
type: R.TextureMode
}), c = (0, w.property)({
type: B.default
}), l = (0, w.property)({
type: D.default
}), u = (0, w.property)({
type: D.default
}), n(h = (f = (function() {
z(t, [ {
key: "enable",
get: function() {
return this._enable;
},
set: function(t) {
t && this._createTrailData();
if (t && !this._enable) {
this._enable = t;
this._particleSystem._assembler._updateTrailMaterial();
}
this._enable = t;
this._particleSystem._assembler._updateTrailEnable(this._enable);
}
}, {
key: "minParticleDistance",
get: function() {
return this._minParticleDistance;
},
set: function(t) {
this._minParticleDistance = t;
this._minSquaredDistance = t * t;
}
}, {
key: "space",
get: function() {
return this._space;
},
set: function(t) {
this._space = t;
this._particleSystem && this._particleSystem._assembler._updateTrailMaterial();
}
} ]);
function t() {
N(this, "_enable", _, this);
N(this, "mode", d, this);
N(this, "lifeTime", p, this);
N(this, "_minParticleDistance", m, this);
N(this, "_space", y, this);
N(this, "existWithParticles", v, this);
N(this, "textureMode", g, this);
N(this, "widthFromParticle", b, this);
N(this, "widthRatio", C, this);
N(this, "colorFromParticle", x, this);
N(this, "colorOverTrail", A, this);
N(this, "colorOvertime", S, this);
this._particleSystem = null;
this._minSquaredDistance = 0;
this._vertSize = 0;
this._trailNum = 0;
this._trailLifetime = 0;
this.vbOffset = 0;
this.ibOffset = 0;
this._trailSegments = null;
this._particleTrail = null;
this._ia = null;
this._gfxVFmt = null;
this._vbF32 = null;
this._vbUint32 = null;
this._iBuffer = null;
this._needTransform = null;
this._defaultMat = null;
this._material = null;
this._gfxVFmt = new E.default.VertexFormat([ {
name: E.default.ATTR_POSITION,
type: E.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: E.default.ATTR_TEX_COORD,
type: E.default.ATTR_TYPE_FLOAT32,
num: 4
}, {
name: E.default.ATTR_TEX_COORD1,
type: E.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: E.default.ATTR_COLOR,
type: E.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
this._vertSize = this._gfxVFmt._bytes;
this._particleTrail = new I.default();
}
var e = t.prototype;
e.onInit = function(t) {
this._particleSystem = t;
this.minParticleDistance = this._minParticleDistance;
for (var e, i = 0, n = O(t.bursts); !(e = n()).done; ) {
i += e.value.getMaxCount(t);
}
this.lifeTime.constant = 1;
this._trailNum = Math.ceil(t.startLifetime.getMax() * this.lifeTime.getMax() * 60 * (t.rateOverTime.getMax() * t.duration + i));
this._trailSegments = new M.default(function() {
return new Y(10);
}, Math.ceil(t.rateOverTime.getMax() * t.duration));
if (this._enable) {
this.enable = this._enable;
this._updateMaterial();
}
};
e.onEnable = function() {};
e.onDisable = function() {};
e.destroy = function() {
if (this._trailSegments) {
this._trailSegments.clear((function(t) {
t.trailElements.length = 0;
}));
this._trailSegments = null;
}
};
e.clear = function() {
if (this.enable) {
for (var t = this._particleTrail.values(), e = t.next(); !e.done; ) {
e.value.clear();
e = t.next();
}
this._particleTrail.clear();
this.updateTrailBuffer();
}
};
e._createTrailData = function() {
var t = this._particleSystem._assembler._model;
if (t) {
t.createTrailData(this._gfxVFmt, this._trailNum);
var e = t._subDatas[1];
this._vbF32 = e.getVData();
this._vbUint32 = e.getVData(Uint32Array);
this._iBuffer = e.iData;
}
};
e._updateMaterial = function() {
if (this._particleSystem) {
var t = this._particleSystem.trailMaterial;
this._material = t || this._particleSystem._assembler._defaultTrailMat;
}
};
e.update = function() {
this._trailLifetime = this.lifeTime.evaluate(this._particleSystem._time, 1);
if (this.space === R.Space.World && this._particleSystem._simulationSpace === R.Space.Local) {
this._needTransform = !0;
this._particleSystem.node.getWorldMatrix(H);
this._particleSystem.node.getWorldRotation(j);
} else this._needTransform = !1;
};
e.animate = function(t, e) {
if (this._trailSegments) {
var i = this._particleTrail.get(t);
if (i) {
var n = i.getElement(i.end - 1);
this._needTransform ? T.Vec3.transformMat4(W, t.position, H) : T.Vec3.copy(W, t.position);
if (n) {
i.iterateElement(this, this._updateTrailElement, t, e);
if (T.Vec3.squaredDistance(n.position, W) < this._minSquaredDistance) return;
}
if (n = i.addElement()) {
T.Vec3.copy(n.position, W);
n.lifetime = 0;
this.widthFromParticle ? n.width = t.size.x * this.widthRatio.evaluate(0, 1) : n.width = this.widthRatio.evaluate(0, 1);
var r = i.count();
if (2 === r) {
var s = i.getElement(i.end - 2);
T.Vec3.subtract(s.velocity, n.position, s.position);
} else if (r > 2) {
var o = i.getElement(i.end - 2), a = i.getElement(i.end - 3);
T.Vec3.subtract(W, a.position, o.position);
T.Vec3.subtract(q, n.position, o.position);
T.Vec3.subtract(o.velocity, q, W);
T.Vec3.equals(cc.Vec3.ZERO, o.velocity) && T.Vec3.copy(o.velocity, W);
}
this.colorFromParticle ? n.color.set(t.color) : n.color.set(this.colorOvertime.evaluate(0, 1));
}
} else {
i = this._trailSegments.alloc();
this._particleTrail.set(t, i);
}
}
};
e._updateTrailElement = function(t, e, i, n) {
e.lifetime += n;
if (t.colorFromParticle) {
e.color.set(i.color);
e.color.multiply(t.colorOvertime.evaluate(1 - i.remainingLifetime / i.startLifetime, 1));
} else e.color.set(t.colorOvertime.evaluate(1 - i.remainingLifetime / i.startLifetime, 1));
t.widthFromParticle ? e.width = i.size.x * t.widthRatio.evaluate(e.lifetime / t._trailLifetime, 1) : e.width = t.widthRatio.evaluate(e.lifetime / t._trailLifetime, 1);
return e.lifetime > t._trailLifetime;
};
e.removeParticle = function(t) {
var e = this._particleTrail.get(t);
if (e && this._trailSegments) {
e.clear();
this._trailSegments.free(e);
this._particleTrail.delete(t);
}
};
e.updateTrailBuffer = function() {
this.vbOffset = 0;
this.ibOffset = 0;
for (var t, e = O(this._particleTrail.keys()); !(t = e()).done; ) {
var i = t.value, n = this._particleTrail.get(i);
if (-1 !== n.start) {
var r = 4 * this.vbOffset / this._vertSize, s = n.start >= n.end ? n.end + n.trailElements.length : n.end, o = s - n.start, a = 1 / o, c = n.trailElements[n.start];
this._fillVertexBuffer(c, this.colorOverTrail.evaluate(1, 1), r, 1, 0, 4);
for (var l = n.start + 1; l < s; l++) {
var u = n.trailElements[l % n.trailElements.length], h = l - n.start;
this._fillVertexBuffer(u, this.colorOverTrail.evaluate(1 - h / o, 1), r, 1 - h * a, h, 5);
}
this._needTransform ? T.Vec3.transformMat4(U.position, i.position, H) : T.Vec3.copy(U.position, i.position);
if (1 === o || 2 === o) {
var f = n.getElement(n.end - 1);
T.Vec3.subtract(f.velocity, U.position, f.position);
this._vbF32[this.vbOffset - this._vertSize / 4 - 4] = f.velocity.x;
this._vbF32[this.vbOffset - this._vertSize / 4 - 3] = f.velocity.y;
this._vbF32[this.vbOffset - this._vertSize / 4 - 2] = f.velocity.z;
this._vbF32[this.vbOffset - 4] = f.velocity.x;
this._vbF32[this.vbOffset - 3] = f.velocity.y;
this._vbF32[this.vbOffset - 2] = f.velocity.z;
T.Vec3.subtract(U.velocity, U.position, f.position);
this._checkDirectionReverse(U, f);
} else if (o > 2) {
var _ = n.getElement(n.end - 1), d = n.getElement(n.end - 2);
T.Vec3.subtract(W, d.position, _.position);
T.Vec3.subtract(q, U.position, _.position);
T.Vec3.normalize(W, W);
T.Vec3.normalize(q, q);
T.Vec3.subtract(_.velocity, q, W);
T.Vec3.normalize(_.velocity, _.velocity);
this._checkDirectionReverse(_, d);
this.vbOffset -= this._vertSize / 4 * 2;
this.ibOffset -= 6;
this._fillVertexBuffer(_, this.colorOverTrail.evaluate(a, 1), r, a, o - 1, 5);
T.Vec3.subtract(U.velocity, U.position, _.position);
T.Vec3.normalize(U.velocity, U.velocity);
this._checkDirectionReverse(U, _);
}
this.widthFromParticle ? U.width = i.size.x * this.widthRatio.evaluate(0, 1) : U.width = this.widthRatio.evaluate(0, 1);
U.color = i.color;
T.Vec3.equals(U.velocity, cc.Vec3.ZERO) ? this.ibOffset -= 3 : this._fillVertexBuffer(U, this.colorOverTrail.evaluate(0, 1), r, 0, o, 1);
}
}
this._updateIA(this.ibOffset);
};
e._fillVertexBuffer = function(t, e, i, n, r, s) {
this._vbF32[this.vbOffset++] = t.position.x;
this._vbF32[this.vbOffset++] = t.position.y;
this._vbF32[this.vbOffset++] = t.position.z;
this._vbF32[this.vbOffset++] = 0;
this._vbF32[this.vbOffset++] = t.width;
this._vbF32[this.vbOffset++] = n;
this._vbF32[this.vbOffset++] = 0;
this._vbF32[this.vbOffset++] = t.velocity.x;
this._vbF32[this.vbOffset++] = t.velocity.y;
this._vbF32[this.vbOffset++] = t.velocity.z;
X.set(t.color);
X.multiply(e);
this._vbUint32[this.vbOffset++] = X._val;
this._vbF32[this.vbOffset++] = t.position.x;
this._vbF32[this.vbOffset++] = t.position.y;
this._vbF32[this.vbOffset++] = t.position.z;
this._vbF32[this.vbOffset++] = 1;
this._vbF32[this.vbOffset++] = t.width;
this._vbF32[this.vbOffset++] = n;
this._vbF32[this.vbOffset++] = 1;
this._vbF32[this.vbOffset++] = t.velocity.x;
this._vbF32[this.vbOffset++] = t.velocity.y;
this._vbF32[this.vbOffset++] = t.velocity.z;
this._vbUint32[this.vbOffset++] = X._val;
if (1 & s) {
this._iBuffer[this.ibOffset++] = i + 2 * r;
this._iBuffer[this.ibOffset++] = i + 2 * r - 1;
this._iBuffer[this.ibOffset++] = i + 2 * r + 1;
}
if (4 & s) {
this._iBuffer[this.ibOffset++] = i + 2 * r;
this._iBuffer[this.ibOffset++] = i + 2 * r + 1;
this._iBuffer[this.ibOffset++] = i + 2 * r + 2;
}
};
e._updateIA = function(t) {
this._particleSystem && this._particleSystem._assembler && this._particleSystem._assembler.updateIA(1, t, !0, !0);
};
e._checkDirectionReverse = function(t, e) {
T.Vec3.dot(t.velocity, e.velocity) < G ? t.direction = 1 - e.direction : t.direction = e.direction;
};
return t;
})(), _ = k(f.prototype, "_enable", [ w.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), k(f.prototype, "enable", [ w.property ], Object.getOwnPropertyDescriptor(f.prototype, "enable"), f.prototype), 
d = k(f.prototype, "mode", [ r ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return R.TrailMode.Particles;
}
}), p = k(f.prototype, "lifeTime", [ s ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new B.default();
}
}), m = k(f.prototype, "_minParticleDistance", [ w.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return .1;
}
}), k(f.prototype, "minParticleDistance", [ w.property ], Object.getOwnPropertyDescriptor(f.prototype, "minParticleDistance"), f.prototype), 
y = k(f.prototype, "_space", [ w.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return R.Space.World;
}
}), k(f.prototype, "space", [ o ], Object.getOwnPropertyDescriptor(f.prototype, "space"), f.prototype), 
v = k(f.prototype, "existWithParticles", [ w.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !0;
}
}), g = k(f.prototype, "textureMode", [ a ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return R.TextureMode.Stretch;
}
}), b = k(f.prototype, "widthFromParticle", [ w.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !0;
}
}), C = k(f.prototype, "widthRatio", [ c ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new B.default();
}
}), x = k(f.prototype, "colorFromParticle", [ w.property ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return !1;
}
}), A = k(f.prototype, "colorOverTrail", [ l ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new D.default();
}
}), S = k(f.prototype, "colorOvertime", [ u ], {
configurable: !0,
enumerable: !0,
writable: !0,
initializer: function() {
return new D.default();
}
}), f)) || h);
i.default = J;
e.exports = i.default;
}), {
"../../../../renderer/gfx": 354,
"../../../../renderer/memop/pool": 355,
"../../../platform/CCClassDecorator": 231,
"../../../value-types": 328,
"../animator/curve-range": 31,
"../animator/gradient-range": 33,
"../enum": 43,
"../utils": 50
} ],
50: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
Object.is || (Object.is = function(t, e) {
return t === e ? 0 !== t || 1 / t == 1 / e : t != t && e != e;
});
var n = (function() {
function t(t) {
this.datas = [];
!t && (t = []);
this.datas = [];
var e = this;
t.forEach((function(t) {
e.has(t[0]) || e.datas.push({
key: t[0],
value: t[1]
});
}));
}
var e = t.prototype;
e.size = function() {
return this.datas.length;
};
e.set = function(t, e) {
this.delete(t);
this.datas.push({
key: t,
value: e
});
};
e.get = function(t) {
for (var e = void 0, i = this.datas, n = 0, r = i.length; n < r; n++) if (Object.is(t, i[n].key)) {
e = i[n].value;
break;
}
return e;
};
e.has = function(t) {
for (var e = !1, i = this.datas, n = 0, r = i.length; n < r; n++) if (Object.is(t, i[n].key)) {
e = !0;
break;
}
return e;
};
e.clear = function() {
this.datas.length = 0;
};
e.delete = function(t) {
for (var e = !1, i = this.datas, n = 0, r = i.length; n < r; n++) if (Object.is(t, i[n].key)) {
i.splice(n, 1);
e = !0;
break;
}
return e;
};
e.keys = function() {
for (var t = this.datas, e = [], i = 0, n = t.length; i < n; i++) e.push(t[i].key);
return e;
};
e.values = function() {
var t = 0, e = this.datas;
return {
next: function() {
return 0 === e.length || void 0 === e[t] ? {
value: void 0,
done: !0
} : {
value: e[t++].value,
done: !1
};
}
};
};
return t;
})();
i.default = n;
e.exports = i.default;
}), {} ],
51: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function(t, e, i, s) {
void 0 === t && (t = 1);
void 0 === e && (e = 1);
void 0 === i && (i = 1);
void 0 === s && (s = {
widthSegments: 1,
heightSegments: 1,
lengthSegments: 1,
invWinding: !1
});
var v = s.widthSegments, g = s.heightSegments, b = s.lengthSegments, C = s.invWinding, x = .5 * t, A = .5 * e, S = .5 * i, w = [ n.default.set(u, -x, -A, S), n.default.set(h, x, -A, S), n.default.set(f, x, A, S), n.default.set(_, -x, A, S), n.default.set(d, x, -A, -S), n.default.set(p, -x, -A, -S), n.default.set(m, -x, A, -S), n.default.set(y, x, A, -S) ], T = [ [ 2, 3, 1 ], [ 4, 5, 7 ], [ 7, 6, 2 ], [ 1, 0, 4 ], [ 1, 4, 2 ], [ 5, 0, 6 ] ], E = [ [ 0, 0, 1 ], [ 0, 0, -1 ], [ 0, 1, 0 ], [ 0, -1, 0 ], [ 1, 0, 0 ], [ -1, 0, 0 ] ], M = [], B = [], D = [], R = [], I = new n.default(-x, -A, -S), P = new n.default(x, A, S), O = Math.sqrt(x * x + A * A + S * S);
function L(t, e, i) {
var r, s, u, h, f = M.length / 3, _ = T[t], d = E[t];
for (h = 0; h <= i; h++) for (u = 0; u <= e; u++) {
r = u / e;
s = h / i;
n.default.lerp(o, w[_[0]], w[_[1]], r);
n.default.lerp(a, w[_[0]], w[_[2]], s);
n.default.subtract(c, a, w[_[0]]);
n.default.add(l, o, c);
M.push(l.x, l.y, l.z);
B.push(d[0], d[1], d[2]);
D.push(r, s);
if (u < e && h < i) {
var p = e + 1, m = u + h * p, y = u + (h + 1) * p, v = u + 1 + (h + 1) * p, g = u + 1 + h * p;
if (C) {
R.push(f + m, f + y, f + g);
R.push(f + g, f + y, f + v);
} else {
R.push(f + m, f + g, f + y);
R.push(f + y, f + g, f + v);
}
}
}
}
L(0, v, g);
L(4, b, g);
L(1, v, g);
L(5, b, g);
L(3, v, b);
L(2, v, b);
return new r.default(M, B, D, R, I, P, O);
};
var n = s(t("../../value-types/vec3")), r = s(t("./vertex-data"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
var o = new n.default(), a = new n.default(), c = new n.default(), l = new n.default(), u = new n.default(), h = new n.default(), f = new n.default(), _ = new n.default(), d = new n.default(), p = new n.default(), m = new n.default(), y = new n.default();
e.exports = i.default;
}), {
"../../value-types/vec3": 338,
"./vertex-data": 62
} ],
52: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function(t, e, i, s) {
void 0 === t && (t = .5);
void 0 === e && (e = .5);
void 0 === i && (i = 2);
void 0 === s && (s = {
sides: 32,
heightSegments: 32,
arc: 2 * Math.PI
});
var c = i - t - e, l = s.sides, u = s.heightSegments, h = e / i, f = c / i, _ = t / i, d = Math.floor(u * h), p = Math.floor(u * _), m = Math.floor(u * f), y = c + e - i / 2, v = e - i / 2, g = e - i / 2, b = s.arc, C = [], x = [], A = [], S = [], w = Math.max(t, e), T = cc.v3(-w, -i / 2, -w), E = cc.v3(w, i / 2, w), M = i / 2, B = 0, D = [];
(function() {
for (var t = 0; t <= d; ++t) for (var i = t * Math.PI / d / 2, n = Math.sin(i), r = -Math.cos(i), s = 0; s <= l; ++s) {
var o = 2 * s * Math.PI / l - Math.PI / 2, a = Math.sin(o), c = Math.cos(o), h = a * n, f = r, _ = c * n, p = s / l, m = t / u;
C.push(h * e, f * e + g, _ * e);
x.push(h, f, _);
A.push(p, m);
if (t < d && s < l) {
var y = l + 1, v = y * t + s, b = y * (t + 1) + s, w = y * (t + 1) + s + 1, T = y * t + s + 1;
S.push(v, T, b);
S.push(T, w, b);
}
++B;
}
})();
(function() {
for (var i = (t - e) / c, r = 0; r <= m; r++) {
for (var s = [], u = r / m, _ = u * (t - e) + e, d = 0; d <= l; ++d) {
var p = d / l, y = u * f + h, g = p * b - b / 4, w = Math.sin(g), T = Math.cos(g);
C.push(_ * w);
C.push(u * c + v);
C.push(_ * T);
n.default.normalize(o, n.default.set(a, w, -i, T));
x.push(o.x);
x.push(o.y);
x.push(o.z);
A.push(p, y);
s.push(B);
++B;
}
D.push(s);
}
for (var E = 0; E < m; ++E) for (var M = 0; M < l; ++M) {
var R = D[E][M], I = D[E + 1][M], P = D[E + 1][M + 1], O = D[E][M + 1];
S.push(R);
S.push(O);
S.push(I);
S.push(O);
S.push(P);
S.push(I);
}
})();
(function() {
for (var e = 0; e <= p; ++e) for (var i = e * Math.PI / p / 2 + Math.PI / 2, n = Math.sin(i), r = -Math.cos(i), s = 0; s <= l; ++s) {
var o = 2 * s * Math.PI / l - Math.PI / 2, a = Math.sin(o), c = Math.cos(o), h = a * n, f = r, d = c * n, v = s / l, g = e / u + (1 - _);
C.push(h * t, f * t + y, d * t);
x.push(h, f, d);
A.push(v, g);
if (e < p && s < l) {
var b = l + 1, w = b * e + s + D[m][l] + 1, T = b * (e + 1) + s + D[m][l] + 1, E = b * (e + 1) + s + 1 + D[m][l] + 1, M = b * e + s + 1 + D[m][l] + 1;
S.push(w, M, T);
S.push(M, E, T);
}
}
})();
return new r.default(C, x, A, S, T, E, M);
};
var n = s(t("../../value-types/vec3")), r = s(t("./vertex-data"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
var o = cc.v3(0, 0, 0), a = cc.v3(0, 0, 0);
e.exports = i.default;
}), {
"../../value-types/vec3": 338,
"./vertex-data": 62
} ],
53: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function(t, e, i) {
void 0 === t && (t = .5);
void 0 === e && (e = 1);
void 0 === i && (i = {
radialSegments: 32,
heightSegments: 1,
capped: !0,
arc: 2 * Math.PI
});
return (0, n.default)(0, t, e, i);
};
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./cylinder"));
e.exports = i.default;
}), {
"./cylinder": 54
} ],
54: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function(t, e, i, s) {
void 0 === t && (t = .5);
void 0 === e && (e = .5);
void 0 === i && (i = 2);
void 0 === s && (s = {
radialSegments: 32,
heightSegments: 1,
capped: !0,
arc: 2 * Math.PI
});
var c = .5 * i, l = s.radialSegments, u = s.heightSegments, h = s.capped, f = s.arc, _ = 0;
if (!h) {
t > 0 && _++;
e > 0 && _++;
}
var d = (l + 1) * (u + 1);
h && (d += (l + 1) * _ + l * _);
var p = l * u * 2 * 3;
h && (p += l * _ * 3);
var m = new Array(p), y = new Array(3 * d), v = new Array(3 * d), g = new Array(2 * d), b = Math.max(t, e), C = new n.default(-b, -c, -b), x = new n.default(b, c, b), A = Math.sqrt(b * b + c * c), S = 0, w = 0;
(function() {
for (var r = [], s = t - e, h = s * s / i * Math.sign(s), _ = 0; _ <= u; _++) {
for (var d = [], p = _ / u, b = p * s + e, C = 0; C <= l; ++C) {
var x = C / l, A = x * f, T = Math.sin(A), E = Math.cos(A);
y[3 * S] = b * T;
y[3 * S + 1] = p * i - c;
y[3 * S + 2] = b * E;
n.default.normalize(o, n.default.set(a, T, -h, E));
v[3 * S] = o.x;
v[3 * S + 1] = o.y;
v[3 * S + 2] = o.z;
g[2 * S] = 2 * (1 - x) % 1;
g[2 * S + 1] = p;
d.push(S);
++S;
}
r.push(d);
}
for (var M = 0; M < u; ++M) for (var B = 0; B < l; ++B) {
var D = r[M][B], R = r[M + 1][B], I = r[M + 1][B + 1], P = r[M][B + 1];
m[w] = D;
m[++w] = P;
m[++w] = R;
m[++w] = P;
m[++w] = I;
m[++w] = R;
++w;
}
})();
if (h) {
e > 0 && T(!1);
t > 0 && T(!0);
}
return new r.default(y, v, g, m, C, x, A);
function T(i) {
var n, r, s = i ? t : e, o = i ? 1 : -1;
n = S;
for (var a = 1; a <= l; ++a) {
y[3 * S] = 0;
y[3 * S + 1] = c * o;
y[3 * S + 2] = 0;
v[3 * S] = 0;
v[3 * S + 1] = o;
v[3 * S + 2] = 0;
g[2 * S] = .5;
g[2 * S + 1] = .5;
++S;
}
r = S;
for (var u = 0; u <= l; ++u) {
var h = u / l, _ = h * f, d = Math.cos(_), p = Math.sin(_);
y[3 * S] = s * p;
y[3 * S + 1] = c * o;
y[3 * S + 2] = s * d;
v[3 * S] = 0;
v[3 * S + 1] = o;
v[3 * S + 2] = 0;
g[2 * S] = .5 - .5 * p * o;
g[2 * S + 1] = .5 + .5 * d;
++S;
}
for (var b = 0; b < l; ++b) {
var C = n + b, x = r + b;
if (i) {
m[w] = x + 1;
m[++w] = C;
m[++w] = x;
++w;
} else {
m[w] = C;
m[++w] = x + 1;
m[++w] = x;
++w;
}
}
}
};
var n = s(t("../../value-types/vec3")), r = s(t("./vertex-data"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
var o = new n.default(), a = new n.default();
e.exports = i.default;
}), {
"../../value-types/vec3": 338,
"./vertex-data": 62
} ],
55: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
if (t && t.__esModule) return t;
if (null === t || "object" != typeof t && "function" != typeof t) return {
default: t
};
var e = p();
if (e && e.has(t)) return e.get(t);
var i = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
for (var r in t) if (Object.prototype.hasOwnProperty.call(t, r)) {
var s = n ? Object.getOwnPropertyDescriptor(t, r) : null;
s && (s.get || s.set) ? Object.defineProperty(i, r, s) : i[r] = t[r];
}
i.default = t;
e && e.set(t, i);
return i;
})(t("./utils")), r = d(t("./box")), s = d(t("./cone")), o = d(t("./cylinder")), a = d(t("./plane")), c = d(t("./quad")), l = d(t("./sphere")), u = d(t("./torus")), h = d(t("./capsule")), f = t("./polyhedron"), _ = d(t("./vertex-data"));
function d(t) {
return t && t.__esModule ? t : {
default: t
};
}
function p() {
if ("function" != typeof WeakMap) return null;
var t = new WeakMap();
p = function() {
return t;
};
return t;
}
cc.primitive = Object.assign({
box: r.default,
cone: s.default,
cylinder: o.default,
plane: a.default,
quad: c.default,
sphere: l.default,
torus: u.default,
capsule: h.default,
polyhedron: f.polyhedron,
PolyhedronType: f.PolyhedronType,
VertexData: _.default
}, n);
}), {
"./box": 51,
"./capsule": 52,
"./cone": 53,
"./cylinder": 54,
"./plane": 56,
"./polyhedron": 57,
"./quad": 58,
"./sphere": 59,
"./torus": 60,
"./utils": 61,
"./vertex-data": 62
} ],
56: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function(t, e, i) {
void 0 === t && (t = 10);
void 0 === e && (e = 10);
void 0 === i && (i = {
widthSegments: 10,
lengthSegments: 10
});
var s = i.widthSegments, _ = i.lengthSegments, d = .5 * t, p = .5 * e, m = [], y = [], v = [], g = [], b = new n.default(-d, 0, -p), C = new n.default(d, 0, p), x = Math.sqrt(t * t + e * e);
n.default.set(u, -d, 0, p);
n.default.set(h, d, 0, p);
n.default.set(f, -d, 0, -p);
for (var A = 0; A <= _; A++) for (var S = 0; S <= s; S++) {
var w = S / s, T = A / _;
n.default.lerp(o, u, h, w);
n.default.lerp(a, u, f, T);
n.default.sub(c, a, u);
n.default.add(l, o, c);
m.push(l.x, l.y, l.z);
y.push(0, 1, 0);
v.push(w, T);
if (S < s && A < _) {
var E = s + 1, M = S + A * E, B = S + (A + 1) * E, D = S + 1 + (A + 1) * E, R = S + 1 + A * E;
g.push(M, R, B);
g.push(R, D, B);
}
}
return new r.default(m, y, v, g, b, C, x);
};
var n = s(t("../../value-types/vec3")), r = s(t("./vertex-data"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
var o = new n.default(), a = new n.default(), c = new n.default(), l = new n.default(), u = new n.default(), h = new n.default(), f = new n.default();
e.exports = i.default;
}), {
"../../value-types/vec3": 338,
"./vertex-data": 62
} ],
57: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.polyhedron = i.PolyhedronType = void 0;
var n = t("./utils"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./vertex-data")), s = t("../../value-types");
var o = cc.Enum({
Tetrahedron: 0,
Octahedron: 1,
Dodecahedron: 2,
Icosahedron: 3,
Rhombicuboctahedron: 4,
TriangularPrism: 5,
PentagonalPrism: 6,
HexagonalPrism: 7,
SquarePyramid: 8,
PentagonalPyramid: 9,
TriangularDipyramid: 10,
PentagonalDipyramid: 11,
ElongatedSquareDipyramid: 12,
ElongatedPentagonalDipyramid: 13,
ElongatedPentagonalCupola: 14
});
i.PolyhedronType = o;
var a = [];
a[0] = {
vertex: [ [ 0, 0, 1.732051 ], [ 1.632993, 0, -.5773503 ], [ -.8164966, 1.414214, -.5773503 ], [ -.8164966, -1.414214, -.5773503 ] ],
face: [ [ 0, 1, 2 ], [ 0, 2, 3 ], [ 0, 3, 1 ], [ 1, 3, 2 ] ]
};
a[1] = {
vertex: [ [ 0, 0, 1.414214 ], [ 1.414214, 0, 0 ], [ 0, 1.414214, 0 ], [ -1.414214, 0, 0 ], [ 0, -1.414214, 0 ], [ 0, 0, -1.414214 ] ],
face: [ [ 0, 1, 2 ], [ 0, 2, 3 ], [ 0, 3, 4 ], [ 0, 4, 1 ], [ 1, 4, 5 ], [ 1, 5, 2 ], [ 2, 5, 3 ], [ 3, 5, 4 ] ]
};
a[2] = {
vertex: [ [ 0, 0, 1.070466 ], [ .7136442, 0, .7978784 ], [ -.3568221, .618034, .7978784 ], [ -.3568221, -.618034, .7978784 ], [ .7978784, .618034, .3568221 ], [ .7978784, -.618034, .3568221 ], [ -.9341724, .381966, .3568221 ], [ .1362939, 1, .3568221 ], [ .1362939, -1, .3568221 ], [ -.9341724, -.381966, .3568221 ], [ .9341724, .381966, -.3568221 ], [ .9341724, -.381966, -.3568221 ], [ -.7978784, .618034, -.3568221 ], [ -.1362939, 1, -.3568221 ], [ -.1362939, -1, -.3568221 ], [ -.7978784, -.618034, -.3568221 ], [ .3568221, .618034, -.7978784 ], [ .3568221, -.618034, -.7978784 ], [ -.7136442, 0, -.7978784 ], [ 0, 0, -1.070466 ] ],
face: [ [ 0, 1, 4, 7, 2 ], [ 0, 2, 6, 9, 3 ], [ 0, 3, 8, 5, 1 ], [ 1, 5, 11, 10, 4 ], [ 2, 7, 13, 12, 6 ], [ 3, 9, 15, 14, 8 ], [ 4, 10, 16, 13, 7 ], [ 5, 8, 14, 17, 11 ], [ 6, 12, 18, 15, 9 ], [ 10, 11, 17, 19, 16 ], [ 12, 13, 16, 19, 18 ], [ 14, 15, 18, 19, 17 ] ]
};
a[3] = {
vertex: [ [ 0, 0, 1.175571 ], [ 1.051462, 0, .5257311 ], [ .3249197, 1, .5257311 ], [ -.8506508, .618034, .5257311 ], [ -.8506508, -.618034, .5257311 ], [ .3249197, -1, .5257311 ], [ .8506508, .618034, -.5257311 ], [ .8506508, -.618034, -.5257311 ], [ -.3249197, 1, -.5257311 ], [ -1.051462, 0, -.5257311 ], [ -.3249197, -1, -.5257311 ], [ 0, 0, -1.175571 ] ],
face: [ [ 0, 1, 2 ], [ 0, 2, 3 ], [ 0, 3, 4 ], [ 0, 4, 5 ], [ 0, 5, 1 ], [ 1, 5, 7 ], [ 1, 7, 6 ], [ 1, 6, 2 ], [ 2, 6, 8 ], [ 2, 8, 3 ], [ 3, 8, 9 ], [ 3, 9, 4 ], [ 4, 9, 10 ], [ 4, 10, 5 ], [ 5, 10, 7 ], [ 6, 7, 11 ], [ 6, 11, 8 ], [ 7, 10, 11 ], [ 8, 11, 9 ], [ 9, 11, 10 ] ]
};
a[4] = {
vertex: [ [ 0, 0, 1.070722 ], [ .7148135, 0, .7971752 ], [ -.104682, .7071068, .7971752 ], [ -.6841528, .2071068, .7971752 ], [ -.104682, -.7071068, .7971752 ], [ .6101315, .7071068, .5236279 ], [ 1.04156, .2071068, .1367736 ], [ .6101315, -.7071068, .5236279 ], [ -.3574067, 1, .1367736 ], [ -.7888348, -.5, .5236279 ], [ -.9368776, .5, .1367736 ], [ -.3574067, -1, .1367736 ], [ .3574067, 1, -.1367736 ], [ .9368776, -.5, -.1367736 ], [ .7888348, .5, -.5236279 ], [ .3574067, -1, -.1367736 ], [ -.6101315, .7071068, -.5236279 ], [ -1.04156, -.2071068, -.1367736 ], [ -.6101315, -.7071068, -.5236279 ], [ .104682, .7071068, -.7971752 ], [ .6841528, -.2071068, -.7971752 ], [ .104682, -.7071068, -.7971752 ], [ -.7148135, 0, -.7971752 ], [ 0, 0, -1.070722 ] ],
face: [ [ 0, 2, 3 ], [ 1, 6, 5 ], [ 4, 9, 11 ], [ 7, 15, 13 ], [ 8, 16, 10 ], [ 12, 14, 19 ], [ 17, 22, 18 ], [ 20, 21, 23 ], [ 0, 1, 5, 2 ], [ 0, 3, 9, 4 ], [ 0, 4, 7, 1 ], [ 1, 7, 13, 6 ], [ 2, 5, 12, 8 ], [ 2, 8, 10, 3 ], [ 3, 10, 17, 9 ], [ 4, 11, 15, 7 ], [ 5, 6, 14, 12 ], [ 6, 13, 20, 14 ], [ 8, 12, 19, 16 ], [ 9, 17, 18, 11 ], [ 10, 16, 22, 17 ], [ 11, 18, 21, 15 ], [ 13, 15, 21, 20 ], [ 14, 20, 23, 19 ], [ 16, 19, 23, 22 ], [ 18, 22, 23, 21 ] ]
};
a[5] = {
vertex: [ [ 0, 0, 1.322876 ], [ 1.309307, 0, .1889822 ], [ -.9819805, .8660254, .1889822 ], [ .1636634, -1.299038, .1889822 ], [ .3273268, .8660254, -.9449112 ], [ -.8183171, -.4330127, -.9449112 ] ],
face: [ [ 0, 3, 1 ], [ 2, 4, 5 ], [ 0, 1, 4, 2 ], [ 0, 2, 5, 3 ], [ 1, 3, 5, 4 ] ]
};
a[6] = {
vertex: [ [ 0, 0, 1.159953 ], [ 1.013464, 0, .5642542 ], [ -.3501431, .9510565, .5642542 ], [ -.7715208, -.6571639, .5642542 ], [ .6633206, .9510565, -.03144481 ], [ .8682979, -.6571639, -.3996071 ], [ -1.121664, .2938926, -.03144481 ], [ -.2348831, -1.063314, -.3996071 ], [ .5181548, .2938926, -.9953061 ], [ -.5850262, -.112257, -.9953061 ] ],
face: [ [ 0, 1, 4, 2 ], [ 0, 2, 6, 3 ], [ 1, 5, 8, 4 ], [ 3, 6, 9, 7 ], [ 5, 7, 9, 8 ], [ 0, 3, 7, 5, 1 ], [ 2, 4, 8, 9, 6 ] ]
};
a[7] = {
vertex: [ [ 0, 0, 1.118034 ], [ .8944272, 0, .6708204 ], [ -.2236068, .8660254, .6708204 ], [ -.7826238, -.4330127, .6708204 ], [ .6708204, .8660254, .2236068 ], [ 1.006231, -.4330127, -.2236068 ], [ -1.006231, .4330127, .2236068 ], [ -.6708204, -.8660254, -.2236068 ], [ .7826238, .4330127, -.6708204 ], [ .2236068, -.8660254, -.6708204 ], [ -.8944272, 0, -.6708204 ], [ 0, 0, -1.118034 ] ],
face: [ [ 0, 1, 4, 2 ], [ 0, 2, 6, 3 ], [ 1, 5, 8, 4 ], [ 3, 6, 10, 7 ], [ 5, 9, 11, 8 ], [ 7, 10, 11, 9 ], [ 0, 3, 7, 9, 5, 1 ], [ 2, 4, 8, 11, 10, 6 ] ]
};
a[8] = {
vertex: [ [ -.729665, .670121, .319155 ], [ -.655235, -.29213, -.754096 ], [ -.093922, -.607123, .537818 ], [ .702196, .595691, .485187 ], [ .776626, -.36656, -.588064 ] ],
face: [ [ 1, 4, 2 ], [ 0, 1, 2 ], [ 3, 0, 2 ], [ 4, 3, 2 ], [ 4, 1, 0, 3 ] ]
};
a[9] = {
vertex: [ [ -.868849, -.100041, .61257 ], [ -.329458, .976099, .28078 ], [ -.26629, -.013796, -.477654 ], [ -.13392, -1.034115, .229829 ], [ .738834, .707117, -.307018 ], [ .859683, -.535264, -.338508 ] ],
face: [ [ 3, 0, 2 ], [ 5, 3, 2 ], [ 4, 5, 2 ], [ 1, 4, 2 ], [ 0, 1, 2 ], [ 0, 3, 5, 4, 1 ] ]
};
a[10] = {
vertex: [ [ -.610389, .243975, .531213 ], [ -.187812, -.48795, -.664016 ], [ -.187812, .9759, -.664016 ], [ .187812, -.9759, .664016 ], [ .798201, .243975, .132803 ] ],
face: [ [ 1, 3, 0 ], [ 3, 4, 0 ], [ 3, 1, 4 ], [ 0, 2, 1 ], [ 0, 4, 2 ], [ 2, 4, 1 ] ]
};
a[11] = {
vertex: [ [ -1.028778, .392027, -.048786 ], [ -.640503, -.646161, .621837 ], [ -.125162, -.395663, -.540059 ], [ .004683, .888447, -.651988 ], [ .125161, .395663, .540059 ], [ .632925, -.791376, .433102 ], [ 1.031672, .157063, -.354165 ] ],
face: [ [ 3, 2, 0 ], [ 2, 1, 0 ], [ 2, 5, 1 ], [ 0, 4, 3 ], [ 0, 1, 4 ], [ 4, 1, 5 ], [ 2, 3, 6 ], [ 3, 4, 6 ], [ 5, 2, 6 ], [ 4, 5, 6 ] ]
};
a[12] = {
vertex: [ [ -.669867, .334933, -.529576 ], [ -.669867, .334933, .529577 ], [ -.4043, 1.212901, 0 ], [ -.334933, -.669867, -.529576 ], [ -.334933, -.669867, .529577 ], [ .334933, .669867, -.529576 ], [ .334933, .669867, .529577 ], [ .4043, -1.212901, 0 ], [ .669867, -.334933, -.529576 ], [ .669867, -.334933, .529577 ] ],
face: [ [ 8, 9, 7 ], [ 6, 5, 2 ], [ 3, 8, 7 ], [ 5, 0, 2 ], [ 4, 3, 7 ], [ 0, 1, 2 ], [ 9, 4, 7 ], [ 1, 6, 2 ], [ 9, 8, 5, 6 ], [ 8, 3, 0, 5 ], [ 3, 4, 1, 0 ], [ 4, 9, 6, 1 ] ]
};
a[13] = {
vertex: [ [ -.931836, .219976, -.264632 ], [ -.636706, .318353, .692816 ], [ -.613483, -.735083, -.264632 ], [ -.326545, .979634, 0 ], [ -.318353, -.636706, .692816 ], [ -.159176, .477529, -.856368 ], [ .159176, -.477529, -.856368 ], [ .318353, .636706, .692816 ], [ .326545, -.979634, 0 ], [ .613482, .735082, -.264632 ], [ .636706, -.318353, .692816 ], [ .931835, -.219977, -.264632 ] ],
face: [ [ 11, 10, 8 ], [ 7, 9, 3 ], [ 6, 11, 8 ], [ 9, 5, 3 ], [ 2, 6, 8 ], [ 5, 0, 3 ], [ 4, 2, 8 ], [ 0, 1, 3 ], [ 10, 4, 8 ], [ 1, 7, 3 ], [ 10, 11, 9, 7 ], [ 11, 6, 5, 9 ], [ 6, 2, 0, 5 ], [ 2, 4, 1, 0 ], [ 4, 10, 7, 1 ] ]
};
a[14] = {
vertex: [ [ -.93465, .300459, -.271185 ], [ -.838689, -.260219, -.516017 ], [ -.711319, .717591, .128359 ], [ -.710334, -.156922, .080946 ], [ -.599799, .556003, -.725148 ], [ -.503838, -.004675, -.969981 ], [ -.487004, .26021, .48049 ], [ -.460089, -.750282, -.512622 ], [ -.376468, .973135, -.325605 ], [ -.331735, -.646985, .084342 ], [ -.254001, .831847, .530001 ], [ -.125239, -.494738, -.966586 ], [ .029622, .027949, .730817 ], [ .056536, -.982543, -.262295 ], [ .08085, 1.087391, .076037 ], [ .125583, -.532729, .485984 ], [ .262625, .599586, .780328 ], [ .391387, -.726999, -.716259 ], [ .513854, -.868287, .139347 ], [ .597475, .85513, .326364 ], [ .641224, .109523, .783723 ], [ .737185, -.451155, .538891 ], [ .848705, -.612742, -.314616 ], [ .976075, .365067, .32976 ], [ 1.072036, -.19561, .084927 ] ],
face: [ [ 15, 18, 21 ], [ 12, 20, 16 ], [ 6, 10, 2 ], [ 3, 0, 1 ], [ 9, 7, 13 ], [ 2, 8, 4, 0 ], [ 0, 4, 5, 1 ], [ 1, 5, 11, 7 ], [ 7, 11, 17, 13 ], [ 13, 17, 22, 18 ], [ 18, 22, 24, 21 ], [ 21, 24, 23, 20 ], [ 20, 23, 19, 16 ], [ 16, 19, 14, 10 ], [ 10, 14, 8, 2 ], [ 15, 9, 13, 18 ], [ 12, 15, 21, 20 ], [ 6, 12, 16, 10 ], [ 3, 6, 2, 0 ], [ 9, 3, 1, 7 ], [ 9, 15, 12, 6, 3 ], [ 22, 17, 11, 5, 4, 8, 14, 19, 23, 24 ] ]
};
i.polyhedron = function(t, e, i) {
void 0 === e && (e = 1);
void 0 === i && (i = {
sizeX: 0,
sizeY: 0,
sizeZ: 0
});
t = t && (t < 0 || t >= a.length) ? 0 : t || 0;
for (var o = i.sizeX || e, c = i.sizeY || e, l = i.sizeZ || e, u = a[t], h = u.face.length, f = [], _ = [], d = [], p = [], m = new s.Vec3(Infinity, Infinity, Infinity), y = new s.Vec3(-Infinity, -Infinity, -Infinity), v = 0; v < u.vertex.length; v++) {
var g = u.vertex[v][0] * o, b = u.vertex[v][1] * c, C = u.vertex[v][2] * l;
m.x = Math.min(m.x, g);
m.y = Math.min(m.y, b);
m.z = Math.min(m.z, C);
y.x = Math.max(y.x, g);
y.y = Math.max(y.y, b);
y.z = Math.max(y.z, C);
f.push(g, b, C);
p.push(0, 0);
}
for (var x = 0; x < h; x++) for (var A = 0; A < u.face[x].length - 2; A++) _.push(u.face[x][0], u.face[x][A + 2], u.face[x][A + 1]);
(0, n.calcNormals)(f, _, d);
var S = Math.sqrt(Math.pow(y.x - m.x, 2), Math.pow(y.y - m.y, 2), Math.pow(y.z - m.z, 2));
return new r.default(f, d, p, _, m, y, S);
};
}), {
"../../value-types": 328,
"./utils": 61,
"./vertex-data": 62
} ],
58: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function() {
return new n.default(s, o, a, c, l, u, h);
};
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./vertex-data")), r = t("../../value-types");
var s = [ -.5, -.5, 0, -.5, .5, 0, .5, .5, 0, .5, -.5, 0 ], o = [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1 ], a = [ 0, 0, 0, 1, 1, 1, 1, 0 ], c = [ 0, 3, 1, 3, 2, 1 ], l = new r.Vec3(-.5, -.5, 0), u = new r.Vec3(.5, .5, 0), h = Math.sqrt(.5);
e.exports = i.default;
}), {
"../../value-types": 328,
"./vertex-data": 62
} ],
59: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function(t, e) {
void 0 === t && (t = .5);
void 0 === e && (e = {
segments: 32
});
for (var i = e.segments, s = [], o = [], a = [], c = [], l = new r.Vec3(-t, -t, -t), u = new r.Vec3(t, t, t), h = t, f = 0; f <= i; ++f) for (var _ = f * Math.PI / i, d = Math.sin(_), p = -Math.cos(_), m = 0; m <= i; ++m) {
var y = 2 * m * Math.PI / i - Math.PI / 2, v = Math.sin(y), g = Math.cos(y), b = v * d, C = p, x = g * d, A = m / i, S = f / i;
s.push(b * t, C * t, x * t);
o.push(b, C, x);
a.push(A, S);
if (f < i && m < i) {
var w = i + 1, T = w * f + m, E = w * (f + 1) + m, M = w * (f + 1) + m + 1, B = w * f + m + 1;
c.push(T, B, E);
c.push(B, M, E);
}
}
return new n.default(s, o, a, c, l, u, h);
};
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./vertex-data")), r = t("../../value-types");
e.exports = i.default;
}), {
"../../value-types": 328,
"./vertex-data": 62
} ],
60: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function(t, e, i) {
void 0 === t && (t = .4);
void 0 === e && (e = .1);
void 0 === i && (i = {
radialSegments: 32,
tubularSegments: 32,
arc: 2 * Math.PI
});
for (var s = i.radialSegments, o = i.tubularSegments, a = i.arc, c = [], l = [], u = [], h = [], f = new r.Vec3(-t - e, -e, -t - e), _ = new r.Vec3(t + e, e, t + e), d = t + e, p = 0; p <= s; p++) for (var m = 0; m <= o; m++) {
var y = m / o, v = p / s, g = y * a, b = v * Math.PI * 2, C = (t + e * Math.cos(b)) * Math.sin(g), x = e * Math.sin(b), A = (t + e * Math.cos(b)) * Math.cos(g), S = Math.sin(g) * Math.cos(b), w = Math.sin(b), T = Math.cos(g) * Math.cos(b);
c.push(C, x, A);
l.push(S, w, T);
u.push(y, v);
if (m < o && p < s) {
var E = o + 1, M = E * p + m, B = E * (p + 1) + m, D = E * (p + 1) + m + 1, R = E * p + m + 1;
h.push(M, R, B);
h.push(R, D, B);
}
}
return new n.default(c, l, u, h, f, _, d);
};
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./vertex-data")), r = t("../../value-types");
e.exports = i.default;
}), {
"../../value-types": 328,
"./vertex-data": 62
} ],
61: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.wireframe = function(t) {
for (var e = [ [ 0, 1 ], [ 1, 2 ], [ 2, 0 ] ], i = [], n = {}, r = 0; r < t.length; r += 3) for (var s = 0; s < 3; ++s) {
var o = t[r + e[s][0]], a = t[r + e[s][1]], c = o > a ? a << 16 | o : o << 16 | a;
if (void 0 === n[c]) {
n[c] = 0;
i.push(o, a);
}
}
return i;
};
i.invWinding = function(t) {
for (var e = [], i = 0; i < t.length; i += 3) e.push(t[i], t[i + 2], t[i + 1]);
return e;
};
i.toWavefrontOBJ = function(t, e) {
void 0 === e && (e = 1);
for (var i = t.positions, n = t.uvs, r = t.normals, s = t.indices, o = function(t) {
return s[t] + 1 + "/" + (s[t] + 1) + "/" + (s[t] + 1);
}, a = "", c = 0; c < i.length; c += 3) a += "v " + i[c] * e + " " + i[c + 1] * e + " " + i[c + 2] * e + "\n";
for (var l = 0; l < n.length; l += 2) a += "vt " + n[l] + " " + n[l + 1] + "\n";
for (var u = 0; u < r.length; u += 3) a += "vn " + r[u] + " " + r[u + 1] + " " + r[u + 2] + "\n";
for (var h = 0; h < s.length; h += 3) a += "f " + o(h) + " " + o(h + 1) + " " + o(h + 2) + "\n";
return a;
};
i.normals = function(t, e, i) {
void 0 === i && (i = 1);
for (var n = new Array(2 * t.length), r = 0; r < t.length / 3; ++r) {
var s = 3 * r, o = 6 * r;
n[o + 0] = t[s + 0];
n[o + 1] = t[s + 1];
n[o + 2] = t[s + 2];
n[o + 3] = t[s + 0] + e[s + 0] * i;
n[o + 4] = t[s + 1] + e[s + 1] * i;
n[o + 5] = t[s + 2] + e[s + 2] * i;
}
return n;
};
i.calcNormals = function(t, e, i) {
for (var s = 0, o = (i = i || new Array(t.length)).length; s < o; s++) i[s] = 0;
for (var a, c, l, u = cc.v3(), h = cc.v3(), f = cc.v3(), _ = cc.v3(), d = cc.v3(), p = 0, m = e.length; p < m; p += 3) {
a = 3 * e[p + 0];
c = 3 * e[p + 1];
l = 3 * e[p + 2];
r(u, t, a);
r(h, t, c);
r(f, t, l);
n.default.subtract(_, f, h);
n.default.subtract(d, u, h);
n.default.cross(_, _, d);
i[a] += _.x;
i[a + 1] += _.y;
i[a + 2] += _.z;
i[c] += _.x;
i[c + 1] += _.y;
i[c + 2] += _.z;
i[l] += _.x;
i[l + 1] += _.y;
i[l + 2] += _.z;
}
for (var y = cc.v3(), v = 0, g = i.length; v < g; v += 3) {
y.x = i[v];
y.y = i[v + 1];
y.z = i[v + 2];
y.normalizeSelf();
i[v] = y.x;
i[v + 1] = y.y;
i[v + 2] = y.z;
}
return i;
};
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../value-types/vec3"));
function r(t, e, i) {
t.x = e[i];
t.y = e[i + 1];
t.z = e[i + 2];
}
}), {
"../../value-types/vec3": 338
} ],
62: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
i.default = function(t, e, i, n, r, s, o) {
this.positions = void 0;
this.normals = void 0;
this.uvs = void 0;
this.indices = void 0;
this.minPos = void 0;
this.maxPos = void 0;
this.boundingRadius = void 0;
this.positions = t;
this.normals = e;
this.uvs = i;
this.indices = n;
this.minPos = r;
this.maxPos = s;
this.boundingRadius = o;
};
e.exports = i.default;
}), {} ],
63: [ (function(t, e, i) {
"use strict";
var n = t("../../../animation/animation-curves"), r = n.DynamicAnimCurve, s = n.quickFindIndex, o = cc.Class({
name: "cc.JointMatrixCurve",
extends: r,
_findFrameIndex: s,
sample: function(t, e) {
var i = this.ratios, n = this._findFrameIndex(i, e);
n < -1 && (n = ~n - 1);
for (var r = this.pairs, s = 0; s < r.length; s++) {
var o = r[s];
o.target._jointMatrix = o.values[n];
}
}
});
e.exports = o;
}), {
"../../../animation/animation-curves": 11
} ],
64: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.Skeleton",
extends: cc.Asset,
ctor: function() {
this._bindposes = [];
this._uniqueBindPoses = [];
this._jointPaths = [];
},
properties: {
_model: cc.Model,
_jointIndices: [],
_skinIndex: -1,
jointPaths: {
get: function() {
return this._jointPaths;
}
},
bindposes: {
get: function() {
return this._bindposes;
}
},
uniqueBindPoses: {
get: function() {
return this._uniqueBindPoses;
}
},
model: {
get: function() {
return this._model;
}
}
},
onLoad: function() {
for (var t = this._model.nodes, e = this._jointIndices, i = this._jointPaths, n = this._bindposes, r = this._uniqueBindPoses, s = 0; s < e.length; s++) {
var o = t[e[s]];
i[s] = o.path;
o.uniqueBindPose ? n[s] = r[s] = o.uniqueBindPose : n[s] = o.bindpose[this._skinIndex];
}
}
});
cc.Skeleton = e.exports = n;
}), {} ],
65: [ (function(t, e, i) {
"use strict";
var n = t("../../components/CCAnimation"), r = t("../CCModel"), s = t("./CCSkeletonAnimationClip"), o = cc.Class({
name: "cc.SkeletonAnimation",
extends: n,
editor: !1,
properties: {
_model: {
default: null,
type: r
},
_defaultClip: {
override: !0,
default: null,
type: s
},
_clips: {
override: !0,
default: [],
type: [ s ],
visible: !0
},
defaultClip: {
override: !0,
get: function() {
return this._defaultClip;
},
set: function(t) {
this._defaultClip = t;
},
type: s
},
model: {
get: function() {
return this._model;
},
set: function(t) {
this._model = t;
this._updateClipModel();
},
type: r
}
},
__preload: function() {
this._updateClipModel();
},
_updateClipModel: function() {
this._defaultClip && (this._defaultClip._model = this._model);
for (var t = this._clips, e = 0; e < t.length; e++) t[e]._model = this._model;
},
addClip: function(t, e) {
t._model = this._model;
return n.prototype.addClip.call(this, t, e);
},
searchClips: !1
});
cc.SkeletonAnimation = e.exports = o;
}), {
"../../components/CCAnimation": 115,
"../CCModel": 27,
"./CCSkeletonAnimationClip": 66,
"fire-path": void 0
} ],
66: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../value-types/mat4"));
var r = t("../../../animation/animation-clip"), s = t("./CCJointMatrixCurve");
function o(t) {
var e = new Float32Array(16);
e.set(t.m);
return e;
}
var a = cc.Class({
name: "cc.SkeletonAnimationClip",
extends: r,
properties: {
_nativeAsset: {
override: !0,
get: function() {
return this._buffer;
},
set: function(t) {
var e = ArrayBuffer.isView(t) ? t.buffer : t;
this._buffer = new Float32Array(e || t, 0, e.byteLength / 4);
}
},
description: {
default: null,
type: Object
},
curveData: {
visible: !1,
override: !0,
get: function() {
return this._curveData || {};
},
set: function() {}
}
},
statics: {
preventDeferredLoadDependents: !0
},
_init: function() {
if (this._curveData) return this._curveData;
this._curveData = {};
this._generateCommonCurve();
this._model.precomputeJointMatrix && this._generateJointMatrixCurve();
return this._curveData;
},
_generateCommonCurve: function() {
var t = this._buffer, e = this.description, i = 0;
function n() {
return t[i++];
}
this._curveData.paths || (this._curveData.paths = {});
var r = this._curveData.paths;
for (var s in e) {
var o = e[s], a = {};
r[s] = {
props: a
};
for (var c in o) {
var l = [], u = o[c].frameCount;
i = o[c].offset;
for (var h = 0; h < u; h++) {
var f = n(), _ = void 0;
"position" === c || "scale" === c ? _ = cc.v3(n(), n(), n()) : "quat" === c && (_ = cc.quat(n(), n(), n(), n()));
l.push({
frame: f,
value: _
});
}
a[c] = l;
}
}
},
_generateJointMatrixCurve: function() {
var t = this._model.rootNode, e = this._curveData.paths, i = {
ratios: [],
jointMatrixMap: {}
}, r = i.jointMatrixMap;
function s(i, a, c) {
var l, u = e[i.path];
if (i !== t && u) {
var h, f = u.props;
for (var _ in f) for (var d = f[_], p = 0; p < d.length; p++) {
var m = d[p];
if (Math.abs(m.frame - a) < 1e-4) {
i[_].set(m.value);
break;
}
if (m.frame > a) {
var y = d[p - 1], v = (a - y.frame) / (m.frame - y.frame);
y.value.lerp(m.value, v, i[_]);
break;
}
}
l = cc.mat4();
n.default.fromRTS(l, i.quat, i.position, i.scale);
c && n.default.mul(l, c, l);
f._jointMatrix || (f._jointMatrix = []);
if (i.uniqueBindPose) {
h = cc.mat4();
n.default.mul(h, l, i.uniqueBindPose);
}
r[i.path] || (r[i.path] = []);
h ? r[i.path].push(o(h)) : r[i.path].push(l);
}
var g = i.children;
for (var b in g) {
s(g[b], a, l);
}
}
for (var a = 0, c = this.duration, l = 1 / this.sample; a < c; ) {
i.ratios.push(a / c);
s(t, a);
a += l;
}
this._curveData = i;
},
_createJointMatrixCurve: function(t, e) {
var i = new s();
i.ratios = this.curveData.ratios;
i.pairs = [];
var n = this.curveData.jointMatrixMap;
for (var r in n) {
var o = cc.find(r, e);
o && i.pairs.push({
target: o,
values: n[r]
});
}
return [ i ];
},
createCurves: function(t, e) {
if (!this._model) {
cc.warn("Skeleton Animation Clip [" + this.name + "] Can not find model");
return [];
}
this._init();
return this._model.precomputeJointMatrix ? this._createJointMatrixCurve(t, e) : r.prototype.createCurves.call(this, t, e);
}
});
cc.SkeletonAnimationClip = e.exports = a;
}), {
"../../../animation/animation-clip": 10,
"../../value-types/mat4": 330,
"./CCJointMatrixCurve": 63
} ],
67: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../value-types/mat4"));
var r = t("./CCSkeleton"), s = t("../../mesh/CCMeshRenderer"), o = t("../../renderer/render-flow"), a = (t("../../../renderer/enums"), 
cc.mat4()), c = cc.mat4(), l = cc.Class({
name: "cc.SkinnedMeshRenderer",
extends: s,
editor: !1,
ctor: function() {
this._jointsData = this._jointsFloat32Data = null;
this._jointsTexture = null;
this._joints = [];
this._dummyNode = new cc.Node();
this._jointsTextureOptions = null;
this._usingRGBA8Texture = !1;
},
properties: {
_skeleton: r,
_rootBone: cc.Node,
skeleton: {
get: function() {
return this._skeleton;
},
set: function(t) {
this._skeleton = t;
this._init();
},
type: r
},
rootBone: {
get: function() {
return this._rootBone;
},
set: function(t) {
this._rootBone = t;
this._init();
},
type: cc.Node
},
enableAutoBatch: {
get: function() {
return !1;
},
visible: !1,
override: !0
}
},
__preload: function() {
this._super();
this._init();
},
_init: function() {
this._model = this._skeleton && this._skeleton.model;
this._calFunc = null;
this._initJoints();
this._initJointsTexture();
this._initCalcFunc();
this._updateRenderNode();
},
_calcWorldMatrixToRoot: function(t) {
var e = t._worldMatrixToRoot;
if (!e) {
t._worldMatrixToRoot = e = cc.mat4();
t.getLocalMatrix(e);
var i = t.parent;
if (i !== this.rootBone) {
i._worldMatrixToRoot || this._calcWorldMatrixToRoot(i);
n.default.mul(e, i._worldMatrixToRoot, e);
}
}
},
_validateRender: function() {
this._jointsData ? this._super() : this.disableRender();
},
_initJoints: function() {
var t = this._joints;
t.length = 0;
if (this.skeleton && this.rootBone) {
for (var e = this._useJointMatrix(), i = this.skeleton.jointPaths, r = this.rootBone, s = 0; s < i.length; s++) {
var c = cc.find(i[s], r);
c || cc.warn("Can not find joint in root bone [%s] with path [%s]", r.name, i[s]);
if (e) {
c._renderFlag &= ~o.FLAG_CHILDREN;
this._calcWorldMatrixToRoot(c);
}
t.push(c);
}
if (e) for (var l = this.skeleton.uniqueBindPoses, u = 0; u < i.length; u++) {
var h = t[u];
if (l[u]) {
n.default.mul(a, h._worldMatrixToRoot, l[u]);
h._jointMatrix = n.default.toArray([], a);
} else h._jointMatrix = h._worldMatrixToRoot;
}
}
},
_initJointsTexture: function() {
if (this._skeleton) {
var t = this._joints.length, e = !1;
if (t <= cc.sys.getMaxJointMatrixSize()) {
e = !0;
this._jointsData = this._jointsFloat32Data = new Float32Array(16 * t);
}
if (!e) {
var i, n = !!cc.sys.glExtension("OES_texture_float");
i = t > 256 ? 64 : t > 64 ? 32 : t > 16 ? 16 : 8;
this._jointsData = this._jointsFloat32Data = new Float32Array(i * i * 4);
var r = cc.Texture2D.PixelFormat.RGBA32F, s = i, o = i;
if (!n) {
this._jointsData = new Uint8Array(this._jointsFloat32Data.buffer);
r = cc.Texture2D.PixelFormat.RGBA8888;
s *= 4;
this._usingRGBA8Texture = !0;
cc.warn("SkinnedMeshRenderer [" + this.node.name + "] has too many joints [" + t + "] and device do not support float32 texture, fallback to use RGBA8888 texture, which is much slower.");
}
var a = this._jointsTexture || new cc.Texture2D(), c = cc.Texture2D.Filter.NEAREST;
a.setFilters(c, c);
a.initWithData(this._jointsData, r, s, o);
this._jointsTexture = a;
this._jointsTextureOptions = {
format: r,
width: a.width,
height: a.height,
images: []
};
}
this._updateMaterial();
}
},
_updateMaterial: function() {
s.prototype._updateMaterial.call(this);
for (var t = this.getMaterials(), e = 0; e < t.length; e++) {
var i = t[e];
if (this._jointsTexture) {
i.setProperty("jointsTexture", this._jointsTexture);
i.setProperty("jointsTextureSize", new Float32Array([ this._jointsTexture.width, this._jointsTexture.height ]));
i.define("CC_JOINTS_TEXTURE_FLOAT32", !!cc.sys.glExtension("OES_texture_float"));
i.define("CC_USE_JOINTS_TEXTRUE", !0);
} else {
this._jointsFloat32Data && i.setProperty("jointMatrices", this._jointsFloat32Data, void 0, !0);
i.define("CC_USE_JOINTS_TEXTRUE", !1);
}
i.define("CC_USE_SKINNING", !0);
}
},
_setJointsDataWithArray: function(t, e) {
this._jointsFloat32Data.set(e, 16 * t);
},
_setJointsDataWithMatrix: function(t, e) {
this._jointsFloat32Data.set(e.m, 16 * t);
},
_commitJointsData: function() {
if (this._jointsTexture) {
this._jointsTextureOptions.images[0] = this._jointsData;
this._jointsTexture.update(this._jointsTextureOptions);
}
},
_useJointMatrix: function() {
return this._model && this._model.precomputeJointMatrix;
},
_updateRenderNode: function() {
this._useJointMatrix() || this._usingRGBA8Texture ? this._assembler.setRenderNode(this.rootBone) : this._assembler.setRenderNode(this._dummyNode);
},
_initCalcFunc: function() {
this._useJointMatrix() ? this._calFunc = this._calJointMatrix : this._usingRGBA8Texture ? this._calFunc = this._calRGBA8WorldMatrix : this._calFunc = this._calWorldMatrix;
},
_calJointMatrix: function() {
for (var t = this._joints, e = this.skeleton.bindposes, i = this.skeleton.uniqueBindPoses, r = 0; r < t.length; ++r) {
var s = t[r]._jointMatrix;
if (i[r]) this._setJointsDataWithArray(r, s); else {
n.default.multiply(a, s, e[r]);
this._setJointsDataWithMatrix(r, a);
}
}
},
_calRGBA8WorldMatrix: function() {
var t = this._joints, e = this.skeleton.bindposes;
this.rootBone._updateWorldMatrix();
for (var i = this.rootBone._worldMatrix, r = n.default.invert(c, i), s = 0; s < t.length; ++s) {
var o = t[s];
o._updateWorldMatrix();
n.default.multiply(a, r, o._worldMatrix);
n.default.multiply(a, a, e[s]);
this._setJointsDataWithMatrix(s, a);
}
},
_calWorldMatrix: function() {
for (var t = this._joints, e = this.skeleton.bindposes, i = 0; i < t.length; ++i) {
var r = t[i];
r._updateWorldMatrix();
n.default.multiply(a, r._worldMatrix, e[i]);
this._setJointsDataWithMatrix(i, a);
}
},
calcJointMatrix: function() {
if (this.skeleton && this.rootBone) {
this._calFunc.call(this);
this._commitJointsData();
}
}
});
cc.SkinnedMeshRenderer = e.exports = l;
}), {
"../../../renderer/enums": 353,
"../../mesh/CCMeshRenderer": 198,
"../../renderer/render-flow": 263,
"../../value-types/mat4": 330,
"./CCSkeleton": 64
} ],
68: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var l = t("./CCSkinnedMeshRenderer"), u = t("../../mesh/mesh-renderer"), h = (t("../../renderer/render-flow"), 
(function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
e.prototype.fillBuffers = function(e, i) {
e.calcJointMatrix();
t.prototype.fillBuffers.call(this, e, i);
};
return e;
})(u));
i.default = h;
cc.Assembler.register(l, h);
e.exports = i.default;
}), {
"../../mesh/mesh-renderer": 201,
"../../renderer/render-flow": 263,
"./CCSkinnedMeshRenderer": 67
} ],
69: [ (function(t, e, i) {
"use strict";
var n, r = t("./platform/utils"), s = (t("../../DebugInfos"), "https://github.com/cocos-creator/engine/blob/master/EngineErrorMap.md");
cc.log = cc.warn = cc.error = cc.assert = console.log.bind ? console.log.bind(console) : console.log;
cc._throw = function(t) {
r.callInNextTick((function() {
throw t;
}));
};
function o(t) {
return function() {
var e = arguments[0], i = t + " " + e + ", please go to " + s + "#" + e + " to see details.";
if (1 === arguments.length) return i;
if (2 === arguments.length) return i + " Arguments: " + arguments[1];
var n = cc.js.shiftArguments.apply(null, arguments);
return i + " Arguments: " + n.join(", ");
};
}
var a = o("Log");
cc.logID = function() {
cc.log(a.apply(null, arguments));
};
var c = o("Warning");
cc.warnID = function() {
cc.warn(c.apply(null, arguments));
};
var l = o("Error");
cc.errorID = function() {
cc.error(l.apply(null, arguments));
};
var u = o("Assert");
cc.assertID = function(t) {
t || cc.assert(!1, u.apply(null, cc.js.shiftArguments.apply(null, arguments)));
};
var h = cc.Enum({
NONE: 0,
INFO: 1,
WARN: 2,
ERROR: 3,
INFO_FOR_WEB_PAGE: 4,
WARN_FOR_WEB_PAGE: 5,
ERROR_FOR_WEB_PAGE: 6
});
e.exports = cc.debug = {
DebugMode: h,
_resetDebugSetting: function(t) {
cc.log = cc.warn = cc.error = cc.assert = function() {};
if (t !== h.NONE) {
if (t > h.ERROR) {
var e = function(t) {
if (cc.game.canvas) {
if (!n) {
var e = document.createElement("Div");
e.setAttribute("id", "logInfoDiv");
e.setAttribute("width", "200");
e.setAttribute("height", cc.game.canvas.height);
var i = e.style;
i.zIndex = "99999";
i.position = "absolute";
i.top = i.left = "0";
(n = document.createElement("textarea")).setAttribute("rows", "20");
n.setAttribute("cols", "30");
n.setAttribute("disabled", "true");
var r = n.style;
r.backgroundColor = "transparent";
r.borderBottom = "1px solid #cccccc";
r.borderTopWidth = r.borderLeftWidth = r.borderRightWidth = "0px";
r.borderTopStyle = r.borderLeftStyle = r.borderRightStyle = "none";
r.padding = "0px";
r.margin = 0;
e.appendChild(n);
cc.game.canvas.parentNode.appendChild(e);
}
n.value = n.value + t + "\r\n";
n.scrollTop = n.scrollHeight;
}
};
cc.error = function() {
e("ERROR :  " + cc.js.formatStr.apply(null, arguments));
};
cc.assert = function(t, i) {
if (!t && i) {
i = cc.js.formatStr.apply(null, cc.js.shiftArguments.apply(null, arguments));
e("ASSERT: " + i);
}
};
t !== h.ERROR_FOR_WEB_PAGE && (cc.warn = function() {
e("WARN :  " + cc.js.formatStr.apply(null, arguments));
});
t === h.INFO_FOR_WEB_PAGE && (cc.log = function() {
e(cc.js.formatStr.apply(null, arguments));
});
} else if (console && console.log.apply) {
console.error || (console.error = console.log);
console.warn || (console.warn = console.log);
console.error.bind ? cc.error = console.error.bind(console) : cc.error = console.error;
cc.assert = function(t, e) {
if (!t) {
e && (e = cc.js.formatStr.apply(null, cc.js.shiftArguments.apply(null, arguments)));
throw new Error(e);
}
};
}
t !== h.ERROR && (console.warn.bind ? cc.warn = console.warn.bind(console) : cc.warn = console.warn);
t === h.INFO && ("JavaScriptCore" === scriptEngineType ? cc.log = function() {
return console.log.apply(console, arguments);
} : cc.log = console.log);
}
},
getError: o("ERROR"),
isDisplayStats: function() {
return !!cc.profiler && cc.profiler.isShowingStats();
},
setDisplayStats: function(t) {
if (cc.profiler && cc.game.renderType !== cc.game.RENDER_TYPE_CANVAS) {
t ? cc.profiler.showStats() : cc.profiler.hideStats();
cc.game.config.showFPS = !!t;
}
}
};
}), {
"../../DebugInfos": void 0,
"./platform/utils": 254
} ],
70: [ (function(t, e, i) {
"use strict";
var n = t("./event/event-target"), r = t("./load-pipeline/auto-release-utils"), s = t("./component-scheduler"), o = t("./node-activator"), a = t("./platform/CCObject"), c = t("./CCGame"), l = t("./renderer"), u = t("./event-manager"), h = t("./CCScheduler");
cc.Director = function() {
n.call(this);
this._paused = !1;
this._purgeDirectorInNextLoop = !1;
this._winSizeInPoints = null;
this._loadingScene = "";
this._scene = null;
this._totalFrames = 0;
this._lastUpdate = 0;
this._deltaTime = 0;
this._startTime = 0;
this._maxParticleDeltaTime = 0;
this._scheduler = null;
this._compScheduler = null;
this._nodeActivator = null;
this._actionManager = null;
var t = this;
c.on(c.EVENT_SHOW, (function() {
t._lastUpdate = performance.now();
}));
c.once(c.EVENT_ENGINE_INITED, this.init, this);
};
cc.Director.prototype = {
constructor: cc.Director,
init: function() {
this._totalFrames = 0;
this._lastUpdate = performance.now();
this._startTime = this._lastUpdate;
this._paused = !1;
this._purgeDirectorInNextLoop = !1;
this._winSizeInPoints = cc.size(0, 0);
this._scheduler = new h();
if (cc.ActionManager) {
this._actionManager = new cc.ActionManager();
this._scheduler.scheduleUpdate(this._actionManager, h.PRIORITY_SYSTEM, !1);
} else this._actionManager = null;
this.sharedInit();
return !0;
},
sharedInit: function() {
this._compScheduler = new s();
this._nodeActivator = new o();
u && u.setEnabled(!0);
if (cc.AnimationManager) {
this._animationManager = new cc.AnimationManager();
this._scheduler.scheduleUpdate(this._animationManager, h.PRIORITY_SYSTEM, !1);
} else this._animationManager = null;
if (cc.CollisionManager) {
this._collisionManager = new cc.CollisionManager();
this._scheduler.scheduleUpdate(this._collisionManager, h.PRIORITY_SYSTEM, !1);
} else this._collisionManager = null;
if (cc.PhysicsManager) {
this._physicsManager = new cc.PhysicsManager();
this._scheduler.scheduleUpdate(this._physicsManager, h.PRIORITY_SYSTEM, !1);
} else this._physicsManager = null;
if (cc.Physics3DManager) {
this._physics3DManager = new cc.Physics3DManager();
this._scheduler.scheduleUpdate(this._physics3DManager, h.PRIORITY_SYSTEM, !1);
} else this._physics3DManager = null;
cc._widgetManager && cc._widgetManager.init(this);
cc.loader.init(this);
},
calculateDeltaTime: function(t) {
t || (t = performance.now());
this._deltaTime = t > this._lastUpdate ? (t - this._lastUpdate) / 1e3 : 0;
0;
this._lastUpdate = t;
},
convertToGL: function(t) {
var e = c.container, i = cc.view, n = e.getBoundingClientRect(), r = n.left + window.pageXOffset - e.clientLeft, s = n.top + window.pageYOffset - e.clientTop, o = i._devicePixelRatio * (t.x - r), a = i._devicePixelRatio * (s + n.height - t.y);
return i._isRotated ? cc.v2(i._viewportRect.width - a, o) : cc.v2(o, a);
},
convertToUI: function(t) {
var e = c.container, i = cc.view, n = e.getBoundingClientRect(), r = n.left + window.pageXOffset - e.clientLeft, s = n.top + window.pageYOffset - e.clientTop, o = cc.v2(0, 0);
if (i._isRotated) {
o.x = r + t.y / i._devicePixelRatio;
o.y = s + n.height - (i._viewportRect.width - t.x) / i._devicePixelRatio;
} else {
o.x = r + t.x * i._devicePixelRatio;
o.y = s + n.height - t.y * i._devicePixelRatio;
}
return o;
},
end: function() {
this._purgeDirectorInNextLoop = !0;
},
getWinSize: function() {
return cc.size(cc.winSize);
},
getWinSizeInPixels: function() {
return cc.size(cc.winSize);
},
pause: function() {
this._paused || (this._paused = !0);
},
purgeCachedData: function() {
cc.loader.releaseAll();
},
purgeDirector: function() {
this._scheduler.unscheduleAll();
this._compScheduler.unscheduleAll();
this._nodeActivator.reset();
u && u.setEnabled(!1);
cc.isValid(this._scene) && this._scene.destroy();
this._scene = null;
cc.renderer.clear();
cc.AssetLibrary.resetBuiltins();
cc.game.pause();
cc.loader.releaseAll();
},
reset: function() {
this.purgeDirector();
u && u.setEnabled(!0);
this._actionManager && this._scheduler.scheduleUpdate(this._actionManager, cc.Scheduler.PRIORITY_SYSTEM, !1);
this._animationManager && this._scheduler.scheduleUpdate(this._animationManager, cc.Scheduler.PRIORITY_SYSTEM, !1);
this._collisionManager && this._scheduler.scheduleUpdate(this._collisionManager, cc.Scheduler.PRIORITY_SYSTEM, !1);
this._physicsManager && this._scheduler.scheduleUpdate(this._physicsManager, cc.Scheduler.PRIORITY_SYSTEM, !1);
cc.game.resume();
},
runSceneImmediate: function(t, e, i) {
cc.assertID(t instanceof cc.Scene, 1216);
t._load();
for (var n = Object.keys(c._persistRootNodes).map((function(t) {
return c._persistRootNodes[t];
})), s = 0; s < n.length; s++) {
var o = n[s], l = t.getChildByUuid(o.uuid);
if (l) {
var u = l.getSiblingIndex();
l._destroyImmediate();
t.insertChild(o, u);
} else o.parent = t;
}
var h = this._scene, f = h && h.autoReleaseAssets && h.dependAssets;
r.autoRelease(f, t.dependAssets, n);
cc.isValid(h) && h.destroy();
this._scene = null;
a._deferredDestroy();
e && e();
this.emit(cc.Director.EVENT_BEFORE_SCENE_LAUNCH, t);
this._scene = t;
t._activate();
cc.game.resume();
i && i(null, t);
this.emit(cc.Director.EVENT_AFTER_SCENE_LAUNCH, t);
},
runScene: function(t, e, i) {
cc.assertID(t, 1205);
cc.assertID(t instanceof cc.Scene, 1216);
t._load();
this.once(cc.Director.EVENT_AFTER_UPDATE, (function() {
this.runSceneImmediate(t, e, i);
}), this);
},
_getSceneUuid: function(t) {
var e = c._sceneInfos;
if ("string" == typeof t) {
t.endsWith(".fire") || (t += ".fire");
"/" === t[0] || t.startsWith("db://") || (t = "/" + t);
for (var i = 0; i < e.length; i++) {
var n = e[i];
if (n.url.endsWith(t)) return n;
}
} else if ("number" == typeof t) {
if (0 <= t && t < e.length) return e[t];
cc.errorID(1206, t);
} else cc.errorID(1207, t);
return null;
},
loadScene: function(t, e, i) {
if (this._loadingScene) {
cc.warnID(1208, t, this._loadingScene);
return !1;
}
var n = this._getSceneUuid(t);
if (n) {
var r = n.uuid;
this.emit(cc.Director.EVENT_BEFORE_SCENE_LOADING, t);
this._loadingScene = t;
this._loadSceneByUuid(r, e, i);
return !0;
}
cc.errorID(1209, t);
return !1;
},
preloadScene: function(t, e, i) {
if (void 0 === i) {
i = e;
e = null;
}
var n = this._getSceneUuid(t);
if (n) {
this.emit(cc.Director.EVENT_BEFORE_SCENE_LOADING, t);
cc.loader.load({
uuid: n.uuid,
type: "uuid"
}, e, (function(e, n) {
e && cc.errorID(1210, t, e.message);
i && i(e, n);
}));
} else {
var r = 'Can not preload the scene "' + t + '" because it is not in the build settings.';
i(new Error(r));
cc.error("preloadScene: " + r);
}
},
_loadSceneByUuid: function(t, e, i, n) {
0;
console.time("LoadScene " + t);
cc.AssetLibrary.loadAsset(t, (function(n, r) {
console.timeEnd("LoadScene " + t);
var s = cc.director;
s._loadingScene = "";
if (n) {
n = "Failed to load scene: " + n;
cc.error(n);
} else {
if (r instanceof cc.SceneAsset) {
var o = r.scene;
o._id = r._uuid;
o._name = r._name;
s.runSceneImmediate(o, i, e);
return;
}
n = "The asset " + t + " is not a scene";
cc.error(n);
}
e && e(n);
}));
},
resume: function() {
if (this._paused) {
this._lastUpdate = performance.now();
this._lastUpdate || cc.logID(1200);
this._paused = !1;
this._deltaTime = 0;
}
},
setDepthTest: function(t) {
cc.Camera.main && (cc.Camera.main.depth = !!t);
},
setClearColor: function(t) {
cc.Camera.main && (cc.Camera.main.backgroundColor = t);
},
getRunningScene: function() {
return this._scene;
},
getScene: function() {
return this._scene;
},
getAnimationInterval: function() {
return 1e3 / c.getFrameRate();
},
setAnimationInterval: function(t) {
c.setFrameRate(Math.round(1e3 / t));
},
getDeltaTime: function() {
return this._deltaTime;
},
getTotalTime: function() {
return performance.now() - this._startTime;
},
getTotalFrames: function() {
return this._totalFrames;
},
isPaused: function() {
return this._paused;
},
getScheduler: function() {
return this._scheduler;
},
setScheduler: function(t) {
this._scheduler !== t && (this._scheduler = t);
},
getActionManager: function() {
return this._actionManager;
},
setActionManager: function(t) {
if (this._actionManager !== t) {
this._actionManager && this._scheduler.unscheduleUpdate(this._actionManager);
this._actionManager = t;
this._scheduler.scheduleUpdate(this._actionManager, cc.Scheduler.PRIORITY_SYSTEM, !1);
}
},
getAnimationManager: function() {
return this._animationManager;
},
getCollisionManager: function() {
return this._collisionManager;
},
getPhysicsManager: function() {
return this._physicsManager;
},
getPhysics3DManager: function() {
return this._physics3DManager;
},
startAnimation: function() {
cc.game.resume();
},
stopAnimation: function() {
cc.game.pause();
},
_resetDeltaTime: function() {
this._lastUpdate = performance.now();
this._deltaTime = 0;
},
mainLoop: function(t) {
if (this._purgeDirectorInNextLoop) {
this._purgeDirectorInNextLoop = !1;
this.purgeDirector();
} else {
this.calculateDeltaTime(t);
if (!this._paused) {
this.emit(cc.Director.EVENT_BEFORE_UPDATE);
this._compScheduler.startPhase();
this._compScheduler.updatePhase(this._deltaTime);
this._scheduler.update(this._deltaTime);
this._compScheduler.lateUpdatePhase(this._deltaTime);
this._compScheduler.clearup();
this.emit(cc.Director.EVENT_AFTER_UPDATE);
a._deferredDestroy();
}
this.emit(cc.Director.EVENT_BEFORE_DRAW);
l.render(this._scene, this._deltaTime);
this.emit(cc.Director.EVENT_AFTER_DRAW);
u.frameUpdateListeners();
this._totalFrames++;
}
},
__fastOn: function(t, e, i) {
this.on(t, e, i);
},
__fastOff: function(t, e, i) {
this.off(t, e, i);
}
};
cc.js.addon(cc.Director.prototype, n.prototype);
cc.Director.EVENT_PROJECTION_CHANGED = "director_projection_changed";
cc.Director.EVENT_BEFORE_SCENE_LOADING = "director_before_scene_loading";
cc.Director.EVENT_BEFORE_SCENE_LAUNCH = "director_before_scene_launch";
cc.Director.EVENT_AFTER_SCENE_LAUNCH = "director_after_scene_launch";
cc.Director.EVENT_BEFORE_UPDATE = "director_before_update";
cc.Director.EVENT_AFTER_UPDATE = "director_after_update";
cc.Director.EVENT_BEFORE_VISIT = "director_before_draw";
cc.Director.EVENT_AFTER_VISIT = "director_before_draw";
cc.Director.EVENT_BEFORE_DRAW = "director_before_draw";
cc.Director.EVENT_AFTER_DRAW = "director_after_draw";
cc.Director.PROJECTION_2D = 0;
cc.Director.PROJECTION_3D = 1;
cc.Director.PROJECTION_CUSTOM = 3;
cc.Director.PROJECTION_DEFAULT = cc.Director.PROJECTION_2D;
cc.Director.EVENT_BEFORE_PHYSICS = "director_before_physics";
cc.Director.EVENT_AFTER_PHYSICS = "director_after_physics";
cc.director = new cc.Director();
e.exports = cc.director;
}), {
"./CCGame": 71,
"./CCScheduler": 75,
"./component-scheduler": 114,
"./event-manager": 154,
"./event/event-target": 156,
"./load-pipeline/auto-release-utils": 181,
"./node-activator": 202,
"./platform/CCObject": 236,
"./renderer": 262
} ],
71: [ (function(t, e, i) {
"use strict";
var n = t("./event/event-target");
t("../audio/CCAudioEngine");
var r = t("./CCDebug"), s = t("./renderer/index.js"), o = t("../core/renderer/utils/dynamic-atlas/manager"), a = {
EVENT_HIDE: "game_on_hide",
EVENT_SHOW: "game_on_show",
EVENT_RESTART: "game_on_restart",
EVENT_GAME_INITED: "game_inited",
EVENT_ENGINE_INITED: "engine_inited",
EVENT_RENDERER_INITED: "engine_inited",
RENDER_TYPE_CANVAS: 0,
RENDER_TYPE_WEBGL: 1,
RENDER_TYPE_OPENGL: 2,
_persistRootNodes: {},
_paused: !0,
_configLoaded: !1,
_isCloning: !1,
_prepared: !1,
_rendererInitialized: !1,
_renderContext: null,
_intervalId: null,
_lastTime: null,
_frameTime: null,
_sceneInfos: [],
frame: null,
container: null,
canvas: null,
renderType: -1,
config: null,
onStart: null,
setFrameRate: function(t) {
this.config.frameRate = t;
this._intervalId && window.cancelAnimFrame(this._intervalId);
this._intervalId = 0;
this._paused = !0;
this._setAnimFrame();
this._runMainLoop();
},
getFrameRate: function() {
return this.config.frameRate;
},
step: function() {
cc.director.mainLoop();
},
pause: function() {
if (!this._paused) {
this._paused = !0;
cc.audioEngine && cc.audioEngine._break();
this._intervalId && window.cancelAnimFrame(this._intervalId);
this._intervalId = 0;
}
},
resume: function() {
if (this._paused) {
this._paused = !1;
cc.audioEngine && cc.audioEngine._restore();
cc.director._resetDeltaTime();
this._runMainLoop();
}
},
isPaused: function() {
return this._paused;
},
restart: function() {
cc.director.once(cc.Director.EVENT_AFTER_DRAW, (function() {
for (var t in a._persistRootNodes) a.removePersistRootNode(a._persistRootNodes[t]);
cc.director.getScene().destroy();
cc.Object._deferredDestroy();
cc.audioEngine && cc.audioEngine.uncacheAll();
cc.director.reset();
a.pause();
cc.AssetLibrary._loadBuiltins((function() {
a.onStart();
a.emit(a.EVENT_RESTART);
}));
}));
},
end: function() {
close();
},
_initEngine: function() {
if (!this._rendererInitialized) {
this._initRenderer();
this._initEvents();
this.emit(this.EVENT_ENGINE_INITED);
}
},
_loadPreviewScript: function(t) {
t();
},
_prepareFinished: function(t) {
var e = this;
this._initEngine();
this._setAnimFrame();
cc.AssetLibrary._loadBuiltins((function() {
console.log("Cocos Creator v" + cc.ENGINE_VERSION);
e._prepared = !0;
e._runMainLoop();
e.emit(e.EVENT_GAME_INITED);
t && t();
}));
},
eventTargetOn: n.prototype.on,
eventTargetOnce: n.prototype.once,
on: function(t, e, i, n) {
this._prepared && t === this.EVENT_ENGINE_INITED || !this._paused && t === this.EVENT_GAME_INITED ? e.call(i) : this.eventTargetOn(t, e, i, n);
},
once: function(t, e, i) {
this._prepared && t === this.EVENT_ENGINE_INITED || !this._paused && t === this.EVENT_GAME_INITED ? e.call(i) : this.eventTargetOnce(t, e, i);
},
prepare: function(t) {
var e = this;
if (this._prepared) t && t(); else {
var i = this.config.jsList;
i && i.length > 0 ? cc.loader.load(i, (function(i) {
if (i) throw new Error(JSON.stringify(i));
e._loadPreviewScript((function() {
e._prepareFinished(t);
}));
})) : this._loadPreviewScript((function() {
e._prepareFinished(t);
}));
}
},
run: function(t, e) {
this._initConfig(t);
this.onStart = e;
this.prepare(a.onStart && a.onStart.bind(a));
},
addPersistRootNode: function(t) {
if (cc.Node.isNode(t) && t.uuid) {
var e = t.uuid;
if (!this._persistRootNodes[e]) {
var i = cc.director._scene;
if (cc.isValid(i)) if (t.parent) {
if (!(t.parent instanceof cc.Scene)) {
cc.warnID(3801);
return;
}
if (t.parent !== i) {
cc.warnID(3802);
return;
}
} else t.parent = i;
this._persistRootNodes[e] = t;
t._persistNode = !0;
}
} else cc.warnID(3800);
},
removePersistRootNode: function(t) {
var e = t.uuid || "";
if (t === this._persistRootNodes[e]) {
delete this._persistRootNodes[e];
t._persistNode = !1;
}
},
isPersistRootNode: function(t) {
return t._persistNode;
},
_setAnimFrame: function() {
this._lastTime = performance.now();
var t = a.config.frameRate;
this._frameTime = 1e3 / t;
cc.director._maxParticleDeltaTime = this._frameTime / 1e3 * 2;
jsb.setPreferredFramesPerSecond(t);
window.requestAnimFrame = window.requestAnimationFrame;
window.cancelAnimFrame = window.cancelAnimationFrame;
},
_stTime: function(t) {
var e = performance.now(), i = Math.max(0, a._frameTime - (e - a._lastTime)), n = window.setTimeout((function() {
t();
}), i);
a._lastTime = e + i;
return n;
},
_ctTime: function(t) {
window.clearTimeout(t);
},
_runMainLoop: function() {
0;
if (this._prepared) {
var t, e = this, i = e.config, n = cc.director;
i.frameRate;
r.setDisplayStats(i.showFPS);
t = function(i) {
if (!e._paused) {
e._intervalId = window.requestAnimFrame(t);
0;
n.mainLoop(i);
}
};
e._intervalId = window.requestAnimFrame(t);
e._paused = !1;
}
},
_initConfig: function(t) {
"number" != typeof t.debugMode && (t.debugMode = 0);
t.exposeClassName = !!t.exposeClassName;
"number" != typeof t.frameRate && (t.frameRate = 60);
var e = t.renderMode;
("number" != typeof e || e > 2 || e < 0) && (t.renderMode = 0);
"boolean" != typeof t.registerSystemEvent && (t.registerSystemEvent = !0);
t.showFPS = 1 !== e && !!t.showFPS;
this._sceneInfos = t.scenes || [];
this.collisionMatrix = t.collisionMatrix || [];
this.groupList = t.groupList || [];
r._resetDebugSetting(t.debugMode);
this.config = t;
this._configLoaded = !0;
},
_determineRenderType: function() {
var t = this.config, e = parseInt(t.renderMode) || 0;
this.renderType = this.RENDER_TYPE_CANVAS;
var i = !1;
if (0 === e) {
if (cc.sys.capabilities.opengl) {
this.renderType = this.RENDER_TYPE_WEBGL;
i = !0;
} else if (cc.sys.capabilities.canvas) {
this.renderType = this.RENDER_TYPE_CANVAS;
i = !0;
}
} else if (1 === e && cc.sys.capabilities.canvas) {
this.renderType = this.RENDER_TYPE_CANVAS;
i = !0;
} else if (2 === e && cc.sys.capabilities.opengl) {
this.renderType = this.RENDER_TYPE_WEBGL;
i = !0;
}
if (!i) throw new Error(r.getError(3820, e));
},
_initRenderer: function() {
if (!this._rendererInitialized) {
var t, e;
this.config.id;
this.container = e = document.createElement("DIV");
this.frame = e.parentNode === document.body ? document.documentElement : e.parentNode;
t = window.__canvas;
this.canvas = t;
this._determineRenderType();
if (this.renderType === this.RENDER_TYPE_WEBGL) {
var i = {
stencil: !0,
antialias: cc.macro.ENABLE_WEBGL_ANTIALIAS,
alpha: cc.macro.ENABLE_TRANSPARENT_CANVAS
};
s.initWebGL(t, i);
this._renderContext = s.device._gl;
!cc.macro.CLEANUP_IMAGE_CACHE && o && (o.enabled = !0);
}
if (!this._renderContext) {
this.renderType = this.RENDER_TYPE_CANVAS;
s.initCanvas(t);
this._renderContext = s.device._ctx;
}
this.canvas.oncontextmenu = function() {
if (!cc._isContextMenuEnable) return !1;
};
this._rendererInitialized = !0;
}
},
_initEvents: function() {
var t, e = window;
this.config.registerSystemEvent && cc.internal.inputManager.registerSystemEvent(this.canvas);
"undefined" != typeof document.hidden ? t = "hidden" : "undefined" != typeof document.mozHidden ? t = "mozHidden" : "undefined" != typeof document.msHidden ? t = "msHidden" : "undefined" != typeof document.webkitHidden && (t = "webkitHidden");
var i = !1;
function n() {
if (!i) {
i = !0;
a.emit(a.EVENT_HIDE);
}
}
function r(t, e, n, r, s) {
if (i) {
i = !1;
a.emit(a.EVENT_SHOW, t, e, n, r, s);
}
}
if (t) for (var s = [ "visibilitychange", "mozvisibilitychange", "msvisibilitychange", "webkitvisibilitychange", "qbrowserVisibilityChange" ], o = 0; o < s.length; o++) document.addEventListener(s[o], (function(e) {
var i = document[t];
(i = i || e.hidden) ? n() : r();
})); else {
e.addEventListener("blur", n);
e.addEventListener("focus", r);
}
navigator.userAgent.indexOf("MicroMessenger") > -1 && (e.onfocus = r);
if ("onpageshow" in window && "onpagehide" in window) {
e.addEventListener("pagehide", n);
e.addEventListener("pageshow", r);
document.addEventListener("pagehide", n);
document.addEventListener("pageshow", r);
}
this.on(a.EVENT_HIDE, (function() {
a.pause();
}));
this.on(a.EVENT_SHOW, (function() {
a.resume();
}));
}
};
n.call(a);
cc.js.addon(a, n.prototype);
cc.game = e.exports = a;
}), {
"../audio/CCAudioEngine": 21,
"../core/renderer/utils/dynamic-atlas/manager": 265,
"./CCDebug": 69,
"./event/event-target": 156,
"./renderer/index.js": 262
} ],
72: [ (function(t, e, i) {
"use strict";
var n = t("./value-types"), r = t("./utils/base-node"), s = t("./utils/prefab-helper"), o = t("./utils/trans-pool").NodeMemPool, a = t("./utils/affine-transform"), c = t("./event-manager"), l = t("./platform/CCMacro"), u = t("./platform/js"), h = (t("./event/event"), 
t("./event/event-target")), f = t("./renderer/render-flow"), _ = cc.Object.Flags.Destroying, d = Math.PI / 180, p = !!cc.ActionManager, m = function() {}, y = new n.Vec3(), v = new n.Quat(), g = new n.Vec3(), b = new n.Vec3(), C = new n.Quat(), x = new n.Quat(), A = new n.Vec3(), S = new n.Vec3(), w = new n.Vec3(), T = new n.Vec3(), E = new n.Vec3(), M = new n.Quat(), B = new n.Quat(), D = new n.Vec3(), R = new n.Quat(), I = new n.Vec3(), P = new n.Quat(), O = new n.Vec3(), L = new n.Vec3(), V = new n.Quat(), N = new n.Quat(), F = (new n.Quat(), 
cc.mat4()), z = new n.Vec3(), k = new Array(16);
k.length = 0;
var G = cc.Enum({
DEBUG: 31
}), U = cc.Enum({
POSITION: 1,
SCALE: 2,
ROTATION: 4,
SKEW: 8,
TRS: 7,
RS: 6,
TRSS: 15,
PHYSICS_POSITION: 16,
PHYSICS_SCALE: 32,
PHYSICS_ROTATION: 64,
PHYSICS_TRS: 112,
PHYSICS_RS: 96,
ALL_POSITION: 17,
ALL_SCALE: 34,
ALL_ROTATION: 68,
ALL_TRS: 119,
ALL: 65535
}), j = cc.Enum({
TOUCH_START: "touchstart",
TOUCH_MOVE: "touchmove",
TOUCH_END: "touchend",
TOUCH_CANCEL: "touchcancel",
MOUSE_DOWN: "mousedown",
MOUSE_MOVE: "mousemove",
MOUSE_ENTER: "mouseenter",
MOUSE_LEAVE: "mouseleave",
MOUSE_UP: "mouseup",
MOUSE_WHEEL: "mousewheel",
POSITION_CHANGED: "position-changed",
ROTATION_CHANGED: "rotation-changed",
SCALE_CHANGED: "scale-changed",
SIZE_CHANGED: "size-changed",
ANCHOR_CHANGED: "anchor-changed",
COLOR_CHANGED: "color-changed",
CHILD_ADDED: "child-added",
CHILD_REMOVED: "child-removed",
CHILD_REORDER: "child-reorder",
GROUP_CHANGED: "group-changed",
SIBLING_ORDER_CHANGED: "sibling-order-changed"
}), H = [ j.TOUCH_START, j.TOUCH_MOVE, j.TOUCH_END, j.TOUCH_CANCEL ], W = [ j.MOUSE_DOWN, j.MOUSE_ENTER, j.MOUSE_MOVE, j.MOUSE_LEAVE, j.MOUSE_UP, j.MOUSE_WHEEL ], q = !0, X = function(t, e) {
if (0 !== t) {
var i = "";
q && cc.warn("`cc.Node.skewX/Y` is deprecated since v2.2.1, please use 3D node instead.", i);
q = !1;
}
}, Y = null, J = function(t, e) {
var i = t.getLocation(), n = this.owner;
if (n._hitTest(i, this)) {
e.type = j.TOUCH_START;
e.touch = t;
e.bubbles = !0;
n.dispatchEvent(e);
return !0;
}
return !1;
}, Z = function(t, e) {
var i = this.owner;
e.type = j.TOUCH_MOVE;
e.touch = t;
e.bubbles = !0;
i.dispatchEvent(e);
}, K = function(t, e) {
var i = t.getLocation(), n = this.owner;
n._hitTest(i, this) ? e.type = j.TOUCH_END : e.type = j.TOUCH_CANCEL;
e.touch = t;
e.bubbles = !0;
n.dispatchEvent(e);
}, Q = function(t, e) {
t.getLocation();
var i = this.owner;
e.type = j.TOUCH_CANCEL;
e.touch = t;
e.bubbles = !0;
i.dispatchEvent(e);
}, $ = function(t) {
var e = t.getLocation(), i = this.owner;
if (i._hitTest(e, this)) {
t.type = j.MOUSE_DOWN;
t.bubbles = !0;
i.dispatchEvent(t);
}
}, tt = function(t) {
var e = t.getLocation(), i = this.owner;
if (i._hitTest(e, this)) {
if (!this._previousIn) {
if (Y && Y._mouseListener) {
t.type = j.MOUSE_LEAVE;
Y.dispatchEvent(t);
Y._mouseListener._previousIn = !1;
}
Y = this.owner;
t.type = j.MOUSE_ENTER;
i.dispatchEvent(t);
this._previousIn = !0;
}
t.type = j.MOUSE_MOVE;
t.bubbles = !0;
i.dispatchEvent(t);
} else {
if (!this._previousIn) return;
t.type = j.MOUSE_LEAVE;
i.dispatchEvent(t);
this._previousIn = !1;
Y = null;
}
t.stopPropagation();
}, et = function(t) {
var e = t.getLocation(), i = this.owner;
if (i._hitTest(e, this)) {
t.type = j.MOUSE_UP;
t.bubbles = !0;
i.dispatchEvent(t);
t.stopPropagation();
}
}, it = function(t) {
var e = t.getLocation(), i = this.owner;
if (i._hitTest(e, this)) {
t.type = j.MOUSE_WHEEL;
t.bubbles = !0;
i.dispatchEvent(t);
t.stopPropagation();
}
};
function nt(t, e) {
if (e) {
for (var i = 0, n = null, r = t; r && cc.Node.isNode(r); r = r._parent, ++i) if (r.getComponent(e)) {
var s = {
index: i,
node: r
};
n ? n.push(s) : n = [ s ];
}
return n;
}
return null;
}
function rt(t, e) {
if (!(t._objFlags & _)) {
var i = 0;
if (t._bubblingListeners) for (;i < e.length; ++i) if (t._bubblingListeners.hasEventListener(e[i])) return !0;
if (t._capturingListeners) for (;i < e.length; ++i) if (t._capturingListeners.hasEventListener(e[i])) return !0;
return !1;
}
return !0;
}
function st(t, e) {
var i, n;
e.target = t;
k.length = 0;
t._getCapturingTargets(e.type, k);
e.eventPhase = 1;
for (n = k.length - 1; n >= 0; --n) if ((i = k[n])._capturingListeners) {
e.currentTarget = i;
i._capturingListeners.emit(e.type, e, k);
if (e._propagationStopped) {
k.length = 0;
return;
}
}
k.length = 0;
e.eventPhase = 2;
e.currentTarget = t;
t._capturingListeners && t._capturingListeners.emit(e.type, e);
!e._propagationImmediateStopped && t._bubblingListeners && t._bubblingListeners.emit(e.type, e);
if (!e._propagationStopped && e.bubbles) {
t._getBubblingTargets(e.type, k);
e.eventPhase = 3;
for (n = 0; n < k.length; ++n) if ((i = k[n])._bubblingListeners) {
e.currentTarget = i;
i._bubblingListeners.emit(e.type, e);
if (e._propagationStopped) {
k.length = 0;
return;
}
}
}
k.length = 0;
}
function ot(t) {
var e = t.groupIndex;
0 === e && t.parent && (e = ot(t.parent));
return e;
}
function at(t) {
var e = ot(t);
t._cullingMask = 1 << e;
t._proxy && t._proxy.updateCullingMask();
for (var i = 0; i < t._children.length; i++) at(t._children[i]);
}
function ct() {
if (this._localMatDirty & U.TRSS) {
var t = this._matrix, e = t.m;
n.Trs.toMat4(t, this._trs);
if (this._skewX || this._skewY) {
var i = e[0], r = e[1], s = e[4], o = e[5], a = Math.tan(this._skewX * d), c = Math.tan(this._skewY * d);
Infinity === a && (a = 99999999);
Infinity === c && (c = 99999999);
e[0] = i + s * c;
e[1] = r + o * c;
e[4] = s + i * a;
e[5] = o + r * a;
}
this._localMatDirty &= ~U.TRSS;
this._worldMatDirty = !0;
}
}
function lt() {
var t = this._localMatDirty;
if (t & U.TRSS) {
var e = this._matrix.m, i = this._trs;
if (t & (U.RS | U.SKEW)) {
var n = -this._eulerAngles.z, r = this._skewX || this._skewY, s = i[7], o = i[8];
if (n || r) {
var a = 1, c = 0, l = 0, u = 1;
if (n) {
var h = n * d;
l = Math.sin(h);
a = u = Math.cos(h);
c = -l;
}
e[0] = a *= s;
e[1] = c *= s;
e[4] = l *= o;
e[5] = u *= o;
if (r) {
var f = e[0], _ = e[1], p = e[4], m = e[5], y = Math.tan(this._skewX * d), v = Math.tan(this._skewY * d);
Infinity === y && (y = 99999999);
Infinity === v && (v = 99999999);
e[0] = f + p * v;
e[1] = _ + m * v;
e[4] = p + f * y;
e[5] = m + _ * y;
}
} else {
e[0] = s;
e[1] = 0;
e[4] = 0;
e[5] = o;
}
}
e[12] = i[0];
e[13] = i[1];
this._localMatDirty &= ~U.TRSS;
this._worldMatDirty = !0;
}
}
function ut() {
this._localMatDirty & U.TRSS && this._updateLocalMatrix();
if (this._parent) {
var t = this._parent._worldMatrix;
n.Mat4.mul(this._worldMatrix, t, this._matrix);
} else n.Mat4.copy(this._worldMatrix, this._matrix);
this._worldMatDirty = !1;
}
function ht() {
this._localMatDirty & U.TRSS && this._updateLocalMatrix();
var t = this._parent;
t ? this._mulMat(this._worldMatrix, t._worldMatrix, this._matrix) : n.Mat4.copy(this._worldMatrix, this._matrix);
this._worldMatDirty = !1;
}
function ft(t, e, i) {
var n = e.m, r = i.m, s = t.m, o = n[0], a = n[1], c = n[4], l = n[5], u = n[12], h = n[13], f = r[0], _ = r[1], d = r[4], p = r[5], m = r[12], y = r[13];
if (0 !== a || 0 !== c) {
s[0] = f * o + _ * c;
s[1] = f * a + _ * l;
s[4] = d * o + p * c;
s[5] = d * a + p * l;
s[12] = o * m + c * y + u;
s[13] = a * m + l * y + h;
} else {
s[0] = f * o;
s[1] = _ * l;
s[4] = d * o;
s[5] = p * l;
s[12] = o * m + u;
s[13] = l * y + h;
}
}
var _t = n.Mat4.mul, dt = {
name: "cc.Node",
extends: r,
properties: {
_opacity: 255,
_color: cc.Color.WHITE,
_contentSize: cc.Size,
_anchorPoint: cc.v2(.5, .5),
_position: void 0,
_scale: void 0,
_trs: null,
_eulerAngles: cc.Vec3,
_skewX: 0,
_skewY: 0,
_zIndex: {
default: void 0,
type: cc.Integer
},
_localZOrder: {
default: 0,
serializable: !1
},
_is3DNode: !1,
_groupIndex: {
default: 0,
formerlySerializedAs: "groupIndex"
},
groupIndex: {
get: function() {
return this._groupIndex;
},
set: function(t) {
this._groupIndex = t;
at(this);
this.emit(j.GROUP_CHANGED, this);
}
},
group: {
get: function() {
return cc.game.groupList[this.groupIndex] || "";
},
set: function(t) {
this.groupIndex = cc.game.groupList.indexOf(t);
}
},
x: {
get: function() {
return this._trs[0];
},
set: function(t) {
var e = this._trs;
if (t !== e[0]) {
0;
e[0] = t;
this.setLocalDirty(U.ALL_POSITION);
1 & this._eventMask && this.emit(j.POSITION_CHANGED);
}
}
},
y: {
get: function() {
return this._trs[1];
},
set: function(t) {
var e = this._trs;
if (t !== e[1]) {
0;
e[1] = t;
this.setLocalDirty(U.ALL_POSITION);
1 & this._eventMask && this.emit(j.POSITION_CHANGED);
}
}
},
z: {
get: function() {
return this._trs[2];
},
set: function(t) {
var e = this._trs;
if (t !== e[2]) {
e[2] = t;
this.setLocalDirty(U.ALL_POSITION);
1 & this._eventMask && this.emit(j.POSITION_CHANGED);
}
}
},
rotation: {
get: function() {
0;
return -this.angle;
},
set: function(t) {
0;
this.angle = -t;
}
},
angle: {
get: function() {
return this._eulerAngles.z;
},
set: function(t) {
n.Vec3.set(this._eulerAngles, 0, 0, t);
n.Trs.fromAngleZ(this._trs, t);
this.setLocalDirty(U.ALL_ROTATION);
4 & this._eventMask && this.emit(j.ROTATION_CHANGED);
}
},
rotationX: {
get: function() {
0;
return this._eulerAngles.x;
},
set: function(t) {
0;
if (this._eulerAngles.x !== t) {
this._eulerAngles.x = t;
this._eulerAngles.x === this._eulerAngles.y ? n.Trs.fromAngleZ(this._trs, -t) : n.Trs.fromEulerNumber(this._trs, t, this._eulerAngles.y, 0);
this.setLocalDirty(U.ALL_ROTATION);
4 & this._eventMask && this.emit(j.ROTATION_CHANGED);
}
}
},
rotationY: {
get: function() {
0;
return this._eulerAngles.y;
},
set: function(t) {
0;
if (this._eulerAngles.y !== t) {
this._eulerAngles.y = t;
this._eulerAngles.x === this._eulerAngles.y ? n.Trs.fromAngleZ(this._trs, -t) : n.Trs.fromEulerNumber(this._trs, this._eulerAngles.x, t, 0);
this.setLocalDirty(U.ALL_ROTATION);
4 & this._eventMask && this.emit(j.ROTATION_CHANGED);
}
}
},
eulerAngles: {
get: function() {
return n.Trs.toEuler(this._eulerAngles, this._trs);
},
set: function(t) {
0;
n.Trs.fromEuler(this._trs, t);
this.setLocalDirty(U.ALL_ROTATION);
4 & this._eventMask && this.emit(j.ROTATION_CHANGED);
}
},
quat: {
get: function() {
var t = this._trs;
return new n.Quat(t[3], t[4], t[5], t[6]);
},
set: function(t) {
this.setRotation(t);
}
},
scale: {
get: function() {
return this._trs[7];
},
set: function(t) {
this.setScale(t);
}
},
scaleX: {
get: function() {
return this._trs[7];
},
set: function(t) {
if (this._trs[7] !== t) {
this._trs[7] = t;
this.setLocalDirty(U.ALL_SCALE);
2 & this._eventMask && this.emit(j.SCALE_CHANGED);
}
}
},
scaleY: {
get: function() {
return this._trs[8];
},
set: function(t) {
if (this._trs[8] !== t) {
this._trs[8] = t;
this.setLocalDirty(U.ALL_SCALE);
2 & this._eventMask && this.emit(j.SCALE_CHANGED);
}
}
},
scaleZ: {
get: function() {
return this._trs[9];
},
set: function(t) {
if (this._trs[9] !== t) {
this._trs[9] = t;
this.setLocalDirty(U.ALL_SCALE);
2 & this._eventMask && this.emit(j.SCALE_CHANGED);
}
}
},
skewX: {
get: function() {
return this._skewX;
},
set: function(t) {
X(t);
this._skewX = t;
this.setLocalDirty(U.SKEW);
this._proxy.updateSkew();
}
},
skewY: {
get: function() {
return this._skewY;
},
set: function(t) {
X(t);
this._skewY = t;
this.setLocalDirty(U.SKEW);
this._proxy.updateSkew();
}
},
opacity: {
get: function() {
return this._opacity;
},
set: function(t) {
t = cc.misc.clampf(t, 0, 255);
if (this._opacity !== t) {
this._opacity = t;
this._proxy.updateOpacity();
this._renderFlag |= f.FLAG_OPACITY_COLOR;
}
},
range: [ 0, 255 ]
},
color: {
get: function() {
return this._color.clone();
},
set: function(t) {
if (!this._color.equals(t)) {
this._color.set(t);
0;
this._renderFlag |= f.FLAG_COLOR;
32 & this._eventMask && this.emit(j.COLOR_CHANGED, t);
}
}
},
anchorX: {
get: function() {
return this._anchorPoint.x;
},
set: function(t) {
var e = this._anchorPoint;
if (e.x !== t) {
e.x = t;
16 & this._eventMask && this.emit(j.ANCHOR_CHANGED);
}
}
},
anchorY: {
get: function() {
return this._anchorPoint.y;
},
set: function(t) {
var e = this._anchorPoint;
if (e.y !== t) {
e.y = t;
16 & this._eventMask && this.emit(j.ANCHOR_CHANGED);
}
}
},
width: {
get: function() {
return this._contentSize.width;
},
set: function(t) {
if (t !== this._contentSize.width) {
this._contentSize.width = t;
8 & this._eventMask && this.emit(j.SIZE_CHANGED);
}
}
},
height: {
get: function() {
return this._contentSize.height;
},
set: function(t) {
if (t !== this._contentSize.height) {
this._contentSize.height = t;
8 & this._eventMask && this.emit(j.SIZE_CHANGED);
}
}
},
zIndex: {
get: function() {
return this._localZOrder >> 16;
},
set: function(t) {
if (t > l.MAX_ZINDEX) {
cc.warnID(1636);
t = l.MAX_ZINDEX;
} else if (t < l.MIN_ZINDEX) {
cc.warnID(1637);
t = l.MIN_ZINDEX;
}
if (this.zIndex !== t) {
this._localZOrder = 65535 & this._localZOrder | t << 16;
this.emit(j.SIBLING_ORDER_CHANGED);
this._onSiblingIndexChanged();
}
}
},
is3DNode: {
get: function() {
return this._is3DNode;
},
set: function(t) {
this._is3DNode = t;
this._update3DFunction();
}
},
up: {
get: function() {
return n.Vec3.transformQuat(I, n.Vec3.UP, this.getWorldRotation(P)).clone();
}
},
right: {
get: function() {
return n.Vec3.transformQuat(I, n.Vec3.RIGHT, this.getWorldRotation(P)).clone();
}
},
forward: {
get: function() {
return n.Vec3.transformQuat(I, n.Vec3.FORWARD, this.getWorldRotation(P)).clone();
}
}
},
ctor: function() {
this._reorderChildDirty = !1;
this._widget = null;
this._renderComponent = null;
this._capturingListeners = null;
this._bubblingListeners = null;
this._touchListener = null;
this._mouseListener = null;
this._initDataFromPool();
this._eventMask = 0;
this._cullingMask = 1;
this._childArrivalOrder = 1;
this._proxy = new renderer.NodeProxy(this._spaceInfo.unitID, this._spaceInfo.index, this._id, this._name);
this._proxy.init(this);
this._renderFlag = f.FLAG_TRANSFORM | f.FLAG_OPACITY_COLOR;
},
statics: {
EventType: j,
_LocalDirtyFlag: U,
isNode: function(t) {
return t instanceof pt && (t.constructor === pt || !(t instanceof cc.Scene));
},
BuiltinGroupIndex: G
},
_onSiblingIndexChanged: function() {
this._parent && this._parent._delaySort();
},
_onPreDestroy: function() {
this._onPreDestroyBase();
p && cc.director.getActionManager().removeAllActionsFromTarget(this);
Y === this && (Y = null);
if (this._touchListener || this._mouseListener) {
c.removeListeners(this);
if (this._touchListener) {
this._touchListener.owner = null;
this._touchListener.mask = null;
this._touchListener = null;
}
if (this._mouseListener) {
this._mouseListener.owner = null;
this._mouseListener.mask = null;
this._mouseListener = null;
}
}
this._proxy.destroy();
this._proxy = null;
this._backDataIntoPool();
this._reorderChildDirty && cc.director.__fastOff(cc.Director.EVENT_AFTER_UPDATE, this.sortAllChildren, this);
},
_onPostActivated: function(t) {
var e = p ? cc.director.getActionManager() : null;
if (t) {
this._renderFlag |= f.FLAG_WORLD_TRANSFORM;
e && e.resumeTarget(this);
c.resumeTarget(this);
this._checkListenerMask();
} else {
e && e.pauseTarget(this);
c.pauseTarget(this);
}
},
_onHierarchyChanged: function(t) {
this._updateOrderOfArrival();
at(this);
this._parent && this._parent._delaySort();
this._renderFlag |= f.FLAG_WORLD_TRANSFORM;
this._onHierarchyChangedBase(t);
cc._widgetManager && (cc._widgetManager._nodesOrderDirty = !0);
t && this._activeInHierarchy && this._checkListenerMask();
this._proxy.updateParent();
},
_update3DFunction: function() {
if (this._is3DNode) {
this._updateLocalMatrix = ct;
this._calculWorldMatrix = ut;
this._mulMat = _t;
} else {
this._updateLocalMatrix = lt;
this._calculWorldMatrix = ht;
this._mulMat = ft;
}
this._renderComponent && this._renderComponent._on3DNodeChanged && this._renderComponent._on3DNodeChanged();
this._renderFlag |= f.FLAG_TRANSFORM;
this._localMatDirty = U.ALL;
this._proxy.update3DNode();
},
_initDataFromPool: function() {
this._spaceInfo || (this._spaceInfo = o.pop());
var t = this._spaceInfo;
this._matrix = cc.mat4(t.localMat);
n.Mat4.identity(this._matrix);
this._worldMatrix = cc.mat4(t.worldMat);
n.Mat4.identity(this._worldMatrix);
this._localMatDirty = U.ALL;
this._worldMatDirty = !0;
var e = this._trs = this._spaceInfo.trs;
e[0] = 0;
e[1] = 0;
e[2] = 0;
e[3] = 0;
e[4] = 0;
e[5] = 0;
e[6] = 1;
e[7] = 1;
e[8] = 1;
e[9] = 1;
},
_backDataIntoPool: function() {
o.push(this._spaceInfo);
this._matrix = null;
this._worldMatrix = null;
this._trs = null;
this._spaceInfo = null;
},
_toEuler: function() {
if (this.is3DNode) n.Trs.toEuler(this._eulerAngles, this._trs); else {
var t = Math.asin(this._trs[5]) / d * 2;
n.Vec3.set(this._eulerAngles, 0, 0, t);
}
},
_fromEuler: function() {
this.is3DNode ? n.Trs.fromEuler(this._trs, this._eulerAngles) : n.Trs.fromAngleZ(this._trs, this._eulerAngles.z);
},
_upgrade_1x_to_2x: function() {
this._is3DNode && this._update3DFunction();
var t = this._trs;
if (t) {
var e = t;
t = this._trs = this._spaceInfo.trs;
11 === e.length ? t.set(e.subarray(1)) : t.set(e);
} else t = this._trs = this._spaceInfo.trs;
if (void 0 !== this._zIndex) {
this._localZOrder = this._zIndex << 16;
this._zIndex = void 0;
}
this._fromEuler();
0 !== this._localZOrder && (this._zIndex = (4294901760 & this._localZOrder) >> 16);
if (this._color.a < 255 && 255 === this._opacity) {
this._opacity = this._color.a;
this._color.a = 255;
}
this._renderFlag |= f.FLAG_TRANSFORM | f.FLAG_OPACITY_COLOR;
},
_onBatchCreated: function() {
var t = this._prefab;
if (t && t.sync && t.root === this) {
0;
s.syncWithPrefab(this);
}
this._upgrade_1x_to_2x();
this._updateOrderOfArrival();
this._cullingMask = 1 << ot(this);
this._proxy && this._proxy.updateCullingMask();
if (!this._activeInHierarchy) {
p && cc.director.getActionManager().pauseTarget(this);
c.pauseTarget(this);
}
for (var e = this._children, i = 0, n = e.length; i < n; i++) e[i]._onBatchCreated();
e.length > 0 && (this._renderFlag |= f.FLAG_CHILDREN);
this._proxy.initNative();
},
_onBatchRestored: function() {
this._upgrade_1x_to_2x();
this._cullingMask = 1 << ot(this);
this._proxy && this._proxy.updateCullingMask();
if (!this._activeInHierarchy) {
var t = cc.director.getActionManager();
t && t.pauseTarget(this);
c.pauseTarget(this);
}
for (var e = this._children, i = 0, n = e.length; i < n; i++) e[i]._onBatchRestored();
e.length > 0 && (this._renderFlag |= f.FLAG_CHILDREN);
this._proxy.initNative();
},
_checkListenerMask: function() {
if (this._touchListener) {
var t = this._touchListener.mask = nt(this, cc.Mask);
this._mouseListener && (this._mouseListener.mask = t);
} else this._mouseListener && (this._mouseListener.mask = nt(this, cc.Mask));
},
_checknSetupSysEvent: function(t) {
var e = !1, i = !1;
if (-1 !== H.indexOf(t)) {
if (!this._touchListener) {
this._touchListener = cc.EventListener.create({
event: cc.EventListener.TOUCH_ONE_BY_ONE,
swallowTouches: !0,
owner: this,
mask: nt(this, cc.Mask),
onTouchBegan: J,
onTouchMoved: Z,
onTouchEnded: K,
onTouchCancelled: Q
});
c.addListener(this._touchListener, this);
e = !0;
}
i = !0;
} else if (-1 !== W.indexOf(t)) {
if (!this._mouseListener) {
this._mouseListener = cc.EventListener.create({
event: cc.EventListener.MOUSE,
_previousIn: !1,
owner: this,
mask: nt(this, cc.Mask),
onMouseDown: $,
onMouseMove: tt,
onMouseUp: et,
onMouseScroll: it
});
c.addListener(this._mouseListener, this);
e = !0;
}
i = !0;
}
e && !this._activeInHierarchy && cc.director.getScheduler().schedule((function() {
this._activeInHierarchy || c.pauseTarget(this);
}), this, 0, 0, 0, !1);
return i;
},
on: function(t, e, i, n) {
if (this._checknSetupSysEvent(t)) return this._onDispatch(t, e, i, n);
switch (t) {
case j.POSITION_CHANGED:
this._eventMask |= 1;
break;

case j.SCALE_CHANGED:
this._eventMask |= 2;
break;

case j.ROTATION_CHANGED:
this._eventMask |= 4;
break;

case j.SIZE_CHANGED:
this._eventMask |= 8;
break;

case j.ANCHOR_CHANGED:
this._eventMask |= 16;
break;

case j.COLOR_CHANGED:
this._eventMask |= 32;
}
this._bubblingListeners || (this._bubblingListeners = new h());
return this._bubblingListeners.on(t, e, i);
},
once: function(t, e, i, n) {
(this._checknSetupSysEvent(t) && n ? this._capturingListeners = this._capturingListeners || new h() : this._bubblingListeners = this._bubblingListeners || new h()).once(t, e, i);
},
_onDispatch: function(t, e, i, n) {
if ("boolean" == typeof i) {
n = i;
i = void 0;
} else n = !!n;
if (e) {
var r = null;
if (!(r = n ? this._capturingListeners = this._capturingListeners || new h() : this._bubblingListeners = this._bubblingListeners || new h()).hasEventListener(t, e, i)) {
r.on(t, e, i);
i && i.__eventTargets && i.__eventTargets.push(this);
}
return e;
}
cc.errorID(6800);
},
off: function(t, e, i, n) {
var r = -1 !== H.indexOf(t), s = !r && -1 !== W.indexOf(t);
if (r || s) {
this._offDispatch(t, e, i, n);
if (r) {
if (this._touchListener && !rt(this, H)) {
c.removeListener(this._touchListener);
this._touchListener = null;
}
} else if (s && this._mouseListener && !rt(this, W)) {
c.removeListener(this._mouseListener);
this._mouseListener = null;
}
} else if (this._bubblingListeners) {
this._bubblingListeners.off(t, e, i);
if (!this._bubblingListeners.hasEventListener(t)) switch (t) {
case j.POSITION_CHANGED:
this._eventMask &= -2;
break;

case j.SCALE_CHANGED:
this._eventMask &= -3;
break;

case j.ROTATION_CHANGED:
this._eventMask &= -5;
break;

case j.SIZE_CHANGED:
this._eventMask &= -9;
break;

case j.ANCHOR_CHANGED:
this._eventMask &= -17;
break;

case j.COLOR_CHANGED:
this._eventMask &= -33;
}
}
},
_offDispatch: function(t, e, i, n) {
if ("boolean" == typeof i) {
n = i;
i = void 0;
} else n = !!n;
if (e) {
var r = n ? this._capturingListeners : this._bubblingListeners;
if (r) {
r.off(t, e, i);
i && i.__eventTargets && u.array.fastRemove(i.__eventTargets, this);
}
} else {
this._capturingListeners && this._capturingListeners.removeAll(t);
this._bubblingListeners && this._bubblingListeners.removeAll(t);
}
},
targetOff: function(t) {
var e = this._bubblingListeners;
if (e) {
e.targetOff(t);
1 & this._eventMask && !e.hasEventListener(j.POSITION_CHANGED) && (this._eventMask &= -2);
2 & this._eventMask && !e.hasEventListener(j.SCALE_CHANGED) && (this._eventMask &= -3);
4 & this._eventMask && !e.hasEventListener(j.ROTATION_CHANGED) && (this._eventMask &= -5);
8 & this._eventMask && !e.hasEventListener(j.SIZE_CHANGED) && (this._eventMask &= -9);
16 & this._eventMask && !e.hasEventListener(j.ANCHOR_CHANGED) && (this._eventMask &= -17);
32 & this._eventMask && !e.hasEventListener(j.COLOR_CHANGED) && (this._eventMask &= -33);
}
this._capturingListeners && this._capturingListeners.targetOff(t);
t && t.__eventTargets && u.array.fastRemove(t.__eventTargets, this);
if (this._touchListener && !rt(this, H)) {
c.removeListener(this._touchListener);
this._touchListener = null;
}
if (this._mouseListener && !rt(this, W)) {
c.removeListener(this._mouseListener);
this._mouseListener = null;
}
},
hasEventListener: function(t) {
var e = !1;
this._bubblingListeners && (e = this._bubblingListeners.hasEventListener(t));
!e && this._capturingListeners && (e = this._capturingListeners.hasEventListener(t));
return e;
},
emit: function(t, e, i, n, r, s) {
this._bubblingListeners && this._bubblingListeners.emit(t, e, i, n, r, s);
},
dispatchEvent: function(t) {
st(this, t);
k.length = 0;
},
pauseSystemEvents: function(t) {
c.pauseTarget(this, t);
},
resumeSystemEvents: function(t) {
c.resumeTarget(this, t);
},
_hitTest: function(t, e) {
var i = this._contentSize.width, r = this._contentSize.height, s = O, o = L, a = cc.Camera.findCamera(this);
a ? a.getScreenToWorldPoint(t, s) : s.set(t);
this._updateWorldMatrix();
if (!n.Mat4.invert(F, this._worldMatrix)) return !1;
n.Vec2.transformMat4(o, s, F);
o.x += this._anchorPoint.x * i;
o.y += this._anchorPoint.y * r;
var c = !1;
if (o.x >= 0 && o.y >= 0 && o.x <= i && o.y <= r) {
c = !0;
if (e && e.mask) for (var l = e.mask, u = this, h = l ? l.length : 0, f = 0, _ = 0; u && _ < h; ++f, 
u = u.parent) {
var d = l[_];
if (f === d.index) {
if (u !== d.node) {
l.length = _;
break;
}
var p = u.getComponent(cc.Mask);
if (p && p._enabled && !p._hitTest(s)) {
c = !1;
break;
}
_++;
} else if (f > d.index) {
l.length = _;
break;
}
}
}
return c;
},
_getCapturingTargets: function(t, e) {
for (var i = this.parent; i; ) {
i._capturingListeners && i._capturingListeners.hasEventListener(t) && e.push(i);
i = i.parent;
}
},
_getBubblingTargets: function(t, e) {
for (var i = this.parent; i; ) {
i._bubblingListeners && i._bubblingListeners.hasEventListener(t) && e.push(i);
i = i.parent;
}
},
runAction: p ? function(t) {
if (this.active) {
cc.assertID(t, 1618);
var e = cc.director.getActionManager();
if (!e._suppressDeprecation) {
e._suppressDeprecation = !0;
cc.warnID(1639);
}
e.addAction(t, this, !1);
return t;
}
} : m,
pauseAllActions: p ? function() {
cc.director.getActionManager().pauseTarget(this);
} : m,
resumeAllActions: p ? function() {
cc.director.getActionManager().resumeTarget(this);
} : m,
stopAllActions: p ? function() {
cc.director.getActionManager().removeAllActionsFromTarget(this);
} : m,
stopAction: p ? function(t) {
cc.director.getActionManager().removeAction(t);
} : m,
stopActionByTag: p ? function(t) {
t !== cc.Action.TAG_INVALID ? cc.director.getActionManager().removeActionByTag(t, this) : cc.logID(1612);
} : m,
getActionByTag: p ? function(t) {
if (t === cc.Action.TAG_INVALID) {
cc.logID(1613);
return null;
}
return cc.director.getActionManager().getActionByTag(t, this);
} : function() {
return null;
},
getNumberOfRunningActions: p ? function() {
return cc.director.getActionManager().getNumberOfRunningActionsInTarget(this);
} : function() {
return 0;
},
getPosition: function(t) {
t = t || new n.Vec3();
return n.Trs.toPosition(t, this._trs);
},
setPosition: function(t, e, i) {
var n;
if (void 0 === e) {
n = t.x;
e = t.y;
i = t.z || 0;
} else {
n = t;
i = i || 0;
}
var r = this._trs;
if (r[0] !== n || r[1] !== e || r[2] !== i) {
r[0] = n;
r[1] = e;
r[2] = i;
this.setLocalDirty(U.ALL_POSITION);
1 & this._eventMask && this.emit(j.POSITION_CHANGED);
}
},
getScale: function(t) {
if (void 0 !== t) return n.Trs.toScale(t, this._trs);
cc.errorID(1400, "cc.Node.getScale", "cc.Node.scale or cc.Node.getScale(cc.Vec3)");
return this._trs[7];
},
setScale: function(t, e, i) {
if (t && "number" != typeof t) {
e = t.y;
i = void 0 === t.z ? 1 : t.z;
t = t.x;
} else if (void 0 !== t && void 0 === e) {
e = t;
i = t;
} else void 0 === i && (i = 1);
var n = this._trs;
if (n[7] !== t || n[8] !== e || n[9] !== i) {
n[7] = t;
n[8] = e;
n[9] = i;
this.setLocalDirty(U.ALL_SCALE);
2 & this._eventMask && this.emit(j.SCALE_CHANGED);
}
},
getRotation: function(t) {
if (t instanceof n.Quat) return n.Trs.toRotation(t, this._trs);
0;
return -this.angle;
},
setRotation: function(t, e, i, n) {
if ("number" == typeof t && void 0 === e) {
0;
this.angle = -t;
} else {
var r = t;
if (void 0 === e) {
r = t.x;
e = t.y;
i = t.z;
n = t.w;
}
var s = this._trs;
if (s[3] !== r || s[4] !== e || s[5] !== i || s[6] !== n) {
s[3] = r;
s[4] = e;
s[5] = i;
s[6] = n;
this.setLocalDirty(U.ALL_ROTATION);
4 & this._eventMask && this.emit(j.ROTATION_CHANGED);
0;
}
}
},
getContentSize: function() {
return cc.size(this._contentSize.width, this._contentSize.height);
},
setContentSize: function(t, e) {
var i = this._contentSize;
if (void 0 === e) {
if (t.width === i.width && t.height === i.height) return;
0;
i.width = t.width;
i.height = t.height;
} else {
if (t === i.width && e === i.height) return;
0;
i.width = t;
i.height = e;
}
8 & this._eventMask && this.emit(j.SIZE_CHANGED);
},
getAnchorPoint: function() {
return cc.v2(this._anchorPoint);
},
setAnchorPoint: function(t, e) {
var i = this._anchorPoint;
if (void 0 === e) {
if (t.x === i.x && t.y === i.y) return;
i.x = t.x;
i.y = t.y;
} else {
if (t === i.x && e === i.y) return;
i.x = t;
i.y = e;
}
this.setLocalDirty(U.ALL_POSITION);
16 & this._eventMask && this.emit(j.ANCHOR_CHANGED);
},
_invTransformPoint: function(t, e) {
this._parent ? this._parent._invTransformPoint(t, e) : n.Vec3.copy(t, e);
var i = this._trs;
n.Trs.toPosition(g, i);
n.Vec3.sub(t, t, g);
n.Trs.toRotation(C, i);
n.Quat.conjugate(x, C);
n.Vec3.transformQuat(t, t, x);
n.Trs.toScale(g, i);
n.Vec3.inverseSafe(b, g);
n.Vec3.mul(t, t, b);
return t;
},
getWorldPosition: function(t) {
n.Trs.toPosition(t, this._trs);
for (var e, i = this._parent; i; ) {
e = i._trs;
n.Trs.toScale(y, e);
n.Vec3.mul(t, t, y);
n.Trs.toRotation(v, e);
n.Vec3.transformQuat(t, t, v);
n.Trs.toPosition(y, e);
n.Vec3.add(t, t, y);
i = i._parent;
}
return t;
},
setWorldPosition: function(t) {
var e = this._trs;
this._parent ? this._parent._invTransformPoint(A, t) : n.Vec3.copy(A, t);
n.Trs.fromPosition(e, A);
this.setLocalDirty(U.ALL_POSITION);
1 & this._eventMask && this.emit(j.POSITION_CHANGED);
},
getWorldRotation: function(t) {
n.Trs.toRotation(V, this._trs);
n.Quat.copy(t, V);
for (var e = this._parent; e; ) {
n.Trs.toRotation(V, e._trs);
n.Quat.mul(t, V, t);
e = e._parent;
}
return t;
},
setWorldRotation: function(t) {
if (this._parent) {
this._parent.getWorldRotation(N);
n.Quat.conjugate(N, N);
n.Quat.mul(N, N, t);
} else n.Quat.copy(N, t);
n.Trs.fromRotation(this._trs, N);
0;
this.setLocalDirty(U.ALL_ROTATION);
},
getWorldScale: function(t) {
n.Trs.toScale(S, this._trs);
n.Vec3.copy(t, S);
for (var e = this._parent; e; ) {
n.Trs.toScale(S, e._trs);
n.Vec3.mul(t, t, S);
e = e._parent;
}
return t;
},
setWorldScale: function(t) {
if (this._parent) {
this._parent.getWorldScale(w);
n.Vec3.div(w, t, w);
} else n.Vec3.copy(w, t);
n.Trs.fromScale(this._trs, w);
this.setLocalDirty(U.ALL_SCALE);
},
getWorldRT: function(t) {
var e = T, i = M, r = this._trs;
n.Trs.toPosition(e, r);
n.Trs.toRotation(i, r);
for (var s = this._parent; s; ) {
r = s._trs;
n.Trs.toScale(E, r);
n.Vec3.mul(e, e, E);
n.Trs.toRotation(B, r);
n.Vec3.transformQuat(e, e, B);
n.Trs.toPosition(E, r);
n.Vec3.add(e, e, E);
n.Quat.mul(i, B, i);
s = s._parent;
}
n.Mat4.fromRT(t, i, e);
return t;
},
lookAt: function(t, e) {
this.getWorldPosition(D);
n.Vec3.sub(D, D, t);
n.Vec3.normalize(D, D);
n.Quat.fromViewUp(R, D, e);
this.setWorldRotation(R);
},
_updateLocalMatrix: lt,
_calculWorldMatrix: function() {
this._localMatDirty & U.TRSS && this._updateLocalMatrix();
var t = this._parent;
t ? this._mulMat(this._worldMatrix, t._worldMatrix, this._matrix) : n.Mat4.copy(this._worldMatrix, this._matrix);
this._worldMatDirty = !1;
},
_mulMat: ft,
_updateWorldMatrix: function() {
this._parent && this._parent._updateWorldMatrix();
if (this._worldMatDirty) {
this._calculWorldMatrix();
for (var t = this._children, e = 0, i = t.length; e < i; e++) t[e]._worldMatDirty = !0;
}
},
setLocalDirty: function(t) {
this._localMatDirty |= t;
this._worldMatDirty = !0;
t === U.ALL_POSITION || t === U.POSITION ? this._renderFlag |= f.FLAG_WORLD_TRANSFORM : this._renderFlag |= f.FLAG_TRANSFORM;
},
setWorldDirty: function() {
this._worldMatDirty = !0;
},
getLocalMatrix: function(t) {
this._updateLocalMatrix();
return n.Mat4.copy(t, this._matrix);
},
getWorldMatrix: function(t) {
this._updateWorldMatrix();
return n.Mat4.copy(t, this._worldMatrix);
},
convertToNodeSpaceAR: function(t, e) {
this._updateWorldMatrix();
n.Mat4.invert(F, this._worldMatrix);
if (t instanceof cc.Vec2) {
e = e || new cc.Vec2();
return n.Vec2.transformMat4(e, t, F);
}
e = e || new cc.Vec3();
return n.Vec3.transformMat4(e, t, F);
},
convertToWorldSpaceAR: function(t, e) {
this._updateWorldMatrix();
if (t instanceof cc.Vec2) {
e = e || new cc.Vec2();
return n.Vec2.transformMat4(e, t, this._worldMatrix);
}
e = e || new cc.Vec3();
return n.Vec3.transformMat4(e, t, this._worldMatrix);
},
convertToNodeSpace: function(t) {
this._updateWorldMatrix();
n.Mat4.invert(F, this._worldMatrix);
var e = new cc.Vec2();
n.Vec2.transformMat4(e, t, F);
e.x += this._anchorPoint.x * this._contentSize.width;
e.y += this._anchorPoint.y * this._contentSize.height;
return e;
},
convertToWorldSpace: function(t) {
this._updateWorldMatrix();
var e = new cc.Vec2(t.x - this._anchorPoint.x * this._contentSize.width, t.y - this._anchorPoint.y * this._contentSize.height);
return n.Vec2.transformMat4(e, e, this._worldMatrix);
},
getNodeToParentTransform: function(t) {
t || (t = a.identity());
this._updateLocalMatrix();
var e = this._contentSize;
z.x = -this._anchorPoint.x * e.width;
z.y = -this._anchorPoint.y * e.height;
n.Mat4.copy(F, this._matrix);
n.Mat4.transform(F, F, z);
return a.fromMat4(t, F);
},
getNodeToParentTransformAR: function(t) {
t || (t = a.identity());
this._updateLocalMatrix();
return a.fromMat4(t, this._matrix);
},
getNodeToWorldTransform: function(t) {
t || (t = a.identity());
this._updateWorldMatrix();
var e = this._contentSize;
z.x = -this._anchorPoint.x * e.width;
z.y = -this._anchorPoint.y * e.height;
n.Mat4.copy(F, this._worldMatrix);
n.Mat4.transform(F, F, z);
return a.fromMat4(t, F);
},
getNodeToWorldTransformAR: function(t) {
t || (t = a.identity());
this._updateWorldMatrix();
return a.fromMat4(t, this._worldMatrix);
},
getParentToNodeTransform: function(t) {
t || (t = a.identity());
this._updateLocalMatrix();
n.Mat4.invert(F, this._matrix);
return a.fromMat4(t, F);
},
getWorldToNodeTransform: function(t) {
t || (t = a.identity());
this._updateWorldMatrix();
n.Mat4.invert(F, this._worldMatrix);
return a.fromMat4(t, F);
},
convertTouchToNodeSpace: function(t) {
return this.convertToNodeSpace(t.getLocation());
},
convertTouchToNodeSpaceAR: function(t) {
return this.convertToNodeSpaceAR(t.getLocation());
},
getBoundingBox: function() {
this._updateLocalMatrix();
var t = this._contentSize.width, e = this._contentSize.height, i = cc.rect(-this._anchorPoint.x * t, -this._anchorPoint.y * e, t, e);
return i.transformMat4(i, this._matrix);
},
getBoundingBoxToWorld: function() {
if (this._parent) {
this._parent._updateWorldMatrix();
return this._getBoundingBoxTo();
}
return this.getBoundingBox();
},
_getBoundingBoxTo: function() {
var t = this._contentSize.width, e = this._contentSize.height, i = cc.rect(-this._anchorPoint.x * t, -this._anchorPoint.y * e, t, e);
this._calculWorldMatrix();
i.transformMat4(i, this._worldMatrix);
if (!this._children) return i;
for (var n = this._children, r = 0; r < n.length; r++) {
var s = n[r];
if (s && s.active) {
var o = s._getBoundingBoxTo();
o && i.union(i, o);
}
}
return i;
},
_updateOrderOfArrival: function() {
var t = this._parent ? ++this._parent._childArrivalOrder : 0;
this._localZOrder = 4294901760 & this._localZOrder | t;
this.emit(j.SIBLING_ORDER_CHANGED);
},
addChild: function(t, e, i) {
0;
cc.assertID(t, 1606);
cc.assertID(null === t._parent, 1605);
t.parent = this;
void 0 !== e && (t.zIndex = e);
void 0 !== i && (t.name = i);
},
cleanup: function() {
p && cc.director.getActionManager().removeAllActionsFromTarget(this);
c.removeListeners(this);
var t, e, i = this._children.length;
for (t = 0; t < i; ++t) (e = this._children[t]) && e.cleanup();
},
sortAllChildren: function() {
if (this._reorderChildDirty) {
this._reorderChildDirty = !1;
var t = this._children;
this._childArrivalOrder = 1;
for (var e = 0, i = t.length; e < i; e++) (r = t[e])._updateOrderOfArrival();
c._setDirtyForNode(this);
if (t.length > 1) {
for (var n, r, s = 1, o = t.length; s < o; s++) {
r = t[s];
n = s - 1;
for (;n >= 0 && r._localZOrder < t[n]._localZOrder; ) {
t[n + 1] = t[n];
n--;
}
t[n + 1] = r;
}
this.emit(j.CHILD_REORDER, this);
}
cc.director.__fastOff(cc.Director.EVENT_AFTER_UPDATE, this.sortAllChildren, this);
}
},
_delaySort: function() {
if (!this._reorderChildDirty) {
this._reorderChildDirty = !0;
cc.director.__fastOn(cc.Director.EVENT_AFTER_UPDATE, this.sortAllChildren, this);
}
},
_restoreProperties: !1,
onRestore: !1
};
0;
var pt = cc.Class(dt), mt = pt.prototype;
u.getset(mt, "position", mt.getPosition, mt.setPosition, !1, !0);
cc.Node = e.exports = pt;
}), {
"./event-manager": 154,
"./event/event": 157,
"./event/event-target": 156,
"./platform/CCMacro": 235,
"./platform/js": 250,
"./renderer/render-flow": 263,
"./utils/affine-transform": 303,
"./utils/base-node": 304,
"./utils/prefab-helper": 316,
"./utils/trans-pool": 322,
"./value-types": 328
} ],
73: [ (function(t, e, i) {
"use strict";
var n = t("./CCNode"), r = (t("./renderer/render-flow"), cc.Object.Flags.HideInHierarchy, 
n._LocalDirtyFlag), s = cc.Class({
name: "cc.PrivateNode",
extends: n,
properties: {
x: {
get: function() {
return this._originPos.x;
},
set: function(t) {
var e = this._originPos;
if (t !== e.x) {
e.x = t;
this._posDirty(!0);
}
},
override: !0
},
y: {
get: function() {
return this._originPos.y;
},
set: function(t) {
var e = this._originPos;
if (t !== e.y) {
e.y = t;
this._posDirty(!0);
}
},
override: !0
},
zIndex: {
get: function() {
return cc.macro.MIN_ZINDEX;
},
set: function() {
cc.warnID(1638);
},
override: !0
},
showInEditor: {
default: !1,
editorOnly: !0,
override: !0
}
},
ctor: function(t) {
this._localZOrder = cc.macro.MIN_ZINDEX << 16;
this._originPos = cc.v2();
0;
},
_posDirty: function(t) {
this.setLocalDirty(r.POSITION);
!0 === t && 1 & this._eventMask && this.emit(n.EventType.POSITION_CHANGED);
},
_updateLocalMatrix: function() {
if (this._localMatDirty) {
var t = this.parent;
if (t) {
this._trs[0] = this._originPos.x - (t._anchorPoint.x - .5) * t._contentSize.width;
this._trs[1] = this._originPos.y - (t._anchorPoint.y - .5) * t._contentSize.height;
}
this._super();
}
},
getPosition: function() {
return new cc.Vec2(this._originPos);
},
setPosition: function(t, e) {
void 0 === e && (e = (t = t.x).y);
var i = this._originPos;
if (i.x !== t || i.y !== e) {
i.x = t;
i.y = e;
this._posDirty(!0);
}
},
setParent: function(t) {
var e = this._parent;
this._super(t);
if (e !== t) {
e && e.off(n.EventType.ANCHOR_CHANGED, this._posDirty, this);
t && t.on(n.EventType.ANCHOR_CHANGED, this._posDirty, this);
}
},
_updateOrderOfArrival: function() {}
});
cc.js.getset(s.prototype, "parent", s.prototype.getParent, s.prototype.setParent);
cc.js.getset(s.prototype, "position", s.prototype.getPosition, s.prototype.setPosition);
cc.PrivateNode = e.exports = s;
}), {
"./CCNode": 72,
"./renderer/render-flow": 263
} ],
74: [ (function(t, e, i) {
"use strict";
cc.Scene = cc.Class({
name: "cc.Scene",
extends: t("./CCNode"),
properties: {
_is3DNode: {
default: !0,
override: !0
},
autoReleaseAssets: {
default: void 0,
type: cc.Boolean
}
},
ctor: function() {
this._anchorPoint.x = 0;
this._anchorPoint.y = 0;
this._activeInHierarchy = !1;
this._inited = !cc.game._isCloning;
0;
this.dependAssets = null;
},
destroy: function() {
if (cc.Object.prototype.destroy.call(this)) for (var t = this._children, e = 0; e < t.length; ++e) t[e].active = !1;
this._active = !1;
this._activeInHierarchy = !1;
},
_onHierarchyChanged: function() {},
_instantiate: null,
_load: function() {
if (!this._inited) {
0;
this._onBatchCreated();
this._inited = !0;
}
},
_activate: function(t) {
t = !1 !== t;
0;
cc.director._nodeActivator.activateNode(this, t);
}
});
e.exports = cc.Scene;
}), {
"./CCNode": 72
} ],
75: [ (function(t, e, i) {
"use strict";
var n = t("./platform/js"), r = new (t("./platform/id-generater"))("Scheduler"), s = function(t, e, i, n) {
this.target = t;
this.priority = e;
this.paused = i;
this.markedForDeletion = n;
}, o = [];
s.get = function(t, e, i, n) {
var r = o.pop();
if (r) {
r.target = t;
r.priority = e;
r.paused = i;
r.markedForDeletion = n;
} else r = new s(t, e, i, n);
return r;
};
s.put = function(t) {
if (o.length < 20) {
t.target = null;
o.push(t);
}
};
var a = function(t, e, i, n) {
this.list = t;
this.entry = e;
this.target = i;
this.callback = n;
}, c = [];
a.get = function(t, e, i, n) {
var r = c.pop();
if (r) {
r.list = t;
r.entry = e;
r.target = i;
r.callback = n;
} else r = new a(t, e, i, n);
return r;
};
a.put = function(t) {
if (c.length < 20) {
t.list = t.entry = t.target = t.callback = null;
c.push(t);
}
};
var l = function(t, e, i, n, r, s) {
var o = this;
o.timers = t;
o.target = e;
o.timerIndex = i;
o.currentTimer = n;
o.currentTimerSalvaged = r;
o.paused = s;
}, u = [];
l.get = function(t, e, i, n, r, s) {
var o = u.pop();
if (o) {
o.timers = t;
o.target = e;
o.timerIndex = i;
o.currentTimer = n;
o.currentTimerSalvaged = r;
o.paused = s;
} else o = new l(t, e, i, n, r, s);
return o;
};
l.put = function(t) {
if (u.length < 20) {
t.timers = t.target = t.currentTimer = null;
u.push(t);
}
};
function h() {
this._lock = !1;
this._scheduler = null;
this._elapsed = -1;
this._runForever = !1;
this._useDelay = !1;
this._timesExecuted = 0;
this._repeat = 0;
this._delay = 0;
this._interval = 0;
this._target = null;
this._callback = null;
}
var f = h.prototype;
f.initWithCallback = function(t, e, i, n, r, s) {
this._lock = !1;
this._scheduler = t;
this._target = i;
this._callback = e;
this._elapsed = -1;
this._interval = n;
this._delay = s;
this._useDelay = this._delay > 0;
this._repeat = r;
this._runForever = this._repeat === cc.macro.REPEAT_FOREVER;
return !0;
};
f.getInterval = function() {
return this._interval;
};
f.setInterval = function(t) {
this._interval = t;
};
f.update = function(t) {
if (-1 === this._elapsed) {
this._elapsed = 0;
this._timesExecuted = 0;
} else {
this._elapsed += t;
if (this._runForever && !this._useDelay) {
if (this._elapsed >= this._interval) {
this.trigger();
this._elapsed = 0;
}
} else {
if (this._useDelay) {
if (this._elapsed >= this._delay) {
this.trigger();
this._elapsed -= this._delay;
this._timesExecuted += 1;
this._useDelay = !1;
}
} else if (this._elapsed >= this._interval) {
this.trigger();
this._elapsed = 0;
this._timesExecuted += 1;
}
this._callback && !this._runForever && this._timesExecuted > this._repeat && this.cancel();
}
}
};
f.getCallback = function() {
return this._callback;
};
f.trigger = function() {
if (this._target && this._callback) {
this._lock = !0;
this._callback.call(this._target, this._elapsed);
this._lock = !1;
}
};
f.cancel = function() {
this._scheduler.unschedule(this._callback, this._target);
};
var _ = [];
h.get = function() {
return _.pop() || new h();
};
h.put = function(t) {
if (_.length < 20 && !t._lock) {
t._scheduler = t._target = t._callback = null;
_.push(t);
}
};
cc.Scheduler = function() {
this._timeScale = 1;
this._updatesNegList = [];
this._updates0List = [];
this._updatesPosList = [];
this._hashForUpdates = n.createMap(!0);
this._hashForTimers = n.createMap(!0);
this._currentTarget = null;
this._currentTargetSalvaged = !1;
this._updateHashLocked = !1;
this._arrayForTimers = [];
};
cc.Scheduler.prototype = {
constructor: cc.Scheduler,
_removeHashElement: function(t) {
delete this._hashForTimers[t.target._id];
for (var e = this._arrayForTimers, i = 0, n = e.length; i < n; i++) if (e[i] === t) {
e.splice(i, 1);
break;
}
l.put(t);
},
_removeUpdateFromHash: function(t) {
var e = t.target._id, i = this._hashForUpdates[e];
if (i) {
for (var n = i.list, r = i.entry, o = 0, c = n.length; o < c; o++) if (n[o] === r) {
n.splice(o, 1);
break;
}
delete this._hashForUpdates[e];
s.put(r);
a.put(i);
}
},
_priorityIn: function(t, e, i) {
for (var n = 0; n < t.length; n++) if (i < t[n].priority) {
t.splice(n, 0, e);
return;
}
t.push(e);
},
_appendIn: function(t, e) {
t.push(e);
},
enableForTarget: function(t) {
t._id || (t.__instanceId ? cc.warnID(1513) : t._id = r.getNewId());
},
setTimeScale: function(t) {
this._timeScale = t;
},
getTimeScale: function() {
return this._timeScale;
},
update: function(t) {
this._updateHashLocked = !0;
1 !== this._timeScale && (t *= this._timeScale);
var e, i, n, r;
for (e = 0, n = (i = this._updatesNegList).length; e < n; e++) (r = i[e]).paused || r.markedForDeletion || r.target.update(t);
for (e = 0, n = (i = this._updates0List).length; e < n; e++) (r = i[e]).paused || r.markedForDeletion || r.target.update(t);
for (e = 0, n = (i = this._updatesPosList).length; e < n; e++) (r = i[e]).paused || r.markedForDeletion || r.target.update(t);
var s, o = this._arrayForTimers;
for (e = 0; e < o.length; e++) {
s = o[e];
this._currentTarget = s;
this._currentTargetSalvaged = !1;
if (!s.paused) for (s.timerIndex = 0; s.timerIndex < s.timers.length; ++s.timerIndex) {
s.currentTimer = s.timers[s.timerIndex];
s.currentTimerSalvaged = !1;
s.currentTimer.update(t);
s.currentTimer = null;
}
if (this._currentTargetSalvaged && 0 === this._currentTarget.timers.length) {
this._removeHashElement(this._currentTarget);
--e;
}
}
for (e = 0, i = this._updatesNegList; e < i.length; ) (r = i[e]).markedForDeletion ? this._removeUpdateFromHash(r) : e++;
for (e = 0, i = this._updates0List; e < i.length; ) (r = i[e]).markedForDeletion ? this._removeUpdateFromHash(r) : e++;
for (e = 0, i = this._updatesPosList; e < i.length; ) (r = i[e]).markedForDeletion ? this._removeUpdateFromHash(r) : e++;
this._updateHashLocked = !1;
this._currentTarget = null;
},
schedule: function(t, e, i, n, r, s) {
if ("function" != typeof t) {
var o = t;
t = e;
e = o;
}
if (4 === arguments.length || 5 === arguments.length) {
s = !!n;
n = cc.macro.REPEAT_FOREVER;
r = 0;
}
cc.assertID(e, 1502);
var a = e._id;
if (!a) if (e.__instanceId) {
cc.warnID(1513);
a = e._id = e.__instanceId;
} else cc.errorID(1510);
var c, u, f = this._hashForTimers[a];
if (f) f.paused !== s && cc.warnID(1511); else {
f = l.get(null, e, 0, null, null, s);
this._arrayForTimers.push(f);
this._hashForTimers[a] = f;
}
if (null == f.timers) f.timers = []; else for (u = 0; u < f.timers.length; ++u) if ((c = f.timers[u]) && t === c._callback) {
cc.logID(1507, c.getInterval(), i);
c._interval = i;
return;
}
(c = h.get()).initWithCallback(this, t, e, i, n, r);
f.timers.push(c);
this._currentTarget === f && this._currentTargetSalvaged && (this._currentTargetSalvaged = !1);
},
scheduleUpdate: function(t, e, i) {
var n = t._id;
if (!n) if (t.__instanceId) {
cc.warnID(1513);
n = t._id = t.__instanceId;
} else cc.errorID(1510);
var r = this._hashForUpdates[n];
if (r && r.entry) {
if (r.entry.priority === e) {
r.entry.markedForDeletion = !1;
r.entry.paused = i;
return;
}
if (this._updateHashLocked) {
cc.logID(1506);
r.entry.markedForDeletion = !1;
r.entry.paused = i;
return;
}
this.unscheduleUpdate(t);
}
var o, c = s.get(t, e, i, !1);
if (0 === e) {
o = this._updates0List;
this._appendIn(o, c);
} else {
o = e < 0 ? this._updatesNegList : this._updatesPosList;
this._priorityIn(o, c, e);
}
this._hashForUpdates[n] = a.get(o, c, t, null);
},
unschedule: function(t, e) {
if (e && t) {
var i = e._id;
if (!i) if (e.__instanceId) {
cc.warnID(1513);
i = e._id = e.__instanceId;
} else cc.errorID(1510);
var n = this._hashForTimers[i];
if (n) for (var r = n.timers, s = 0, o = r.length; s < o; s++) {
var a = r[s];
if (t === a._callback) {
a !== n.currentTimer || n.currentTimerSalvaged || (n.currentTimerSalvaged = !0);
r.splice(s, 1);
h.put(a);
n.timerIndex >= s && n.timerIndex--;
0 === r.length && (this._currentTarget === n ? this._currentTargetSalvaged = !0 : this._removeHashElement(n));
return;
}
}
}
},
unscheduleUpdate: function(t) {
if (t) {
var e = t._id;
if (!e) if (t.__instanceId) {
cc.warnID(1513);
e = t._id = t.__instanceId;
} else cc.errorID(1510);
var i = this._hashForUpdates[e];
i && (this._updateHashLocked ? i.entry.markedForDeletion = !0 : this._removeUpdateFromHash(i.entry));
}
},
unscheduleAllForTarget: function(t) {
if (t) {
var e = t._id;
if (!e) if (t.__instanceId) {
cc.warnID(1513);
e = t._id = t.__instanceId;
} else cc.errorID(1510);
var i = this._hashForTimers[e];
if (i) {
var n = i.timers;
n.indexOf(i.currentTimer) > -1 && !i.currentTimerSalvaged && (i.currentTimerSalvaged = !0);
for (var r = 0, s = n.length; r < s; r++) h.put(n[r]);
n.length = 0;
this._currentTarget === i ? this._currentTargetSalvaged = !0 : this._removeHashElement(i);
}
this.unscheduleUpdate(t);
}
},
unscheduleAll: function() {
this.unscheduleAllWithMinPriority(cc.Scheduler.PRIORITY_SYSTEM);
},
unscheduleAllWithMinPriority: function(t) {
var e, i, n, r = this._arrayForTimers;
for (e = r.length - 1; e >= 0; e--) {
i = r[e];
this.unscheduleAllForTarget(i.target);
}
var s = 0;
if (t < 0) for (e = 0; e < this._updatesNegList.length; ) {
s = this._updatesNegList.length;
(n = this._updatesNegList[e]) && n.priority >= t && this.unscheduleUpdate(n.target);
s == this._updatesNegList.length && e++;
}
if (t <= 0) for (e = 0; e < this._updates0List.length; ) {
s = this._updates0List.length;
(n = this._updates0List[e]) && this.unscheduleUpdate(n.target);
s == this._updates0List.length && e++;
}
for (e = 0; e < this._updatesPosList.length; ) {
s = this._updatesPosList.length;
(n = this._updatesPosList[e]) && n.priority >= t && this.unscheduleUpdate(n.target);
s == this._updatesPosList.length && e++;
}
},
isScheduled: function(t, e) {
cc.assertID(t, 1508);
cc.assertID(e, 1509);
var i = e._id;
if (!i) if (e.__instanceId) {
cc.warnID(1513);
i = e._id = e.__instanceId;
} else cc.errorID(1510);
var n = this._hashForTimers[i];
if (!n) return !1;
if (null == n.timers) return !1;
for (var r = n.timers, s = 0; s < r.length; ++s) {
if (t === r[s]._callback) return !0;
}
return !1;
},
pauseAllTargets: function() {
return this.pauseAllTargetsWithMinPriority(cc.Scheduler.PRIORITY_SYSTEM);
},
pauseAllTargetsWithMinPriority: function(t) {
var e, i, n, r, s = [], o = this._arrayForTimers;
for (i = 0, n = o.length; i < n; i++) if (e = o[i]) {
e.paused = !0;
s.push(e.target);
}
if (t < 0) for (i = 0; i < this._updatesNegList.length; i++) if ((r = this._updatesNegList[i]) && r.priority >= t) {
r.paused = !0;
s.push(r.target);
}
if (t <= 0) for (i = 0; i < this._updates0List.length; i++) if (r = this._updates0List[i]) {
r.paused = !0;
s.push(r.target);
}
for (i = 0; i < this._updatesPosList.length; i++) if ((r = this._updatesPosList[i]) && r.priority >= t) {
r.paused = !0;
s.push(r.target);
}
return s;
},
resumeTargets: function(t) {
if (t) for (var e = 0; e < t.length; e++) this.resumeTarget(t[e]);
},
pauseTarget: function(t) {
cc.assertID(t, 1503);
var e = t._id;
if (!e) if (t.__instanceId) {
cc.warnID(1513);
e = t._id = t.__instanceId;
} else cc.errorID(1510);
var i = this._hashForTimers[e];
i && (i.paused = !0);
var n = this._hashForUpdates[e];
n && (n.entry.paused = !0);
},
resumeTarget: function(t) {
cc.assertID(t, 1504);
var e = t._id;
if (!e) if (t.__instanceId) {
cc.warnID(1513);
e = t._id = t.__instanceId;
} else cc.errorID(1510);
var i = this._hashForTimers[e];
i && (i.paused = !1);
var n = this._hashForUpdates[e];
n && (n.entry.paused = !1);
},
isTargetPaused: function(t) {
cc.assertID(t, 1505);
var e = t._id;
if (!e) if (t.__instanceId) {
cc.warnID(1513);
e = t._id = t.__instanceId;
} else cc.errorID(1510);
var i = this._hashForTimers[e];
if (i) return i.paused;
var n = this._hashForUpdates[e];
return !!n && n.entry.paused;
}
};
cc.Scheduler.PRIORITY_SYSTEM = 1 << 31;
cc.Scheduler.PRIORITY_NON_SYSTEM = cc.Scheduler.PRIORITY_SYSTEM + 1;
e.exports = cc.Scheduler;
}), {
"./platform/id-generater": 246,
"./platform/js": 250
} ],
76: [ (function(t, e, i) {
"use strict";
var n = t("./CCRawAsset");
cc.Asset = cc.Class({
name: "cc.Asset",
extends: n,
ctor: function() {
this.loaded = !0;
this.url = "";
},
properties: {
nativeUrl: {
get: function() {
if (this._native) {
var t = this._native;
if (47 === t.charCodeAt(0)) return t.slice(1);
if (cc.AssetLibrary) {
var e = cc.AssetLibrary.getLibUrlNoExt(this._uuid, !0);
return 46 === t.charCodeAt(0) ? e + t : e + "/" + t;
}
cc.errorID(6400);
}
return "";
},
visible: !1
},
_native: "",
_nativeAsset: {
get: function() {
return this._$nativeAsset;
},
set: function(t) {
this._$nativeAsset = t;
}
}
},
statics: {
deserialize: !1,
preventDeferredLoadDependents: !1,
preventPreloadNativeObject: !1
},
toString: function() {
return this.nativeUrl;
},
serialize: !1,
createNode: null,
_setRawAsset: function(t, e) {
this._native = !1 !== e ? t || void 0 : "/" + t;
}
});
e.exports = cc.Asset;
}), {
"./CCRawAsset": 84
} ],
77: [ (function(t, e, i) {
"use strict";
var n = t("./CCAsset"), r = t("../event/event-target"), s = cc.Enum({
WEB_AUDIO: 0,
DOM_AUDIO: 1
}), o = cc.Class({
name: "cc.AudioClip",
extends: n,
mixins: [ r ],
ctor: function() {
this.loaded = !1;
this._audio = null;
},
properties: {
loadMode: {
default: s.WEB_AUDIO,
type: s
},
_nativeAsset: {
get: function() {
return this._audio;
},
set: function(t) {
t instanceof cc.AudioClip ? this._audio = t._nativeAsset : this._audio = t;
if (this._audio) {
this.loaded = !0;
this.emit("load");
}
},
override: !0
}
},
statics: {
LoadMode: s,
_loadByUrl: function(t, e) {
var i = cc.loader.getItem(t) || cc.loader.getItem(t + "?useDom=1");
i && i.complete ? i._owner instanceof o ? e(null, i._owner) : e(null, i.content) : cc.loader.load(t, (function(n, r) {
if (n) return e(n);
i = cc.loader.getItem(t) || cc.loader.getItem(t + "?useDom=1");
e(null, i.content);
}));
}
},
destroy: function() {
cc.audioEngine.uncache(this);
this._super();
}
});
cc.AudioClip = o;
e.exports = o;
}), {
"../event/event-target": 156,
"./CCAsset": 76
} ],
78: [ (function(t, e, i) {
"use strict";
var n = function() {
this.u = 0;
this.v = 0;
this.w = 0;
this.h = 0;
this.offsetX = 0;
this.offsetY = 0;
this.textureID = 0;
this.valid = !1;
this.xAdvance = 0;
}, r = function(t) {
this._letterDefinitions = {};
this._texture = t;
};
r.prototype = {
constructor: r,
addLetterDefinitions: function(t, e) {
this._letterDefinitions[t] = e;
},
cloneLetterDefinition: function() {
var t = {};
for (var e in this._letterDefinitions) {
var i = new n();
cc.js.mixin(i, this._letterDefinitions[e]);
t[e] = i;
}
return t;
},
getTexture: function() {
return this._texture;
},
getLetter: function(t) {
return this._letterDefinitions[t];
},
getLetterDefinitionForChar: function(t) {
var e = t.charCodeAt(0);
return this._letterDefinitions.hasOwnProperty(e) ? this._letterDefinitions[e] : null;
},
clear: function() {
this._letterDefinitions = {};
}
};
var s = cc.Class({
name: "cc.BitmapFont",
extends: cc.Font,
properties: {
fntDataStr: {
default: ""
},
spriteFrame: {
default: null,
type: cc.SpriteFrame
},
fontSize: {
default: -1
},
_fntConfig: null,
_fontDefDictionary: null
},
onLoad: function() {
var t = this.spriteFrame;
!this._fontDefDictionary && t && (this._fontDefDictionary = new r(t._texture));
var e = this._fntConfig;
if (e) {
var i = e.fontDefDictionary;
for (var s in i) {
var o = new n(), a = i[s].rect;
o.offsetX = i[s].xOffset;
o.offsetY = i[s].yOffset;
o.w = a.width;
o.h = a.height;
o.u = a.x;
o.v = a.y;
o.textureID = 0;
o.valid = !0;
o.xAdvance = i[s].xAdvance;
this._fontDefDictionary.addLetterDefinitions(s, o);
}
}
}
});
cc.BitmapFont = s;
cc.BitmapFont.FontLetterDefinition = n;
cc.BitmapFont.FontAtlas = r;
e.exports = s;
}), {} ],
79: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.BufferAsset",
extends: cc.Asset,
ctor: function() {
this._buffer = null;
},
properties: {
_nativeAsset: {
get: function() {
return this._buffer;
},
set: function(t) {
this._buffer = t.buffer || t;
},
override: !0
},
buffer: function() {
return this._buffer;
}
}
});
cc.BufferAsset = e.exports = n;
}), {} ],
80: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.Font",
extends: cc.Asset
});
cc.Font = e.exports = n;
}), {} ],
81: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.JsonAsset",
extends: cc.Asset,
properties: {
json: null
}
});
e.exports = cc.JsonAsset = n;
}), {} ],
82: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.LabelAtlas",
extends: cc.BitmapFont,
onLoad: function() {
this.spriteFrame ? this._fntConfig ? this._super() : cc.warnID(9101, this.name) : cc.warnID(9100, this.name);
}
});
cc.LabelAtlas = n;
e.exports = n;
}), {} ],
83: [ (function(t, e, i) {
"use strict";
var n = cc.Enum({
AUTO: 0,
SINGLE_INSTANCE: 1,
MULTI_INSTANCE: 2
}), r = cc.Class({
name: "cc.Prefab",
extends: cc.Asset,
ctor: function() {
this._createFunction = null;
this._instantiatedTimes = 0;
},
properties: {
data: null,
optimizationPolicy: n.AUTO,
asyncLoadAssets: !1,
readonly: {
default: !1,
editorOnly: !0
}
},
statics: {
OptimizationPolicy: n,
OptimizationPolicyThreshold: 3
},
createNode: !1,
compileCreateFunction: function() {
var e = t("../platform/instantiate-jit");
this._createFunction = e.compile(this.data);
},
_doInstantiate: function(t) {
this.data._prefab ? this.data._prefab._synced = !0 : cc.warnID(3700);
this._createFunction || this.compileCreateFunction();
return this._createFunction(t);
},
_instantiate: function() {
var t;
if (this.optimizationPolicy !== n.SINGLE_INSTANCE && (this.optimizationPolicy === n.MULTI_INSTANCE || this._instantiatedTimes + 1 >= r.OptimizationPolicyThreshold)) {
t = this._doInstantiate();
this.data._instantiate(t);
} else {
this.data._prefab._synced = !0;
t = this.data._instantiate();
}
++this._instantiatedTimes;
return t;
},
destroy: function() {
this.data && this.data.destroy();
this._super();
}
});
cc.Prefab = e.exports = r;
cc.js.obsolete(cc, "cc._Prefab", "Prefab");
}), {
"../platform/instantiate-jit": 248
} ],
84: [ (function(t, e, i) {
"use strict";
var n = t("../platform/CCObject"), r = t("../platform/js");
cc.RawAsset = cc.Class({
name: "cc.RawAsset",
extends: n,
ctor: function() {
Object.defineProperty(this, "_uuid", {
value: "",
writable: !0
});
}
});
r.value(cc.RawAsset, "isRawAssetType", (function(t) {
return r.isChildClassOf(t, cc.RawAsset) && !r.isChildClassOf(t, cc.Asset);
}));
r.value(cc.RawAsset, "wasRawAssetType", (function(t) {
return t === cc.Texture2D || t === cc.AudioClip || t === cc.ParticleAsset || t === cc.Asset;
}));
e.exports = cc.RawAsset;
}), {
"../platform/CCObject": 236,
"../platform/js": 250
} ],
85: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../renderer/gfx"));
var r = t("../renderer"), s = t("./CCTexture2D"), o = cc.Enum({
RB_FMT_D24S8: n.default.RB_FMT_D24S8,
RB_FMT_S8: n.default.RB_FMT_S8,
RB_FMT_D16: n.default.RB_FMT_D16
}), a = cc.Class({
name: "cc.RenderTexture",
extends: s,
statics: {
DepthStencilFormat: o
},
ctor: function() {
this._framebuffer = null;
},
initWithSize: function(t, e, i) {
this.width = Math.floor(t || cc.visibleRect.width);
this.height = Math.floor(e || cc.visibleRect.height);
this._resetUnderlyingMipmaps();
var s, o = {
colors: [ this._texture ]
};
this._depthStencilBuffer && this._depthStencilBuffer.destroy();
if (i) {
s = new n.default.RenderBuffer(r.device, i, t, e);
i === n.default.RB_FMT_D24S8 ? o.depthStencil = s : i === n.default.RB_FMT_S8 ? o.stencil = s : i === n.default.RB_FMT_D16 && (o.depth = s);
}
this._depthStencilBuffer = s;
this._framebuffer && this._framebuffer.destroy();
this._framebuffer = new n.default.FrameBuffer(r.device, t, e, o);
this._packable = !1;
this.loaded = !0;
this.emit("load");
},
updateSize: function(t, e) {
this.width = Math.floor(t || cc.visibleRect.width);
this.height = Math.floor(e || cc.visibleRect.height);
this._resetUnderlyingMipmaps();
var i = this._depthStencilBuffer;
i && i.update(this.width, this.height);
this._framebuffer._width = t;
this._framebuffer._height = e;
},
drawTextureAt: function(t, e, i) {
t._image && 0 !== t._image.width && this._texture.updateSubImage({
x: e,
y: i,
image: t._image,
width: t.width,
height: t.height,
level: 0,
flipY: !1,
premultiplyAlpha: t._premultiplyAlpha
});
},
readPixels: function(t, e, i, n, r) {
if (!this._framebuffer || !this._texture) return t;
e = e || 0;
i = i || 0;
var s = n || this.width, o = r || this.height;
t = t || new Uint8Array(s * o * 4);
var a = cc.game._renderContext, c = a.getParameter(a.FRAMEBUFFER_BINDING);
a.bindFramebuffer(a.FRAMEBUFFER, this._framebuffer.getHandle());
a.readPixels(e, i, s, o, a.RGBA, a.UNSIGNED_BYTE, t);
a.bindFramebuffer(a.FRAMEBUFFER, c);
return t;
},
destroy: function() {
this._super();
if (this._framebuffer) {
this._framebuffer.destroy();
this._framebuffer = null;
}
}
});
cc.RenderTexture = e.exports = a;
}), {
"../../renderer/gfx": 354,
"../renderer": 262,
"./CCTexture2D": 92
} ],
86: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.SceneAsset",
extends: cc.Asset,
properties: {
scene: null,
asyncLoadAssets: void 0
}
});
cc.SceneAsset = n;
e.exports = n;
}), {} ],
87: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.Script",
extends: cc.Asset
});
cc._Script = n;
var r = cc.Class({
name: "cc.JavaScript",
extends: n
});
cc._JavaScript = r;
var s = cc.Class({
name: "cc.CoffeeScript",
extends: n
});
cc._CoffeeScript = s;
var o = cc.Class({
name: "cc.TypeScript",
extends: n
});
cc._TypeScript = o;
}), {} ],
88: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.SpriteAtlas",
extends: cc.Asset,
properties: {
_spriteFrames: {
default: {}
}
},
getTexture: function() {
var t = Object.keys(this._spriteFrames);
if (t.length > 0) {
var e = this._spriteFrames[t[0]];
return e ? e.getTexture() : null;
}
return null;
},
getSpriteFrame: function(t) {
var e = this._spriteFrames[t];
if (!e) return null;
e.name || (e.name = t);
return e;
},
getSpriteFrames: function() {
var t = [], e = this._spriteFrames;
for (var i in e) t.push(this.getSpriteFrame(i));
return t;
}
});
cc.SpriteAtlas = n;
e.exports = n;
}), {} ],
89: [ (function(t, e, i) {
"use strict";
var n = t("../event/event-target"), r = t("../utils/texture-util"), s = [ {
u: 0,
v: 0
}, {
u: 0,
v: 0
}, {
u: 0,
v: 0
}, {
u: 0,
v: 0
} ], o = cc.Class({
name: "cc.SpriteFrame",
extends: t("../assets/CCAsset"),
mixins: [ n ],
properties: {
_textureSetter: {
set: function(t) {
if (t) {
0;
this._texture !== t && this._refreshTexture(t);
this._textureFilename = t.url;
}
}
},
insetTop: {
get: function() {
return this._capInsets[1];
},
set: function(t) {
this._capInsets[1] = t;
this._texture && this._calculateSlicedUV();
}
},
insetBottom: {
get: function() {
return this._capInsets[3];
},
set: function(t) {
this._capInsets[3] = t;
this._texture && this._calculateSlicedUV();
}
},
insetLeft: {
get: function() {
return this._capInsets[0];
},
set: function(t) {
this._capInsets[0] = t;
this._texture && this._calculateSlicedUV();
}
},
insetRight: {
get: function() {
return this._capInsets[2];
},
set: function(t) {
this._capInsets[2] = t;
this._texture && this._calculateSlicedUV();
}
}
},
ctor: function() {
n.call(this);
var t = arguments[0], e = arguments[1], i = arguments[2], r = arguments[3], s = arguments[4];
this._rect = null;
this.uv = [];
this._texture = null;
this._original = null;
this._offset = null;
this._originalSize = null;
this._rotated = !1;
this._flipX = !1;
this._flipY = !1;
this.vertices = null;
this._capInsets = [ 0, 0, 0, 0 ];
this.uvSliced = [];
this._textureFilename = "";
0;
void 0 !== t && this.setTexture(t, e, i, r, s);
},
textureLoaded: function() {
return this._texture && this._texture.loaded;
},
onTextureLoaded: function(t, e) {
if (!this.textureLoaded()) {
this.once("load", t, e);
this.ensureLoadTexture();
return !1;
}
t.call(e);
return !0;
},
isRotated: function() {
return this._rotated;
},
setRotated: function(t) {
this._rotated = t;
this._texture && this._calculateUV();
},
isFlipX: function() {
return this._flipX;
},
isFlipY: function() {
return this._flipY;
},
setFlipX: function(t) {
this._flipX = t;
this._texture && this._calculateUV();
},
setFlipY: function(t) {
this._flipY = t;
this._texture && this._calculateUV();
},
getRect: function() {
return cc.rect(this._rect);
},
setRect: function(t) {
this._rect = t;
this._texture && this._calculateUV();
},
getOriginalSize: function() {
return cc.size(this._originalSize);
},
setOriginalSize: function(t) {
if (this._originalSize) {
this._originalSize.width = t.width;
this._originalSize.height = t.height;
} else this._originalSize = cc.size(t);
},
getTexture: function() {
return this._texture;
},
_textureLoadedCallback: function() {
var t = this._texture;
if (t) {
var e = t.width, i = t.height;
this._rect ? this._checkRect(this._texture) : this._rect = cc.rect(0, 0, e, i);
this._originalSize || this.setOriginalSize(cc.size(e, i));
this._offset || this.setOffset(cc.v2(0, 0));
this._calculateUV();
this.emit("load");
}
},
_refreshTexture: function(t) {
this._texture = t;
t.loaded ? this._textureLoadedCallback() : t.once("load", this._textureLoadedCallback, this);
},
getOffset: function() {
return cc.v2(this._offset);
},
setOffset: function(t) {
this._offset = cc.v2(t);
},
clone: function() {
return new o(this._texture || this._textureFilename, this._rect, this._rotated, this._offset, this._originalSize);
},
setTexture: function(t, e, i, n, r) {
this._rect = e || null;
n ? this.setOffset(n) : this._offset = null;
r ? this.setOriginalSize(r) : this._originalSize = null;
this._rotated = i || !1;
var s = t;
if ("string" == typeof s && s) {
this._textureFilename = s;
this._loadTexture();
}
s instanceof cc.Texture2D && this._texture !== s && this._refreshTexture(s);
return !0;
},
_loadTexture: function() {
if (this._textureFilename) {
var t = r.loadImage(this._textureFilename);
this._refreshTexture(t);
}
},
ensureLoadTexture: function() {
if (this._texture) {
if (!this._texture.loaded) {
this._refreshTexture(this._texture);
r.postLoadTexture(this._texture);
}
} else this._textureFilename && this._loadTexture();
},
_checkRect: function(t) {
var e = this._rect, i = e.x, n = e.y;
if (this._rotated) {
i += e.height;
n += e.width;
} else {
i += e.width;
n += e.height;
}
i > t.width && cc.errorID(3300, t.url + "/" + this.name, i, t.width);
n > t.height && cc.errorID(3400, t.url + "/" + this.name, n, t.height);
},
_flipXY: function(t) {
if (this._flipX) {
var e = t[0];
t[0] = t[1];
t[1] = e;
e = t[2];
t[2] = t[3];
t[3] = e;
}
if (this._flipY) {
var i = t[0];
t[0] = t[2];
t[2] = i;
i = t[1];
t[1] = t[3];
t[3] = i;
}
},
_calculateSlicedUV: function() {
var t = this._rect, e = this._texture.width, i = this._texture.height, n = this._capInsets[0], r = this._capInsets[2], o = t.width - n - r, a = this._capInsets[1], c = this._capInsets[3], l = t.height - a - c, u = this.uvSliced;
u.length = 0;
if (this._rotated) {
s[0].u = t.x / e;
s[1].u = (t.x + c) / e;
s[2].u = (t.x + c + l) / e;
s[3].u = (t.x + t.height) / e;
s[3].v = t.y / i;
s[2].v = (t.y + n) / i;
s[1].v = (t.y + n + o) / i;
s[0].v = (t.y + t.width) / i;
this._flipXY(s);
for (var h = 0; h < 4; ++h) for (var f = s[h], _ = 0; _ < 4; ++_) {
var d = s[3 - _];
u.push({
u: f.u,
v: d.v
});
}
} else {
s[0].u = t.x / e;
s[1].u = (t.x + n) / e;
s[2].u = (t.x + n + o) / e;
s[3].u = (t.x + t.width) / e;
s[3].v = t.y / i;
s[2].v = (t.y + a) / i;
s[1].v = (t.y + a + l) / i;
s[0].v = (t.y + t.height) / i;
this._flipXY(s);
for (var p = 0; p < 4; ++p) for (var m = s[p], y = 0; y < 4; ++y) {
var v = s[y];
u.push({
u: v.u,
v: m.v
});
}
}
},
_setDynamicAtlasFrame: function(t) {
if (t) {
this._original = {
_texture: this._texture,
_x: this._rect.x,
_y: this._rect.y
};
this._texture = t.texture;
this._rect.x = t.x;
this._rect.y = t.y;
this._calculateUV();
}
},
_resetDynamicAtlasFrame: function() {
if (this._original) {
this._rect.x = this._original._x;
this._rect.y = this._original._y;
this._texture = this._original._texture;
this._original = null;
this._calculateUV();
}
},
_calculateUV: function() {
var t = this._rect, e = this._texture, i = this.uv, n = e.width, r = e.height;
if (this._rotated) {
var s = 0 === n ? 0 : t.x / n, o = 0 === n ? 0 : (t.x + t.height) / n, a = 0 === r ? 0 : (t.y + t.width) / r, c = 0 === r ? 0 : t.y / r;
i[0] = s;
i[1] = c;
i[2] = s;
i[3] = a;
i[4] = o;
i[5] = c;
i[6] = o;
i[7] = a;
} else {
var l = 0 === n ? 0 : t.x / n, u = 0 === n ? 0 : (t.x + t.width) / n, h = 0 === r ? 0 : (t.y + t.height) / r, f = 0 === r ? 0 : t.y / r;
i[0] = l;
i[1] = h;
i[2] = u;
i[3] = h;
i[4] = l;
i[5] = f;
i[6] = u;
i[7] = f;
}
if (this._flipX) {
var _ = i[0];
i[0] = i[2];
i[2] = _;
_ = i[1];
i[1] = i[3];
i[3] = _;
_ = i[4];
i[4] = i[6];
i[6] = _;
_ = i[5];
i[5] = i[7];
i[7] = _;
}
if (this._flipY) {
var d = i[0];
i[0] = i[4];
i[4] = d;
d = i[1];
i[1] = i[5];
i[5] = d;
d = i[2];
i[2] = i[6];
i[6] = d;
d = i[3];
i[3] = i[7];
i[7] = d;
}
var p = this.vertices;
if (p) {
p.nu.length = 0;
p.nv.length = 0;
for (var m = 0; m < p.u.length; m++) {
p.nu[m] = p.u[m] / n;
p.nv[m] = p.v[m] / r;
}
}
this._calculateSlicedUV();
},
_serialize: !1,
_deserialize: function(t, e) {
var i = t.rect;
i && (this._rect = new cc.Rect(i[0], i[1], i[2], i[3]));
t.offset && this.setOffset(new cc.Vec2(t.offset[0], t.offset[1]));
t.originalSize && this.setOriginalSize(new cc.Size(t.originalSize[0], t.originalSize[1]));
this._rotated = 1 === t.rotated;
this._name = t.name;
var n = t.capInsets;
if (n) {
this._capInsets[0] = n[0];
this._capInsets[1] = n[1];
this._capInsets[2] = n[2];
this._capInsets[3] = n[3];
}
0;
this.vertices = t.vertices;
if (this.vertices) {
this.vertices.nu = [];
this.vertices.nv = [];
}
var r = t.texture;
r && e.result.push(this, "_textureSetter", r);
}
}), a = o.prototype;
a.copyWithZone = a.clone;
a.copy = a.clone;
a.initWithTexture = a.setTexture;
cc.SpriteFrame = o;
e.exports = o;
}), {
"../assets/CCAsset": 76,
"../event/event-target": 156,
"../utils/texture-util": 321
} ],
90: [ (function(t, e, i) {
"use strict";
var n = t("./CCFont"), r = cc.Class({
name: "cc.TTFFont",
extends: n,
properties: {
_fontFamily: null,
_nativeAsset: {
type: cc.String,
get: function() {
return this._fontFamily;
},
set: function(t) {
this._fontFamily = t || "Arial";
},
override: !0
}
}
});
cc.TTFFont = e.exports = r;
}), {
"./CCFont": 80
} ],
91: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.TextAsset",
extends: cc.Asset,
properties: {
text: ""
},
toString: function() {
return this.text;
}
});
e.exports = cc.TextAsset = n;
}), {} ],
92: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../renderer/gfx"));
var r = t("../event/event-target"), s = t("../renderer");
t("../platform/CCClass");
var o = new (t("../platform/id-generater"))("Tex"), a = 1024, c = cc.Enum({
RGB565: n.default.TEXTURE_FMT_R5_G6_B5,
RGB5A1: n.default.TEXTURE_FMT_R5_G5_B5_A1,
RGBA4444: n.default.TEXTURE_FMT_R4_G4_B4_A4,
RGB888: n.default.TEXTURE_FMT_RGB8,
RGBA8888: n.default.TEXTURE_FMT_RGBA8,
RGBA32F: n.default.TEXTURE_FMT_RGBA32F,
A8: n.default.TEXTURE_FMT_A8,
I8: n.default.TEXTURE_FMT_L8,
AI8: n.default.TEXTURE_FMT_L8_A8,
RGB_PVRTC_2BPPV1: n.default.TEXTURE_FMT_RGB_PVRTC_2BPPV1,
RGBA_PVRTC_2BPPV1: n.default.TEXTURE_FMT_RGBA_PVRTC_2BPPV1,
RGB_A_PVRTC_2BPPV1: a++,
RGB_PVRTC_4BPPV1: n.default.TEXTURE_FMT_RGB_PVRTC_4BPPV1,
RGBA_PVRTC_4BPPV1: n.default.TEXTURE_FMT_RGBA_PVRTC_4BPPV1,
RGB_A_PVRTC_4BPPV1: a++,
RGB_ETC1: n.default.TEXTURE_FMT_RGB_ETC1,
RGBA_ETC1: a++,
RGB_ETC2: n.default.TEXTURE_FMT_RGB_ETC2,
RGBA_ETC2: n.default.TEXTURE_FMT_RGBA_ETC2
}), l = cc.Enum({
REPEAT: 10497,
CLAMP_TO_EDGE: 33071,
MIRRORED_REPEAT: 33648
}), u = cc.Enum({
LINEAR: 9729,
NEAREST: 9728
}), h = {
9728: 0,
9729: 1
}, f = [], _ = {
width: void 0,
height: void 0,
minFilter: void 0,
magFilter: void 0,
wrapS: void 0,
wrapT: void 0,
format: void 0,
genMipmaps: void 0,
images: void 0,
image: void 0,
flipY: void 0,
premultiplyAlpha: void 0
};
function d() {
for (var t in _) _[t] = void 0;
f.length = 0;
_.images = f;
return _;
}
var p = cc.Class({
name: "cc.Texture2D",
extends: t("../assets/CCAsset"),
mixins: [ r ],
properties: {
_nativeAsset: {
get: function() {
return this._image;
},
set: function(t) {
t._compressed && t._data ? this.initWithData(t._data, this._format, t.width, t.height) : this.initWithElement(t);
},
override: !0
},
_format: c.RGBA8888,
_premultiplyAlpha: !1,
_flipY: !1,
_minFilter: u.LINEAR,
_magFilter: u.LINEAR,
_mipFilter: u.LINEAR,
_wrapS: l.CLAMP_TO_EDGE,
_wrapT: l.CLAMP_TO_EDGE,
_genMipmaps: !1,
genMipmaps: {
get: function() {
return this._genMipmaps;
},
set: function(t) {
if (this._genMipmaps !== t) {
var e = d();
e.genMipmaps = t;
this.update(e);
}
}
},
_packable: !0,
packable: {
get: function() {
return this._packable;
},
set: function(t) {
this._packable = t;
}
}
},
statics: {
PixelFormat: c,
WrapMode: l,
Filter: u,
_FilterIndex: h,
extnames: [ ".png", ".jpg", ".jpeg", ".bmp", ".webp", ".pvr", ".pkm" ]
},
ctor: function() {
this._id = o.getNewId();
this.loaded = !1;
this.width = 0;
this.height = 0;
this._hashDirty = !0;
this._hash = 0;
this._texture = null;
0;
},
getImpl: function() {
return this._texture;
},
getId: function() {
return this._id;
},
toString: function() {
return this.url || "";
},
update: function(t) {
if (t) {
var e = !1;
void 0 !== t.width && (this.width = t.width);
void 0 !== t.height && (this.height = t.height);
if (void 0 !== t.minFilter) {
this._minFilter = t.minFilter;
t.minFilter = h[t.minFilter];
}
if (void 0 !== t.magFilter) {
this._magFilter = t.magFilter;
t.magFilter = h[t.magFilter];
}
if (void 0 !== t.mipFilter) {
this._mipFilter = t.mipFilter;
t.mipFilter = h[t.mipFilter];
}
void 0 !== t.wrapS && (this._wrapS = t.wrapS);
void 0 !== t.wrapT && (this._wrapT = t.wrapT);
void 0 !== t.format && (this._format = t.format);
if (void 0 !== t.flipY) {
this._flipY = t.flipY;
e = !0;
}
if (void 0 !== t.premultiplyAlpha) {
this._premultiplyAlpha = t.premultiplyAlpha;
e = !0;
}
void 0 !== t.genMipmaps && (this._genMipmaps = t.genMipmaps);
e && this._image && (t.image = this._image);
if (t.images && t.images.length > 0) this._image = t.images[0]; else if (void 0 !== t.image) {
this._image = t.image;
if (!t.images) {
f.length = 0;
t.images = f;
}
t.images.push(t.image);
}
this._texture && this._texture.update(t);
this._hashDirty = !0;
}
},
initWithElement: function(t) {
if (t) {
this._image = t;
if (t.complete || t instanceof HTMLCanvasElement) this.handleLoadedTexture(); else {
var e = this;
t.addEventListener("load", (function() {
e.handleLoadedTexture();
}));
t.addEventListener("error", (function(t) {
cc.warnID(3119, t.message);
}));
}
}
},
initWithData: function(t, e, i, n) {
var r = d();
r.image = t;
r.images = [ r.image ];
r.genMipmaps = this._genMipmaps;
r.premultiplyAlpha = this._premultiplyAlpha;
r.flipY = this._flipY;
r.minFilter = h[this._minFilter];
r.magFilter = h[this._magFilter];
r.wrapS = this._wrapS;
r.wrapT = this._wrapT;
r.format = this._getGFXPixelFormat(e);
r.width = i;
r.height = n;
this._texture ? this._texture.update(r) : this._texture = new s.Texture2D(s.device, r);
this.width = i;
this.height = n;
this._checkPackable();
this.loaded = !0;
this.emit("load");
return !0;
},
getHtmlElementObj: function() {
return this._image;
},
destroy: function() {
this._packable && cc.dynamicAtlasManager && cc.dynamicAtlasManager.deleteAtlasTexture(this);
this._image = null;
this._texture && this._texture.destroy();
this._super();
},
getPixelFormat: function() {
return this._format;
},
hasPremultipliedAlpha: function() {
return this._premultiplyAlpha || !1;
},
handleLoadedTexture: function() {
if (this._image && this._image.width && this._image.height) {
this.width = this._image.width;
this.height = this._image.height;
var t = d();
t.image = this._image;
t.images = [ t.image ];
t.width = this.width;
t.height = this.height;
t.genMipmaps = this._genMipmaps;
t.format = this._getGFXPixelFormat(this._format);
t.premultiplyAlpha = this._premultiplyAlpha;
t.flipY = this._flipY;
t.minFilter = h[this._minFilter];
t.magFilter = h[this._magFilter];
t.wrapS = this._wrapS;
t.wrapT = this._wrapT;
this._texture ? this._texture.update(t) : this._texture = new s.Texture2D(s.device, t);
this._checkPackable();
this.loaded = !0;
this.emit("load");
cc.macro.CLEANUP_IMAGE_CACHE && this._image instanceof HTMLImageElement && this._clearImage();
}
},
description: function() {
return "<cc.Texture2D | Name = " + this.url + " | Dimensions = " + this.width + " x " + this.height + ">";
},
releaseTexture: function() {
this._image = null;
this._texture && this._texture.destroy();
},
setWrapMode: function(t, e) {
if (this._wrapS !== t || this._wrapT !== e) {
var i = d();
i.wrapS = t;
i.wrapT = e;
this.update(i);
}
},
setFilters: function(t, e) {
if (this._minFilter !== t || this._magFilter !== e) {
var i = d();
i.minFilter = t;
i.magFilter = e;
this.update(i);
}
},
setFlipY: function(t) {
if (this._flipY !== t) {
var e = d();
e.flipY = t;
this.update(e);
}
},
setPremultiplyAlpha: function(t) {
if (this._premultiplyAlpha !== t) {
var e = d();
e.premultiplyAlpha = t;
this.update(e);
}
},
_checkPackable: function() {
var t = cc.dynamicAtlasManager;
if (t) if (this._isCompressed()) this._packable = !1; else {
var e = this.width, i = this.height;
!this._image || e > t.maxFrameSize || i > t.maxFrameSize || this._getHash() !== t.Atlas.DEFAULT_HASH ? this._packable = !1 : this._image && this._image instanceof HTMLCanvasElement && (this._packable = !0);
}
},
_getOpts: function() {
var t = d();
t.width = this.width;
t.height = this.height;
t.genMipmaps = this._genMipmaps;
t.format = this._format;
t.premultiplyAlpha = this._premultiplyAlpha;
t.anisotropy = this._anisotropy;
t.flipY = this._flipY;
t.minFilter = h[this._minFilter];
t.magFilter = h[this._magFilter];
t.mipFilter = h[this._mipFilter];
t.wrapS = this._wrapS;
t.wrapT = this._wrapT;
return t;
},
_getGFXPixelFormat: function(t) {
t === c.RGBA_ETC1 ? t = c.RGB_ETC1 : t === c.RGB_A_PVRTC_4BPPV1 ? t = c.RGB_PVRTC_4BPPV1 : t === c.RGB_A_PVRTC_2BPPV1 && (t = c.RGB_PVRTC_2BPPV1);
return t;
},
_resetUnderlyingMipmaps: function(t) {
var e = this._getOpts();
e.images = t || [ null ];
this._texture ? this._texture.update(e) : this._texture = new s.Texture2D(s.device, e);
},
_serialize: !1,
_deserialize: function(t, e) {
var i = cc.renderer.device, n = t.split(","), r = n[0];
if (r) {
for (var s = r.split("_"), o = "", a = "", l = 999, u = this._format, h = cc.macro.SUPPORT_TEXTURE_FORMATS, f = 0; f < s.length; f++) {
var _ = s[f].split("@"), d = _[0];
d = p.extnames[d.charCodeAt(0) - 48] || d;
var m = h.indexOf(d);
if (-1 !== m && m < l) {
var y = _[1] ? parseInt(_[1]) : this._format;
if (".pvr" === d && !i.ext("WEBGL_compressed_texture_pvrtc")) continue;
if (!(y !== c.RGB_ETC1 && y !== c.RGBA_ETC1 || i.ext("WEBGL_compressed_texture_etc1"))) continue;
if (!(y !== c.RGB_ETC2 && y !== c.RGBA_ETC2 || i.ext("WEBGL_compressed_texture_etc"))) continue;
if (".webp" === d && !cc.sys.capabilities.webp) continue;
l = m;
a = d;
u = y;
} else o || (o = d);
}
if (a) {
this._setRawAsset(a);
this._format = u;
} else {
this._setRawAsset(o);
cc.warnID(3120, e.customEnv.url, o, o);
}
}
if (8 === n.length) {
this._minFilter = parseInt(n[1]);
this._magFilter = parseInt(n[2]);
this._wrapS = parseInt(n[3]);
this._wrapT = parseInt(n[4]);
this._premultiplyAlpha = 49 === n[5].charCodeAt(0);
this._genMipmaps = 49 === n[6].charCodeAt(0);
this._packable = 49 === n[7].charCodeAt(0);
}
},
_getHash: function() {
if (!this._hashDirty) return this._hash;
var t = this._genMipmaps ? 1 : 0, e = this._premultiplyAlpha ? 1 : 0, i = this._flipY ? 1 : 0, n = this._minFilter === u.LINEAR ? 1 : 2, r = this._magFilter === u.LINEAR ? 1 : 2, s = this._wrapS === l.REPEAT ? 1 : this._wrapS === l.CLAMP_TO_EDGE ? 2 : 3, o = this._wrapT === l.REPEAT ? 1 : this._wrapT === l.CLAMP_TO_EDGE ? 2 : 3, a = this._format, c = this._image;
if (c) {
c._glFormat && 6408 !== c._glFormat && (a = 0);
e = c._premultiplyAlpha ? 1 : 0;
}
this._hash = Number("" + n + r + a + s + o + t + e + i);
this._hashDirty = !1;
return this._hash;
},
_isCompressed: function() {
return this._format < c.A8 || this._format > c.RGBA32F;
},
_clearImage: function() {
cc.loader.removeItem(this._image.id || this._image.src);
this._image.src = "";
}
});
cc.Texture2D = e.exports = p;
}), {
"../../renderer/gfx": 354,
"../assets/CCAsset": 76,
"../event/event-target": 156,
"../platform/CCClass": 230,
"../platform/id-generater": 246,
"../renderer": 262
} ],
93: [ (function(t, e, i) {
"use strict";
t("./CCRawAsset");
t("./CCAsset");
t("./CCFont");
t("./CCPrefab");
t("./CCAudioClip");
t("./CCScripts");
t("./CCSceneAsset");
t("./CCSpriteFrame");
t("./CCTexture2D");
t("./CCRenderTexture");
t("./CCTTFFont");
t("./CCSpriteAtlas");
t("./CCBitmapFont");
t("./CCLabelAtlas");
t("./CCTextAsset");
t("./CCJsonAsset");
t("./CCBufferAsset");
t("./material");
}), {
"./CCAsset": 76,
"./CCAudioClip": 77,
"./CCBitmapFont": 78,
"./CCBufferAsset": 79,
"./CCFont": 80,
"./CCJsonAsset": 81,
"./CCLabelAtlas": 82,
"./CCPrefab": 83,
"./CCRawAsset": 84,
"./CCRenderTexture": 85,
"./CCSceneAsset": 86,
"./CCScripts": 87,
"./CCSpriteAtlas": 88,
"./CCSpriteFrame": 89,
"./CCTTFFont": 90,
"./CCTextAsset": 91,
"./CCTexture2D": 92,
"./material": 100
} ],
94: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../CCAsset")), r = t("./effect-parser");
var s = cc.Class({
name: "cc.EffectAsset",
extends: n.default,
ctor: function() {
this._effect = null;
},
properties: {
properties: Object,
techniques: [],
shaders: []
},
onLoad: function() {
if (cc.game.renderType !== cc.game.RENDER_TYPE_CANVAS) {
for (var t = cc.renderer._forward._programLib, e = 0; e < this.shaders.length; e++) t.define(this.shaders[e]);
this._initEffect();
}
},
_initEffect: function() {
if (!this._effect) {
this._effect = (0, r.parseEffect)(this);
Object.freeze(this._effect);
}
},
getInstantiatedEffect: function() {
this._initEffect();
return this._effect.clone();
},
getEffect: function() {
this._initEffect();
return this._effect;
}
});
e.exports = cc.EffectAsset = s;
}), {
"../CCAsset": 76,
"./effect-parser": 97
} ],
95: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("../CCAsset"), r = t("../CCTexture2D"), s = r.PixelFormat, o = t("./CCEffectAsset"), a = t("../../utils/texture-util"), c = cc.gfx, l = cc.Enum({
SPRITE: "2d-sprite",
GRAY_SPRITE: "2d-gray-sprite",
UNLIT: "unlit"
}), u = cc.Class({
name: "cc.Material",
extends: n,
ctor: function() {
this._manualHash = !1;
this._dirty = !0;
this._effect = null;
},
properties: {
_defines: {
default: void 0,
type: Object
},
_props: {
default: void 0,
type: Object
},
_effectAsset: {
type: o,
default: null
},
_techniqueIndex: 0,
_techniqueData: Object,
effectName: void 0,
effectAsset: {
get: function() {
return this._effectAsset;
},
set: function(t) {
if (cc.game.renderType !== cc.game.RENDER_TYPE_CANVAS) {
this._effectAsset = t;
t ? this._effect = this._effectAsset.getInstantiatedEffect() : cc.error("Can not set an empty effect asset.");
}
}
},
effect: {
get: function() {
return this._effect;
}
},
techniqueIndex: {
get: function() {
return this._techniqueIndex;
},
set: function(t) {
this._techniqueIndex = t;
this._effect.switchTechnique(t);
}
}
},
statics: {
getBuiltinMaterial: function(t) {
return cc.game.renderType === cc.game.RENDER_TYPE_CANVAS ? new cc.Material() : cc.AssetLibrary.getBuiltin("material", "builtin-" + t);
},
BUILTIN_NAME: l,
createWithBuiltin: function(t, e) {
void 0 === e && (e = 0);
var i = cc.AssetLibrary.getBuiltin("effect", "builtin-" + t);
return u.create(i, e);
},
create: function(t, e) {
void 0 === e && (e = 0);
if (!t) return null;
var i = new u();
i.effectAsset = t;
i.techniqueIndex = e;
return i;
}
},
setProperty: function(t, e, i, n) {
if (cc.game.renderType !== cc.game.RENDER_TYPE_CANVAS) {
"string" == typeof i && (i = parseInt(i));
if (e instanceof r) {
var o = e.getPixelFormat(), c = o === s.RGBA_ETC1 || o === s.RGB_A_PVRTC_4BPPV1 || o === s.RGB_A_PVRTC_2BPPV1, l = "CC_USE_ALPHA_ATLAS_" + t, u = this.getDefine(l, i);
(c || u) && this.define(l, c);
if (!e.loaded) {
e.once("load", (function() {
this._effect.setProperty(t, e, i);
}), this);
a.postLoadTexture(e);
return;
}
}
this._effect.setProperty(t, e, i, n);
}
},
getProperty: function(t, e) {
"string" == typeof e && (e = parseInt(e));
return this._effect.getProperty(t, e);
},
define: function(t, e, i, n) {
if (cc.game.renderType !== cc.game.RENDER_TYPE_CANVAS) {
"string" == typeof i && (i = parseInt(i));
this._effect.define(t, e, i, n);
}
},
getDefine: function(t, e) {
"string" == typeof e && (e = parseInt(e));
return this._effect.getDefine(t, e);
},
setCullMode: function(t, e) {
void 0 === t && (t = c.CULL_BACK);
this._effect.setCullMode(t, e);
},
setDepth: function(t, e, i, n) {
void 0 === t && (t = !1);
void 0 === e && (e = !1);
void 0 === i && (i = c.DS_FUNC_LESS);
this._effect.setDepth(t, e, i, n);
},
setBlend: function(t, e, i, n, r, s, o, a, l) {
void 0 === t && (t = !1);
void 0 === e && (e = c.BLEND_FUNC_ADD);
void 0 === i && (i = c.BLEND_SRC_ALPHA);
void 0 === n && (n = c.BLEND_ONE_MINUS_SRC_ALPHA);
void 0 === r && (r = c.BLEND_FUNC_ADD);
void 0 === s && (s = c.BLEND_SRC_ALPHA);
void 0 === o && (o = c.BLEND_ONE_MINUS_SRC_ALPHA);
void 0 === a && (a = 4294967295);
this._effect.setBlend(t, e, i, n, r, s, o, a, l);
},
setStencilEnabled: function(t, e) {
void 0 === t && (t = c.STENCIL_INHERIT);
this._effect.setStencilEnabled(t, e);
},
setStencil: function(t, e, i, n, r, s, o, a, l) {
void 0 === t && (t = c.STENCIL_INHERIT);
void 0 === e && (e = c.DS_FUNC_ALWAYS);
void 0 === i && (i = 0);
void 0 === n && (n = 255);
void 0 === r && (r = c.STENCIL_OP_KEEP);
void 0 === s && (s = c.STENCIL_OP_KEEP);
void 0 === o && (o = c.STENCIL_OP_KEEP);
void 0 === a && (a = 255);
this._effect.setStencil(t, e, i, n, r, s, o, a, l);
},
updateHash: function(t) {
this._manualHash = t;
this._effect && this._effect.updateHash(t);
},
getHash: function() {
return this._manualHash || this._effect && this._effect.getHash();
},
onLoad: function() {
this.effectAsset = this._effectAsset;
if (this._effect) {
this._techniqueIndex && this._effect.switchTechnique(this._techniqueIndex);
this._techniqueData = this._techniqueData || {};
var t = this._techniqueData;
for (var e in t) {
var i = t[e = parseInt(e)];
if (i) {
for (var n in i.defines) this.define(n, i.defines[n], e);
for (var r in i.props) this.setProperty(r, i.props[r], e);
}
}
}
}
}), h = u;
i.default = h;
cc.Material = u;
e.exports = i.default;
}), {
"../../utils/texture-util": 321,
"../CCAsset": 76,
"../CCTexture2D": 92,
"./CCEffectAsset": 94
} ],
96: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../renderer/core/pass"));
function r(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function s(t, e, i) {
e && r(t.prototype, e);
i && r(t, i);
return t;
}
var o = cc.gfx, a = (function() {
function t() {
this._dirty = !0;
this._name = "";
this._technique = null;
}
var e = t.prototype;
e._createPassProp = function(t, e) {
var i = e._properties[t];
if (i) {
var n = Object.create(null);
n.name = t;
n.type = i.type;
i.value instanceof Float32Array ? n.value = new Float32Array(i.value) : n.value = i.value;
e._properties[t] = n;
return n;
}
};
e._setPassProperty = function(t, e, i, r) {
var s = i._properties.hasOwnProperty(t);
if (s) {
if (s.value === e) return;
} else s = this._createPassProp(t, i);
this._dirty = !0;
return n.default.prototype.setProperty.call(i, t, e, r);
};
e.setProperty = function(t, e, i, n) {
var r = !1, s = this.passes, o = 0, a = s.length;
void 0 !== i && (o = i, a = i + 1);
for (var c = o; c < a; c++) this._setPassProperty(t, e, s[c], n) && (r = !0);
r || cc.warnID(9103, this.name, t);
};
e.getProperty = function(t, e) {
var i = this.passes;
if (!(e >= i.length)) {
var n = 0, r = i.length;
void 0 !== e && (n = e, r = e + 1);
for (var s = n; s < r; s++) {
var o = i[s].getProperty(t);
if (void 0 !== o) return o;
}
}
};
e.define = function(t, e, i, n) {
var r = !1, s = this.passes, o = 0, a = s.length;
void 0 !== i && (o = i, a = i + 1);
for (var c = o; c < a; c++) s[c].define(t, e, n) && (r = !0);
r || cc.warnID(9104, this.name, t);
};
e.getDefine = function(t, e) {
var i = this.passes;
if (!(e >= i.length)) {
var n = 0, r = i.length;
void 0 !== e && (n = e, r = e + 1);
for (var s = n; s < r; s++) {
var o = i[s].getDefine(t);
if (void 0 !== o) return o;
}
}
};
e.setCullMode = function(t, e) {
void 0 === t && (t = o.CULL_BACK);
var i = this.passes, n = 0, r = i.length;
void 0 !== e && (n = e, r = e + 1);
for (var s = n; s < r; s++) i[s].setCullMode(t);
this._dirty = !0;
};
e.setDepth = function(t, e, i, n) {
var r = this.passes, s = 0, o = r.length;
void 0 !== n && (s = n, o = n + 1);
for (var a = s; a < o; a++) r[a].setDepth(t, e, i);
this._dirty = !0;
};
e.setBlend = function(t, e, i, n, r, s, o, a, c) {
var l = this.passes, u = 0, h = l.length;
void 0 !== c && (u = c, h = c + 1);
for (var f = u; f < h; f++) l[f].setBlend(t, e, i, n, r, s, o, a);
this._dirty = !0;
};
e.setStencilEnabled = function(t, e) {
void 0 === t && (t = o.STENCIL_INHERIT);
var i = this.passes, n = 0, r = i.length;
void 0 !== e && (n = e, r = e + 1);
for (var s = n; s < r; s++) i[s].setStencilEnabled(t);
this._dirty = !0;
};
e.setStencil = function(t, e, i, n, r, s, o, a, c) {
var l = this.passes, u = 0, h = l.length;
void 0 !== c && (u = c, h = c + 1);
for (var f = u; f < h; f++) {
var _ = l[f];
_.setStencilFront(t, e, i, n, r, s, o, a);
_.setStencilBack(t, e, i, n, r, s, o, a);
}
this._dirty = !0;
};
s(t, [ {
key: "name",
get: function() {
return this._name;
}
}, {
key: "technique",
get: function() {
return this._technique;
}
}, {
key: "passes",
get: function() {
return [];
}
} ]);
return t;
})();
i.default = a;
cc.EffectBase = a;
e.exports = i.default;
}), {
"../../../renderer/core/pass": 351
} ],
97: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.parseEffect = function(t) {
var e = f(t);
return new o.default(t.name, e, 0, t);
};
var n = c(t("../../../renderer/core/pass")), r = t("../../../renderer/types"), s = c(t("../../../renderer/enums")), o = c(t("./effect")), a = c(t("../../../renderer/core/technique"));
function c(t) {
return t && t.__esModule ? t : {
default: t
};
}
function l(t) {
return cc.renderer._forward._programLib.getTemplate(t);
}
function u(t, e) {
var i = e.properties || {}, n = l(e.program), o = function(e) {
if (!n.uniforms.find((function(t) {
return t.name === e;
}))) {
cc.warnID(9107, t.name, e);
return "continue";
}
};
for (var a in i) o(a);
var c = {};
n.uniforms.forEach((function(t) {
var e = t.name, n = c[e] = Object.assign({}, t), o = i[e], a = r.enums2default[t.type];
a = o ? o.type === s.default.PARAM_TEXTURE_2D ? null : o.type === s.default.PARAM_INT || o.type === s.default.PARAM_FLOAT ? Array.isArray(o.value) ? o.value[0] : o.value : new Float32Array(o.value) : r.enums2default[t.type];
n.value = a;
}));
return c;
}
function h(t) {
var e = {};
l(t.program).defines.forEach((function(t) {
e[t.name] = r.enums2default[t.type];
}));
return e;
}
function f(t) {
for (var e = t.techniques.length, i = new Array(e), r = 0; r < e; ++r) {
for (var s = t.techniques[r], o = s.name || r, c = s.passes.length, l = new Array(c), f = 0; f < c; ++f) {
var _ = s.passes[f], d = _.name || f, p = t.name + "-" + o + "-" + d, m = _.stage || "opaque", y = u(t, _), v = h(_), g = l[f] = new n.default(d, p, _.program, m, y, v);
_.rasterizerState && g.setCullMode(_.rasterizerState.cullMode);
var b = _.blendState && _.blendState.targets[0];
b && g.setBlend(b.blend, b.blendEq, b.blendSrc, b.blendDst, b.blendAlphaEq, b.blendSrcAlpha, b.blendDstAlpha, b.blendColor);
var C = _.depthStencilState;
if (C) {
g.setDepth(C.depthTest, C.depthWrite, C.depthFunc);
g.setStencilFront(C.stencilTest, C.stencilFuncFront, C.stencilRefFront, C.stencilMaskFront, C.stencilFailOpFront, C.stencilZFailOpFront, C.stencilZPassOpFront, C.stencilWriteMaskFront);
g.setStencilBack(C.stencilTest, C.stencilFuncBack, C.stencilRefBack, C.stencilMaskBack, C.stencilFailOpBack, C.stencilZFailOpBack, C.stencilZPassOpBack, C.stencilWriteMaskBack);
}
}
i[r] = new a.default(o, l);
}
return i;
}
0;
}), {
"../../../renderer/core/pass": 351,
"../../../renderer/core/technique": 352,
"../../../renderer/enums": 353,
"../../../renderer/types": 359,
"./effect": 99
} ],
98: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = o(t("../../../renderer/murmurhash2_gc")), r = o(t("./utils")), s = o(t("./effect-base"));
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
function a(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function c(t, e, i) {
e && a(t.prototype, e);
i && a(t, i);
return t;
}
function l(t) {
return function() {
var e, i = _(t);
if (f()) {
var n = _(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return u(this, e);
};
}
function u(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? h(t) : e;
}
function h(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function f() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function _(t) {
return (_ = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function d(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
cc.gfx;
var p = (function(t) {
d(e, t);
l(e);
c(e, [ {
key: "effect",
get: function() {
return this._effect;
}
}, {
key: "name",
get: function() {
return this._effect && this._effect.name + " (variant)";
}
}, {
key: "passes",
get: function() {
return this._passes;
}
}, {
key: "stagePasses",
get: function() {
return this._stagePasses;
}
} ]);
function e(e) {
var i;
(i = t.call(this) || this)._effect = void 0;
i._passes = [];
i._stagePasses = {};
i._hash = 0;
i.init(e);
return i;
}
var i = e.prototype;
i._onEffectChanged = function() {};
i.init = function(t) {
t instanceof e && (t = t.effect);
this._effect = t;
this._dirty = !0;
if (t) {
var i = t.passes, n = this._passes;
n.length = 0;
for (var r = this._stagePasses = {}, s = 0; s < i.length; s++) {
var o = n[s] = Object.setPrototypeOf({}, i[s]);
o._properties = Object.setPrototypeOf({}, i[s]._properties);
o._defines = Object.setPrototypeOf({}, i[s]._defines);
r[o._stage] || (r[o._stage] = []);
r[o._stage].push(o);
}
}
};
i.updateHash = function(t) {};
i.getHash = function() {
if (!this._dirty) return this._hash;
this._dirty = !1;
var t = "";
t += r.default.serializePasses(this._passes);
var e = this._effect;
e && (t += r.default.serializePasses(e.passes));
this._hash = (0, n.default)(t, 666);
this.updateHash(this._hash);
return this._hash;
};
return e;
})(s.default);
i.default = p;
cc.EffectVariant = p;
e.exports = i.default;
}), {
"../../../renderer/murmurhash2_gc": 358,
"./effect-base": 96,
"./utils": 103
} ],
99: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function r(t, e, i) {
e && n(t.prototype, e);
i && n(t, i);
return t;
}
function s(t) {
return function() {
var e, i = l(t);
if (c()) {
var n = l(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return o(this, e);
};
}
function o(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? a(t) : e;
}
function a(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function c() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function l(t) {
return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function u(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var h = (function(t) {
u(e, t);
s(e);
r(e, [ {
key: "technique",
get: function() {
return this._technique;
}
}, {
key: "passes",
get: function() {
return this._technique.passes;
}
} ]);
function e(e, i, n, r) {
var s;
(s = t.call(this) || this)._techniques = [];
s._asset = null;
s.init(e, i, n, r, !0);
return s;
}
var i = e.prototype;
i.init = function(t, e, i, n, r) {
this._name = t;
this._techniques = e;
this._technique = e[i];
this._asset = n;
};
i.switchTechnique = function(t) {
t >= this._techniques.length ? cc.warn("Can not switch to technique with index [" + t + "]") : this._technique = this._techniques[t];
};
i.clear = function() {
this._techniques = [];
};
i.clone = function() {
for (var t = [], i = 0; i < this._techniques.length; i++) t.push(this._techniques[i].clone());
var n = this._techniques.indexOf(this._technique);
return new e(this._name, t, n, this._asset);
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("./effect-base")).default);
i.default = h;
cc.Effect = h;
e.exports = i.default;
}), {
"./effect-base": 96
} ],
100: [ (function(t, e, i) {
"use strict";
t("./CCEffectAsset");
t("./CCMaterial");
t("./material-variant");
}), {
"./CCEffectAsset": 94,
"./CCMaterial": 95,
"./material-variant": 102
} ],
101: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = s(t("./utils")), r = s(t("../../utils/pool"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
function o(t) {
return function() {
var e, i = u(t);
if (l()) {
var n = u(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return a(this, e);
};
}
function a(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? c(t) : e;
}
function c(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function l() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function u(t) {
return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function h(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var f = new (function(t) {
h(e, t);
o(e);
function e() {
for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) n[r] = arguments[r];
(e = t.call.apply(t, [ this ].concat(n)) || this).enabled = !1;
e._pool = {};
return e;
}
var i = e.prototype;
i.get = function(t, e) {
var i, r = this._pool;
if (t instanceof cc.MaterialVariant) {
if (!t._owner) {
t._owner = e;
return t;
}
if (t._owner === e) return t;
t = t.material;
}
if (this.enabled) {
var s = t.effectAsset._uuid;
if (r[s]) {
var o = n.default.serializeDefines(t._effect._defines) + n.default.serializeTechniques(t._effect._techniques);
i = r[s][o] && r[s][o].pop();
}
}
if (i) this.count--; else {
(i = new cc.MaterialVariant(t))._name = t._name + " (Instance)";
i._uuid = t._uuid;
}
i._owner = e;
return i;
};
i.put = function(t) {
if (this.enabled && t._owner) {
var e = this._pool, i = t.effectAsset._uuid;
e[i] || (e[i] = {});
var r = n.default.serializeDefines(t._effect._defines) + n.default.serializeTechniques(t._effect._techniques);
e[i][r] || (e[i][r] = []);
if (!(this.count > this.maxSize)) {
this._clean(t);
e[i][r].push(t);
this.count++;
}
}
};
i.clear = function() {
this._pool = {};
this.count = 0;
};
i._clean = function(t) {
t._owner = null;
};
return e;
}(r.default))();
r.default.register("material", f);
var _ = f;
i.default = _;
e.exports = i.default;
}), {
"../../utils/pool": 315,
"./utils": 103
} ],
102: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n, r = a(t("./CCMaterial")), s = a(t("./effect-variant")), o = a(t("./material-pool"));
function a(t) {
return t && t.__esModule ? t : {
default: t
};
}
function c(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function l(t, e, i) {
e && c(t.prototype, e);
i && c(t, i);
return t;
}
function u(t) {
return function() {
var e, i = d(t);
if (_()) {
var n = d(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return h(this, e);
};
}
function h(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? f(t) : e;
}
function f(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function _() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function d(t) {
return (d = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function p(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var m = (0, cc._decorator.ccclass)("cc.MaterialVariant")(n = (function(t) {
p(e, t);
u(e);
e.createWithBuiltin = function(t, i) {
return e.create(r.default.getBuiltinMaterial(t), i);
};
e.create = function(t, e) {
return t ? o.default.get(t, e) : null;
};
l(e, [ {
key: "uuid",
get: function() {
return this._material.uuid;
}
}, {
key: "owner",
get: function() {
return this._owner;
}
}, {
key: "material",
get: function() {
return this._material;
}
} ]);
function e(e) {
var i;
(i = t.call(this) || this)._owner = null;
i._material = null;
i.init(e);
return i;
}
e.prototype.init = function(t) {
this._effect = new s.default(t.effect);
this._effectAsset = t._effectAsset;
this._material = t;
};
return e;
})(r.default)) || n;
i.default = m;
cc.MaterialVariant = m;
e.exports = i.default;
}), {
"./CCMaterial": 95,
"./effect-variant": 98,
"./material-pool": 101
} ],
103: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../renderer/enums"));
function r(t) {
var e = "";
for (var i in t) e += i + t[i];
return e;
}
function s(t, e) {
var i = t._programName + t._cullMode;
t._blend && (i += t._blendEq + t._blendAlphaEq + t._blendSrc + t._blendDst + t._blendSrcAlpha + t._blendDstAlpha + t._blendColor);
t._depthTest && (i += t._depthWrite + t._depthFunc);
t._stencilTest && (i += t._stencilFuncFront + t._stencilRefFront + t._stencilMaskFront + t._stencilFailOpFront + t._stencilZFailOpFront + t._stencilZPassOpFront + t._stencilWriteMaskFront + t._stencilFuncBack + t._stencilRefBack + t._stencilMaskBack + t._stencilFailOpBack + t._stencilZFailOpBack + t._stencilZPassOpBack + t._stencilWriteMaskBack);
e || (i += o(t._properties));
return i += r(t._defines);
}
function o(t) {
var e = "";
for (var i in t) {
var r = t[i], s = r.value;
s && (r.type === n.default.PARAM_TEXTURE_2D || r.type === n.default.PARAM_TEXTURE_CUBE ? e += s._id + ";" : e += s.toString() + ";");
}
return e;
}
var a = {
serializeDefines: r,
serializePasses: function(t) {
for (var e = "", i = 0; i < t.length; i++) e += s(t[i]);
return e;
},
serializeUniforms: o
};
i.default = a;
e.exports = i.default;
}), {
"../../../renderer/enums": 353
} ],
104: [ (function(t, e, i) {
"use strict";
t("../CCNode").EventType;
var n = 56, r = 7, s = cc.Enum({
ONCE: 0,
ON_WINDOW_RESIZE: 1,
ALWAYS: 2
});
function o(t) {
return t instanceof cc.Scene ? cc.visibleRect : t._contentSize;
}
function a(t, e, i, n) {
for (var r = t._parent.scaleX, s = t._parent.scaleY, o = 0, a = 0, c = t._parent; ;) {
o += c.x;
a += c.y;
if (!(c = c._parent)) {
i.x = i.y = 0;
n.x = n.y = 1;
return;
}
if (c === e) break;
var l = c.scaleX, u = c.scaleY;
o *= l;
a *= u;
r *= l;
s *= u;
}
n.x = 0 !== r ? 1 / r : 1;
n.y = 0 !== s ? 1 / s : 1;
i.x = -o;
i.y = -a;
}
var c = cc.Vec2.ZERO, l = cc.Vec2.ONE;
function u(t, e) {
var i, s, u, h = e._target;
h ? a(t, i = h, s = c, u = l) : i = t._parent;
var f = o(i), _ = i._anchorPoint, d = i instanceof cc.Scene, p = t.x, m = t.y, y = t._anchorPoint;
if (e._alignFlags & n) {
var v, g, b = f.width;
if (d) {
v = cc.visibleRect.left.x;
g = cc.visibleRect.right.x;
} else g = (v = -_.x * b) + b;
v += e._isAbsLeft ? e._left : e._left * b;
g -= e._isAbsRight ? e._right : e._right * b;
if (h) {
v += s.x;
v *= u.x;
g += s.x;
g *= u.x;
}
var C, x = y.x, A = t.scaleX;
if (A < 0) {
x = 1 - x;
A = -A;
}
if (e.isStretchWidth) {
C = g - v;
0 !== A && (t.width = C / A);
p = v + x * C;
} else {
C = t.width * A;
if (e.isAlignHorizontalCenter) {
var S = e._isAbsHorizontalCenter ? e._horizontalCenter : e._horizontalCenter * b, w = (.5 - _.x) * f.width;
if (h) {
S *= u.x;
w += s.x;
w *= u.x;
}
p = w + (x - .5) * C + S;
} else p = e.isAlignLeft ? v + x * C : g + (x - 1) * C;
}
}
if (e._alignFlags & r) {
var T, E, M = f.height;
if (d) {
E = cc.visibleRect.bottom.y;
T = cc.visibleRect.top.y;
} else T = (E = -_.y * M) + M;
E += e._isAbsBottom ? e._bottom : e._bottom * M;
T -= e._isAbsTop ? e._top : e._top * M;
if (h) {
E += s.y;
E *= u.y;
T += s.y;
T *= u.y;
}
var B, D = y.y, R = t.scaleY;
if (R < 0) {
D = 1 - D;
R = -R;
}
if (e.isStretchHeight) {
B = T - E;
0 !== R && (t.height = B / R);
m = E + D * B;
} else {
B = t.height * R;
if (e.isAlignVerticalCenter) {
var I = e._isAbsVerticalCenter ? e._verticalCenter : e._verticalCenter * M, P = (.5 - _.y) * f.height;
if (h) {
I *= u.y;
P += s.y;
P *= u.y;
}
m = P + (D - .5) * B + I;
} else m = e.isAlignBottom ? E + D * B : T + (D - 1) * B;
}
}
t.setPosition(p, m);
}
function h(t) {
var e = t._widget;
if (e) {
0;
u(t, e);
e.alignMode !== s.ALWAYS ? e.enabled = !1 : _.push(e);
}
for (var i = t._children, n = 0; n < i.length; n++) {
var r = i[n];
r._active && h(r);
}
}
function f() {
var t = cc.director.getScene();
if (t) {
d.isAligning = !0;
if (d._nodesOrderDirty) {
_.length = 0;
h(t);
d._nodesOrderDirty = !1;
} else {
var e, i = d._activeWidgetsIterator;
for (i.i = 0; i.i < _.length; ++i.i) u((e = _[i.i]).node, e);
}
d.isAligning = !1;
}
0;
}
var _ = [];
var d = cc._widgetManager = e.exports = {
_AlignFlags: {
TOP: 1,
MID: 2,
BOT: 4,
LEFT: 8,
CENTER: 16,
RIGHT: 32
},
isAligning: !1,
_nodesOrderDirty: !1,
_activeWidgetsIterator: new cc.js.array.MutableForwardIterator(_),
init: function(t) {
t.on(cc.Director.EVENT_AFTER_UPDATE, f);
var e = this.onResized.bind(this);
window.addEventListener("resize", e);
window.addEventListener("orientationchange", e);
},
add: function(t) {
t.node._widget = t;
this._nodesOrderDirty = !0;
0;
},
remove: function(t) {
t.node._widget = null;
this._activeWidgetsIterator.remove(t);
0;
},
onResized: function() {
var t = cc.director.getScene();
t && this.refreshWidgetOnResized(t);
},
refreshWidgetOnResized: function(t) {
var e = cc.Node.isNode(t) && t.getComponent(cc.Widget);
e && e.alignMode === s.ON_WINDOW_RESIZE && (e.enabled = !0);
for (var i = t._children, n = 0; n < i.length; n++) {
var r = i[n];
this.refreshWidgetOnResized(r);
}
},
updateAlignment: function t(e) {
var i = e._parent;
cc.Node.isNode(i) && t(i);
var n = e._widget || e.getComponent(cc.Widget);
n && i && u(e, n);
},
AlignMode: s
};
0;
}), {
"../CCNode": 72
} ],
105: [ (function(t, e, i) {
"use strict";
var n = t("../value-types"), r = t("../geom-utils"), s = t("../utils/affine-transform"), o = t("../renderer/index"), a = t("../renderer/render-flow"), c = t("../CCGame"), l = null;
l = window.renderer.Camera;
var u = cc.mat4(), h = cc.mat4(), f = cc.v3(), _ = cc.v3(), d = cc.v3(), p = [], m = null;
function y() {
if (m) {
var t = m.getNode(), e = cc.game.canvas;
t.z = e.height / 1.1566;
t.x = e.width / 2;
t.y = e.height / 2;
}
}
var v = cc.Enum({
COLOR: 1,
DEPTH: 2,
STENCIL: 4
}), g = cc.Enum({
OPAQUE: 1,
TRANSPARENT: 2
}), b = cc.Class({
name: "cc.Camera",
extends: cc.Component,
ctor: function() {
if (c.renderType !== c.RENDER_TYPE_CANVAS) {
var t = new l();
t.setStages([ "opaque" ]);
t.dirty = !0;
this._inited = !1;
this._camera = t;
} else this._inited = !0;
},
editor: !1,
properties: {
_cullingMask: 4294967295,
_clearFlags: v.DEPTH | v.STENCIL,
_backgroundColor: cc.color(0, 0, 0, 255),
_depth: 0,
_zoomRatio: 1,
_targetTexture: null,
_fov: 60,
_orthoSize: 10,
_nearClip: 1,
_farClip: 4096,
_ortho: !0,
_rect: cc.rect(0, 0, 1, 1),
_renderStages: 1,
_alignWithScreen: !0,
zoomRatio: {
get: function() {
return this._zoomRatio;
},
set: function(t) {
this._zoomRatio = t;
},
tooltip: !1
},
fov: {
get: function() {
return this._fov;
},
set: function(t) {
this._fov = t;
},
tooltip: !1
},
orthoSize: {
get: function() {
return this._orthoSize;
},
set: function(t) {
this._orthoSize = t;
},
tooltip: !1
},
nearClip: {
get: function() {
return this._nearClip;
},
set: function(t) {
this._nearClip = t;
this._updateClippingpPlanes();
},
tooltip: !1
},
farClip: {
get: function() {
return this._farClip;
},
set: function(t) {
this._farClip = t;
this._updateClippingpPlanes();
},
tooltip: !1
},
ortho: {
get: function() {
return this._ortho;
},
set: function(t) {
this._ortho = t;
this._updateProjection();
},
tooltip: !1
},
rect: {
get: function() {
return this._rect;
},
set: function(t) {
this._rect = t;
this._updateRect();
},
tooltip: !1
},
cullingMask: {
get: function() {
return this._cullingMask;
},
set: function(t) {
this._cullingMask = t;
this._updateCameraMask();
},
tooltip: !1
},
clearFlags: {
get: function() {
return this._clearFlags;
},
set: function(t) {
this._clearFlags = t;
this._camera && this._camera.setClearFlags(t);
},
tooltip: !1
},
backgroundColor: {
get: function() {
return this._backgroundColor;
},
set: function(t) {
if (!this._backgroundColor.equals(t)) {
this._backgroundColor.set(t);
this._updateBackgroundColor();
}
},
tooltip: !1
},
depth: {
get: function() {
return this._depth;
},
set: function(t) {
this._depth = t;
this._camera && this._camera.setPriority(t);
},
tooltip: !1
},
targetTexture: {
get: function() {
return this._targetTexture;
},
set: function(t) {
this._targetTexture = t;
this._updateTargetTexture();
},
tooltip: !1
},
renderStages: {
get: function() {
return this._renderStages;
},
set: function(t) {
this._renderStages = t;
this._updateStages();
},
tooltip: !1
},
alignWithScreen: {
get: function() {
return this._alignWithScreen;
},
set: function(t) {
this._alignWithScreen = t;
}
},
_is3D: {
get: function() {
return this.node && this.node._is3DNode;
}
}
},
statics: {
main: null,
cameras: p,
ClearFlags: v,
findCamera: function(t) {
for (var e = 0, i = p.length; e < i; e++) {
var n = p[e];
if (n.containsNode(t)) return n;
}
return null;
},
_findRendererCamera: function(t) {
for (var e = o.scene._cameras, i = 0; i < e._count; i++) if (e._data[i]._cullingMask & t._cullingMask) return e._data[i];
return null;
},
_setupDebugCamera: function() {
if (!m && c.renderType !== c.RENDER_TYPE_CANVAS) {
var t = new l();
m = t;
t.setStages([ "opaque" ]);
t.setFov(60 * Math.PI / 180);
t.setNear(.1);
t.setFar(4096);
t.dirty = !0;
t.cullingMask = 1 << cc.Node.BuiltinGroupIndex.DEBUG;
t.setPriority(cc.macro.MAX_ZINDEX);
t.setClearFlags(0);
t.setColor(0, 0, 0, 0);
var e = new cc.Node();
t.setNode(e);
y();
cc.view.on("design-resolution-changed", y);
o.scene.addCamera(t);
}
}
},
_updateCameraMask: function() {
if (this._camera) {
var t = this._cullingMask & ~(1 << cc.Node.BuiltinGroupIndex.DEBUG);
this._camera.cullingMask = t;
}
},
_updateBackgroundColor: function() {
if (this._camera) {
var t = this._backgroundColor;
this._camera.setColor(t.r / 255, t.g / 255, t.b / 255, t.a / 255);
}
},
_updateTargetTexture: function() {
if (this._camera) {
var t = this._targetTexture;
this._camera.setFrameBuffer(t ? t._framebuffer : null);
}
},
_updateClippingpPlanes: function() {
if (this._camera) {
this._camera.setNear(this._nearClip);
this._camera.setFar(this._farClip);
}
},
_updateProjection: function() {
if (this._camera) {
var t = this._ortho ? 1 : 0;
this._camera.setType(t);
}
},
_updateRect: function() {
if (this._camera) {
var t = this._rect;
this._camera.setRect(t.x, t.y, t.width, t.height);
}
},
_updateStages: function() {
var t = this._renderStages, e = [];
t & g.OPAQUE && e.push("opaque");
t & g.TRANSPARENT && e.push("transparent");
this._camera.setStages(e);
},
_init: function() {
if (!this._inited) {
this._inited = !0;
var t = this._camera;
if (t) {
t.setNode(this.node);
t.setClearFlags(this._clearFlags);
t.setPriority(this._depth);
this._updateBackgroundColor();
this._updateCameraMask();
this._updateTargetTexture();
this._updateClippingpPlanes();
this._updateProjection();
this._updateStages();
this._updateRect();
this.beforeDraw();
}
}
},
onLoad: function() {
this._init();
},
onEnable: function() {
if (c.renderType !== c.RENDER_TYPE_CANVAS) {
cc.director.on(cc.Director.EVENT_BEFORE_DRAW, this.beforeDraw, this);
o.scene.addCamera(this._camera);
}
p.push(this);
},
onDisable: function() {
if (c.renderType !== c.RENDER_TYPE_CANVAS) {
cc.director.off(cc.Director.EVENT_BEFORE_DRAW, this.beforeDraw, this);
o.scene.removeCamera(this._camera);
}
cc.js.array.remove(p, this);
},
getScreenToWorldMatrix2D: function(t) {
this.getWorldToScreenMatrix2D(t);
n.Mat4.invert(t, t);
return t;
},
getWorldToScreenMatrix2D: function(t) {
this.node.getWorldRT(u);
var e = this.zoomRatio, i = u.m;
i[0] *= e;
i[1] *= e;
i[4] *= e;
i[5] *= e;
var r = i[12], s = i[13], o = cc.visibleRect.center;
i[12] = o.x - (i[0] * r + i[4] * s);
i[13] = o.y - (i[1] * r + i[5] * s);
t !== u && n.Mat4.copy(t, u);
return t;
},
getScreenToWorldPoint: function(t, e) {
if (this.node.is3DNode) {
e = e || new cc.Vec3();
this._camera.screenToWorld(e, t, cc.visibleRect.width, cc.visibleRect.height);
} else {
e = e || new cc.Vec2();
this.getScreenToWorldMatrix2D(u);
n.Vec2.transformMat4(e, t, u);
}
return e;
},
getWorldToScreenPoint: function(t, e) {
if (this.node.is3DNode) {
e = e || new cc.Vec3();
this._camera.worldToScreen(e, t, cc.visibleRect.width, cc.visibleRect.height);
} else {
e = e || new cc.Vec2();
this.getWorldToScreenMatrix2D(u);
n.Vec2.transformMat4(e, t, u);
}
return e;
},
getRay: function(t) {
if (!cc.geomUtils) return t;
n.Vec3.set(d, t.x, t.y, 1);
this._camera.screenToWorld(_, d, cc.visibleRect.width, cc.visibleRect.height);
if (this.ortho) {
n.Vec3.set(d, t.x, t.y, -1);
this._camera.screenToWorld(f, d, cc.visibleRect.width, cc.visibleRect.height);
} else this.node.getWorldPosition(f);
return r.Ray.fromPoints(new r.Ray(), f, _);
},
containsNode: function(t) {
return t._cullingMask & this.cullingMask;
},
render: function(t) {
if (!(t = t || cc.director.getScene())) return null;
this.node.getWorldMatrix(u);
this.beforeDraw();
a.render(t);
0;
},
_onAlignWithScreen: function() {
var t = cc.game.canvas.height / cc.view._scaleY;
this._targetTexture && (t = cc.visibleRect.height);
var e = this._fov * cc.macro.RAD;
this.node.z = t / (2 * Math.tan(e / 2));
e = 2 * Math.atan(Math.tan(e / 2) / this.zoomRatio);
this._camera.setFov(e);
this._camera.setOrthoHeight(t / 2 / this.zoomRatio);
this.node.setRotation(0, 0, 0, 1);
},
beforeDraw: function() {
if (this._camera) {
if (this._alignWithScreen) this._onAlignWithScreen(); else {
var t = this._fov * cc.macro.RAD;
t = 2 * Math.atan(Math.tan(t / 2) / this.zoomRatio);
this._camera.setFov(t);
this._camera.setOrthoHeight(this._orthoSize / this.zoomRatio);
}
this._camera.dirty = !0;
}
}
});
cc.js.mixin(b.prototype, {
getNodeToCameraTransform: function(t) {
var e = s.identity();
t.getWorldMatrix(h);
if (this.containsNode(t)) {
this.getWorldToCameraMatrix(u);
n.Mat4.mul(h, h, u);
}
s.fromMat4(e, h);
return e;
},
getCameraToWorldPoint: function(t, e) {
return this.getScreenToWorldPoint(t, e);
},
getWorldToCameraPoint: function(t, e) {
return this.getWorldToScreenPoint(t, e);
},
getCameraToWorldMatrix: function(t) {
return this.getScreenToWorldMatrix2D(t);
},
getWorldToCameraMatrix: function(t) {
return this.getWorldToScreenMatrix2D(t);
}
});
e.exports = cc.Camera = b;
}), {
"../../renderer/scene/camera": void 0,
"../CCGame": 71,
"../geom-utils": 164,
"../renderer/index": 262,
"../renderer/render-flow": 263,
"../utils/affine-transform": 303,
"../value-types": 328
} ],
106: [ (function(t, e, i) {
"use strict";
cc.Collider.Box = cc.Class({
properties: {
_offset: cc.v2(0, 0),
_size: cc.size(100, 100),
offset: {
tooltip: !1,
get: function() {
return this._offset;
},
set: function(t) {
this._offset = t;
},
type: cc.Vec2
},
size: {
tooltip: !1,
get: function() {
return this._size;
},
set: function(t) {
this._size.width = t.width < 0 ? 0 : t.width;
this._size.height = t.height < 0 ? 0 : t.height;
},
type: cc.Size
}
},
resetInEditor: !1
});
var n = cc.Class({
name: "cc.BoxCollider",
extends: cc.Collider,
mixins: [ cc.Collider.Box ],
editor: !1
});
cc.BoxCollider = e.exports = n;
}), {} ],
107: [ (function(t, e, i) {
"use strict";
cc.Collider.Circle = cc.Class({
properties: {
_offset: cc.v2(0, 0),
_radius: 50,
offset: {
get: function() {
return this._offset;
},
set: function(t) {
this._offset = t;
},
type: cc.Vec2
},
radius: {
tooltip: !1,
get: function() {
return this._radius;
},
set: function(t) {
this._radius = t < 0 ? 0 : t;
}
}
},
resetInEditor: !1
});
var n = cc.Class({
name: "cc.CircleCollider",
extends: cc.Collider,
mixins: [ cc.Collider.Circle ],
editor: !1
});
cc.CircleCollider = e.exports = n;
}), {} ],
108: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.Collider",
extends: cc.Component,
properties: {
editing: {
default: !1,
serializable: !1,
tooltip: !1
},
tag: {
tooltip: !1,
default: 0,
range: [ 0, 1e7 ],
type: cc.Integer
}
},
onDisable: function() {
cc.director.getCollisionManager().removeCollider(this);
},
onEnable: function() {
cc.director.getCollisionManager().addCollider(this);
}
});
cc.Collider = e.exports = n;
}), {} ],
109: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../value-types/vec2"));
var r = t("./CCContact"), s = r.CollisionType, o = t("../CCNode").EventType, a = new n.default();
function c(t, e, i, n, r, s) {
var o = t.x, a = t.y, c = t.width, l = t.height, u = e.m, h = u[0], f = u[1], _ = u[4], d = u[5], p = h * o + _ * a + u[12], m = f * o + d * a + u[13], y = h * c, v = f * c, g = _ * l, b = d * l;
n.x = p;
n.y = m;
r.x = y + p;
r.y = v + m;
i.x = g + p;
i.y = b + m;
s.x = y + g + p;
s.y = v + b + m;
}
var l = cc.Class({
mixins: [ cc.EventTarget ],
properties: {
enabled: !1,
enabledDrawBoundingBox: !1
},
ctor: function() {
this._contacts = [];
this._colliders = [];
this._debugDrawer = null;
this._enabledDebugDraw = !1;
cc.director._scheduler && cc.director._scheduler.enableForTarget(this);
},
update: function(t) {
if (this.enabled) {
var e, i, n = this._colliders;
for (e = 0, i = n.length; e < i; e++) this.updateCollider(n[e]);
var r = this._contacts, o = [];
for (e = 0, i = r.length; e < i; e++) {
var a = r[e].updateState();
a !== s.None && o.push([ a, r[e] ]);
}
for (e = 0, i = o.length; e < i; e++) {
var c = o[e];
this._doCollide(c[0], c[1]);
}
this.drawColliders();
}
},
_doCollide: function(t, e) {
var i;
switch (t) {
case s.CollisionEnter:
i = "onCollisionEnter";
break;

case s.CollisionStay:
i = "onCollisionStay";
break;

case s.CollisionExit:
i = "onCollisionExit";
}
var n, r, o, a = e.collider1, c = e.collider2, l = a.node._components, u = c.node._components;
for (n = 0, r = l.length; n < r; n++) (o = l[n])[i] && o[i](c, a);
for (n = 0, r = u.length; n < r; n++) (o = u[n])[i] && o[i](a, c);
},
shouldCollide: function(t, e) {
var i = t.node, n = e.node, r = cc.game.collisionMatrix;
return i !== n && r[i.groupIndex][n.groupIndex];
},
initCollider: function(t) {
if (!t.world) {
var e = t.world = {};
e.aabb = cc.rect();
e.preAabb = cc.rect();
e.matrix = cc.mat4();
e.radius = 0;
if (t instanceof cc.BoxCollider) {
e.position = null;
e.points = [ cc.v2(), cc.v2(), cc.v2(), cc.v2() ];
} else if (t instanceof cc.PolygonCollider) {
e.position = null;
e.points = t.points.map((function(t) {
return cc.v2(t.x, t.y);
}));
} else if (t instanceof cc.CircleCollider) {
e.position = cc.v2();
e.points = null;
}
}
},
updateCollider: function(t) {
var e = t.offset, i = t.world, r = i.aabb, s = i.matrix;
t.node.getWorldMatrix(s);
var o = i.preAabb;
o.x = r.x;
o.y = r.y;
o.width = r.width;
o.height = r.height;
if (t instanceof cc.BoxCollider) {
var l = t.size;
r.x = e.x - l.width / 2;
r.y = e.y - l.height / 2;
r.width = l.width;
r.height = l.height;
var u = i.points, h = u[0], f = u[1], _ = u[2], d = u[3];
c(r, s, h, f, _, d);
var p = Math.min(h.x, f.x, _.x, d.x), m = Math.min(h.y, f.y, _.y, d.y), y = Math.max(h.x, f.x, _.x, d.x), v = Math.max(h.y, f.y, _.y, d.y);
r.x = p;
r.y = m;
r.width = y - p;
r.height = v - m;
} else if (t instanceof cc.CircleCollider) {
n.default.transformMat4(a, t.offset, s);
i.position.x = a.x;
i.position.y = a.y;
var g = s.m, b = g[12], C = g[13];
g[12] = g[13] = 0;
a.x = t.radius;
a.y = 0;
n.default.transformMat4(a, a, s);
var x = Math.sqrt(a.x * a.x + a.y * a.y);
i.radius = x;
r.x = i.position.x - x;
r.y = i.position.y - x;
r.width = 2 * x;
r.height = 2 * x;
g[12] = b;
g[13] = C;
} else if (t instanceof cc.PolygonCollider) {
var A = t.points, S = i.points;
S.length = A.length;
for (var w = 1e6, T = 1e6, E = -1e6, M = -1e6, B = 0, D = A.length; B < D; B++) {
S[B] || (S[B] = cc.v2());
a.x = A[B].x + e.x;
a.y = A[B].y + e.y;
n.default.transformMat4(a, a, s);
var R = a.x, I = a.y;
S[B].x = R;
S[B].y = I;
R > E && (E = R);
R < w && (w = R);
I > M && (M = I);
I < T && (T = I);
}
r.x = w;
r.y = T;
r.width = E - w;
r.height = M - T;
}
},
addCollider: function(t) {
var e = this._colliders;
if (-1 === e.indexOf(t)) {
for (var i = 0, n = e.length; i < n; i++) {
var s = e[i];
if (this.shouldCollide(t, s)) {
var a = new r(t, s);
this._contacts.push(a);
}
}
e.push(t);
this.initCollider(t);
}
t.node.on(o.GROUP_CHANGED, this.onNodeGroupChanged, this);
},
removeCollider: function(t) {
var e = this._colliders, i = e.indexOf(t);
if (i >= 0) {
e.splice(i, 1);
for (var n = this._contacts, r = n.length - 1; r >= 0; r--) {
var a = n[r];
if (a.collider1 === t || a.collider2 === t) {
a.touching && this._doCollide(s.CollisionExit, a);
n.splice(r, 1);
}
}
t.node.off(o.GROUP_CHANGED, this.onNodeGroupChanged, this);
} else cc.errorID(6600);
},
onNodeGroupChanged: function(t) {
for (var e = t.getComponents(cc.Collider), i = 0, n = e.length; i < n; i++) {
var r = e[i];
if (!(cc.PhysicsCollider && r instanceof cc.PhysicsCollider)) {
this.removeCollider(r);
this.addCollider(r);
}
}
},
drawColliders: function() {
if (this._enabledDebugDraw) {
this._checkDebugDrawValid();
var t = this._debugDrawer;
t.clear();
for (var e = this._colliders, i = 0, n = e.length; i < n; i++) {
var r = e[i];
t.strokeColor = cc.Color.WHITE;
if (r instanceof cc.BoxCollider || r instanceof cc.PolygonCollider) {
var s = r.world.points;
if (s.length > 0) {
t.moveTo(s[0].x, s[0].y);
for (var o = 1; o < s.length; o++) t.lineTo(s[o].x, s[o].y);
t.close();
t.stroke();
}
} else if (r instanceof cc.CircleCollider) {
t.circle(r.world.position.x, r.world.position.y, r.world.radius);
t.stroke();
}
if (this.enabledDrawBoundingBox) {
var a = r.world.aabb;
t.strokeColor = cc.Color.BLUE;
t.moveTo(a.xMin, a.yMin);
t.lineTo(a.xMin, a.yMax);
t.lineTo(a.xMax, a.yMax);
t.lineTo(a.xMax, a.yMin);
t.close();
t.stroke();
}
}
}
},
_checkDebugDrawValid: function() {
if (!this._debugDrawer || !this._debugDrawer.isValid) {
var t = new cc.Node("COLLISION_MANAGER_DEBUG_DRAW");
t.zIndex = cc.macro.MAX_ZINDEX;
cc.game.addPersistRootNode(t);
this._debugDrawer = t.addComponent(cc.Graphics);
}
}
});
cc.js.getset(l.prototype, "enabledDebugDraw", (function() {
return this._enabledDebugDraw;
}), (function(t) {
if (t && !this._enabledDebugDraw) {
this._checkDebugDrawValid();
this._debugDrawer.node.active = !0;
} else if (!t && this._enabledDebugDraw) {
this._debugDrawer.clear(!0);
this._debugDrawer.node.active = !1;
}
this._enabledDebugDraw = t;
}));
cc.CollisionManager = e.exports = l;
}), {
"../CCNode": 72,
"../value-types/vec2": 337,
"./CCContact": 110
} ],
110: [ (function(t, e, i) {
"use strict";
var n = t("./CCIntersection"), r = cc.Enum({
None: 0,
CollisionEnter: 1,
CollisionStay: 2,
CollisionExit: 3
});
function s(t, e) {
this.collider1 = t;
this.collider2 = e;
this.touching = !1;
var i = t instanceof cc.BoxCollider || t instanceof cc.PolygonCollider, r = e instanceof cc.BoxCollider || e instanceof cc.PolygonCollider, s = t instanceof cc.CircleCollider, o = e instanceof cc.CircleCollider;
if (i && r) this.testFunc = n.polygonPolygon; else if (s && o) this.testFunc = n.circleCircle; else if (i && o) this.testFunc = n.polygonCircle; else if (s && r) {
this.testFunc = n.polygonCircle;
this.collider1 = e;
this.collider2 = t;
} else cc.errorID(6601, cc.js.getClassName(t), cc.js.getClassName(e));
}
s.prototype.test = function() {
var t = this.collider1.world, e = this.collider2.world;
return !!t.aabb.intersects(e.aabb) && (this.testFunc === n.polygonPolygon ? this.testFunc(t.points, e.points) : this.testFunc === n.circleCircle ? this.testFunc(t, e) : this.testFunc === n.polygonCircle && this.testFunc(t.points, e));
};
s.prototype.updateState = function() {
var t = this.test(), e = r.None;
if (t && !this.touching) {
this.touching = !0;
e = r.CollisionEnter;
} else if (t && this.touching) e = r.CollisionStay; else if (!t && this.touching) {
this.touching = !1;
e = r.CollisionExit;
}
return e;
};
s.CollisionType = r;
e.exports = s;
}), {
"./CCIntersection": 111
} ],
111: [ (function(t, e, i) {
"use strict";
var n = {};
function r(t, e, i, n) {
var r = (n.x - i.x) * (t.y - i.y) - (n.y - i.y) * (t.x - i.x), s = (e.x - t.x) * (t.y - i.y) - (e.y - t.y) * (t.x - i.x), o = (n.y - i.y) * (e.x - t.x) - (n.x - i.x) * (e.y - t.y);
if (0 !== o) {
var a = r / o, c = s / o;
if (0 <= a && a <= 1 && 0 <= c && c <= 1) return !0;
}
return !1;
}
n.lineLine = r;
n.lineRect = function(t, e, i) {
var n = new cc.Vec2(i.x, i.y), s = new cc.Vec2(i.x, i.yMax), o = new cc.Vec2(i.xMax, i.yMax), a = new cc.Vec2(i.xMax, i.y);
return !!(r(t, e, n, s) || r(t, e, s, o) || r(t, e, o, a) || r(t, e, a, n));
};
function s(t, e, i) {
for (var n = i.length, s = 0; s < n; ++s) {
if (r(t, e, i[s], i[(s + 1) % n])) return !0;
}
return !1;
}
n.linePolygon = s;
n.rectRect = function(t, e) {
var i = t.x, n = t.y, r = t.x + t.width, s = t.y + t.height, o = e.x, a = e.y, c = e.x + e.width, l = e.y + e.height;
return i <= c && r >= o && n <= l && s >= a;
};
n.rectPolygon = function(t, e) {
var i, n, r = new cc.Vec2(t.x, t.y), a = new cc.Vec2(t.x, t.yMax), c = new cc.Vec2(t.xMax, t.yMax), l = new cc.Vec2(t.xMax, t.y);
if (s(r, a, e)) return !0;
if (s(a, c, e)) return !0;
if (s(c, l, e)) return !0;
if (s(l, r, e)) return !0;
for (i = 0, n = e.length; i < n; ++i) if (o(e[i], t)) return !0;
return !!(o(r, e) || o(a, e) || o(c, e) || o(l, e));
};
n.polygonPolygon = function(t, e) {
var i, n;
for (i = 0, n = t.length; i < n; ++i) if (s(t[i], t[(i + 1) % n], e)) return !0;
for (i = 0, n = e.length; i < n; ++i) if (o(e[i], t)) return !0;
for (i = 0, n = t.length; i < n; ++i) if (o(t[i], e)) return !0;
return !1;
};
n.circleCircle = function(t, e) {
return t.position.sub(e.position).mag() < t.radius + e.radius;
};
n.polygonCircle = function(t, e) {
var i = e.position;
if (o(i, t)) return !0;
for (var n = 0, r = t.length; n < r; n++) if (a(i, 0 === n ? t[t.length - 1] : t[n - 1], t[n], !0) < e.radius) return !0;
return !1;
};
function o(t, e) {
for (var i = !1, n = t.x, r = t.y, s = e.length, o = 0, a = s - 1; o < s; a = o++) {
var c = e[o].x, l = e[o].y, u = e[a].x, h = e[a].y;
l > r != h > r && n < (u - c) * (r - l) / (h - l) + c && (i = !i);
}
return i;
}
n.pointInPolygon = o;
function a(t, e, i, n) {
var r, s = i.x - e.x, o = i.y - e.y, a = s * s + o * o, c = ((t.x - e.x) * s + (t.y - e.y) * o) / a;
r = n ? a ? c < 0 ? e : c > 1 ? i : cc.v2(e.x + c * s, e.y + c * o) : e : cc.v2(e.x + c * s, e.y + c * o);
s = t.x - r.x;
o = t.y - r.y;
return Math.sqrt(s * s + o * o);
}
n.pointLineDistance = a;
cc.Intersection = e.exports = n;
}), {} ],
112: [ (function(t, e, i) {
"use strict";
cc.Collider.Polygon = cc.Class({
properties: {
threshold: {
default: 1,
serializable: !1,
visible: !1
},
_offset: cc.v2(0, 0),
offset: {
get: function() {
return this._offset;
},
set: function(t) {
this._offset = t;
},
type: cc.Vec2
},
points: {
tooltip: !1,
default: function() {
return [ cc.v2(-50, -50), cc.v2(50, -50), cc.v2(50, 50), cc.v2(-50, 50) ];
},
type: [ cc.Vec2 ]
}
},
resetPointsByContour: !1
});
var n = cc.Class({
name: "cc.PolygonCollider",
extends: cc.Collider,
mixins: [ cc.Collider.Polygon ],
editor: !1
});
cc.PolygonCollider = e.exports = n;
}), {} ],
113: [ (function(t, e, i) {
"use strict";
t("./CCCollisionManager");
t("./CCCollider");
t("./CCBoxCollider");
t("./CCCircleCollider");
t("./CCPolygonCollider");
}), {
"./CCBoxCollider": 106,
"./CCCircleCollider": 107,
"./CCCollider": 108,
"./CCCollisionManager": 109,
"./CCPolygonCollider": 112
} ],
114: [ (function(t, e, i) {
"use strict";
t("./platform/CCClass");
var n = t("./platform/CCObject").Flags, r = t("./platform/js").array, s = n.IsStartCalled, o = n.IsOnEnableCalled;
n.IsEditorOnEnableCalled;
function a(t, e) {
for (var i = e.constructor._executionOrder, n = e._id, r = 0, s = t.length - 1, o = s >>> 1; r <= s; o = r + s >>> 1) {
var a = t[o], c = a.constructor._executionOrder;
if (c > i) s = o - 1; else if (c < i) r = o + 1; else {
var l = a._id;
if (l > n) s = o - 1; else {
if (!(l < n)) return o;
r = o + 1;
}
}
}
return ~r;
}
function c(t, e) {
for (var i = t.array, n = t.i + 1; n < i.length; ) {
var r = i[n];
if (r._enabled && r.node._activeInHierarchy) ++n; else {
t.removeAt(n);
e && (r._objFlags &= ~e);
}
}
}
var l = cc.Class({
__ctor__: function(t) {
var e = r.MutableForwardIterator;
this._zero = new e([]);
this._neg = new e([]);
this._pos = new e([]);
0;
this._invoke = t;
},
statics: {
stableRemoveInactive: c
},
add: null,
remove: null,
invoke: null
});
function u(t, e) {
return t.constructor._executionOrder - e.constructor._executionOrder;
}
var h = cc.Class({
extends: l,
add: function(t) {
var e = t.constructor._executionOrder;
(0 === e ? this._zero : e < 0 ? this._neg : this._pos).array.push(t);
},
remove: function(t) {
var e = t.constructor._executionOrder;
(0 === e ? this._zero : e < 0 ? this._neg : this._pos).fastRemove(t);
},
cancelInactive: function(t) {
c(this._zero, t);
c(this._neg, t);
c(this._pos, t);
},
invoke: function() {
var t = this._neg;
if (t.array.length > 0) {
t.array.sort(u);
this._invoke(t);
t.array.length = 0;
}
this._invoke(this._zero);
this._zero.array.length = 0;
var e = this._pos;
if (e.array.length > 0) {
e.array.sort(u);
this._invoke(e);
e.array.length = 0;
}
}
}), f = cc.Class({
extends: l,
add: function(t) {
var e = t.constructor._executionOrder;
if (0 === e) this._zero.array.push(t); else {
var i = e < 0 ? this._neg.array : this._pos.array, n = a(i, t);
n < 0 && i.splice(~n, 0, t);
}
},
remove: function(t) {
var e = t.constructor._executionOrder;
if (0 === e) this._zero.fastRemove(t); else {
var i = e < 0 ? this._neg : this._pos, n = a(i.array, t);
n >= 0 && i.removeAt(n);
}
},
invoke: function(t) {
this._neg.array.length > 0 && this._invoke(this._neg, t);
this._invoke(this._zero, t);
this._pos.array.length > 0 && this._invoke(this._pos, t);
}
});
function _(t, e, i, n) {
var r = "var a=it.array;for(it.i=0;it.i<a.length;++it.i){var c=a[it.i];" + t + "}";
n = e ? Function("it", "dt", r) : Function("it", r);
t = Function("c", "dt", t);
return function(e, r) {
try {
n(e, r);
} catch (n) {
cc._throw(n);
var s = e.array;
i && (s[e.i]._objFlags |= i);
++e.i;
for (;e.i < s.length; ++e.i) try {
t(s[e.i], r);
} catch (t) {
cc._throw(t);
i && (s[e.i]._objFlags |= i);
}
}
};
}
var d = _("c.start();c._objFlags|=" + s, !1, s), p = _("c.update(dt)", !0), m = _("c.lateUpdate(dt)", !0);
function y() {
this.startInvoker = new h(d);
this.updateInvoker = new f(p);
this.lateUpdateInvoker = new f(m);
this.scheduleInNextFrame = [];
this._updating = !1;
}
var v = cc.Class({
ctor: y,
unscheduleAll: y,
statics: {
LifeCycleInvoker: l,
OneOffInvoker: h,
createInvokeImpl: _,
invokeOnEnable: function(t) {
var e = cc.director._compScheduler, i = t.array;
for (t.i = 0; t.i < i.length; ++t.i) {
var n = i[t.i];
if (n._enabled) {
n.onEnable();
!n.node._activeInHierarchy || e._onEnabled(n);
}
}
}
},
_onEnabled: function(t) {
cc.director.getScheduler().resumeTarget(t);
t._objFlags |= o;
this._updating ? this.scheduleInNextFrame.push(t) : this._scheduleImmediate(t);
},
_onDisabled: function(t) {
cc.director.getScheduler().pauseTarget(t);
t._objFlags &= ~o;
var e = this.scheduleInNextFrame.indexOf(t);
if (e >= 0) r.fastRemoveAt(this.scheduleInNextFrame, e); else {
!t.start || t._objFlags & s || this.startInvoker.remove(t);
t.update && this.updateInvoker.remove(t);
t.lateUpdate && this.lateUpdateInvoker.remove(t);
}
},
enableComp: function(t, e) {
if (!(t._objFlags & o)) {
if (t.onEnable) {
if (e) {
e.add(t);
return;
}
t.onEnable();
if (!t.node._activeInHierarchy) return;
}
this._onEnabled(t);
}
},
disableComp: function(t) {
if (t._objFlags & o) {
t.onDisable && t.onDisable();
this._onDisabled(t);
}
},
_scheduleImmediate: function(t) {
!t.start || t._objFlags & s || this.startInvoker.add(t);
t.update && this.updateInvoker.add(t);
t.lateUpdate && this.lateUpdateInvoker.add(t);
},
_deferredSchedule: function() {
for (var t = this.scheduleInNextFrame, e = 0, i = t.length; e < i; e++) {
var n = t[e];
this._scheduleImmediate(n);
}
t.length = 0;
},
_earlyStartForNewComps: function() {
if (this.scheduleInNextFrame.length > 0) {
this._deferredSchedule();
this.startInvoker.invoke();
}
},
startPhase: function() {
this._updating = !0;
this.scheduleInNextFrame.length > 0 && this._deferredSchedule();
this.startInvoker.invoke();
this._earlyStartForNewComps();
},
updatePhase: function(t) {
this.updateInvoker.invoke(t);
},
lateUpdatePhase: function(t) {
this.lateUpdateInvoker.invoke(t);
this._updating = !1;
},
clearup: function() {
this._earlyStartForNewComps();
}
});
e.exports = v;
}), {
"./platform/CCClass": 230,
"./platform/CCObject": 236,
"./platform/js": 250,
"./utils/misc": 313
} ],
115: [ (function(t, e, i) {
"use strict";
var n = t("../../animation/animation-animator"), r = t("../../animation/animation-clip"), s = t("../event/event-target"), o = t("../platform/js"), a = function(t, e) {
return t === e;
}, c = cc.Enum({
PLAY: "play",
STOP: "stop",
PAUSE: "pause",
RESUME: "resume",
LASTFRAME: "lastframe",
FINISHED: "finished"
}), l = cc.Class({
name: "cc.Animation",
extends: t("./CCComponent"),
mixins: [ s ],
editor: !1,
statics: {
EventType: c
},
ctor: function() {
cc.EventTarget.call(this);
this._animator = null;
this._nameToState = o.createMap(!0);
this._didInit = !1;
this._currentClip = null;
},
properties: {
_defaultClip: {
default: null,
type: r
},
defaultClip: {
type: r,
get: function() {
return this._defaultClip;
},
set: function(t) {},
tooltip: !1
},
currentClip: {
get: function() {
return this._currentClip;
},
set: function(t) {
this._currentClip = t;
},
type: r,
visible: !1
},
_writableClips: {
get: function() {
return this._clips;
},
set: function(t) {
this._didInit = !1;
this._clips = t;
this._init();
},
type: [ r ]
},
_clips: {
default: [],
type: [ r ],
tooltip: !1,
visible: !0
},
playOnLoad: {
default: !1,
tooltip: !1
}
},
start: function() {
if (this.playOnLoad && this._defaultClip) {
if (!(this._animator && this._animator.isPlaying)) {
var t = this.getAnimationState(this._defaultClip.name);
this._animator.playState(t);
}
}
},
onEnable: function() {
this._animator && this._animator.resume();
},
onDisable: function() {
this._animator && this._animator.pause();
},
onDestroy: function() {
this.stop();
},
getClips: function() {
return this._clips;
},
play: function(t, e) {
var i = this.playAdditive(t, e);
this._animator.stopStatesExcept(i);
return i;
},
playAdditive: function(t, e) {
this._init();
var i = this.getAnimationState(t || this._defaultClip && this._defaultClip.name);
if (i) {
this.enabled = !0;
var n = this._animator;
if (n.isPlaying && i.isPlaying) if (i.isPaused) n.resumeState(i); else {
n.stopState(i);
n.playState(i, e);
} else n.playState(i, e);
this.enabledInHierarchy || n.pause();
this.currentClip = i.clip;
}
return i;
},
stop: function(t) {
if (this._didInit) if (t) {
var e = this._nameToState[t];
e && this._animator.stopState(e);
} else this._animator.stop();
},
pause: function(t) {
if (this._didInit) if (t) {
var e = this._nameToState[t];
e && this._animator.pauseState(e);
} else this.enabled = !1;
},
resume: function(t) {
if (this._didInit) if (t) {
var e = this._nameToState[t];
e && this._animator.resumeState(e);
} else this.enabled = !0;
},
setCurrentTime: function(t, e) {
this._init();
if (e) {
var i = this._nameToState[e];
i && this._animator.setStateTime(i, t);
} else this._animator.setStateTime(t);
},
getAnimationState: function(t) {
this._init();
var e = this._nameToState[t];
0;
e && !e.curveLoaded && this._animator._reloadClip(e);
return e || null;
},
addClip: function(t, e) {
if (t) {
this._init();
cc.js.array.contains(this._clips, t) || this._clips.push(t);
e = e || t.name;
var i = this._nameToState[e];
if (i) {
if (i.clip === t) return i;
var n = this._clips.indexOf(i.clip);
-1 !== n && this._clips.splice(n, 1);
}
var r = new cc.AnimationState(t, e);
this._nameToState[e] = r;
return r;
}
cc.warnID(3900);
},
removeClip: function(t, e) {
if (t) {
this._init();
var i;
for (var n in this._nameToState) {
i = this._nameToState[n];
if (a(i.clip, t)) break;
}
if (t === this._defaultClip) {
if (!e) {
cc.warnID(3902);
return;
}
this._defaultClip = null;
}
if (i && i.isPlaying) {
if (!e) {
cc.warnID(3903);
return;
}
this.stop(i.name);
}
this._clips = this._clips.filter((function(e) {
return !a(e, t);
}));
i && delete this._nameToState[i.name];
} else cc.warnID(3901);
},
sample: function(t) {
this._init();
if (t) {
var e = this._nameToState[t];
e && e.sample();
} else this._animator.sample();
},
on: function(t, e, i, n) {
this._init();
var r = this._EventTargetOn(t, e, i, n);
if ("lastframe" === t) {
var s = this._nameToState;
for (var o in s) s[o]._lastframeEventOn = !0;
}
return r;
},
off: function(t, e, i, n) {
this._init();
if ("lastframe" === t) {
var r = this._nameToState;
for (var s in r) r[s]._lastframeEventOn = !1;
}
this._EventTargetOff(t, e, i, n);
},
_init: function() {
if (!this._didInit) {
this._didInit = !0;
this._animator = new n(this.node, this);
this._createStates();
}
},
_createStates: function() {
this._nameToState = o.createMap(!0);
for (var t = null, e = !1, i = 0; i < this._clips.length; ++i) {
var n = this._clips[i];
if (n) {
t = new cc.AnimationState(n);
0;
this._nameToState[t.name] = t;
a(this._defaultClip, n) && (e = t);
}
}
if (this._defaultClip && !e) {
t = new cc.AnimationState(this._defaultClip);
0;
this._nameToState[t.name] = t;
}
}
});
l.prototype._EventTargetOn = s.prototype.on;
l.prototype._EventTargetOff = s.prototype.off;
cc.Animation = e.exports = l;
}), {
"../../animation/animation-animator": 9,
"../../animation/animation-clip": 10,
"../event/event-target": 156,
"../platform/js": 250,
"./CCComponent": 120
} ],
116: [ (function(t, e, i) {
"use strict";
var n = t("../utils/misc"), r = t("./CCComponent"), s = t("../assets/CCAudioClip"), o = cc.Class({
name: "cc.AudioSource",
extends: r,
editor: !1,
ctor: function() {
this.audio = new cc.Audio();
},
properties: {
_clip: {
default: null,
type: s
},
_volume: 1,
_mute: !1,
_loop: !1,
_pausedFlag: {
default: !1,
serializable: !1
},
isPlaying: {
get: function() {
return this.audio.getState() === cc.Audio.State.PLAYING;
},
visible: !1
},
clip: {
get: function() {
return this._clip;
},
set: function(t) {
if ("string" != typeof t) {
if (t !== this._clip) {
this._clip = t;
this.audio.stop();
this.preload && (this.audio.src = this._clip);
}
} else {
cc.warnID(8401, "cc.AudioSource", "cc.AudioClip", "AudioClip", "cc.AudioClip", "audio");
var e = this;
s._loadByUrl(t, (function(t, i) {
i && (e.clip = i);
}));
}
},
type: s,
tooltip: !1,
animatable: !1
},
volume: {
get: function() {
return this._volume;
},
set: function(t) {
t = n.clamp01(t);
this._volume = t;
this._mute || this.audio.setVolume(t);
return t;
},
tooltip: !1
},
mute: {
get: function() {
return this._mute;
},
set: function(t) {
this._mute = t;
this.audio.setVolume(t ? 0 : this._volume);
return t;
},
animatable: !1,
tooltip: !1
},
loop: {
get: function() {
return this._loop;
},
set: function(t) {
this._loop = t;
this.audio.setLoop(t);
return t;
},
animatable: !1,
tooltip: !1
},
playOnLoad: {
default: !1,
tooltip: !1,
animatable: !1
},
preload: {
default: !1,
animatable: !1
}
},
_ensureDataLoaded: function() {
this.audio.src !== this._clip && (this.audio.src = this._clip);
},
_pausedCallback: function() {
if (this.audio.getState() === cc.Audio.State.PLAYING) {
this.audio.pause();
this._pausedFlag = !0;
}
},
_restoreCallback: function() {
this._pausedFlag && this.audio.resume();
this._pausedFlag = !1;
},
onLoad: function() {
this.audio.setVolume(this._mute ? 0 : this._volume);
this.audio.setLoop(this._loop);
},
onEnable: function() {
this.preload && (this.audio.src = this._clip);
this.playOnLoad && this.play();
cc.game.on(cc.game.EVENT_HIDE, this._pausedCallback, this);
cc.game.on(cc.game.EVENT_SHOW, this._restoreCallback, this);
},
onDisable: function() {
this.stop();
cc.game.off(cc.game.EVENT_HIDE, this._pausedCallback, this);
cc.game.off(cc.game.EVENT_SHOW, this._restoreCallback, this);
},
onDestroy: function() {
this.stop();
this.audio.destroy();
cc.audioEngine.uncache(this._clip);
},
play: function() {
if (this._clip) {
var t = this.audio;
this._clip.loaded && t.stop();
this._ensureDataLoaded();
t.setCurrentTime(0);
t.play();
}
},
stop: function() {
this.audio.stop();
},
pause: function() {
this.audio.pause();
},
resume: function() {
this._ensureDataLoaded();
this.audio.resume();
},
rewind: function() {
this.audio.setCurrentTime(0);
},
getCurrentTime: function() {
return this.audio.getCurrentTime();
},
setCurrentTime: function(t) {
this.audio.setCurrentTime(t);
return t;
},
getDuration: function() {
return this.audio.getDuration();
}
});
cc.AudioSource = e.exports = o;
}), {
"../assets/CCAudioClip": 77,
"../utils/misc": 313,
"./CCComponent": 120
} ],
117: [ (function(t, e, i) {
"use strict";
var n = [ "touchstart", "touchmove", "touchend", "mousedown", "mousemove", "mouseup", "mouseenter", "mouseleave", "mousewheel" ];
function r(t) {
t.stopPropagation();
}
var s = cc.Class({
name: "cc.BlockInputEvents",
extends: t("./CCComponent"),
editor: {
menu: "i18n:MAIN_MENU.component.ui/Block Input Events",
inspector: "packages://inspector/inspectors/comps/block-input-events.js",
help: "i18n:COMPONENT.help_url.block_input_events"
},
onEnable: function() {
for (var t = 0; t < n.length; t++) this.node.on(n[t], r, this);
},
onDisable: function() {
for (var t = 0; t < n.length; t++) this.node.off(n[t], r, this);
}
});
cc.BlockInputEvents = e.exports = s;
}), {
"./CCComponent": 120
} ],
118: [ (function(t, e, i) {
"use strict";
var n = t("./CCComponent"), r = t("../utils/gray-sprite-state"), s = cc.Enum({
NONE: 0,
COLOR: 1,
SPRITE: 2,
SCALE: 3
}), o = cc.Enum({
NORMAL: 0,
HOVER: 1,
PRESSED: 2,
DISABLED: 3
}), a = cc.Class({
name: "cc.Button",
extends: n,
mixins: [ r ],
ctor: function() {
this._pressed = !1;
this._hovered = !1;
this._fromColor = null;
this._toColor = null;
this._time = 0;
this._transitionFinished = !0;
this._fromScale = cc.Vec2.ZERO;
this._toScale = cc.Vec2.ZERO;
this._originalScale = null;
this._graySpriteMaterial = null;
this._spriteMaterial = null;
this._sprite = null;
},
editor: !1,
properties: {
interactable: {
default: !0,
tooltip: !1,
notify: function() {
this._updateState();
this.interactable || this._resetState();
},
animatable: !1
},
_resizeToTarget: {
animatable: !1,
set: function(t) {
t && this._resizeNodeToTargetNode();
}
},
enableAutoGrayEffect: {
default: !1,
tooltip: !1,
notify: function() {
this._updateDisabledState();
}
},
transition: {
default: s.NONE,
tooltip: !1,
type: s,
animatable: !1,
notify: function(t) {
this._updateTransition(t);
},
formerlySerializedAs: "transition"
},
normalColor: {
default: cc.Color.WHITE,
displayName: "Normal",
tooltip: !1,
notify: function() {
this.transition === s.Color && this._getButtonState() === o.NORMAL && (this._getTarget().opacity = this.normalColor.a);
this._updateState();
}
},
pressedColor: {
default: cc.color(211, 211, 211),
displayName: "Pressed",
tooltip: !1,
notify: function() {
this.transition === s.Color && this._getButtonState() === o.PRESSED && (this._getTarget().opacity = this.pressedColor.a);
this._updateState();
},
formerlySerializedAs: "pressedColor"
},
hoverColor: {
default: cc.Color.WHITE,
displayName: "Hover",
tooltip: !1,
notify: function() {
this.transition === s.Color && this._getButtonState() === o.HOVER && (this._getTarget().opacity = this.hoverColor.a);
this._updateState();
},
formerlySerializedAs: "hoverColor"
},
disabledColor: {
default: cc.color(124, 124, 124),
displayName: "Disabled",
tooltip: !1,
notify: function() {
this.transition === s.Color && this._getButtonState() === o.DISABLED && (this._getTarget().opacity = this.disabledColor.a);
this._updateState();
}
},
duration: {
default: .1,
range: [ 0, 10 ],
tooltip: !1
},
zoomScale: {
default: 1.2,
tooltip: !1
},
normalSprite: {
default: null,
type: cc.SpriteFrame,
displayName: "Normal",
tooltip: !1,
notify: function() {
this._updateState();
}
},
pressedSprite: {
default: null,
type: cc.SpriteFrame,
displayName: "Pressed",
tooltip: !1,
formerlySerializedAs: "pressedSprite",
notify: function() {
this._updateState();
}
},
hoverSprite: {
default: null,
type: cc.SpriteFrame,
displayName: "Hover",
tooltip: !1,
formerlySerializedAs: "hoverSprite",
notify: function() {
this._updateState();
}
},
disabledSprite: {
default: null,
type: cc.SpriteFrame,
displayName: "Disabled",
tooltip: !1,
notify: function() {
this._updateState();
}
},
target: {
default: null,
type: cc.Node,
tooltip: !1,
notify: function(t) {
this._applyTarget();
t && this.target !== t && this._unregisterTargetEvent(t);
}
},
clickEvents: {
default: [],
type: cc.Component.EventHandler,
tooltip: !1
}
},
statics: {
Transition: s
},
__preload: function() {
this._applyTarget();
this._resetState();
},
_resetState: function() {
this._pressed = !1;
this._hovered = !1;
var t = this._getTarget(), e = this.transition, i = this._originalScale;
e === s.COLOR && this.interactable ? this._setTargetColor(this.normalColor) : e === s.SCALE && i && t.setScale(i.x, i.y);
this._transitionFinished = !0;
},
onEnable: function() {
this.normalSprite && this.normalSprite.ensureLoadTexture();
this.hoverSprite && this.hoverSprite.ensureLoadTexture();
this.pressedSprite && this.pressedSprite.ensureLoadTexture();
this.disabledSprite && this.disabledSprite.ensureLoadTexture();
this._registerNodeEvent();
},
onDisable: function() {
this._resetState();
this._unregisterNodeEvent();
},
_getTarget: function() {
return this.target ? this.target : this.node;
},
_onTargetSpriteFrameChanged: function(t) {
this.transition === s.SPRITE && this._setCurrentStateSprite(t.spriteFrame);
},
_onTargetColorChanged: function(t) {
this.transition === s.COLOR && this._setCurrentStateColor(t);
},
_onTargetScaleChanged: function() {
var t = this._getTarget();
if (this._originalScale && (this.transition !== s.SCALE || this._transitionFinished)) {
this._originalScale.x = t.scaleX;
this._originalScale.y = t.scaleY;
}
},
_setTargetColor: function(t) {
var e = this._getTarget();
e.color = t;
e.opacity = t.a;
},
_getStateColor: function(t) {
switch (t) {
case o.NORMAL:
return this.normalColor;

case o.HOVER:
return this.hoverColor;

case o.PRESSED:
return this.pressedColor;

case o.DISABLED:
return this.disabledColor;
}
},
_getStateSprite: function(t) {
switch (t) {
case o.NORMAL:
return this.normalSprite;

case o.HOVER:
return this.hoverSprite;

case o.PRESSED:
return this.pressedSprite;

case o.DISABLED:
return this.disabledSprite;
}
},
_setCurrentStateColor: function(t) {
switch (this._getButtonState()) {
case o.NORMAL:
this.normalColor = t;
break;

case o.HOVER:
this.hoverColor = t;
break;

case o.PRESSED:
this.pressedColor = t;
break;

case o.DISABLED:
this.disabledColor = t;
}
},
_setCurrentStateSprite: function(t) {
switch (this._getButtonState()) {
case o.NORMAL:
this.normalSprite = t;
break;

case o.HOVER:
this.hoverSprite = t;
break;

case o.PRESSED:
this.pressedSprite = t;
break;

case o.DISABLED:
this.disabledSprite = t;
}
},
update: function(t) {
var e = this._getTarget();
if (!this._transitionFinished && (this.transition === s.COLOR || this.transition === s.SCALE)) {
this.time += t;
var i = 1;
this.duration > 0 && (i = this.time / this.duration);
i >= 1 && (i = 1);
if (this.transition === s.COLOR) {
var n = this._fromColor.lerp(this._toColor, i);
this._setTargetColor(n);
} else this.transition === s.SCALE && this._originalScale && (e.scale = this._fromScale.lerp(this._toScale, i));
1 === i && (this._transitionFinished = !0);
}
},
_registerNodeEvent: function() {
this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchBegan, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);
this.node.on(cc.Node.EventType.MOUSE_ENTER, this._onMouseMoveIn, this);
this.node.on(cc.Node.EventType.MOUSE_LEAVE, this._onMouseMoveOut, this);
},
_unregisterNodeEvent: function() {
this.node.off(cc.Node.EventType.TOUCH_START, this._onTouchBegan, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);
this.node.off(cc.Node.EventType.MOUSE_ENTER, this._onMouseMoveIn, this);
this.node.off(cc.Node.EventType.MOUSE_LEAVE, this._onMouseMoveOut, this);
},
_registerTargetEvent: function(t) {
0;
t.on(cc.Node.EventType.SCALE_CHANGED, this._onTargetScaleChanged, this);
},
_unregisterTargetEvent: function(t) {
0;
t.off(cc.Node.EventType.SCALE_CHANGED, this._onTargetScaleChanged, this);
},
_getTargetSprite: function(t) {
var e = null;
t && (e = t.getComponent(cc.Sprite));
return e;
},
_applyTarget: function() {
var t = this._getTarget();
this._sprite = this._getTargetSprite(t);
this._originalScale || (this._originalScale = cc.Vec2.ZERO);
this._originalScale.x = t.scaleX;
this._originalScale.y = t.scaleY;
this._registerTargetEvent(t);
},
_onTouchBegan: function(t) {
if (this.interactable && this.enabledInHierarchy) {
this._pressed = !0;
this._updateState();
t.stopPropagation();
}
},
_onTouchMove: function(t) {
if (this.interactable && this.enabledInHierarchy && this._pressed) {
var e = t.touch, i = this.node._hitTest(e.getLocation()), n = this._getTarget(), r = this._originalScale;
if (this.transition === s.SCALE && r) if (i) {
this._fromScale.x = r.x;
this._fromScale.y = r.y;
this._toScale.x = r.x * this.zoomScale;
this._toScale.y = r.y * this.zoomScale;
this._transitionFinished = !1;
} else {
this.time = 0;
this._transitionFinished = !0;
n.setScale(r.x, r.y);
} else {
var a;
a = i ? o.PRESSED : o.NORMAL;
this._applyTransition(a);
}
t.stopPropagation();
}
},
_onTouchEnded: function(t) {
if (this.interactable && this.enabledInHierarchy) {
if (this._pressed) {
cc.Component.EventHandler.emitEvents(this.clickEvents, t);
this.node.emit("click", this);
}
this._pressed = !1;
this._updateState();
t.stopPropagation();
}
},
_onTouchCancel: function() {
if (this.interactable && this.enabledInHierarchy) {
this._pressed = !1;
this._updateState();
}
},
_onMouseMoveIn: function() {
if (!this._pressed && this.interactable && this.enabledInHierarchy && (this.transition !== s.SPRITE || this.hoverSprite) && !this._hovered) {
this._hovered = !0;
this._updateState();
}
},
_onMouseMoveOut: function() {
if (this._hovered) {
this._hovered = !1;
this._updateState();
}
},
_updateState: function() {
var t = this._getButtonState();
this._applyTransition(t);
this._updateDisabledState();
},
_getButtonState: function() {
return this.interactable ? this._pressed ? o.PRESSED : this._hovered ? o.HOVER : o.NORMAL : o.DISABLED;
},
_updateColorTransitionImmediately: function(t) {
var e = this._getStateColor(t);
this._setTargetColor(e);
this._fromColor = e.clone();
this._toColor = e;
},
_updateColorTransition: function(t) {
if (t === o.DISABLED) this._updateColorTransitionImmediately(t); else {
var e = this._getTarget(), i = this._getStateColor(t);
this._fromColor = e.color.clone();
this._toColor = i;
this.time = 0;
this._transitionFinished = !1;
}
},
_updateSpriteTransition: function(t) {
var e = this._getStateSprite(t);
this._sprite && e && (this._sprite.spriteFrame = e);
},
_updateScaleTransition: function(t) {
t === o.PRESSED ? this._zoomUp() : this._zoomBack();
},
_zoomUp: function() {
if (this._originalScale) {
this._fromScale.x = this._originalScale.x;
this._fromScale.y = this._originalScale.y;
this._toScale.x = this._originalScale.x * this.zoomScale;
this._toScale.y = this._originalScale.y * this.zoomScale;
this.time = 0;
this._transitionFinished = !1;
}
},
_zoomBack: function() {
if (this._originalScale) {
var t = this._getTarget();
this._fromScale.x = t.scaleX;
this._fromScale.y = t.scaleY;
this._toScale.x = this._originalScale.x;
this._toScale.y = this._originalScale.y;
this.time = 0;
this._transitionFinished = !1;
}
},
_updateTransition: function(t) {
t === s.COLOR ? this._updateColorTransitionImmediately(o.NORMAL) : t === s.SPRITE && this._updateSpriteTransition(o.NORMAL);
this._updateState();
},
_applyTransition: function(t) {
var e = this.transition;
e === s.COLOR ? this._updateColorTransition(t) : e === s.SPRITE ? this._updateSpriteTransition(t) : e === s.SCALE && this._updateScaleTransition(t);
},
_resizeNodeToTargetNode: !1,
_updateDisabledState: function() {
if (this._sprite) {
var t = !1;
this.enableAutoGrayEffect && (this.transition === s.SPRITE && this.disabledSprite || this.interactable || (t = !0));
this._switchGrayMaterial(t, this._sprite);
}
}
});
cc.Button = e.exports = a;
}), {
"../utils/gray-sprite-state": 309,
"./CCComponent": 120
} ],
119: [ (function(t, e, i) {
"use strict";
var n = t("../camera/CCCamera"), r = t("./CCComponent");
var s = cc.Class({
name: "cc.Canvas",
extends: r,
editor: !1,
resetInEditor: !1,
statics: {
instance: null
},
properties: {
_designResolution: cc.size(960, 640),
designResolution: {
get: function() {
return cc.size(this._designResolution);
},
set: function(t) {
this._designResolution.width = t.width;
this._designResolution.height = t.height;
this.applySettings();
},
tooltip: !1
},
_fitWidth: !1,
_fitHeight: !0,
fitHeight: {
get: function() {
return this._fitHeight;
},
set: function(t) {
if (this._fitHeight !== t) {
this._fitHeight = t;
this.applySettings();
}
},
tooltip: !1
},
fitWidth: {
get: function() {
return this._fitWidth;
},
set: function(t) {
if (this._fitWidth !== t) {
this._fitWidth = t;
this.applySettings();
}
},
tooltip: !1
}
},
_fitDesignResolution: !1,
__preload: function() {
if (s.instance) return cc.warnID(6700, this.node.name, s.instance.node.name);
s.instance = this;
this.applySettings();
var t = this.getComponent(cc.Widget);
t && t.updateAlignment();
0;
var e = cc.find("Main Camera", this.node);
if (!e) {
(e = new cc.Node("Main Camera")).parent = this.node;
e.setSiblingIndex(0);
}
var i = e.getComponent(n);
if (!i) {
i = e.addComponent(n);
var r = n.ClearFlags;
i.clearFlags = r.COLOR | r.DEPTH | r.STENCIL;
i.depth = -1;
}
n.main = i;
},
onDestroy: function() {
0;
s.instance === this && (s.instance = null);
},
applySettings: function() {
var t, e = cc.ResolutionPolicy;
t = this.fitHeight && this.fitWidth ? e.SHOW_ALL : this.fitHeight || this.fitWidth ? this.fitWidth ? e.FIXED_WIDTH : e.FIXED_HEIGHT : e.NO_BORDER;
var i = this._designResolution;
cc.view.setDesignResolutionSize(i.width, i.height, t);
}
});
cc.Canvas = e.exports = s;
}), {
"../camera/CCCamera": 105,
"./CCComponent": 120
} ],
120: [ (function(t, e, i) {
"use strict";
var n = t("../platform/CCObject"), r = t("../platform/js"), s = new (t("../platform/id-generater"))("Comp"), o = (n.Flags.IsOnEnableCalled, 
n.Flags.IsOnLoadCalled), a = !!cc.ActionManager, c = cc.Class({
name: "cc.Component",
extends: n,
ctor: function() {
this._id = s.getNewId();
this.__eventTargets = [];
},
properties: {
node: {
default: null,
visible: !1
},
name: {
get: function() {
if (this._name) return this._name;
var t = cc.js.getClassName(this), e = t.lastIndexOf(".");
e >= 0 && (t = t.slice(e + 1));
return this.node.name + "<" + t + ">";
},
set: function(t) {
this._name = t;
},
visible: !1
},
uuid: {
get: function() {
return this._id;
},
visible: !1
},
__scriptAsset: !1,
_enabled: !0,
enabled: {
get: function() {
return this._enabled;
},
set: function(t) {
if (this._enabled !== t) {
this._enabled = t;
if (this.node._activeInHierarchy) {
var e = cc.director._compScheduler;
t ? e.enableComp(this) : e.disableComp(this);
}
}
},
visible: !1,
animatable: !0
},
enabledInHierarchy: {
get: function() {
return this._enabled && this.node._activeInHierarchy;
},
visible: !1
},
_isOnLoadCalled: {
get: function() {
return this._objFlags & o;
}
}
},
update: null,
lateUpdate: null,
__preload: null,
onLoad: null,
start: null,
onEnable: null,
onDisable: null,
onDestroy: null,
onFocusInEditor: null,
onLostFocusInEditor: null,
resetInEditor: null,
addComponent: function(t) {
return this.node.addComponent(t);
},
getComponent: function(t) {
return this.node.getComponent(t);
},
getComponents: function(t) {
return this.node.getComponents(t);
},
getComponentInChildren: function(t) {
return this.node.getComponentInChildren(t);
},
getComponentsInChildren: function(t) {
return this.node.getComponentsInChildren(t);
},
_getLocalBounds: null,
onRestore: null,
destroy: function() {
this._super() && this._enabled && this.node._activeInHierarchy && cc.director._compScheduler.disableComp(this);
},
_onPreDestroy: function() {
a && cc.director.getActionManager().removeAllActionsFromTarget(this);
this.unscheduleAllCallbacks();
for (var t = this.__eventTargets, e = t.length - 1; e >= 0; --e) {
var i = t[e];
i && i.targetOff(this);
}
t.length = 0;
0;
cc.director._nodeActivator.destroyComp(this);
this.node._removeComponent(this);
},
_instantiate: function(t) {
t || (t = cc.instantiate._clone(this, this));
t.node = null;
return t;
},
schedule: function(t, e, i, n) {
cc.assertID(t, 1619);
e = e || 0;
cc.assertID(e >= 0, 1620);
i = isNaN(i) ? cc.macro.REPEAT_FOREVER : i;
n = n || 0;
var r = cc.director.getScheduler(), s = r.isTargetPaused(this);
r.schedule(t, this, e, i, n, s);
},
scheduleOnce: function(t, e) {
this.schedule(t, 0, 0, e);
},
unschedule: function(t) {
t && cc.director.getScheduler().unschedule(t, this);
},
unscheduleAllCallbacks: function() {
cc.director.getScheduler().unscheduleAllForTarget(this);
}
});
c._requireComponent = null;
c._executionOrder = 0;
0;
r.value(c, "_registerEditorProps", (function(t, e) {
var i = e.requireComponent;
i && (t._requireComponent = i);
var n = e.executionOrder;
n && "number" == typeof n && (t._executionOrder = n);
}));
c.prototype.__scriptUuid = "";
cc.Component = e.exports = c;
}), {
"../platform/CCObject": 236,
"../platform/id-generater": 246,
"../platform/js": 250
} ],
121: [ (function(t, e, i) {
"use strict";
cc.Component.EventHandler = cc.Class({
name: "cc.ClickEvent",
properties: {
target: {
default: null,
type: cc.Node
},
component: "",
_componentId: "",
_componentName: {
get: function() {
this._genCompIdIfNeeded();
return this._compId2Name(this._componentId);
},
set: function(t) {
this._componentId = this._compName2Id(t);
}
},
handler: {
default: ""
},
customEventData: {
default: ""
}
},
statics: {
emitEvents: function(t) {
var e;
if (arguments.length > 0) for (var i = 0, n = (e = new Array(arguments.length - 1)).length; i < n; i++) e[i] = arguments[i + 1];
for (var r = 0, s = t.length; r < s; r++) {
var o = t[r];
o instanceof cc.Component.EventHandler && o.emit(e);
}
}
},
emit: function(t) {
var e = this.target;
if (cc.isValid(e)) {
this._genCompIdIfNeeded();
var i = cc.js._getClassById(this._componentId), n = e.getComponent(i);
if (cc.isValid(n)) {
var r = n[this.handler];
if ("function" == typeof r) {
null != this.customEventData && "" !== this.customEventData && (t = t.slice()).push(this.customEventData);
r.apply(n, t);
}
}
}
},
_compName2Id: function(t) {
var e = cc.js.getClassByName(t);
return cc.js._getClassId(e);
},
_compId2Name: function(t) {
var e = cc.js._getClassById(t);
return cc.js.getClassName(e);
},
_genCompIdIfNeeded: function() {
if (!this._componentId) {
this._componentName = this.component;
this.component = "";
}
}
});
}), {} ],
122: [ (function(t, e, i) {
"use strict";
var n = t("../platform/CCMacro"), r = t("./CCRenderComponent"), s = (t("../assets/material/CCMaterial"), 
t("../renderer/utils/label/label-frame")), o = n.TextAlignment, a = n.VerticalTextAlignment, c = cc.Enum({
NONE: 0,
CLAMP: 1,
SHRINK: 2,
RESIZE_HEIGHT: 3
}), l = cc.Enum({
NONE: 0,
BITMAP: 1,
CHAR: 2
}), u = cc.Class({
name: "cc.Label",
extends: r,
ctor: function() {
0;
this._actualFontSize = 0;
this._assemblerData = null;
this._frame = null;
this._ttfTexture = null;
this._letterTexture = null;
cc.game.renderType === cc.game.RENDER_TYPE_CANVAS ? this._updateMaterial = this._updateMaterialCanvas : this._updateMaterial = this._updateMaterialWebgl;
},
editor: !1,
properties: {
_useOriginalSize: !0,
_string: {
default: "",
formerlySerializedAs: "_N$string"
},
string: {
get: function() {
return this._string;
},
set: function(t) {
var e = this._string;
this._string = "" + t;
this.string !== e && this.setVertsDirty();
this._checkStringEmpty();
},
multiline: !0,
tooltip: !1
},
horizontalAlign: {
default: o.LEFT,
type: o,
tooltip: !1,
notify: function(t) {
this.horizontalAlign !== t && this.setVertsDirty();
},
animatable: !1
},
verticalAlign: {
default: a.TOP,
type: a,
tooltip: !1,
notify: function(t) {
this.verticalAlign !== t && this.setVertsDirty();
},
animatable: !1
},
actualFontSize: {
displayName: "Actual Font Size",
animatable: !1,
readonly: !0,
get: function() {
return this._actualFontSize;
},
tooltip: !1
},
_fontSize: 40,
fontSize: {
get: function() {
return this._fontSize;
},
set: function(t) {
if (this._fontSize !== t) {
this._fontSize = t;
this.setVertsDirty();
}
},
range: [ 0, 512 ],
tooltip: !1
},
fontFamily: {
default: "Arial",
tooltip: !1,
notify: function(t) {
this.fontFamily !== t && this.setVertsDirty();
},
animatable: !1
},
_lineHeight: 40,
lineHeight: {
get: function() {
return this._lineHeight;
},
set: function(t) {
if (this._lineHeight !== t) {
this._lineHeight = t;
this.setVertsDirty();
}
},
tooltip: !1
},
overflow: {
default: c.NONE,
type: c,
tooltip: !1,
notify: function(t) {
this.overflow !== t && this.setVertsDirty();
},
animatable: !1
},
_enableWrapText: !0,
enableWrapText: {
get: function() {
return this._enableWrapText;
},
set: function(t) {
if (this._enableWrapText !== t) {
this._enableWrapText = t;
this.setVertsDirty();
}
},
animatable: !1,
tooltip: !1
},
_N$file: null,
font: {
get: function() {
return this._N$file;
},
set: function(t) {
if (this.font !== t) {
t || (this._isSystemFontUsed = !0);
0;
this._N$file = t;
t && this._isSystemFontUsed && (this._isSystemFontUsed = !1);
"string" == typeof t && cc.warnID(4e3);
this.enabledInHierarchy && this._forceUpdateRenderData();
}
},
type: cc.Font,
tooltip: !1,
animatable: !1
},
_isSystemFontUsed: !0,
useSystemFont: {
get: function() {
return this._isSystemFontUsed;
},
set: function(t) {
if (this._isSystemFontUsed !== t) {
this._isSystemFontUsed = !!t;
0;
if (t) {
this.font = null;
if (!this.enabledInHierarchy) return;
this._forceUpdateRenderData();
}
this.markForValidate();
}
},
animatable: !1,
tooltip: !1
},
_bmFontOriginalSize: {
displayName: "BMFont Original Size",
get: function() {
return this._N$file instanceof cc.BitmapFont ? this._N$file.fontSize : -1;
},
visible: !0,
animatable: !1
},
_spacingX: 0,
spacingX: {
get: function() {
return this._spacingX;
},
set: function(t) {
this._spacingX = t;
this.setVertsDirty();
},
tooltip: !1
},
_batchAsBitmap: !1,
cacheMode: {
default: l.NONE,
type: l,
tooltip: !1,
notify: function(t) {
if (this.cacheMode !== t) {
t !== l.BITMAP || this.font instanceof cc.BitmapFont || this._frame && this._frame._resetDynamicAtlasFrame();
t === l.CHAR && (this._ttfTexture = null);
this.enabledInHierarchy && this._forceUpdateRenderData();
}
},
animatable: !1
},
_styleFlags: 0,
enableBold: {
get: function() {
return !!(1 & this._styleFlags);
},
set: function(t) {
t ? this._styleFlags |= 1 : this._styleFlags &= -2;
this.setVertsDirty();
},
animatable: !1,
tooltip: !1
},
enableItalic: {
get: function() {
return !!(2 & this._styleFlags);
},
set: function(t) {
t ? this._styleFlags |= 2 : this._styleFlags &= -3;
this.setVertsDirty();
},
animatable: !1,
tooltip: !1
},
enableUnderline: {
get: function() {
return !!(4 & this._styleFlags);
},
set: function(t) {
t ? this._styleFlags |= 4 : this._styleFlags &= -5;
this.setVertsDirty();
},
animatable: !1,
tooltip: !1
},
_underlineHeight: 0,
underlineHeight: {
get: function() {
return this._underlineHeight;
},
set: function(t) {
if (this._underlineHeight !== t) {
this._underlineHeight = t;
this.setVertsDirty();
}
},
tooltip: !1
}
},
statics: {
HorizontalAlign: o,
VerticalAlign: a,
Overflow: c,
CacheMode: l,
_shareAtlas: null,
clearCharCache: function() {
u._shareAtlas && u._shareAtlas.clearAllCache();
}
},
onLoad: function() {
if (this._batchAsBitmap && this.cacheMode === l.NONE) {
this.cacheMode = l.BITMAP;
this._batchAsBitmap = !1;
}
cc.game.renderType === cc.game.RENDER_TYPE_CANVAS && (this.cacheMode = l.NONE);
},
onEnable: function() {
this._super();
this.node.on(cc.Node.EventType.SIZE_CHANGED, this._nodeSizeChanged, this);
this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);
this._forceUpdateRenderData();
},
onDisable: function() {
this._super();
this.node.off(cc.Node.EventType.SIZE_CHANGED, this._nodeSizeChanged, this);
this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);
},
onDestroy: function() {
this._assembler && this._assembler._resetAssemblerData && this._assembler._resetAssemblerData(this._assemblerData);
this._assemblerData = null;
this._letterTexture = null;
if (this._ttfTexture) {
this._ttfTexture.destroy();
this._ttfTexture = null;
}
this._super();
},
_nodeSizeChanged: function() {
this.overflow !== c.NONE && this.setVertsDirty();
},
_updateColor: function() {
this.font instanceof cc.BitmapFont || this.setVertsDirty();
r.prototype._updateColor.call(this);
},
_validateRender: function() {
if (this.string) {
if (this._materials[0]) {
var t = this.font;
if (!(t instanceof cc.BitmapFont)) return;
var e = t.spriteFrame;
if (e && e.textureLoaded() && t._fntConfig) return;
}
this.disableRender();
} else this.disableRender();
},
_resetAssembler: function() {
this._frame = null;
r.prototype._resetAssembler.call(this);
},
_checkStringEmpty: function() {
this.markForRender(!!this.string);
},
_on3DNodeChanged: function() {
this._resetAssembler();
this._applyFontTexture();
},
_onBMFontTextureLoaded: function() {
this._frame._texture = this.font.spriteFrame._texture;
this.markForRender(!0);
this._updateMaterial();
this._assembler && this._assembler.updateRenderData(this);
},
_applyFontTexture: function() {
var t = this.font;
if (t instanceof cc.BitmapFont) {
var e = t.spriteFrame;
this._frame = e;
e && e.onTextureLoaded(this._onBMFontTextureLoaded, this);
} else {
this._frame || (this._frame = new s());
if (this.cacheMode === l.CHAR) {
this._letterTexture = this._assembler._getAssemblerData();
this._frame._refreshTexture(this._letterTexture);
} else if (!this._ttfTexture) {
this._ttfTexture = new cc.Texture2D();
this._assemblerData = this._assembler._getAssemblerData();
this._ttfTexture.initWithElement(this._assemblerData.canvas);
}
if (this.cacheMode !== l.CHAR) {
this._frame._resetDynamicAtlasFrame();
this._frame._refreshTexture(this._ttfTexture);
}
this._updateMaterial();
this._assembler && this._assembler.updateRenderData(this);
}
this.markForValidate();
},
_updateMaterialCanvas: function() {
this._frame && (this._frame._texture.url = this.uuid + "_texture");
},
_updateMaterialWebgl: function() {
if (this._frame) {
var t = this.getMaterial(0);
t && t.setProperty("texture", this._frame._texture);
}
},
_forceUpdateRenderData: function() {
this.setVertsDirty();
this._resetAssembler();
this._applyFontTexture();
},
_enableBold: function(t) {
0;
this.enableBold = !!t;
},
_enableItalics: function(t) {
0;
this.enableItalic = !!t;
},
_enableUnderline: function(t) {
0;
this.enableUnderline = !!t;
}
});
cc.Label = e.exports = u;
}), {
"../assets/material/CCMaterial": 95,
"../platform/CCMacro": 235,
"../renderer/utils/label/label-frame": 267,
"./CCRenderComponent": 131
} ],
123: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.LabelOutline",
extends: t("./CCComponent"),
editor: !1,
properties: {
_color: cc.Color.WHITE,
_width: 1,
color: {
tooltip: !1,
get: function() {
return this._color;
},
set: function(t) {
this._color = t;
this._updateRenderData();
}
},
width: {
tooltip: !1,
get: function() {
return this._width;
},
set: function(t) {
if (this._width !== t) {
this._width = t;
this._updateRenderData();
}
},
range: [ 0, 512 ]
}
},
onEnable: function() {
this._updateRenderData();
},
onDisable: function() {
this._updateRenderData();
},
_updateRenderData: function() {
var t = this.node.getComponent(cc.Label);
t && t.setVertsDirty();
}
});
cc.LabelOutline = e.exports = n;
}), {
"./CCComponent": 120
} ],
124: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.LabelShadow",
extends: t("./CCComponent"),
editor: !1,
properties: {
_color: cc.Color.WHITE,
_offset: cc.v2(2, 2),
_blur: 2,
color: {
tooltip: !1,
get: function() {
return this._color;
},
set: function(t) {
this._color = t;
this._updateRenderData();
}
},
offset: {
tooltip: !1,
get: function() {
return this._offset;
},
set: function(t) {
this._offset = t;
this._updateRenderData();
}
},
blur: {
tooltip: !1,
get: function() {
return this._blur;
},
set: function(t) {
this._blur = t;
this._updateRenderData();
},
range: [ 0, 1024 ]
}
},
onEnable: function() {
this._updateRenderData();
},
onDisable: function() {
this._updateRenderData();
},
_updateRenderData: function() {
var t = this.node.getComponent(cc.Label);
t && t.markForRender(!0);
}
});
cc.LabelShadow = e.exports = n;
}), {
"./CCComponent": 120
} ],
125: [ (function(t, e, i) {
"use strict";
var n = t("../CCNode").EventType, r = cc.Enum({
NONE: 0,
HORIZONTAL: 1,
VERTICAL: 2,
GRID: 3
}), s = cc.Enum({
NONE: 0,
CONTAINER: 1,
CHILDREN: 2
}), o = cc.Enum({
HORIZONTAL: 0,
VERTICAL: 1
}), a = cc.Enum({
BOTTOM_TO_TOP: 0,
TOP_TO_BOTTOM: 1
}), c = cc.Enum({
LEFT_TO_RIGHT: 0,
RIGHT_TO_LEFT: 1
}), l = cc.Class({
name: "cc.Layout",
extends: t("./CCComponent"),
editor: !1,
properties: {
_layoutSize: cc.size(300, 200),
_layoutDirty: {
default: !0,
serializable: !1
},
_resize: s.NONE,
_N$layoutType: r.NONE,
type: {
type: r,
get: function() {
return this._N$layoutType;
},
set: function(t) {
this._N$layoutType = t;
this._doLayoutDirty();
},
tooltip: !1,
animatable: !1
},
resizeMode: {
type: s,
tooltip: !1,
animatable: !1,
get: function() {
return this._resize;
},
set: function(t) {
if (this.type !== r.NONE || t !== s.CHILDREN) {
this._resize = t;
this._doLayoutDirty();
}
}
},
cellSize: {
default: cc.size(40, 40),
tooltip: !1,
type: cc.Size,
notify: function() {
this._doLayoutDirty();
}
},
startAxis: {
default: o.HORIZONTAL,
tooltip: !1,
type: o,
notify: function() {
this._doLayoutDirty();
},
animatable: !1
},
paddingLeft: {
default: 0,
tooltip: !1,
notify: function() {
this._doLayoutDirty();
}
},
paddingRight: {
default: 0,
tooltip: !1,
notify: function() {
this._doLayoutDirty();
}
},
paddingTop: {
default: 0,
tooltip: !1,
notify: function() {
this._doLayoutDirty();
}
},
paddingBottom: {
default: 0,
tooltip: !1,
notify: function() {
this._doLayoutDirty();
}
},
spacingX: {
default: 0,
notify: function() {
this._doLayoutDirty();
},
tooltip: !1
},
spacingY: {
default: 0,
notify: function() {
this._doLayoutDirty();
},
tooltip: !1
},
verticalDirection: {
default: a.TOP_TO_BOTTOM,
type: a,
notify: function() {
this._doLayoutDirty();
},
tooltip: !1,
animatable: !1
},
horizontalDirection: {
default: c.LEFT_TO_RIGHT,
type: c,
notify: function() {
this._doLayoutDirty();
},
tooltip: !1,
animatable: !1
},
affectedByScale: {
default: !1,
notify: function() {
this._doLayoutDirty();
},
animatable: !1,
tooltip: !1
}
},
statics: {
Type: r,
VerticalDirection: a,
HorizontalDirection: c,
ResizeMode: s,
AxisDirection: o
},
onEnable: function() {
this._addEventListeners();
this.node.getContentSize().equals(cc.size(0, 0)) && this.node.setContentSize(this._layoutSize);
this._doLayoutDirty();
},
onDisable: function() {
this._removeEventListeners();
},
_doLayoutDirty: function() {
this._layoutDirty = !0;
},
_doScaleDirty: function() {
this._layoutDirty = this._layoutDirty || this.affectedByScale;
},
_addEventListeners: function() {
cc.director.on(cc.Director.EVENT_AFTER_UPDATE, this.updateLayout, this);
this.node.on(n.SIZE_CHANGED, this._resized, this);
this.node.on(n.ANCHOR_CHANGED, this._doLayoutDirty, this);
this.node.on(n.CHILD_ADDED, this._childAdded, this);
this.node.on(n.CHILD_REMOVED, this._childRemoved, this);
this.node.on(n.CHILD_REORDER, this._doLayoutDirty, this);
this._addChildrenEventListeners();
},
_removeEventListeners: function() {
cc.director.off(cc.Director.EVENT_AFTER_UPDATE, this.updateLayout, this);
this.node.off(n.SIZE_CHANGED, this._resized, this);
this.node.off(n.ANCHOR_CHANGED, this._doLayoutDirty, this);
this.node.off(n.CHILD_ADDED, this._childAdded, this);
this.node.off(n.CHILD_REMOVED, this._childRemoved, this);
this.node.off(n.CHILD_REORDER, this._doLayoutDirty, this);
this._removeChildrenEventListeners();
},
_addChildrenEventListeners: function() {
for (var t = this.node.children, e = 0; e < t.length; ++e) {
var i = t[e];
i.on(n.SCALE_CHANGED, this._doScaleDirty, this);
i.on(n.SIZE_CHANGED, this._doLayoutDirty, this);
i.on(n.POSITION_CHANGED, this._doLayoutDirty, this);
i.on(n.ANCHOR_CHANGED, this._doLayoutDirty, this);
i.on("active-in-hierarchy-changed", this._doLayoutDirty, this);
}
},
_removeChildrenEventListeners: function() {
for (var t = this.node.children, e = 0; e < t.length; ++e) {
var i = t[e];
i.off(n.SCALE_CHANGED, this._doScaleDirty, this);
i.off(n.SIZE_CHANGED, this._doLayoutDirty, this);
i.off(n.POSITION_CHANGED, this._doLayoutDirty, this);
i.off(n.ANCHOR_CHANGED, this._doLayoutDirty, this);
i.off("active-in-hierarchy-changed", this._doLayoutDirty, this);
}
},
_childAdded: function(t) {
t.on(n.SCALE_CHANGED, this._doScaleDirty, this);
t.on(n.SIZE_CHANGED, this._doLayoutDirty, this);
t.on(n.POSITION_CHANGED, this._doLayoutDirty, this);
t.on(n.ANCHOR_CHANGED, this._doLayoutDirty, this);
t.on("active-in-hierarchy-changed", this._doLayoutDirty, this);
this._doLayoutDirty();
},
_childRemoved: function(t) {
t.off(n.SCALE_CHANGED, this._doScaleDirty, this);
t.off(n.SIZE_CHANGED, this._doLayoutDirty, this);
t.off(n.POSITION_CHANGED, this._doLayoutDirty, this);
t.off(n.ANCHOR_CHANGED, this._doLayoutDirty, this);
t.off("active-in-hierarchy-changed", this._doLayoutDirty, this);
this._doLayoutDirty();
},
_resized: function() {
this._layoutSize = this.node.getContentSize();
this._doLayoutDirty();
},
_doLayoutHorizontally: function(t, e, i, n) {
var o = this.node.getAnchorPoint(), l = this.node.children, u = 1, h = this.paddingLeft, f = -o.x * t;
if (this.horizontalDirection === c.RIGHT_TO_LEFT) {
u = -1;
f = (1 - o.x) * t;
h = this.paddingRight;
}
for (var _ = f + u * h - u * this.spacingX, d = 0, p = 0, m = 0, y = 0, v = 0, g = 0, b = 0, C = 0; C < l.length; ++C) {
(A = l[C]).activeInHierarchy && b++;
}
var x = this.cellSize.width;
this.type !== r.GRID && this.resizeMode === s.CHILDREN && (x = (t - (this.paddingLeft + this.paddingRight) - (b - 1) * this.spacingX) / b);
for (C = 0; C < l.length; ++C) {
var A = l[C], S = this._getUsedScaleValue(A.scaleX), w = this._getUsedScaleValue(A.scaleY);
if (A.activeInHierarchy) {
if (this._resize === s.CHILDREN) {
A.width = x / S;
this.type === r.GRID && (A.height = this.cellSize.height / w);
}
var T = A.anchorX, E = A.width * S, M = A.height * w;
m > p && (p = m);
if (M >= p) {
m = p;
p = M;
g = A.getAnchorPoint().y;
}
this.horizontalDirection === c.RIGHT_TO_LEFT && (T = 1 - A.anchorX);
_ = _ + u * T * E + u * this.spacingX;
var B = u * (1 - T) * E;
if (e) {
var D = _ + B + u * (u > 0 ? this.paddingRight : this.paddingLeft), R = this.horizontalDirection === c.LEFT_TO_RIGHT && D > (1 - o.x) * t, I = this.horizontalDirection === c.RIGHT_TO_LEFT && D < -o.x * t;
if (R || I) {
if (M >= p) {
0 === m && (m = p);
d += m;
m = p;
} else {
d += p;
m = M;
p = 0;
}
_ = f + u * (h + T * E);
y++;
}
}
var P = i(A, d, y);
t >= E + this.paddingLeft + this.paddingRight && n && A.setPosition(cc.v2(_, P));
var O, L = 1, V = 0 === p ? M : p;
if (this.verticalDirection === a.TOP_TO_BOTTOM) {
v = v || this.node._contentSize.height;
(O = P + (L = -1) * (V * g + this.paddingBottom)) < v && (v = O);
} else {
v = v || -this.node._contentSize.height;
(O = P + L * (V * g + this.paddingTop)) > v && (v = O);
}
_ += B;
}
}
return v;
},
_getVerticalBaseHeight: function(t) {
var e = 0, i = 0;
if (this.resizeMode === s.CONTAINER) {
for (var n = 0; n < t.length; ++n) {
var r = t[n];
if (r.activeInHierarchy) {
i++;
e += r.height * this._getUsedScaleValue(r.scaleY);
}
}
e += (i - 1) * this.spacingY + this.paddingBottom + this.paddingTop;
} else e = this.node.getContentSize().height;
return e;
},
_doLayoutVertically: function(t, e, i, n) {
var o = this.node.getAnchorPoint(), l = this.node.children, u = 1, h = this.paddingBottom, f = -o.y * t;
if (this.verticalDirection === a.TOP_TO_BOTTOM) {
u = -1;
f = (1 - o.y) * t;
h = this.paddingTop;
}
for (var _ = f + u * h - u * this.spacingY, d = 0, p = 0, m = 0, y = 0, v = 0, g = 0, b = 0, C = 0; C < l.length; ++C) {
(A = l[C]).activeInHierarchy && b++;
}
var x = this.cellSize.height;
this.type !== r.GRID && this.resizeMode === s.CHILDREN && (x = (t - (this.paddingTop + this.paddingBottom) - (b - 1) * this.spacingY) / b);
for (C = 0; C < l.length; ++C) {
var A = l[C], S = this._getUsedScaleValue(A.scaleX), w = this._getUsedScaleValue(A.scaleY);
if (A.activeInHierarchy) {
if (this.resizeMode === s.CHILDREN) {
A.height = x / w;
this.type === r.GRID && (A.width = this.cellSize.width / S);
}
var T = A.anchorY, E = A.width * S, M = A.height * w;
m > p && (p = m);
if (E >= p) {
m = p;
p = E;
g = A.getAnchorPoint().x;
}
this.verticalDirection === a.TOP_TO_BOTTOM && (T = 1 - A.anchorY);
_ = _ + u * T * M + u * this.spacingY;
var B = u * (1 - T) * M;
if (e) {
var D = _ + B + u * (u > 0 ? this.paddingTop : this.paddingBottom), R = this.verticalDirection === a.BOTTOM_TO_TOP && D > (1 - o.y) * t, I = this.verticalDirection === a.TOP_TO_BOTTOM && D < -o.y * t;
if (R || I) {
if (E >= p) {
0 === m && (m = p);
d += m;
m = p;
} else {
d += p;
m = E;
p = 0;
}
_ = f + u * (h + T * M);
y++;
}
}
var P = i(A, d, y);
t >= M + (this.paddingTop + this.paddingBottom) && n && A.setPosition(cc.v2(P, _));
var O, L = 1, V = 0 === p ? E : p;
if (this.horizontalDirection === c.RIGHT_TO_LEFT) {
L = -1;
v = v || this.node._contentSize.width;
(O = P + L * (V * g + this.paddingLeft)) < v && (v = O);
} else {
v = v || -this.node._contentSize.width;
(O = P + L * (V * g + this.paddingRight)) > v && (v = O);
}
_ += B;
}
}
return v;
},
_doLayoutBasic: function() {
for (var t = this.node.children, e = null, i = 0; i < t.length; ++i) {
var n = t[i];
n.activeInHierarchy && (e ? e.union(e, n.getBoundingBoxToWorld()) : e = n.getBoundingBoxToWorld());
}
if (e) {
var r = this.node.convertToNodeSpaceAR(cc.v2(e.x, e.y));
r = cc.v2(r.x - this.paddingLeft, r.y - this.paddingBottom);
var s = this.node.convertToNodeSpaceAR(cc.v2(e.xMax, e.yMax)), o = (s = cc.v2(s.x + this.paddingRight, s.y + this.paddingTop)).sub(r);
if (0 !== (o = cc.size(parseFloat(o.x.toFixed(2)), parseFloat(o.y.toFixed(2)))).width) {
var a = -r.x / o.width;
this.node.anchorX = parseFloat(a.toFixed(2));
}
if (0 !== o.height) {
var c = -r.y / o.height;
this.node.anchorY = parseFloat(c.toFixed(2));
}
this.node.setContentSize(o);
}
},
_doLayoutGridAxisHorizontal: function(t, e) {
var i = e.width, n = 1, r = -t.y * e.height, o = this.paddingBottom;
if (this.verticalDirection === a.TOP_TO_BOTTOM) {
n = -1;
r = (1 - t.y) * e.height;
o = this.paddingTop;
}
var c = function(t, e, i) {
return r + n * (e + t.anchorY * t.height * this._getUsedScaleValue(t.scaleY) + o + i * this.spacingY);
}.bind(this), l = 0;
if (this.resizeMode === s.CONTAINER) {
var u = this._doLayoutHorizontally(i, !0, c, !1);
(l = r - u) < 0 && (l *= -1);
r = -t.y * l;
if (this.verticalDirection === a.TOP_TO_BOTTOM) {
n = -1;
r = (1 - t.y) * l;
}
}
this._doLayoutHorizontally(i, !0, c, !0);
this.resizeMode === s.CONTAINER && this.node.setContentSize(i, l);
},
_doLayoutGridAxisVertical: function(t, e) {
var i = e.height, n = 1, r = -t.x * e.width, o = this.paddingLeft;
if (this.horizontalDirection === c.RIGHT_TO_LEFT) {
n = -1;
r = (1 - t.x) * e.width;
o = this.paddingRight;
}
var a = function(t, e, i) {
return r + n * (e + t.anchorX * t.width * this._getUsedScaleValue(t.scaleX) + o + i * this.spacingX);
}.bind(this), l = 0;
if (this.resizeMode === s.CONTAINER) {
var u = this._doLayoutVertically(i, !0, a, !1);
(l = r - u) < 0 && (l *= -1);
r = -t.x * l;
if (this.horizontalDirection === c.RIGHT_TO_LEFT) {
n = -1;
r = (1 - t.x) * l;
}
}
this._doLayoutVertically(i, !0, a, !0);
this.resizeMode === s.CONTAINER && this.node.setContentSize(l, i);
},
_doLayoutGrid: function() {
var t = this.node.getAnchorPoint(), e = this.node.getContentSize();
this.startAxis === o.HORIZONTAL ? this._doLayoutGridAxisHorizontal(t, e) : this.startAxis === o.VERTICAL && this._doLayoutGridAxisVertical(t, e);
},
_getHorizontalBaseWidth: function(t) {
var e = 0, i = 0;
if (this.resizeMode === s.CONTAINER) {
for (var n = 0; n < t.length; ++n) {
var r = t[n];
if (r.activeInHierarchy) {
i++;
e += r.width * this._getUsedScaleValue(r.scaleX);
}
}
e += (i - 1) * this.spacingX + this.paddingLeft + this.paddingRight;
} else e = this.node.getContentSize().width;
return e;
},
_doLayout: function() {
if (this.type === r.HORIZONTAL) {
var t = this._getHorizontalBaseWidth(this.node.children);
this._doLayoutHorizontally(t, !1, (function(t) {
return t.y;
}), !0);
this.node.width = t;
} else if (this.type === r.VERTICAL) {
var e = this._getVerticalBaseHeight(this.node.children);
this._doLayoutVertically(e, !1, (function(t) {
return t.x;
}), !0);
this.node.height = e;
} else this.type === r.NONE ? this.resizeMode === s.CONTAINER && this._doLayoutBasic() : this.type === r.GRID && this._doLayoutGrid();
},
_getUsedScaleValue: function(t) {
return this.affectedByScale ? Math.abs(t) : 1;
},
updateLayout: function() {
if (this._layoutDirty && this.node.children.length > 0) {
this._doLayout();
this._layoutDirty = !1;
}
}
});
cc.Layout = e.exports = l;
}), {
"../CCNode": 72,
"./CCComponent": 120
} ],
126: [ (function(t, e, i) {
"use strict";
var n = a(t("../../renderer/gfx")), r = a(t("../value-types/mat4")), s = a(t("../value-types/vec2")), o = a(t("../assets/material/material-variant"));
function a(t) {
return t && t.__esModule ? t : {
default: t
};
}
var c = t("../utils/misc"), l = t("./CCRenderComponent"), u = t("../renderer/render-flow"), h = t("../graphics/graphics"), f = new s.default(), _ = new r.default(), d = [];
function p(t, e, i) {
d.length = 0;
for (var n = 2 * Math.PI / i, r = 0; r < i; ++r) d.push(cc.v2(e.x * Math.cos(n * r) + t.x, e.y * Math.sin(n * r) + t.y));
return d;
}
var m = cc.Enum({
RECT: 0,
ELLIPSE: 1,
IMAGE_STENCIL: 2
}), y = cc.Class({
name: "cc.Mask",
extends: l,
editor: !1,
ctor: function() {
this._graphics = null;
this._enableMaterial = null;
this._exitMaterial = null;
this._clearMaterial = null;
},
properties: {
_spriteFrame: {
default: null,
type: cc.SpriteFrame
},
_type: m.RECT,
type: {
get: function() {
return this._type;
},
set: function(t) {
this._type !== t && this._resetAssembler();
this._type = t;
if (this._type !== m.IMAGE_STENCIL) {
this.spriteFrame = null;
this.alphaThreshold = 0;
this._updateGraphics();
}
this._activateMaterial();
},
type: m,
tooltip: !1
},
spriteFrame: {
type: cc.SpriteFrame,
tooltip: !1,
get: function() {
return this._spriteFrame;
},
set: function(t) {
var e = this._spriteFrame;
if (e !== t) {
this._spriteFrame = t;
this.setVertsDirty();
this._updateMaterial();
}
}
},
alphaThreshold: {
default: .1,
type: cc.Float,
range: [ 0, 1, .1 ],
slide: !0,
tooltip: !1,
notify: function() {
cc.game.renderType !== cc.game.RENDER_TYPE_CANVAS ? this._updateMaterial() : cc.warnID(4201);
}
},
inverted: {
default: !1,
type: cc.Boolean,
tooltip: !1,
notify: function() {
cc.game.renderType === cc.game.RENDER_TYPE_CANVAS && cc.warnID(4202);
}
},
_segments: 64,
segements: {
get: function() {
return this._segments;
},
set: function(t) {
this._segments = c.clampf(t, 3, 1e4);
this._updateGraphics();
},
type: cc.Integer,
tooltip: !1
},
_resizeToTarget: {
animatable: !1,
set: function(t) {
t && this._resizeNodeToTargetNode();
}
}
},
statics: {
Type: m
},
onRestore: function() {
this._activateMaterial();
},
onEnable: function() {
this._super();
this._type !== m.IMAGE_STENCIL && this._updateGraphics();
this.node.on(cc.Node.EventType.POSITION_CHANGED, this._updateGraphics, this);
this.node.on(cc.Node.EventType.ROTATION_CHANGED, this._updateGraphics, this);
this.node.on(cc.Node.EventType.SCALE_CHANGED, this._updateGraphics, this);
this.node.on(cc.Node.EventType.SIZE_CHANGED, this._updateGraphics, this);
this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this._updateGraphics, this);
},
onDisable: function() {
this._super();
this.node.off(cc.Node.EventType.POSITION_CHANGED, this._updateGraphics, this);
this.node.off(cc.Node.EventType.ROTATION_CHANGED, this._updateGraphics, this);
this.node.off(cc.Node.EventType.SCALE_CHANGED, this._updateGraphics, this);
this.node.off(cc.Node.EventType.SIZE_CHANGED, this._updateGraphics, this);
this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this._updateGraphics, this);
this.node._renderFlag &= ~u.FLAG_POST_RENDER;
},
onDestroy: function() {
this._super();
this._removeGraphics();
},
_resizeNodeToTargetNode: !1,
_validateRender: function() {
if (this._type === m.IMAGE_STENCIL) {
var t = this._spriteFrame;
t && t.textureLoaded() || this.disableRender();
}
},
_activateMaterial: function() {
this._createGraphics();
var t = this._materials[0];
(t = t ? o.default.create(t, this) : o.default.createWithBuiltin("2d-sprite", this)).define("USE_ALPHA_TEST", !0);
if (this._type === m.IMAGE_STENCIL) {
t.define("CC_USE_MODEL", !1);
t.define("USE_TEXTURE", !0);
} else {
t.define("CC_USE_MODEL", !0);
t.define("USE_TEXTURE", !1);
}
this._enableMaterial || (this._enableMaterial = o.default.createWithBuiltin("2d-sprite", this));
if (!this._exitMaterial) {
this._exitMaterial = o.default.createWithBuiltin("2d-sprite", this);
this._exitMaterial.setStencilEnabled(n.default.STENCIL_DISABLE);
}
this._clearMaterial || (this._clearMaterial = o.default.createWithBuiltin("clear-stencil", this));
this.setMaterial(0, t);
this._graphics._materials[0] = t;
this._updateMaterial();
},
_updateMaterial: function() {
var t = this._materials[0];
if (t) {
if (this._type === m.IMAGE_STENCIL && this.spriteFrame) {
var e = this.spriteFrame.getTexture();
t.setProperty("texture", e);
}
t.setProperty("alphaThreshold", this.alphaThreshold);
}
},
_createGraphics: function() {
if (!this._graphics) {
this._graphics = new h();
cc.Assembler.init(this._graphics);
this._graphics.node = this.node;
this._graphics.lineWidth = 0;
this._graphics.strokeColor = cc.color(0, 0, 0, 0);
}
},
_updateGraphics: function() {
var t = this.node, e = this._graphics;
e.clear(!1);
var i = t._contentSize.width, n = t._contentSize.height, r = -i * t._anchorPoint.x, s = -n * t._anchorPoint.y;
if (this._type === m.RECT) e.rect(r, s, i, n); else if (this._type === m.ELLIPSE) {
for (var o = p(cc.v2(r + i / 2, s + n / 2), {
x: i / 2,
y: n / 2
}, this._segments), a = 0; a < o.length; ++a) {
var c = o[a];
0 === a ? e.moveTo(c.x, c.y) : e.lineTo(c.x, c.y);
}
e.close();
}
cc.game.renderType === cc.game.RENDER_TYPE_CANVAS ? e.stroke() : e.fill();
},
_removeGraphics: function() {
if (this._graphics) {
this._graphics.destroy();
this._graphics._destroyImmediate();
this._graphics = null;
}
},
_hitTest: function(t) {
var e = this.node, i = e.getContentSize(), n = i.width, o = i.height, a = f;
e._updateWorldMatrix();
if (!r.default.invert(_, e._worldMatrix)) return !1;
s.default.transformMat4(a, t, _);
a.x += e._anchorPoint.x * n;
a.y += e._anchorPoint.y * o;
var c = !1;
if (this.type === m.RECT || this.type === m.IMAGE_STENCIL) c = a.x >= 0 && a.y >= 0 && a.x <= n && a.y <= o; else if (this.type === m.ELLIPSE) {
var l = n / 2, u = o / 2, h = a.x - .5 * n, d = a.y - .5 * o;
c = h * h / (l * l) + d * d / (u * u) < 1;
}
this.inverted && (c = !c);
return c;
},
markForRender: function(t) {
var e = u.FLAG_RENDER | u.FLAG_UPDATE_RENDER_DATA | u.FLAG_POST_RENDER;
if (t) {
this.node._renderFlag |= e;
this.markForValidate();
} else t || (this.node._renderFlag &= ~e);
},
disableRender: function() {
this.node._renderFlag &= ~(u.FLAG_RENDER | u.FLAG_UPDATE_RENDER_DATA | u.FLAG_POST_RENDER);
}
});
cc.Mask = e.exports = y;
}), {
"../../renderer/gfx": 354,
"../assets/material/material-variant": 102,
"../graphics/graphics": 172,
"../renderer/render-flow": 263,
"../utils/misc": 313,
"../value-types/mat4": 330,
"../value-types/vec2": 337,
"./CCRenderComponent": 131
} ],
127: [ (function(t, e, i) {
"use strict";
var n = t("../components/CCRenderComponent"), r = t("../../core/utils/blend-func"), s = cc.Class({
name: "cc.MotionStreak",
extends: n,
mixins: [ r ],
editor: !1,
ctor: function() {
this._points = [];
},
properties: {
preview: {
default: !1,
editorOnly: !0,
notify: !1,
animatable: !1
},
_fadeTime: 1,
fadeTime: {
get: function() {
return this._fadeTime;
},
set: function(t) {
this._fadeTime = t;
this.reset();
},
animatable: !1,
tooltip: !1
},
_minSeg: 1,
minSeg: {
get: function() {
return this._minSeg;
},
set: function(t) {
this._minSeg = t;
},
animatable: !1,
tooltip: !1
},
_stroke: 64,
stroke: {
get: function() {
return this._stroke;
},
set: function(t) {
this._stroke = t;
},
animatable: !1,
tooltip: !1
},
_texture: {
default: null,
type: cc.Texture2D
},
texture: {
get: function() {
return this._texture;
},
set: function(t) {
if (this._texture !== t) {
this._texture = t;
this._updateMaterial();
}
},
type: cc.Texture2D,
animatable: !1,
tooltip: !1
},
_color: cc.Color.WHITE,
color: {
get: function() {
return this._color;
},
set: function(t) {
this._color = t;
},
type: cc.Color,
tooltip: !1
},
_fastMode: !1,
fastMode: {
get: function() {
return this._fastMode;
},
set: function(t) {
this._fastMode = t;
},
animatable: !1,
tooltip: !1
}
},
onEnable: function() {
this._super();
this.reset();
},
_updateMaterial: function() {
var t = this.getMaterial(0);
t && t.setProperty("texture", this._texture);
r.prototype._updateMaterial.call(this);
},
onFocusInEditor: !1,
onLostFocusInEditor: !1,
reset: function() {
this._points.length = 0;
this._assembler && this._assembler._renderData.clear();
0;
},
lateUpdate: function(t) {
this._assembler && this._assembler.update(this, t);
}
});
cc.MotionStreak = e.exports = s;
}), {
"../../core/utils/blend-func": 306,
"../components/CCRenderComponent": 131
} ],
128: [ (function(t, e, i) {
"use strict";
var n = cc.Enum({
Unified: 0,
Free: 1
}), r = cc.Enum({
Horizontal: 0,
Vertical: 1
}), s = cc.Enum({
PAGE_TURNING: 0
}), o = cc.Class({
name: "cc.PageView",
extends: cc.ScrollView,
editor: !1,
ctor: function() {
this._curPageIdx = 0;
this._lastPageIdx = 0;
this._pages = [];
this._initContentPos = cc.v2();
this._scrollCenterOffsetX = [];
this._scrollCenterOffsetY = [];
},
properties: {
sizeMode: {
default: n.Unified,
type: n,
tooltip: !1,
notify: function() {
this._syncSizeMode();
}
},
direction: {
default: r.Horizontal,
type: r,
tooltip: !1,
notify: function() {
this._syncScrollDirection();
}
},
scrollThreshold: {
default: .5,
type: cc.Float,
slide: !0,
range: [ 0, 1, .01 ],
tooltip: !1
},
autoPageTurningThreshold: {
default: 100,
type: cc.Float,
tooltip: !1
},
pageTurningEventTiming: {
default: .1,
type: cc.Float,
range: [ 0, 1, .01 ],
tooltip: !1
},
indicator: {
default: null,
type: cc.PageViewIndicator,
tooltip: !1,
notify: function() {
this.indicator && this.indicator.setPageView(this);
}
},
pageTurningSpeed: {
default: .3,
type: cc.Float,
tooltip: !1
},
pageEvents: {
default: [],
type: cc.Component.EventHandler,
tooltip: !1
}
},
statics: {
SizeMode: n,
Direction: r,
EventType: s
},
__preload: function() {
this.node.on(cc.Node.EventType.SIZE_CHANGED, this._updateAllPagesSize, this);
},
onEnable: function() {
this._super();
this.node.on("scroll-ended-with-threshold", this._dispatchPageTurningEvent, this);
},
onDisable: function() {
this._super();
this.node.off("scroll-ended-with-threshold", this._dispatchPageTurningEvent, this);
},
onLoad: function() {
this._initPages();
this.indicator && this.indicator.setPageView(this);
},
onDestroy: function() {
this.node.off(cc.Node.EventType.SIZE_CHANGED, this._updateAllPagesSize, this);
},
getCurrentPageIndex: function() {
return this._curPageIdx;
},
setCurrentPageIndex: function(t) {
this.scrollToPage(t, !0);
},
getPages: function() {
return this._pages;
},
addPage: function(t) {
if (t && -1 === this._pages.indexOf(t) && this.content) {
this.content.addChild(t);
this._pages.push(t);
this._updatePageView();
}
},
insertPage: function(t, e) {
if (!(e < 0) && t && -1 === this._pages.indexOf(t) && this.content) {
if (e >= this._pages.length) this.addPage(t); else {
this._pages.splice(e, 0, t);
this.content.addChild(t);
this._updatePageView();
}
}
},
removePage: function(t) {
if (t && this.content) {
var e = this._pages.indexOf(t);
-1 !== e ? this.removePageAtIndex(e) : cc.warnID(4300, t.name);
}
},
removePageAtIndex: function(t) {
var e = this._pages;
if (!(t < 0 || t >= e.length)) {
var i = e[t];
if (i) {
this.content.removeChild(i);
e.splice(t, 1);
this._updatePageView();
}
}
},
removeAllPages: function() {
if (this.content) {
for (var t = this._pages, e = 0, i = t.length; e < i; e++) this.content.removeChild(t[e]);
this._pages.length = 0;
this._updatePageView();
}
},
scrollToPage: function(t, e) {
if (!(t < 0 || t >= this._pages.length)) {
e = void 0 !== e ? e : .3;
this._curPageIdx = t;
this.scrollToOffset(this._moveOffsetValue(t), e, !0);
this.indicator && this.indicator._changedState();
}
},
getScrollEndedEventTiming: function() {
return this.pageTurningEventTiming;
},
_syncScrollDirection: function() {
this.horizontal = this.direction === r.Horizontal;
this.vertical = this.direction === r.Vertical;
},
_syncSizeMode: function() {
if (this.content) {
var t = this.content.getComponent(cc.Layout);
if (t) {
if (this.sizeMode === n.Free && this._pages.length > 0) {
var e = this._pages[this._pages.length - 1];
if (this.direction === r.Horizontal) {
t.paddingLeft = (this._view.width - this._pages[0].width) / 2;
t.paddingRight = (this._view.width - e.width) / 2;
} else if (this.direction === r.Vertical) {
t.paddingTop = (this._view.height - this._pages[0].height) / 2;
t.paddingBottom = (this._view.height - e.height) / 2;
}
}
t.updateLayout();
}
}
},
_updatePageView: function() {
var t = this.content.getComponent(cc.Layout);
t && t.enabled && t.updateLayout();
var e = this._pages.length;
if (this._curPageIdx >= e) {
this._curPageIdx = 0 === e ? 0 : e - 1;
this._lastPageIdx = this._curPageIdx;
}
for (var i = this._initContentPos, n = 0; n < e; ++n) {
var s = this._pages[n];
s.setSiblingIndex(n);
this.direction === r.Horizontal ? this._scrollCenterOffsetX[n] = Math.abs(i.x + s.x) : this._scrollCenterOffsetY[n] = Math.abs(i.y + s.y);
}
this.indicator && this.indicator._refresh();
},
_updateAllPagesSize: function() {
if (this.sizeMode === n.Unified) for (var t = this._pages, e = this._view.getContentSize(), i = 0, r = t.length; i < r; i++) t[i].setContentSize(e);
},
_initPages: function() {
if (this.content) {
this._initContentPos = this.content.position;
for (var t = this.content.children, e = 0; e < t.length; ++e) {
var i = t[e];
this._pages.indexOf(i) >= 0 || this._pages.push(i);
}
this._syncScrollDirection();
this._syncSizeMode();
this._updatePageView();
}
},
_dispatchPageTurningEvent: function() {
if (this._lastPageIdx !== this._curPageIdx) {
this._lastPageIdx = this._curPageIdx;
cc.Component.EventHandler.emitEvents(this.pageEvents, this, s.PAGE_TURNING);
this.node.emit("page-turning", this);
}
},
_isScrollable: function(t, e, i) {
if (this.sizeMode === n.Free) {
var s, o;
if (this.direction === r.Horizontal) {
s = this._scrollCenterOffsetX[e];
o = this._scrollCenterOffsetX[i];
return Math.abs(t.x) >= Math.abs(s - o) * this.scrollThreshold;
}
if (this.direction === r.Vertical) {
s = this._scrollCenterOffsetY[e];
o = this._scrollCenterOffsetY[i];
return Math.abs(t.y) >= Math.abs(s - o) * this.scrollThreshold;
}
} else {
if (this.direction === r.Horizontal) return Math.abs(t.x) >= this._view.width * this.scrollThreshold;
if (this.direction === r.Vertical) return Math.abs(t.y) >= this._view.height * this.scrollThreshold;
}
},
_isQuicklyScrollable: function(t) {
if (this.direction === r.Horizontal) {
if (Math.abs(t.x) > this.autoPageTurningThreshold) return !0;
} else if (this.direction === r.Vertical && Math.abs(t.y) > this.autoPageTurningThreshold) return !0;
return !1;
},
_moveOffsetValue: function(t) {
var e = cc.v2(0, 0);
this.sizeMode === n.Free ? this.direction === r.Horizontal ? e.x = this._scrollCenterOffsetX[t] : this.direction === r.Vertical && (e.y = this._scrollCenterOffsetY[t]) : this.direction === r.Horizontal ? e.x = t * this._view.width : this.direction === r.Vertical && (e.y = t * this._view.height);
return e;
},
_getDragDirection: function(t) {
return this.direction === r.Horizontal ? 0 === t.x ? 0 : t.x > 0 ? 1 : -1 : this.direction === r.Vertical ? 0 === t.y ? 0 : t.y < 0 ? 1 : -1 : void 0;
},
_handleReleaseLogic: function(t) {
this._autoScrollToPage();
if (this._scrolling) {
this._scrolling = !1;
this._autoScrolling || this._dispatchEvent("scroll-ended");
}
},
_autoScrollToPage: function() {
if (this._startBounceBackIfNeeded()) {
var t = this._getHowMuchOutOfBoundary();
((t = this._clampDelta(t)).x > 0 || t.y < 0) && (this._curPageIdx = 0 === this._pages.length ? 0 : this._pages.length - 1);
(t.x < 0 || t.y > 0) && (this._curPageIdx = 0);
this.indicator && this.indicator._changedState();
} else {
var e = this._touchBeganPosition.sub(this._touchEndPosition), i = this._curPageIdx, n = i + this._getDragDirection(e), r = this.pageTurningSpeed * Math.abs(i - n);
if (n < this._pages.length) {
if (this._isScrollable(e, i, n)) {
this.scrollToPage(n, r);
return;
}
var s = this._calculateTouchMoveVelocity();
if (this._isQuicklyScrollable(s)) {
this.scrollToPage(n, r);
return;
}
}
this.scrollToPage(i, r);
}
},
_onTouchBegan: function(t, e) {
this._touchBeganPosition = t.touch.getLocation();
this._super(t, e);
},
_onTouchMoved: function(t, e) {
this._super(t, e);
},
_onTouchEnded: function(t, e) {
this._touchEndPosition = t.touch.getLocation();
this._super(t, e);
},
_onTouchCancelled: function(t, e) {
this._touchEndPosition = t.touch.getLocation();
this._super(t, e);
},
_onMouseWheel: function() {}
});
cc.PageView = e.exports = o;
}), {} ],
129: [ (function(t, e, i) {
"use strict";
var n = cc.Enum({
HORIZONTAL: 0,
VERTICAL: 1
}), r = cc.Class({
name: "cc.PageViewIndicator",
extends: t("./CCComponent"),
editor: !1,
properties: {
_layout: null,
_pageView: null,
_indicators: [],
spriteFrame: {
default: null,
type: cc.SpriteFrame,
tooltip: !1
},
direction: {
default: n.HORIZONTAL,
type: n,
tooltip: !1
},
cellSize: {
default: cc.size(20, 20),
tooltip: !1
},
spacing: {
default: 0,
tooltip: !1
}
},
statics: {
Direction: n
},
onLoad: function() {
this._updateLayout();
},
setPageView: function(t) {
this._pageView = t;
this._refresh();
},
_updateLayout: function() {
this._layout = this.getComponent(cc.Layout);
this._layout || (this._layout = this.addComponent(cc.Layout));
if (this.direction === n.HORIZONTAL) {
this._layout.type = cc.Layout.Type.HORIZONTAL;
this._layout.spacingX = this.spacing;
} else if (this.direction === n.VERTICAL) {
this._layout.type = cc.Layout.Type.VERTICAL;
this._layout.spacingY = this.spacing;
}
this._layout.resizeMode = cc.Layout.ResizeMode.CONTAINER;
},
_createIndicator: function() {
var t = new cc.Node(), e = t.addComponent(cc.Sprite);
e.spriteFrame = this.spriteFrame;
e.sizeMode = cc.Sprite.SizeMode.CUSTOM;
t.parent = this.node;
t.width = this.cellSize.width;
t.height = this.cellSize.height;
return t;
},
_changedState: function() {
var t = this._indicators;
if (0 !== t.length) {
var e = this._pageView._curPageIdx;
if (!(e >= t.length)) {
for (var i = 0; i < t.length; ++i) {
t[i].opacity = 127.5;
}
t[e].opacity = 255;
}
}
},
_refresh: function() {
if (this._pageView) {
var t = this._indicators, e = this._pageView.getPages();
if (e.length !== t.length) {
var i = 0;
if (e.length > t.length) for (i = 0; i < e.length; ++i) t[i] || (t[i] = this._createIndicator()); else {
for (i = t.length - e.length; i > 0; --i) {
var n = t[i - 1];
this.node.removeChild(n);
t.splice(i - 1, 1);
}
}
this._layout && this._layout.enabledInHierarchy && this._layout.updateLayout();
this._changedState();
}
}
}
});
cc.PageViewIndicator = e.exports = r;
}), {
"./CCComponent": 120
} ],
130: [ (function(t, e, i) {
"use strict";
var n = t("../utils/misc"), r = t("./CCComponent"), s = cc.Enum({
HORIZONTAL: 0,
VERTICAL: 1,
FILLED: 2
}), o = cc.Class({
name: "cc.ProgressBar",
extends: r,
editor: !1,
_initBarSprite: function() {
if (this.barSprite) {
var t = this.barSprite.node;
if (!t) return;
var e = this.node.getContentSize(), i = this.node.getAnchorPoint(), n = t.getContentSize();
t.parent === this.node && this.node.setContentSize(n);
this.barSprite.fillType === cc.Sprite.FillType.RADIAL && (this.mode = s.FILLED);
var r = t.getContentSize();
this.mode === s.HORIZONTAL ? this.totalLength = r.width : this.mode === s.VERTICAL ? this.totalLength = r.height : this.totalLength = this.barSprite.fillRange;
if (t.parent === this.node) {
var o = -e.width * i.x;
t.setPosition(cc.v2(o, 0));
}
}
},
_updateBarStatus: function() {
if (this.barSprite) {
var t = this.barSprite.node;
if (!t) return;
var e, i, r, o = t.getAnchorPoint(), a = t.getContentSize(), c = t.getPosition(), l = cc.v2(0, .5), u = n.clamp01(this.progress), h = this.totalLength * u;
switch (this.mode) {
case s.HORIZONTAL:
this.reverse && (l = cc.v2(1, .5));
e = cc.size(h, a.height);
i = this.totalLength;
r = a.height;
break;

case s.VERTICAL:
l = this.reverse ? cc.v2(.5, 1) : cc.v2(.5, 0);
e = cc.size(a.width, h);
i = a.width;
r = this.totalLength;
}
if (this.mode === s.FILLED) if (this.barSprite.type !== cc.Sprite.Type.FILLED) cc.warn("ProgressBar FILLED mode only works when barSprite's Type is FILLED!"); else {
this.reverse && (h *= -1);
this.barSprite.fillRange = h;
} else if (this.barSprite.type !== cc.Sprite.Type.FILLED) {
var f = l.x - o.x, _ = l.y - o.y, d = cc.v2(i * f, r * _);
t.setPosition(c.x + d.x, c.y + d.y);
t.setAnchorPoint(l);
t.setContentSize(e);
} else cc.warn("ProgressBar non-FILLED mode only works when barSprite's Type is non-FILLED!");
}
},
properties: {
barSprite: {
default: null,
type: cc.Sprite,
tooltip: !1,
notify: function() {
this._initBarSprite();
},
animatable: !1
},
mode: {
default: s.HORIZONTAL,
type: s,
tooltip: !1,
notify: function() {
if (this.barSprite) {
var t = this.barSprite.node;
if (!t) return;
var e = t.getContentSize();
this.mode === s.HORIZONTAL ? this.totalLength = e.width : this.mode === s.VERTICAL ? this.totalLength = e.height : this.mode === s.FILLED && (this.totalLength = this.barSprite.fillRange);
}
},
animatable: !1
},
_N$totalLength: 1,
totalLength: {
range: [ 0, Number.MAX_VALUE ],
tooltip: !1,
get: function() {
return this._N$totalLength;
},
set: function(t) {
this.mode === s.FILLED && (t = n.clamp01(t));
this._N$totalLength = t;
this._updateBarStatus();
}
},
progress: {
default: 1,
type: cc.Float,
range: [ 0, 1, .1 ],
slide: !0,
tooltip: !1,
notify: function() {
this._updateBarStatus();
}
},
reverse: {
default: !1,
tooltip: !1,
notify: function() {
this.barSprite && (this.barSprite.fillStart = 1 - this.barSprite.fillStart);
this._updateBarStatus();
},
animatable: !1
}
},
statics: {
Mode: s
}
});
cc.ProgressBar = e.exports = o;
}), {
"../utils/misc": 313,
"./CCComponent": 120
} ],
131: [ (function(t, e, i) {
"use strict";
var n = s(t("../renderer/assembler")), r = s(t("../assets/material/material-variant"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
var o = t("./CCComponent"), a = t("../renderer/render-flow"), c = t("../assets/material/CCMaterial"), l = cc.Class({
name: "RenderComponent",
extends: o,
editor: !1,
properties: {
_materials: {
default: [],
type: c
},
materials: {
get: function() {
return this._materials;
},
set: function(t) {
this._materials = t;
this._activateMaterial();
},
type: [ c ],
displayName: "Materials",
animatable: !1
}
},
ctor: function() {
this._vertsDirty = !0;
this._assembler = null;
},
_resetAssembler: function() {
n.default.init(this);
this._updateColor();
this.setVertsDirty();
},
__preload: function() {
this._resetAssembler();
this._activateMaterial();
},
onEnable: function() {
this.node._renderComponent && (this.node._renderComponent.enabled = !1);
this.node._renderComponent = this;
this.node._renderFlag |= a.FLAG_OPACITY_COLOR;
this.setVertsDirty();
},
onDisable: function() {
this.node._renderComponent = null;
this.disableRender();
},
onDestroy: function() {
for (var t = this._materials, e = 0; e < t.length; e++) cc.pool.material.put(t[e]);
t.length = 0;
cc.pool.assembler.put(this._assembler);
},
setVertsDirty: function() {
this._vertsDirty = !0;
this.markForRender(!0);
},
_on3DNodeChanged: function() {
this._resetAssembler();
},
_validateRender: function() {},
markForValidate: function() {
cc.RenderFlow.registerValidate(this);
},
markForRender: function(t) {
var e = a.FLAG_RENDER | a.FLAG_UPDATE_RENDER_DATA;
if (t) {
this.node._renderFlag |= e;
this.markForValidate();
} else this.node._renderFlag &= ~e;
},
disableRender: function() {
this.node._renderFlag &= ~(a.FLAG_RENDER | a.FLAG_UPDATE_RENDER_DATA);
},
getMaterial: function(t) {
if (t < 0 || t >= this._materials.length) return null;
var e = this._materials[t];
if (!e) return null;
var i = r.default.create(e, this);
i !== e && this.setMaterial(t, i);
return i;
},
getMaterials: function() {
for (var t = this._materials, e = 0; e < t.length; e++) t[e] = r.default.create(t[e], this);
return t;
},
setMaterial: function(t, e) {
if (e !== this._materials[t]) {
e = r.default.create(e, this);
this._materials[t] = e;
}
this._updateMaterial();
this.markForRender(!0);
return e;
},
_getDefaultMaterial: function() {
return c.getBuiltinMaterial("2d-sprite");
},
_activateMaterial: function() {
var t = this._materials;
if (!t[0]) {
var e = this._getDefaultMaterial();
t[0] = e;
}
for (var i = 0; i < t.length; i++) t[i] = r.default.create(t[i], this);
this._updateMaterial();
},
_updateMaterial: function() {},
_updateColor: function() {
this._assembler.updateColor && this._assembler.updateColor(this);
},
_checkBacth: function(t, e) {
var i = this._materials[0];
if (i && i.getHash() !== t.material.getHash() || t.cullingMask !== e) {
t._flush();
t.node = i.getDefine("CC_USE_MODEL") ? this.node : t._dummyNode;
t.material = i;
t.cullingMask = e;
}
}
});
cc.RenderComponent = e.exports = l;
}), {
"../assets/material/CCMaterial": 95,
"../assets/material/material-variant": 102,
"../renderer/assembler": 259,
"../renderer/render-flow": 263,
"./CCComponent": 120
} ],
132: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("../platform/CCMacro"), s = t("../utils/text-utils"), o = new (t("../utils/html-text-parser"))(), a = r.TextAlignment, c = r.VerticalTextAlignment, l = cc.Label.CacheMode;
var u = new n.Pool(function(t) {
0;
0;
if (!cc.isValid(t)) return !1;
var e = t.getComponent(cc.LabelOutline);
e && (e.width = 0);
return !0;
}, 20);
u.get = function(t, e) {
var i = this._get();
i || (i = new cc.PrivateNode("RICHTEXT_CHILD"));
i.setPosition(0, 0);
i.setAnchorPoint(.5, .5);
i.skewX = 0;
var n = i.getComponent(cc.Label);
n || (n = i.addComponent(cc.Label));
n.string = "";
n.horizontalAlign = a.LEFT;
n.verticalAlign = c.CENTER;
return i;
};
var h = cc.Class({
name: "cc.RichText",
extends: cc.Component,
ctor: function() {
this._textArray = null;
this._labelSegments = [];
this._labelSegmentsCache = [];
this._linesWidth = [];
this._updateRichTextStatus = this._updateRichText;
},
editor: !1,
properties: {
string: {
default: "<color=#00ff00>Rich</c><color=#0fffff>Text</color>",
multiline: !0,
tooltip: !1,
notify: function() {
this._updateRichTextStatus();
}
},
horizontalAlign: {
default: a.LEFT,
type: a,
tooltip: !1,
animatable: !1,
notify: function(t) {
if (this.horizontalAlign !== t) {
this._layoutDirty = !0;
this._updateRichTextStatus();
}
}
},
fontSize: {
default: 40,
tooltip: !1,
notify: function(t) {
if (this.fontSize !== t) {
this._layoutDirty = !0;
this._updateRichTextStatus();
}
}
},
_fontFamily: "Arial",
fontFamily: {
tooltip: !1,
get: function() {
return this._fontFamily;
},
set: function(t) {
if (this._fontFamily !== t) {
this._fontFamily = t;
this._layoutDirty = !0;
this._updateRichTextStatus();
}
},
animatable: !1
},
font: {
default: null,
type: cc.TTFFont,
tooltip: !1,
notify: function(t) {
if (this.font !== t) {
this._layoutDirty = !0;
if (this.font) {
0;
this.useSystemFont = !1;
this._onTTFLoaded();
} else this.useSystemFont = !0;
this._updateRichTextStatus();
}
}
},
_isSystemFontUsed: !0,
useSystemFont: {
get: function() {
return this._isSystemFontUsed;
},
set: function(t) {
if (this._isSystemFontUsed !== t) {
this._isSystemFontUsed = t;
0;
this._layoutDirty = !0;
this._updateRichTextStatus();
}
},
animatable: !1,
tooltip: !1
},
cacheMode: {
default: l.NONE,
type: l,
tooltip: !1,
notify: function(t) {
this.cacheMode !== t && this._updateRichTextStatus();
},
animatable: !1
},
maxWidth: {
default: 0,
tooltip: !1,
notify: function(t) {
if (this.maxWidth !== t) {
this._layoutDirty = !0;
this._updateRichTextStatus();
}
}
},
lineHeight: {
default: 40,
tooltip: !1,
notify: function(t) {
if (this.lineHeight !== t) {
this._layoutDirty = !0;
this._updateRichTextStatus();
}
}
},
imageAtlas: {
default: null,
type: cc.SpriteAtlas,
tooltip: !1,
notify: function(t) {
if (this.imageAtlas !== t) {
this._layoutDirty = !0;
this._updateRichTextStatus();
}
}
},
handleTouchEvent: {
default: !0,
tooltip: !1,
notify: function(t) {
this.handleTouchEvent !== t && this.enabledInHierarchy && (this.handleTouchEvent ? this._addEventListeners() : this._removeEventListeners());
}
}
},
statics: {
HorizontalAlign: a,
VerticalAlign: c
},
onEnable: function() {
this.handleTouchEvent && this._addEventListeners();
this._updateRichText();
this._activateChildren(!0);
},
onDisable: function() {
this.handleTouchEvent && this._removeEventListeners();
this._activateChildren(!1);
},
start: function() {
this._onTTFLoaded();
},
_onColorChanged: function(t) {
this.node.children.forEach((function(e) {
e.color = t;
}));
},
_addEventListeners: function() {
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
this.node.on(cc.Node.EventType.COLOR_CHANGED, this._onColorChanged, this);
},
_removeEventListeners: function() {
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
this.node.off(cc.Node.EventType.COLOR_CHANGED, this._onColorChanged, this);
},
_updateLabelSegmentTextAttributes: function() {
this._labelSegments.forEach(function(t) {
this._applyTextAttribute(t, null, !0);
}.bind(this));
},
_createFontLabel: function(t) {
return u.get(t, this);
},
_onTTFLoaded: function() {
if (this.font instanceof cc.TTFFont) if (this.font._nativeAsset) {
this._layoutDirty = !0;
this._updateRichText();
} else {
var t = this;
cc.loader.load(this.font.nativeUrl, (function(e, i) {
t._layoutDirty = !0;
t._updateRichText();
}));
} else {
this._layoutDirty = !0;
this._updateRichText();
}
},
_measureText: function(t, e) {
var i = this, n = function(e) {
var n;
if (0 === i._labelSegmentsCache.length) {
n = i._createFontLabel(e);
i._labelSegmentsCache.push(n);
} else n = i._labelSegmentsCache[0];
n._styleIndex = t;
i._applyTextAttribute(n, e, !0);
return n.getContentSize().width;
};
return e ? n(e) : n;
},
_onTouchEnded: function(t) {
for (var e = this, i = this.node.getComponents(cc.Component), n = function(n) {
var r = e._labelSegments[n], s = r._clickHandler, o = r._clickParam;
if (s && e._containsTouchLocation(r, t.touch.getLocation())) {
i.forEach((function(e) {
e.enabledInHierarchy && e[s] && e[s](t, o);
}));
t.stopPropagation();
}
}, r = 0; r < this._labelSegments.length; ++r) n(r);
},
_containsTouchLocation: function(t, e) {
return t.getBoundingBoxToWorld().contains(e);
},
_resetState: function() {
for (var t = this.node.children, e = t.length - 1; e >= 0; e--) {
var i = t[e];
if ("RICHTEXT_CHILD" === i.name || "RICHTEXT_Image_CHILD" === i.name) {
i.parent === this.node ? i.parent = null : t.splice(e, 1);
"RICHTEXT_CHILD" === i.name && u.put(i);
}
}
this._labelSegments.length = 0;
this._labelSegmentsCache.length = 0;
this._linesWidth.length = 0;
this._lineOffsetX = 0;
this._lineCount = 1;
this._labelWidth = 0;
this._labelHeight = 0;
this._layoutDirty = !0;
},
onRestore: !1,
_activateChildren: function(t) {
for (var e = this.node.children.length - 1; e >= 0; e--) {
var i = this.node.children[e];
"RICHTEXT_CHILD" !== i.name && "RICHTEXT_Image_CHILD" !== i.name || (i.active = t);
}
},
_addLabelSegment: function(t, e) {
var i;
(i = 0 === this._labelSegmentsCache.length ? this._createFontLabel(t) : this._labelSegmentsCache.pop())._styleIndex = e;
i._lineCount = this._lineCount;
i.active = this.node.active;
i.setAnchorPoint(0, 0);
this._applyTextAttribute(i, t);
this.node.addChild(i);
this._labelSegments.push(i);
return i;
},
_updateRichTextWithMaxWidth: function(t, e, i) {
var n = e;
if (this._lineOffsetX > 0 && n + this._lineOffsetX > this.maxWidth) for (var r = 0; this._lineOffsetX <= this.maxWidth; ) {
var o = this._getFirstWordLen(t, r, t.length), a = t.substr(r, o), c = this._measureText(i, a);
if (!(this._lineOffsetX + c <= this.maxWidth)) {
if (r > 0) {
var l = t.substr(0, r);
this._addLabelSegment(l, i);
t = t.substr(r, t.length);
n = this._measureText(i, t);
}
this._updateLineInfo();
break;
}
this._lineOffsetX += c;
r += o;
}
if (n > this.maxWidth) for (var u = s.fragmentText(t, n, this.maxWidth, this._measureText(i)), h = 0; h < u.length; ++h) {
var f = u[h], _ = this._addLabelSegment(f, i).getContentSize();
this._lineOffsetX += _.width;
u.length > 1 && h < u.length - 1 && this._updateLineInfo();
} else {
this._lineOffsetX += n;
this._addLabelSegment(t, i);
}
},
_isLastComponentCR: function(t) {
return t.length - 1 === t.lastIndexOf("\n");
},
_updateLineInfo: function() {
this._linesWidth.push(this._lineOffsetX);
this._lineOffsetX = 0;
this._lineCount++;
},
_needsUpdateTextLayout: function(t) {
if (this._layoutDirty || !this._textArray || !t) return !0;
if (this._textArray.length !== t.length) return !0;
for (var e = 0; e < this._textArray.length; ++e) {
var i = this._textArray[e], n = t[e];
if (i.text !== n.text) return !0;
var r = i.style, s = n.style;
if (r) {
if (s) {
if (!r.outline != !s.outline) return !0;
if (r.size !== s.size || !r.italic != !s.italic || r.isImage !== s.isImage) return !0;
if (r.src !== s.src || r.imageAlign !== s.imageAlign || r.imageHeight !== s.imageHeight || r.imageWidth !== s.imageWidth || r.imageOffset !== s.imageOffset) return !0;
} else if (r.size || r.italic || r.isImage || r.outline) return !0;
} else if (s && (s.size || s.italic || s.isImage || s.outline)) return !0;
}
return !1;
},
_addRichTextImageElement: function(t) {
var e = t.style.src, i = this.imageAtlas.getSpriteFrame(e);
if (i) {
var n = new cc.PrivateNode("RICHTEXT_Image_CHILD"), r = n.addComponent(cc.Sprite);
switch (t.style.imageAlign) {
case "top":
n.setAnchorPoint(0, 1);
break;

case "center":
n.setAnchorPoint(0, .5);
break;

default:
n.setAnchorPoint(0, 0);
}
t.style.imageOffset && (n._imageOffset = t.style.imageOffset);
r.type = cc.Sprite.Type.SLICED;
r.sizeMode = cc.Sprite.SizeMode.CUSTOM;
this.node.addChild(n);
this._labelSegments.push(n);
var s = i.getRect(), o = 1, a = s.width, c = s.height, l = t.style.imageWidth, u = t.style.imageHeight;
if (u > 0) {
a *= o = u / c;
c *= o;
} else {
a *= o = this.lineHeight / c;
c *= o;
}
l > 0 && (a = l);
if (this.maxWidth > 0) {
this._lineOffsetX + a > this.maxWidth && this._updateLineInfo();
this._lineOffsetX += a;
} else {
this._lineOffsetX += a;
this._lineOffsetX > this._labelWidth && (this._labelWidth = this._lineOffsetX);
}
r.spriteFrame = i;
n.setContentSize(a, c);
n._lineCount = this._lineCount;
if (t.style.event) {
t.style.event.click && (n._clickHandler = t.style.event.click);
t.style.event.param ? n._clickParam = t.style.event.param : n._clickParam = "";
} else n._clickHandler = null;
} else cc.warnID(4400);
},
_updateRichText: function() {
if (this.enabledInHierarchy) {
var t = o.parse(this.string);
if (this._needsUpdateTextLayout(t)) {
this._textArray = t;
this._resetState();
for (var e, i = !1, n = 0; n < this._textArray.length; ++n) {
var r = this._textArray[n], a = r.text;
if ("" === a) {
if (r.style && r.style.newline) {
this._updateLineInfo();
continue;
}
if (r.style && r.style.isImage && this.imageAtlas) {
this._addRichTextImageElement(r);
continue;
}
}
for (var c = a.split("\n"), l = 0; l < c.length; ++l) {
var u = c[l];
if ("" !== u) {
i = !1;
if (this.maxWidth > 0) {
var h = this._measureText(n, u);
this._updateRichTextWithMaxWidth(u, h, n);
c.length > 1 && l < c.length - 1 && this._updateLineInfo();
} else {
e = this._addLabelSegment(u, n).getContentSize();
this._lineOffsetX += e.width;
this._lineOffsetX > this._labelWidth && (this._labelWidth = this._lineOffsetX);
c.length > 1 && l < c.length - 1 && this._updateLineInfo();
}
} else {
if (this._isLastComponentCR(a) && l === c.length - 1) continue;
this._updateLineInfo();
i = !0;
}
}
}
i || this._linesWidth.push(this._lineOffsetX);
this.maxWidth > 0 && (this._labelWidth = this.maxWidth);
this._labelHeight = (this._lineCount + s.BASELINE_RATIO) * this.lineHeight;
this.node.setContentSize(this._labelWidth, this._labelHeight);
this._updateRichTextPosition();
this._layoutDirty = !1;
} else {
this._textArray = t;
this._updateLabelSegmentTextAttributes();
}
}
},
_getFirstWordLen: function(t, e, i) {
var n = t.charAt(e);
if (s.isUnicodeCJK(n) || s.isUnicodeSpace(n)) return 1;
for (var r = 1, o = e + 1; o < i; ++o) {
n = t.charAt(o);
if (s.isUnicodeSpace(n) || s.isUnicodeCJK(n)) break;
r++;
}
return r;
},
_updateRichTextPosition: function() {
for (var t = 0, e = 1, i = this._lineCount, n = 0; n < this._labelSegments.length; ++n) {
var r = this._labelSegments[n], o = r._lineCount;
if (o > e) {
t = 0;
e = o;
}
var c = 0;
switch (this.horizontalAlign) {
case a.LEFT:
c = -this._labelWidth / 2;
break;

case a.CENTER:
c = -this._linesWidth[o - 1] / 2;
break;

case a.RIGHT:
c = this._labelWidth / 2 - this._linesWidth[o - 1];
}
r.x = t + c;
var l = r.getContentSize();
r.y = this.lineHeight * (i - o) - this._labelHeight / 2;
o === e && (t += l.width);
if (r.getComponent(cc.Sprite)) {
var u = this.lineHeight, h = this.lineHeight * (1 + s.BASELINE_RATIO);
switch (r.anchorY) {
case 1:
r.y += u + (h - u) / 2;
break;

case .5:
r.y += h / 2;
break;

default:
r.y += (h - u) / 2;
}
if (r._imageOffset) {
var f = r._imageOffset.split(",");
if (1 === f.length && f[0]) {
var _ = parseFloat(f[0]);
Number.isInteger(_) && (r.y += _);
} else if (2 === f.length) {
var d = parseFloat(f[0]), p = parseFloat(f[1]);
Number.isInteger(d) && (r.x += d);
Number.isInteger(p) && (r.y += p);
}
}
}
var m = r.getComponent(cc.LabelOutline);
m && m.width && (r.y = r.y - m.width);
}
},
_convertLiteralColorValue: function(t) {
var e = t.toUpperCase();
return cc.Color[e] ? cc.Color[e] : cc.color().fromHEX(t);
},
_applyTextAttribute: function(t, e, i) {
var n = t.getComponent(cc.Label);
if (n) {
var r = t._styleIndex, s = null;
this._textArray[r] && (s = this._textArray[r].style);
s && s.color ? t.color = this._convertLiteralColorValue(s.color) : t.color = this.node.color;
n.cacheMode = this.cacheMode;
this.font instanceof cc.Font && !this._isSystemFontUsed ? n.font = this.font : n.fontFamily = this.fontFamily;
n.useSystemFont = this._isSystemFontUsed;
n.lineHeight = this.lineHeight;
n.enableBold = s && s.bold;
n.enableItalics = s && s.italic;
s && s.italic && (t.skewX = 12);
n.enableUnderline = s && s.underline;
if (s && s.outline) {
var o = t.getComponent(cc.LabelOutline);
o || (o = t.addComponent(cc.LabelOutline));
o.color = this._convertLiteralColorValue(s.outline.color);
o.width = s.outline.width;
}
s && s.size ? n.fontSize = s.size : n.fontSize = this.fontSize;
if (null !== e) {
"string" != typeof e && (e = "" + e);
n.string = e;
}
i && n._forceUpdateRenderData();
if (s && s.event) {
s.event.click && (t._clickHandler = s.event.click);
s.event.param ? t._clickParam = s.event.param : t._clickParam = "";
} else t._clickHandler = null;
}
},
onDestroy: function() {
for (var t = 0; t < this._labelSegments.length; ++t) {
this._labelSegments[t].removeFromParent();
u.put(this._labelSegments[t]);
}
}
});
cc.RichText = e.exports = h;
}), {
"../platform/CCMacro": 235,
"../platform/js": 250,
"../utils/html-text-parser": 310,
"../utils/text-utils": 320
} ],
133: [ (function(t, e, i) {
"use strict";
var n = t("../utils/misc"), r = (t("./CCComponent"), cc.Enum({
HORIZONTAL: 0,
VERTICAL: 1
})), s = cc.Class({
name: "cc.Scrollbar",
extends: t("./CCComponent"),
editor: !1,
properties: {
_scrollView: null,
_touching: !1,
_autoHideRemainingTime: {
default: 0,
serializable: !1
},
_opacity: 255,
handle: {
default: null,
type: cc.Sprite,
tooltip: !1,
notify: function() {
this._onScroll(cc.v2(0, 0));
},
animatable: !1
},
direction: {
default: r.HORIZONTAL,
type: r,
tooltip: !1,
notify: function() {
this._onScroll(cc.v2(0, 0));
},
animatable: !1
},
enableAutoHide: {
default: !0,
animatable: !1,
tooltip: !1
},
autoHideTime: {
default: 1,
animatable: !1,
tooltip: !1
}
},
statics: {
Direction: r
},
setTargetScrollView: function(t) {
this._scrollView = t;
},
_convertToScrollViewSpace: function(t) {
var e = this._scrollView.node, i = t.convertToWorldSpaceAR(cc.v2(-t.anchorX * t.width, -t.anchorY * t.height)), n = e.convertToNodeSpaceAR(i);
n.x += e.anchorX * e.width;
n.y += e.anchorY * e.height;
return n;
},
_setOpacity: function(t) {
if (this.handle) {
this.node.opacity = t;
this.handle.node.opacity = t;
}
},
_onScroll: function(t) {
if (this._scrollView) {
var e = this._scrollView.content;
if (e) {
var i = e.getContentSize(), n = this._scrollView.node.getContentSize(), s = this.node.getContentSize();
if (this._conditionalDisableScrollBar(i, n)) return;
if (this.enableAutoHide) {
this._autoHideRemainingTime = this.autoHideTime;
this._setOpacity(this._opacity);
}
var o = 0, a = 0, c = 0, l = 0, u = 0;
if (this.direction === r.HORIZONTAL) {
o = i.width;
a = n.width;
u = s.width;
c = t.x;
l = -this._convertToScrollViewSpace(e).x;
} else if (this.direction === r.VERTICAL) {
o = i.height;
a = n.height;
u = s.height;
c = t.y;
l = -this._convertToScrollViewSpace(e).y;
}
var h = this._calculateLength(o, a, u, c), f = this._calculatePosition(o, a, u, l, c, h);
this._updateLength(h);
this._updateHanlderPosition(f);
}
}
},
_updateHanlderPosition: function(t) {
if (this.handle) {
var e = this._fixupHandlerPosition();
this.handle.node.setPosition(t.x + e.x, t.y + e.y);
}
},
_fixupHandlerPosition: function() {
var t = this.node.getContentSize(), e = this.node.getAnchorPoint(), i = this.handle.node.getContentSize(), n = this.handle.node.parent, s = this.node.convertToWorldSpaceAR(cc.v2(-t.width * e.x, -t.height * e.y)), o = n.convertToNodeSpaceAR(s);
this.direction === r.HORIZONTAL ? o = cc.v2(o.x, o.y + (t.height - i.height) / 2) : this.direction === r.VERTICAL && (o = cc.v2(o.x + (t.width - i.width) / 2, o.y));
this.handle.node.setPosition(o);
return o;
},
_onTouchBegan: function() {
this.enableAutoHide && (this._touching = !0);
},
_conditionalDisableScrollBar: function(t, e) {
return t.width <= e.width && this.direction === r.HORIZONTAL || t.height <= e.height && this.direction === r.VERTICAL;
},
_onTouchEnded: function() {
if (this.enableAutoHide) {
this._touching = !1;
if (!(this.autoHideTime <= 0)) {
if (this._scrollView) {
var t = this._scrollView.content;
if (t) {
var e = t.getContentSize(), i = this._scrollView.node.getContentSize();
if (this._conditionalDisableScrollBar(e, i)) return;
}
}
this._autoHideRemainingTime = this.autoHideTime;
}
}
},
_calculateLength: function(t, e, i, n) {
var r = t;
n && (r += 20 * (n > 0 ? n : -n));
return i * (e / r);
},
_calculatePosition: function(t, e, i, s, o, a) {
var c = t - e;
o && (c += Math.abs(o));
var l = 0;
if (c) {
l = s / c;
l = n.clamp01(l);
}
var u = (i - a) * l;
return this.direction === r.VERTICAL ? cc.v2(0, u) : cc.v2(u, 0);
},
_updateLength: function(t) {
if (this.handle) {
var e = this.handle.node, i = e.getContentSize();
e.setAnchorPoint(cc.v2(0, 0));
this.direction === r.HORIZONTAL ? e.setContentSize(t, i.height) : e.setContentSize(i.width, t);
}
},
_processAutoHide: function(t) {
if (this.enableAutoHide && !(this._autoHideRemainingTime <= 0) && !this._touching) {
this._autoHideRemainingTime -= t;
if (this._autoHideRemainingTime <= this.autoHideTime) {
this._autoHideRemainingTime = Math.max(0, this._autoHideRemainingTime);
var e = this._opacity * (this._autoHideRemainingTime / this.autoHideTime);
this._setOpacity(e);
}
}
},
start: function() {
this.enableAutoHide && this._setOpacity(0);
},
hide: function() {
this._autoHideRemainingTime = 0;
this._setOpacity(0);
},
show: function() {
this._autoHideRemainingTime = this.autoHideTime;
this._setOpacity(this._opacity);
},
update: function(t) {
this._processAutoHide(t);
}
});
cc.Scrollbar = e.exports = s;
}), {
"../utils/misc": 313,
"./CCComponent": 120
} ],
134: [ (function(t, e, i) {
"use strict";
var n = t("../CCNode").EventType, r = cc.v2(), s = cc.v2(), o = function(t) {
return (t -= 1) * t * t * t * t + 1;
}, a = function() {
return new Date().getMilliseconds();
}, c = cc.Enum({
SCROLL_TO_TOP: 0,
SCROLL_TO_BOTTOM: 1,
SCROLL_TO_LEFT: 2,
SCROLL_TO_RIGHT: 3,
SCROLLING: 4,
BOUNCE_TOP: 5,
BOUNCE_BOTTOM: 6,
BOUNCE_LEFT: 7,
BOUNCE_RIGHT: 8,
SCROLL_ENDED: 9,
TOUCH_UP: 10,
AUTOSCROLL_ENDED_WITH_THRESHOLD: 11,
SCROLL_BEGAN: 12
}), l = {
"scroll-to-top": c.SCROLL_TO_TOP,
"scroll-to-bottom": c.SCROLL_TO_BOTTOM,
"scroll-to-left": c.SCROLL_TO_LEFT,
"scroll-to-right": c.SCROLL_TO_RIGHT,
scrolling: c.SCROLLING,
"bounce-bottom": c.BOUNCE_BOTTOM,
"bounce-left": c.BOUNCE_LEFT,
"bounce-right": c.BOUNCE_RIGHT,
"bounce-top": c.BOUNCE_TOP,
"scroll-ended": c.SCROLL_ENDED,
"touch-up": c.TOUCH_UP,
"scroll-ended-with-threshold": c.AUTOSCROLL_ENDED_WITH_THRESHOLD,
"scroll-began": c.SCROLL_BEGAN
}, u = cc.Class({
name: "cc.ScrollView",
extends: t("./CCViewGroup"),
editor: !1,
ctor: function() {
this._topBoundary = 0;
this._bottomBoundary = 0;
this._leftBoundary = 0;
this._rightBoundary = 0;
this._touchMoveDisplacements = [];
this._touchMoveTimeDeltas = [];
this._touchMovePreviousTimestamp = 0;
this._touchMoved = !1;
this._autoScrolling = !1;
this._autoScrollAttenuate = !1;
this._autoScrollStartPosition = cc.v2(0, 0);
this._autoScrollTargetDelta = cc.v2(0, 0);
this._autoScrollTotalTime = 0;
this._autoScrollAccumulatedTime = 0;
this._autoScrollCurrentlyOutOfBoundary = !1;
this._autoScrollBraking = !1;
this._autoScrollBrakingStartPosition = cc.v2(0, 0);
this._outOfBoundaryAmount = cc.v2(0, 0);
this._outOfBoundaryAmountDirty = !0;
this._stopMouseWheel = !1;
this._mouseWheelEventElapsedTime = 0;
this._isScrollEndedWithThresholdEventFired = !1;
this._scrollEventEmitMask = 0;
this._isBouncing = !1;
this._scrolling = !1;
},
properties: {
content: {
default: void 0,
type: cc.Node,
tooltip: !1,
formerlySerializedAs: "content",
notify: function(t) {
this._calculateBoundary();
}
},
horizontal: {
default: !0,
animatable: !1,
tooltip: !1
},
vertical: {
default: !0,
animatable: !1,
tooltip: !1
},
inertia: {
default: !0,
tooltip: !1
},
brake: {
default: .5,
type: cc.Float,
range: [ 0, 1, .1 ],
tooltip: !1
},
elastic: {
default: !0,
animatable: !1,
tooltip: !1
},
bounceDuration: {
default: 1,
range: [ 0, 10 ],
tooltip: !1
},
horizontalScrollBar: {
default: void 0,
type: cc.Scrollbar,
tooltip: !1,
notify: function() {
if (this.horizontalScrollBar) {
this.horizontalScrollBar.setTargetScrollView(this);
this._updateScrollBar(0);
}
},
animatable: !1
},
verticalScrollBar: {
default: void 0,
type: cc.Scrollbar,
tooltip: !1,
notify: function() {
if (this.verticalScrollBar) {
this.verticalScrollBar.setTargetScrollView(this);
this._updateScrollBar(0);
}
},
animatable: !1
},
scrollEvents: {
default: [],
type: cc.Component.EventHandler,
tooltip: !1
},
cancelInnerEvents: {
default: !0,
animatable: !1,
tooltip: !1
},
_view: {
get: function() {
if (this.content) return this.content.parent;
}
}
},
statics: {
EventType: c
},
scrollToBottom: function(t, e) {
var i = this._calculateMovePercentDelta({
anchor: cc.v2(0, 0),
applyToHorizontal: !1,
applyToVertical: !0
});
t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i, !0);
},
scrollToTop: function(t, e) {
var i = this._calculateMovePercentDelta({
anchor: cc.v2(0, 1),
applyToHorizontal: !1,
applyToVertical: !0
});
t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
},
scrollToLeft: function(t, e) {
var i = this._calculateMovePercentDelta({
anchor: cc.v2(0, 0),
applyToHorizontal: !0,
applyToVertical: !1
});
t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
},
scrollToRight: function(t, e) {
var i = this._calculateMovePercentDelta({
anchor: cc.v2(1, 0),
applyToHorizontal: !0,
applyToVertical: !1
});
t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
},
scrollToTopLeft: function(t, e) {
var i = this._calculateMovePercentDelta({
anchor: cc.v2(0, 1),
applyToHorizontal: !0,
applyToVertical: !0
});
t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
},
scrollToTopRight: function(t, e) {
var i = this._calculateMovePercentDelta({
anchor: cc.v2(1, 1),
applyToHorizontal: !0,
applyToVertical: !0
});
t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
},
scrollToBottomLeft: function(t, e) {
var i = this._calculateMovePercentDelta({
anchor: cc.v2(0, 0),
applyToHorizontal: !0,
applyToVertical: !0
});
t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
},
scrollToBottomRight: function(t, e) {
var i = this._calculateMovePercentDelta({
anchor: cc.v2(1, 0),
applyToHorizontal: !0,
applyToVertical: !0
});
t ? this._startAutoScroll(i, t, !1 !== e) : this._moveContent(i);
},
scrollToOffset: function(t, e, i) {
var n = this.getMaxScrollOffset(), r = cc.v2(0, 0);
0 === n.x ? r.x = 0 : r.x = t.x / n.x;
0 === n.y ? r.y = 1 : r.y = (n.y - t.y) / n.y;
this.scrollTo(r, e, i);
},
getScrollOffset: function() {
var t = this._getContentTopBoundary() - this._topBoundary, e = this._getContentLeftBoundary() - this._leftBoundary;
return cc.v2(e, t);
},
getMaxScrollOffset: function() {
var t = this._view.getContentSize(), e = this.content.getContentSize(), i = e.width - t.width, n = e.height - t.height;
i = i >= 0 ? i : 0;
n = n >= 0 ? n : 0;
return cc.v2(i, n);
},
scrollToPercentHorizontal: function(t, e, i) {
var n = this._calculateMovePercentDelta({
anchor: cc.v2(t, 0),
applyToHorizontal: !0,
applyToVertical: !1
});
e ? this._startAutoScroll(n, e, !1 !== i) : this._moveContent(n);
},
scrollTo: function(t, e, i) {
var n = this._calculateMovePercentDelta({
anchor: cc.v2(t),
applyToHorizontal: !0,
applyToVertical: !0
});
e ? this._startAutoScroll(n, e, !1 !== i) : this._moveContent(n);
},
scrollToPercentVertical: function(t, e, i) {
var n = this._calculateMovePercentDelta({
anchor: cc.v2(0, t),
applyToHorizontal: !1,
applyToVertical: !0
});
e ? this._startAutoScroll(n, e, !1 !== i) : this._moveContent(n);
},
stopAutoScroll: function() {
this._autoScrolling = !1;
this._autoScrollAccumulatedTime = this._autoScrollTotalTime;
},
setContentPosition: function(t) {
if (!t.fuzzyEquals(this.getContentPosition(), 1e-4)) {
this.content.setPosition(t);
this._outOfBoundaryAmountDirty = !0;
}
},
getContentPosition: function() {
return this.content.getPosition();
},
isScrolling: function() {
return this._scrolling;
},
isAutoScrolling: function() {
return this._autoScrolling;
},
_registerEvent: function() {
this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchBegan, this, !0);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this, !0);
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this, !0);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancelled, this, !0);
this.node.on(cc.Node.EventType.MOUSE_WHEEL, this._onMouseWheel, this, !0);
},
_unregisterEvent: function() {
this.node.off(cc.Node.EventType.TOUCH_START, this._onTouchBegan, this, !0);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this, !0);
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this, !0);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancelled, this, !0);
this.node.off(cc.Node.EventType.MOUSE_WHEEL, this._onMouseWheel, this, !0);
},
_onMouseWheel: function(t, e) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(t, e)) {
var i = cc.v2(0, 0), n = -.1;
n = -7;
this.vertical ? i = cc.v2(0, t.getScrollY() * n) : this.horizontal && (i = cc.v2(t.getScrollY() * n, 0));
this._mouseWheelEventElapsedTime = 0;
this._processDeltaMove(i);
if (!this._stopMouseWheel) {
this._handlePressLogic();
this.schedule(this._checkMouseWheel, 1 / 60);
this._stopMouseWheel = !0;
}
this._stopPropagationIfTargetIsMe(t);
}
},
_checkMouseWheel: function(t) {
if (this._getHowMuchOutOfBoundary().fuzzyEquals(cc.v2(0, 0), 1e-4)) {
this._mouseWheelEventElapsedTime += t;
if (this._mouseWheelEventElapsedTime > .1) {
this._onScrollBarTouchEnded();
this.unschedule(this._checkMouseWheel);
this._dispatchEvent("scroll-ended");
this._stopMouseWheel = !1;
}
} else {
this._processInertiaScroll();
this.unschedule(this._checkMouseWheel);
this._dispatchEvent("scroll-ended");
this._stopMouseWheel = !1;
}
},
_calculateMovePercentDelta: function(t) {
var e = t.anchor, i = t.applyToHorizontal, n = t.applyToVertical;
this._calculateBoundary();
e = e.clampf(cc.v2(0, 0), cc.v2(1, 1));
var r = this._view.getContentSize(), s = this.content.getContentSize(), o = this._getContentBottomBoundary() - this._bottomBoundary;
o = -o;
var a = this._getContentLeftBoundary() - this._leftBoundary;
a = -a;
var c = cc.v2(0, 0), l = 0;
if (i) {
l = s.width - r.width;
c.x = a - l * e.x;
}
if (n) {
l = s.height - r.height;
c.y = o - l * e.y;
}
return c;
},
_moveContentToTopLeft: function(t) {
var e = this.content.getContentSize(), i = this._getContentBottomBoundary() - this._bottomBoundary;
i = -i;
var n = cc.v2(0, 0), r = 0, s = this._getContentLeftBoundary() - this._leftBoundary;
s = -s;
if (e.height < t.height) {
r = e.height - t.height;
n.y = i - r;
}
if (e.width < t.width) {
r = e.width - t.width;
n.x = s;
}
this._updateScrollBarState();
this._moveContent(n);
this._adjustContentOutOfBoundary();
},
_calculateBoundary: function() {
if (this.content) {
var t = this.content.getComponent(cc.Layout);
t && t.enabledInHierarchy && t.updateLayout();
var e = this._view.getContentSize(), i = e.width * this._view.anchorX, n = e.height * this._view.anchorY;
this._leftBoundary = -i;
this._bottomBoundary = -n;
this._rightBoundary = this._leftBoundary + e.width;
this._topBoundary = this._bottomBoundary + e.height;
this._moveContentToTopLeft(e);
}
},
_hasNestedViewGroup: function(t, e) {
if (t.eventPhase === cc.Event.CAPTURING_PHASE) {
if (e) for (var i = 0; i < e.length; ++i) {
var n = e[i];
if (this.node === n) return !!t.target.getComponent(cc.ViewGroup);
if (n.getComponent(cc.ViewGroup)) return !0;
}
return !1;
}
},
_stopPropagationIfTargetIsMe: function(t) {
t.eventPhase === cc.Event.AT_TARGET && t.target === this.node && t.stopPropagation();
},
_onTouchBegan: function(t, e) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(t, e)) {
var i = t.touch;
this.content && this._handlePressLogic(i);
this._touchMoved = !1;
this._stopPropagationIfTargetIsMe(t);
}
},
_onTouchMoved: function(t, e) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(t, e)) {
var i = t.touch;
this.content && this._handleMoveLogic(i);
if (this.cancelInnerEvents) {
if (i.getLocation().sub(i.getStartLocation()).mag() > 7 && !this._touchMoved && t.target !== this.node) {
var n = new cc.Event.EventTouch(t.getTouches(), t.bubbles);
n.type = cc.Node.EventType.TOUCH_CANCEL;
n.touch = t.touch;
n.simulate = !0;
t.target.dispatchEvent(n);
this._touchMoved = !0;
}
this._stopPropagationIfTargetIsMe(t);
}
}
},
_onTouchEnded: function(t, e) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(t, e)) {
this._dispatchEvent("touch-up");
var i = t.touch;
this.content && this._handleReleaseLogic(i);
this._touchMoved ? t.stopPropagation() : this._stopPropagationIfTargetIsMe(t);
}
},
_onTouchCancelled: function(t, e) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(t, e)) {
if (!t.simulate) {
var i = t.touch;
this.content && this._handleReleaseLogic(i);
}
this._stopPropagationIfTargetIsMe(t);
}
},
_processDeltaMove: function(t) {
this._scrollChildren(t);
this._gatherTouchMove(t);
},
_getLocalAxisAlignDelta: function(t) {
this.node.convertToNodeSpaceAR(t.getLocation(), r);
this.node.convertToNodeSpaceAR(t.getPreviousLocation(), s);
return r.sub(s);
},
_handleMoveLogic: function(t) {
var e = this._getLocalAxisAlignDelta(t);
this._processDeltaMove(e);
},
_scrollChildren: function(t) {
var e, i = t = this._clampDelta(t);
if (this.elastic) {
e = this._getHowMuchOutOfBoundary();
i.x *= 0 === e.x ? 1 : .5;
i.y *= 0 === e.y ? 1 : .5;
}
if (!this.elastic) {
e = this._getHowMuchOutOfBoundary(i);
i = i.add(e);
}
var n = -1;
if (i.y > 0) {
this.content.y - this.content.anchorY * this.content.height + i.y >= this._bottomBoundary && (n = "scroll-to-bottom");
} else if (i.y < 0) {
this.content.y - this.content.anchorY * this.content.height + this.content.height + i.y <= this._topBoundary && (n = "scroll-to-top");
}
if (i.x < 0) {
this.content.x - this.content.anchorX * this.content.width + this.content.width + i.x <= this._rightBoundary && (n = "scroll-to-right");
} else if (i.x > 0) {
this.content.x - this.content.anchorX * this.content.width + i.x >= this._leftBoundary && (n = "scroll-to-left");
}
this._moveContent(i, !1);
if (0 !== i.x || 0 !== i.y) {
if (!this._scrolling) {
this._scrolling = !0;
this._dispatchEvent("scroll-began");
}
this._dispatchEvent("scrolling");
}
-1 !== n && this._dispatchEvent(n);
},
_handlePressLogic: function() {
this._autoScrolling && this._dispatchEvent("scroll-ended");
this._autoScrolling = !1;
this._isBouncing = !1;
this._touchMovePreviousTimestamp = a();
this._touchMoveDisplacements.length = 0;
this._touchMoveTimeDeltas.length = 0;
this._onScrollBarTouchBegan();
},
_clampDelta: function(t) {
var e = this.content.getContentSize(), i = this._view.getContentSize();
e.width < i.width && (t.x = 0);
e.height < i.height && (t.y = 0);
return t;
},
_gatherTouchMove: function(t) {
t = this._clampDelta(t);
for (;this._touchMoveDisplacements.length >= 5; ) {
this._touchMoveDisplacements.shift();
this._touchMoveTimeDeltas.shift();
}
this._touchMoveDisplacements.push(t);
var e = a();
this._touchMoveTimeDeltas.push((e - this._touchMovePreviousTimestamp) / 1e3);
this._touchMovePreviousTimestamp = e;
},
_startBounceBackIfNeeded: function() {
if (!this.elastic) return !1;
var t = this._getHowMuchOutOfBoundary();
if ((t = this._clampDelta(t)).fuzzyEquals(cc.v2(0, 0), 1e-4)) return !1;
var e = Math.max(this.bounceDuration, 0);
this._startAutoScroll(t, e, !0);
if (!this._isBouncing) {
t.y > 0 && this._dispatchEvent("bounce-top");
t.y < 0 && this._dispatchEvent("bounce-bottom");
t.x > 0 && this._dispatchEvent("bounce-right");
t.x < 0 && this._dispatchEvent("bounce-left");
this._isBouncing = !0;
}
return !0;
},
_processInertiaScroll: function() {
if (!this._startBounceBackIfNeeded() && this.inertia) {
var t = this._calculateTouchMoveVelocity();
!t.fuzzyEquals(cc.v2(0, 0), 1e-4) && this.brake < 1 && this._startInertiaScroll(t);
}
this._onScrollBarTouchEnded();
},
_handleReleaseLogic: function(t) {
var e = this._getLocalAxisAlignDelta(t);
this._gatherTouchMove(e);
this._processInertiaScroll();
if (this._scrolling) {
this._scrolling = !1;
this._autoScrolling || this._dispatchEvent("scroll-ended");
}
},
_isOutOfBoundary: function() {
return !this._getHowMuchOutOfBoundary().fuzzyEquals(cc.v2(0, 0), 1e-4);
},
_isNecessaryAutoScrollBrake: function() {
if (this._autoScrollBraking) return !0;
if (this._isOutOfBoundary()) {
if (!this._autoScrollCurrentlyOutOfBoundary) {
this._autoScrollCurrentlyOutOfBoundary = !0;
this._autoScrollBraking = !0;
this._autoScrollBrakingStartPosition = this.getContentPosition();
return !0;
}
} else this._autoScrollCurrentlyOutOfBoundary = !1;
return !1;
},
getScrollEndedEventTiming: function() {
return 1e-4;
},
_processAutoScrolling: function(t) {
var e = this._isNecessaryAutoScrollBrake(), i = e ? .05 : 1;
this._autoScrollAccumulatedTime += t * (1 / i);
var n = Math.min(1, this._autoScrollAccumulatedTime / this._autoScrollTotalTime);
this._autoScrollAttenuate && (n = o(n));
var r = this._autoScrollStartPosition.add(this._autoScrollTargetDelta.mul(n)), s = Math.abs(n - 1) <= 1e-4;
if (Math.abs(n - 1) <= this.getScrollEndedEventTiming() && !this._isScrollEndedWithThresholdEventFired) {
this._dispatchEvent("scroll-ended-with-threshold");
this._isScrollEndedWithThresholdEventFired = !0;
}
if (this.elastic) {
var a = r.sub(this._autoScrollBrakingStartPosition);
e && (a = a.mul(i));
r = this._autoScrollBrakingStartPosition.add(a);
} else {
var c = r.sub(this.getContentPosition()), l = this._getHowMuchOutOfBoundary(c);
if (!l.fuzzyEquals(cc.v2(0, 0), 1e-4)) {
r = r.add(l);
s = !0;
}
}
s && (this._autoScrolling = !1);
var u = r.sub(this.getContentPosition());
this._moveContent(this._clampDelta(u), s);
this._dispatchEvent("scrolling");
if (!this._autoScrolling) {
this._isBouncing = !1;
this._scrolling = !1;
this._dispatchEvent("scroll-ended");
}
},
_startInertiaScroll: function(t) {
var e = t.mul(.7);
this._startAttenuatingAutoScroll(e, t);
},
_calculateAttenuatedFactor: function(t) {
return this.brake <= 0 ? 1 - this.brake : (1 - this.brake) * (1 / (1 + 14e-6 * t + t * t * 8e-9));
},
_startAttenuatingAutoScroll: function(t, e) {
var i = this._calculateAutoScrollTimeByInitalSpeed(e.mag()), n = t.normalize(), r = this.content.getContentSize(), s = this._view.getContentSize(), o = r.width - s.width, a = r.height - s.height, c = this._calculateAttenuatedFactor(o), l = this._calculateAttenuatedFactor(a);
n = cc.v2(n.x * o * (1 - this.brake) * c, n.y * a * l * (1 - this.brake));
var u = t.mag(), h = n.mag() / u;
n = n.add(t);
if (this.brake > 0 && h > 7) {
h = Math.sqrt(h);
n = t.mul(h).add(t);
}
this.brake > 0 && h > 3 && (i *= h = 3);
0 === this.brake && h > 1 && (i *= h);
this._startAutoScroll(n, i, !0);
},
_calculateAutoScrollTimeByInitalSpeed: function(t) {
return Math.sqrt(Math.sqrt(t / 5));
},
_startAutoScroll: function(t, e, i) {
var n = this._flattenVectorByDirection(t);
this._autoScrolling = !0;
this._autoScrollTargetDelta = n;
this._autoScrollAttenuate = i;
this._autoScrollStartPosition = this.getContentPosition();
this._autoScrollTotalTime = e;
this._autoScrollAccumulatedTime = 0;
this._autoScrollBraking = !1;
this._isScrollEndedWithThresholdEventFired = !1;
this._autoScrollBrakingStartPosition = cc.v2(0, 0);
this._getHowMuchOutOfBoundary().fuzzyEquals(cc.v2(0, 0), 1e-4) || (this._autoScrollCurrentlyOutOfBoundary = !0);
},
_calculateTouchMoveVelocity: function() {
var t = 0;
if ((t = this._touchMoveTimeDeltas.reduce((function(t, e) {
return t + e;
}), t)) <= 0 || t >= .5) return cc.v2(0, 0);
var e = cc.v2(0, 0);
e = this._touchMoveDisplacements.reduce((function(t, e) {
return t.add(e);
}), e);
return cc.v2(e.x * (1 - this.brake) / t, e.y * (1 - this.brake) / t);
},
_flattenVectorByDirection: function(t) {
var e = t;
e.x = this.horizontal ? e.x : 0;
e.y = this.vertical ? e.y : 0;
return e;
},
_moveContent: function(t, e) {
var i = this._flattenVectorByDirection(t), n = this.getContentPosition().add(i);
this.setContentPosition(n);
var r = this._getHowMuchOutOfBoundary();
this._updateScrollBar(r);
this.elastic && e && this._startBounceBackIfNeeded();
},
_getContentLeftBoundary: function() {
return this.getContentPosition().x - this.content.getAnchorPoint().x * this.content.getContentSize().width;
},
_getContentRightBoundary: function() {
var t = this.content.getContentSize();
return this._getContentLeftBoundary() + t.width;
},
_getContentTopBoundary: function() {
var t = this.content.getContentSize();
return this._getContentBottomBoundary() + t.height;
},
_getContentBottomBoundary: function() {
return this.getContentPosition().y - this.content.getAnchorPoint().y * this.content.getContentSize().height;
},
_getHowMuchOutOfBoundary: function(t) {
if ((t = t || cc.v2(0, 0)).fuzzyEquals(cc.v2(0, 0), 1e-4) && !this._outOfBoundaryAmountDirty) return this._outOfBoundaryAmount;
var e = cc.v2(0, 0);
this._getContentLeftBoundary() + t.x > this._leftBoundary ? e.x = this._leftBoundary - (this._getContentLeftBoundary() + t.x) : this._getContentRightBoundary() + t.x < this._rightBoundary && (e.x = this._rightBoundary - (this._getContentRightBoundary() + t.x));
this._getContentTopBoundary() + t.y < this._topBoundary ? e.y = this._topBoundary - (this._getContentTopBoundary() + t.y) : this._getContentBottomBoundary() + t.y > this._bottomBoundary && (e.y = this._bottomBoundary - (this._getContentBottomBoundary() + t.y));
if (t.fuzzyEquals(cc.v2(0, 0), 1e-4)) {
this._outOfBoundaryAmount = e;
this._outOfBoundaryAmountDirty = !1;
}
return e = this._clampDelta(e);
},
_updateScrollBarState: function() {
if (this.content) {
var t = this.content.getContentSize(), e = this._view.getContentSize();
this.verticalScrollBar && (t.height < e.height ? this.verticalScrollBar.hide() : this.verticalScrollBar.show());
this.horizontalScrollBar && (t.width < e.width ? this.horizontalScrollBar.hide() : this.horizontalScrollBar.show());
}
},
_updateScrollBar: function(t) {
this.horizontalScrollBar && this.horizontalScrollBar._onScroll(t);
this.verticalScrollBar && this.verticalScrollBar._onScroll(t);
},
_onScrollBarTouchBegan: function() {
this.horizontalScrollBar && this.horizontalScrollBar._onTouchBegan();
this.verticalScrollBar && this.verticalScrollBar._onTouchBegan();
},
_onScrollBarTouchEnded: function() {
this.horizontalScrollBar && this.horizontalScrollBar._onTouchEnded();
this.verticalScrollBar && this.verticalScrollBar._onTouchEnded();
},
_dispatchEvent: function(t) {
if ("scroll-ended" === t) this._scrollEventEmitMask = 0; else if ("scroll-to-top" === t || "scroll-to-bottom" === t || "scroll-to-left" === t || "scroll-to-right" === t) {
var e = 1 << l[t];
if (this._scrollEventEmitMask & e) return;
this._scrollEventEmitMask |= e;
}
cc.Component.EventHandler.emitEvents(this.scrollEvents, this, l[t]);
this.node.emit(t, this);
},
_adjustContentOutOfBoundary: function() {
this._outOfBoundaryAmountDirty = !0;
if (this._isOutOfBoundary()) {
var t = this._getHowMuchOutOfBoundary(cc.v2(0, 0)), e = this.getContentPosition().add(t);
if (this.content) {
this.content.setPosition(e);
this._updateScrollBar(0);
}
}
},
start: function() {
this._calculateBoundary();
this.content && cc.director.once(cc.Director.EVENT_BEFORE_DRAW, this._adjustContentOutOfBoundary, this);
},
_hideScrollbar: function() {
this.horizontalScrollBar && this.horizontalScrollBar.hide();
this.verticalScrollBar && this.verticalScrollBar.hide();
},
onDisable: function() {
this._unregisterEvent();
if (this.content) {
this.content.off(n.SIZE_CHANGED, this._calculateBoundary, this);
this.content.off(n.SCALE_CHANGED, this._calculateBoundary, this);
if (this._view) {
this._view.off(n.POSITION_CHANGED, this._calculateBoundary, this);
this._view.off(n.SCALE_CHANGED, this._calculateBoundary, this);
this._view.off(n.SIZE_CHANGED, this._calculateBoundary, this);
}
}
this._hideScrollbar();
this.stopAutoScroll();
},
onEnable: function() {
this._registerEvent();
if (this.content) {
this.content.on(n.SIZE_CHANGED, this._calculateBoundary, this);
this.content.on(n.SCALE_CHANGED, this._calculateBoundary, this);
if (this._view) {
this._view.on(n.POSITION_CHANGED, this._calculateBoundary, this);
this._view.on(n.SCALE_CHANGED, this._calculateBoundary, this);
this._view.on(n.SIZE_CHANGED, this._calculateBoundary, this);
}
}
this._updateScrollBarState();
},
update: function(t) {
this._autoScrolling && this._processAutoScrolling(t);
}
});
cc.ScrollView = e.exports = u;
}), {
"../CCNode": 72,
"./CCViewGroup": 141
} ],
135: [ (function(t, e, i) {
"use strict";
var n = t("../utils/misc"), r = t("./CCComponent"), s = cc.Enum({
Horizontal: 0,
Vertical: 1
}), o = cc.Class({
name: "cc.Slider",
extends: r,
editor: !1,
ctor: function() {
this._offset = cc.v2();
this._touchHandle = !1;
this._dragging = !1;
},
properties: {
handle: {
default: null,
type: cc.Button,
tooltip: !1,
notify: function() {
0;
}
},
direction: {
default: s.Horizontal,
type: s,
tooltip: !1
},
progress: {
default: .5,
type: cc.Float,
range: [ 0, 1, .1 ],
slide: !0,
tooltip: !1,
notify: function() {
this._updateHandlePosition();
}
},
slideEvents: {
default: [],
type: cc.Component.EventHandler,
tooltip: !1
}
},
statics: {
Direction: s
},
__preload: function() {
this._updateHandlePosition();
},
onEnable: function() {
this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchBegan, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this);
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancelled, this);
if (this.handle && this.handle.isValid) {
this.handle.node.on(cc.Node.EventType.TOUCH_START, this._onHandleDragStart, this);
this.handle.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this);
this.handle.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
}
},
onDisable: function() {
this.node.off(cc.Node.EventType.TOUCH_START, this._onTouchBegan, this);
this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this);
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancelled, this);
if (this.handle && this.handle.isValid) {
this.handle.node.off(cc.Node.EventType.TOUCH_START, this._onHandleDragStart, this);
this.handle.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this);
this.handle.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
}
},
_onHandleDragStart: function(t) {
this._dragging = !0;
this._touchHandle = !0;
this._offset = this.handle.node.convertToNodeSpaceAR(t.touch.getLocation());
t.stopPropagation();
},
_onTouchBegan: function(t) {
if (this.handle) {
this._dragging = !0;
this._touchHandle || this._handleSliderLogic(t.touch);
t.stopPropagation();
}
},
_onTouchMoved: function(t) {
if (this._dragging) {
this._handleSliderLogic(t.touch);
t.stopPropagation();
}
},
_onTouchEnded: function(t) {
this._dragging = !1;
this._touchHandle = !1;
this._offset = cc.v2();
t.stopPropagation();
},
_onTouchCancelled: function(t) {
this._dragging = !1;
t.stopPropagation();
},
_handleSliderLogic: function(t) {
this._updateProgress(t);
this._emitSlideEvent();
},
_emitSlideEvent: function() {
cc.Component.EventHandler.emitEvents(this.slideEvents, this);
this.node.emit("slide", this);
},
_updateProgress: function(t) {
if (this.handle) {
var e = this.node, i = e.convertToNodeSpaceAR(t.getLocation());
this.direction === s.Horizontal ? this.progress = n.clamp01((i.x - this._offset.x + e.anchorX * e.width) / e.width) : this.progress = n.clamp01((i.y - this._offset.y + e.anchorY * e.height) / e.height);
}
},
_updateHandlePosition: function() {
if (this.handle) {
var t;
t = this.direction === s.Horizontal ? cc.v2(-this.node.width * this.node.anchorX + this.progress * this.node.width, 0) : cc.v2(0, -this.node.height * this.node.anchorY + this.progress * this.node.height);
var e = this.node.convertToWorldSpaceAR(t);
this.handle.node.position = this.handle.node.parent.convertToNodeSpaceAR(e);
}
}
});
cc.Slider = e.exports = o;
}), {
"../utils/misc": 313,
"./CCComponent": 120
} ],
136: [ (function(t, e, i) {
"use strict";
var n = t("../utils/misc"), r = (t("../CCNode").EventType, t("./CCRenderComponent")), s = t("../utils/blend-func"), o = cc.Enum({
SIMPLE: 0,
SLICED: 1,
TILED: 2,
FILLED: 3,
MESH: 4
}), a = cc.Enum({
HORIZONTAL: 0,
VERTICAL: 1,
RADIAL: 2
}), c = cc.Enum({
CUSTOM: 0,
TRIMMED: 1,
RAW: 2
}), l = cc.Enum({
NORMAL: 0,
GRAY: 1
}), u = cc.Class({
name: "cc.Sprite",
extends: r,
mixins: [ s ],
editor: !1,
properties: {
_spriteFrame: {
default: null,
type: cc.SpriteFrame
},
_type: o.SIMPLE,
_sizeMode: c.TRIMMED,
_fillType: 0,
_fillCenter: cc.v2(0, 0),
_fillStart: 0,
_fillRange: 0,
_isTrimmedMode: !0,
_atlas: {
default: null,
type: cc.SpriteAtlas,
tooltip: !1,
editorOnly: !0,
visible: !0,
animatable: !1
},
spriteFrame: {
get: function() {
return this._spriteFrame;
},
set: function(t, e) {
var i = this._spriteFrame;
if (i !== t) {
this._spriteFrame = t;
this._applySpriteFrame(i);
0;
}
},
type: cc.SpriteFrame
},
type: {
get: function() {
return this._type;
},
set: function(t) {
if (this._type !== t) {
this._type = t;
this.setVertsDirty();
this._resetAssembler();
}
},
type: o,
animatable: !1,
tooltip: !1
},
fillType: {
get: function() {
return this._fillType;
},
set: function(t) {
if (t !== this._fillType) {
this._fillType = t;
this.setVertsDirty();
this._resetAssembler();
}
},
type: a,
tooltip: !1
},
fillCenter: {
get: function() {
return this._fillCenter;
},
set: function(t) {
this._fillCenter.x = t.x;
this._fillCenter.y = t.y;
this._type === o.FILLED && this.setVertsDirty();
},
tooltip: !1
},
fillStart: {
get: function() {
return this._fillStart;
},
set: function(t) {
this._fillStart = n.clampf(t, -1, 1);
this._type === o.FILLED && this.setVertsDirty();
},
tooltip: !1
},
fillRange: {
get: function() {
return this._fillRange;
},
set: function(t) {
this._fillRange = n.clampf(t, -1, 1);
this._type === o.FILLED && this.setVertsDirty();
},
tooltip: !1
},
trim: {
get: function() {
return this._isTrimmedMode;
},
set: function(t) {
if (this._isTrimmedMode !== t) {
this._isTrimmedMode = t;
this._type !== o.SIMPLE && this._type !== o.MESH || this.setVertsDirty();
}
},
animatable: !1,
tooltip: !1
},
sizeMode: {
get: function() {
return this._sizeMode;
},
set: function(t) {
this._sizeMode = t;
t !== c.CUSTOM && this._applySpriteSize();
},
animatable: !1,
type: c,
tooltip: !1
}
},
statics: {
FillType: a,
Type: o,
SizeMode: c,
State: l
},
setVisible: function(t) {
this.enabled = t;
},
setState: function() {},
getState: function() {},
onEnable: function() {
this._super();
this._applySpriteFrame();
this.node.on(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirty, this);
this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);
},
onDisable: function() {
this._super();
this.node.off(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirty, this);
this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this.setVertsDirty, this);
},
_updateMaterial: function() {
var t = this._spriteFrame && this._spriteFrame.getTexture(), e = this.getMaterial(0);
e && e.setProperty("texture", t);
s.prototype._updateMaterial.call(this);
},
_applyAtlas: !1,
_validateRender: function() {
var t = this._spriteFrame;
this._materials[0] && t && t.textureLoaded() || this.disableRender();
},
_applySpriteSize: function() {
if (this._spriteFrame && this.isValid) {
if (c.RAW === this._sizeMode) {
var t = this._spriteFrame._originalSize;
this.node.setContentSize(t);
} else if (c.TRIMMED === this._sizeMode) {
var e = this._spriteFrame._rect;
this.node.setContentSize(e.width, e.height);
}
this.setVertsDirty();
}
},
_applySpriteFrame: function(t) {
var e = t && t.getTexture();
e && !e.loaded && t.off("load", this._applySpriteSize, this);
var i = this._spriteFrame;
if (i) {
this._updateMaterial();
var n = i.getTexture();
if (e === n && n && n.loaded) this._applySpriteSize(); else {
this.disableRender();
i.onTextureLoaded(this._applySpriteSize, this);
}
} else this.disableRender();
0;
}
});
0;
cc.Sprite = e.exports = u;
}), {
"../CCNode": 72,
"../utils/blend-func": 306,
"../utils/misc": 313,
"./CCRenderComponent": 131
} ],
137: [ (function(t, e, i) {
"use strict";
var n = cc.Enum({
NONE: 0,
CHECKBOX: 1,
TEXT_ATLAS: 2,
SLIDER_BAR: 3,
LIST_VIEW: 4,
PAGE_VIEW: 5
}), r = cc.Enum({
VERTICAL: 0,
HORIZONTAL: 1
}), s = cc.Enum({
TOP: 0,
CENTER: 1,
BOTTOM: 2
}), o = cc.Enum({
LEFT: 0,
CENTER: 1,
RIGHT: 2
}), a = cc.Class({
name: "cc.StudioComponent",
extends: cc.Component,
editor: !1,
properties: !1,
statics: {
ComponentType: n,
ListDirection: r,
VerticalAlign: s,
HorizontalAlign: o
}
}), c = t("../utils/prefab-helper");
a.PlaceHolder = cc.Class({
name: "cc.StudioComponent.PlaceHolder",
extends: cc.Component,
properties: {
_baseUrl: "",
nestedPrefab: cc.Prefab
},
onLoad: function() {
this.nestedPrefab && this._replaceWithNestedPrefab();
},
_replaceWithNestedPrefab: function() {
var t = this.node, e = t._prefab;
e.root = t;
e.asset = this.nestedPrefab;
c.syncWithPrefab(t);
}
});
cc.StudioComponent = e.exports = a;
var l = cc.Class({
name: "cc.StudioWidget",
extends: cc.Widget,
editor: !1,
_validateTargetInDEV: function() {}
});
cc.StudioWidget = e.exports = l;
}), {
"../utils/prefab-helper": 316
} ],
138: [ (function(t, e, i) {
"use strict";
var n = t("../utils/gray-sprite-state"), r = cc.Class({
name: "cc.Toggle",
extends: t("./CCButton"),
mixins: [ n ],
editor: !1,
properties: {
_N$isChecked: !0,
isChecked: {
get: function() {
return this._N$isChecked;
},
set: function(t) {
if (t !== this._N$isChecked) {
var e = this.toggleGroup || this._toggleContainer;
if (!(e && e.enabled && this._N$isChecked) || e.allowSwitchOff) {
this._N$isChecked = t;
this._updateCheckMark();
e && e.enabled && e.updateToggles(this);
cc.Toggle._triggerEventInScript_isChecked && this._emitToggleEvents();
}
}
},
tooltip: !1
},
toggleGroup: {
default: null,
tooltip: !1,
type: t("./CCToggleGroup")
},
checkMark: {
default: null,
type: cc.Sprite,
tooltip: !1
},
checkEvents: {
default: [],
type: cc.Component.EventHandler
},
_resizeToTarget: {
animatable: !1,
set: function(t) {
t && this._resizeNodeToTargetNode();
}
}
},
statics: {
_triggerEventInScript_check: !1,
_triggerEventInScript_isChecked: !1
},
onEnable: function() {
this._super();
this._registerToggleEvent();
this.toggleGroup && this.toggleGroup.enabledInHierarchy && this.toggleGroup.addToggle(this);
},
onDisable: function() {
this._super();
this._unregisterToggleEvent();
this.toggleGroup && this.toggleGroup.enabledInHierarchy && this.toggleGroup.removeToggle(this);
},
_hideCheckMark: function() {
this._N$isChecked = !1;
this._updateCheckMark();
},
toggle: function(t) {
this.isChecked = !this.isChecked;
cc.Toggle._triggerEventInScript_isChecked || !cc.Toggle._triggerEventInScript_check && !t || this._emitToggleEvents();
},
check: function() {
this.isChecked = !0;
!cc.Toggle._triggerEventInScript_isChecked && cc.Toggle._triggerEventInScript_check && this._emitToggleEvents();
},
uncheck: function() {
this.isChecked = !1;
!cc.Toggle._triggerEventInScript_isChecked && cc.Toggle._triggerEventInScript_check && this._emitToggleEvents();
},
_updateCheckMark: function() {
this.checkMark && (this.checkMark.node.active = !!this.isChecked);
},
_updateDisabledState: function() {
this._super();
if (this.enableAutoGrayEffect && this.checkMark) {
var t = !this.interactable;
this._switchGrayMaterial(t, this.checkMark);
}
},
_registerToggleEvent: function() {
this.node.on("click", this.toggle, this);
},
_unregisterToggleEvent: function() {
this.node.off("click", this.toggle, this);
},
_emitToggleEvents: function() {
this.node.emit("toggle", this);
this.checkEvents && cc.Component.EventHandler.emitEvents(this.checkEvents, this);
}
});
cc.Toggle = e.exports = r;
t("../platform/js").get(r.prototype, "_toggleContainer", (function() {
var t = this.node.parent;
return cc.Node.isNode(t) ? t.getComponent(cc.ToggleContainer) : null;
}));
}), {
"../platform/js": 250,
"../utils/gray-sprite-state": 309,
"./CCButton": 118,
"./CCToggleGroup": 140
} ],
139: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.ToggleContainer",
extends: cc.Component,
editor: !1,
properties: {
allowSwitchOff: {
tooltip: !1,
default: !1
},
checkEvents: {
default: [],
type: cc.Component.EventHandler
}
},
updateToggles: function(t) {
if (this.enabledInHierarchy && t.isChecked) {
this.toggleItems.forEach((function(e) {
e !== t && e.isChecked && e.enabled && e._hideCheckMark();
}));
this.checkEvents && cc.Component.EventHandler.emitEvents(this.checkEvents, t);
}
},
_allowOnlyOneToggleChecked: function() {
var t = !1;
this.toggleItems.forEach((function(e) {
t ? e._hideCheckMark() : e.isChecked && (t = !0);
}));
return t;
},
_makeAtLeastOneToggleChecked: function() {
if (!this._allowOnlyOneToggleChecked() && !this.allowSwitchOff) {
var t = this.toggleItems;
t.length > 0 && t[0].check();
}
},
onEnable: function() {
this.node.on("child-added", this._allowOnlyOneToggleChecked, this);
this.node.on("child-removed", this._makeAtLeastOneToggleChecked, this);
},
onDisable: function() {
this.node.off("child-added", this._allowOnlyOneToggleChecked, this);
this.node.off("child-removed", this._makeAtLeastOneToggleChecked, this);
},
start: function() {
this._makeAtLeastOneToggleChecked();
}
});
t("../platform/js").get(n.prototype, "toggleItems", (function() {
return this.node.getComponentsInChildren(cc.Toggle);
}));
cc.ToggleContainer = e.exports = n;
}), {
"../platform/js": 250
} ],
140: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.ToggleGroup",
extends: cc.Component,
ctor: function() {
this._toggleItems = [];
},
editor: !1,
properties: {
allowSwitchOff: {
tooltip: !1,
default: !1
},
toggleItems: {
get: function() {
return this._toggleItems;
}
}
},
updateToggles: function(t) {
this.enabledInHierarchy && this._toggleItems.forEach((function(e) {
t.isChecked && e !== t && e.isChecked && e.enabled && e._hideCheckMark();
}));
},
addToggle: function(t) {
-1 === this._toggleItems.indexOf(t) && this._toggleItems.push(t);
this._allowOnlyOneToggleChecked();
},
removeToggle: function(t) {
var e = this._toggleItems.indexOf(t);
e > -1 && this._toggleItems.splice(e, 1);
this._makeAtLeastOneToggleChecked();
},
_allowOnlyOneToggleChecked: function() {
var t = !1;
this._toggleItems.forEach((function(e) {
t && e.enabled && e._hideCheckMark();
e.isChecked && e.enabled && (t = !0);
}));
return t;
},
_makeAtLeastOneToggleChecked: function() {
this._allowOnlyOneToggleChecked() || this.allowSwitchOff || this._toggleItems.length > 0 && (this._toggleItems[0].isChecked = !0);
},
start: function() {
this._makeAtLeastOneToggleChecked();
}
}), r = !1;
t("../platform/js").get(cc, "ToggleGroup", (function() {
if (!r) {
cc.errorID(1405, "cc.ToggleGroup", "cc.ToggleContainer");
r = !0;
}
return n;
}));
e.exports = n;
}), {
"../platform/js": 250
} ],
141: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.ViewGroup",
extends: t("./CCComponent")
});
cc.ViewGroup = e.exports = n;
}), {
"./CCComponent": 120
} ],
142: [ (function(t, e, i) {
"use strict";
var n = t("../base-ui/CCWidgetManager"), r = n.AlignMode, s = n._AlignFlags, o = s.TOP, a = s.MID, c = s.BOT, l = s.LEFT, u = s.CENTER, h = s.RIGHT, f = o | c, _ = l | h, d = cc.Class({
name: "cc.Widget",
extends: t("./CCComponent"),
editor: !1,
properties: {
target: {
get: function() {
return this._target;
},
set: function(t) {
this._target = t;
0;
},
type: cc.Node,
tooltip: !1
},
isAlignTop: {
get: function() {
return (this._alignFlags & o) > 0;
},
set: function(t) {
this._setAlign(o, t);
},
animatable: !1,
tooltip: !1
},
isAlignVerticalCenter: {
get: function() {
return (this._alignFlags & a) > 0;
},
set: function(t) {
if (t) {
this.isAlignTop = !1;
this.isAlignBottom = !1;
this._alignFlags |= a;
} else this._alignFlags &= ~a;
},
animatable: !1,
tooltip: !1
},
isAlignBottom: {
get: function() {
return (this._alignFlags & c) > 0;
},
set: function(t) {
this._setAlign(c, t);
},
animatable: !1,
tooltip: !1
},
isAlignLeft: {
get: function() {
return (this._alignFlags & l) > 0;
},
set: function(t) {
this._setAlign(l, t);
},
animatable: !1,
tooltip: !1
},
isAlignHorizontalCenter: {
get: function() {
return (this._alignFlags & u) > 0;
},
set: function(t) {
if (t) {
this.isAlignLeft = !1;
this.isAlignRight = !1;
this._alignFlags |= u;
} else this._alignFlags &= ~u;
},
animatable: !1,
tooltip: !1
},
isAlignRight: {
get: function() {
return (this._alignFlags & h) > 0;
},
set: function(t) {
this._setAlign(h, t);
},
animatable: !1,
tooltip: !1
},
isStretchWidth: {
get: function() {
return (this._alignFlags & _) === _;
},
visible: !1
},
isStretchHeight: {
get: function() {
return (this._alignFlags & f) === f;
},
visible: !1
},
top: {
get: function() {
return this._top;
},
set: function(t) {
this._top = t;
},
tooltip: !1
},
bottom: {
get: function() {
return this._bottom;
},
set: function(t) {
this._bottom = t;
},
tooltip: !1
},
left: {
get: function() {
return this._left;
},
set: function(t) {
this._left = t;
},
tooltip: !1
},
right: {
get: function() {
return this._right;
},
set: function(t) {
this._right = t;
},
tooltip: !1
},
horizontalCenter: {
get: function() {
return this._horizontalCenter;
},
set: function(t) {
this._horizontalCenter = t;
},
tooltip: !1
},
verticalCenter: {
get: function() {
return this._verticalCenter;
},
set: function(t) {
this._verticalCenter = t;
},
tooltip: !1
},
isAbsoluteHorizontalCenter: {
get: function() {
return this._isAbsHorizontalCenter;
},
set: function(t) {
this._isAbsHorizontalCenter = t;
},
animatable: !1
},
isAbsoluteVerticalCenter: {
get: function() {
return this._isAbsVerticalCenter;
},
set: function(t) {
this._isAbsVerticalCenter = t;
},
animatable: !1
},
isAbsoluteTop: {
get: function() {
return this._isAbsTop;
},
set: function(t) {
this._isAbsTop = t;
},
animatable: !1
},
isAbsoluteBottom: {
get: function() {
return this._isAbsBottom;
},
set: function(t) {
this._isAbsBottom = t;
},
animatable: !1
},
isAbsoluteLeft: {
get: function() {
return this._isAbsLeft;
},
set: function(t) {
this._isAbsLeft = t;
},
animatable: !1
},
isAbsoluteRight: {
get: function() {
return this._isAbsRight;
},
set: function(t) {
this._isAbsRight = t;
},
animatable: !1
},
alignMode: {
default: r.ON_WINDOW_RESIZE,
type: r,
tooltip: !1
},
_wasAlignOnce: {
default: void 0,
formerlySerializedAs: "isAlignOnce"
},
_target: null,
_alignFlags: 0,
_left: 0,
_right: 0,
_top: 0,
_bottom: 0,
_verticalCenter: 0,
_horizontalCenter: 0,
_isAbsLeft: !0,
_isAbsRight: !0,
_isAbsTop: !0,
_isAbsBottom: !0,
_isAbsHorizontalCenter: !0,
_isAbsVerticalCenter: !0,
_originalWidth: 0,
_originalHeight: 0
},
statics: {
AlignMode: r
},
onLoad: function() {
if (void 0 !== this._wasAlignOnce) {
this.alignMode = this._wasAlignOnce ? r.ONCE : r.ALWAYS;
this._wasAlignOnce = void 0;
}
},
onEnable: function() {
n.add(this);
},
onDisable: function() {
n.remove(this);
},
_validateTargetInDEV: !1,
_setAlign: function(t, e) {
if (e !== (this._alignFlags & t) > 0) {
var i = (t & _) > 0;
if (e) {
this._alignFlags |= t;
if (i) {
this.isAlignHorizontalCenter = !1;
if (this.isStretchWidth) {
this._originalWidth = this.node.width;
0;
}
} else {
this.isAlignVerticalCenter = !1;
if (this.isStretchHeight) {
this._originalHeight = this.node.height;
0;
}
}
0;
} else {
i ? this.isStretchWidth && (this.node.width = this._originalWidth) : this.isStretchHeight && (this.node.height = this._originalHeight);
this._alignFlags &= ~t;
}
}
},
updateAlignment: function() {
n.updateAlignment(this.node);
}
});
Object.defineProperty(d.prototype, "isAlignOnce", {
get: function() {
0;
return this.alignMode === r.ONCE;
},
set: function(t) {
0;
this.alignMode = t ? r.ONCE : r.ALWAYS;
}
});
cc.Widget = e.exports = d;
}), {
"../base-ui/CCWidgetManager": 104,
"./CCComponent": 120
} ],
143: [ (function(t, e, i) {
"use strict";
var n = t("../../platform/CCMacro"), r = t("../editbox/EditBoxImplBase"), s = t("../CCLabel"), o = t("./types"), a = o.InputMode, c = o.InputFlag, l = o.KeyboardReturnType;
function u(t) {
return t.replace(/(?:^|\s)\S/g, (function(t) {
return t.toUpperCase();
}));
}
function h(t) {
return t.charAt(0).toUpperCase() + t.slice(1);
}
var f = cc.Class({
name: "cc.EditBox",
extends: cc.Component,
editor: !1,
properties: {
_useOriginalSize: !0,
_string: "",
string: {
tooltip: !1,
get: function() {
return this._string;
},
set: function(t) {
t = "" + t;
this.maxLength >= 0 && t.length >= this.maxLength && (t = t.slice(0, this.maxLength));
this._string = t;
this._updateString(t);
}
},
textLabel: {
tooltip: !1,
default: null,
type: s,
notify: function(t) {
if (this.textLabel && this.textLabel !== t) {
this._updateTextLabel();
this._updateLabels();
}
}
},
placeholderLabel: {
tooltip: !1,
default: null,
type: s,
notify: function(t) {
if (this.placeholderLabel && this.placeholderLabel !== t) {
this._updatePlaceholderLabel();
this._updateLabels();
}
}
},
background: {
tooltip: !1,
default: null,
type: cc.Sprite,
notify: function(t) {
this.background && this.background !== t && this._updateBackgroundSprite();
}
},
_N$backgroundImage: {
default: void 0,
type: cc.SpriteFrame
},
backgroundImage: {
get: function() {
return this.background ? this.background.spriteFrame : null;
},
set: function(t) {
this.background && (this.background.spriteFrame = t);
}
},
returnType: {
default: l.DEFAULT,
tooltip: !1,
displayName: "KeyboardReturnType",
type: l
},
_N$returnType: {
default: void 0,
type: cc.Float
},
inputFlag: {
tooltip: !1,
default: c.DEFAULT,
type: c,
notify: function() {
this._updateString(this._string);
}
},
inputMode: {
tooltip: !1,
default: a.ANY,
type: a,
notify: function(t) {
if (this.inputMode !== t) {
this._updateTextLabel();
this._updatePlaceholderLabel();
}
}
},
fontSize: {
get: function() {
return this.textLabel ? this.textLabel.fontSize : 0;
},
set: function(t) {
this.textLabel && (this.textLabel.fontSize = t);
}
},
_N$fontSize: {
default: void 0,
type: cc.Float
},
lineHeight: {
get: function() {
return this.textLabel ? this.textLabel.lineHeight : 0;
},
set: function(t) {
this.textLabel && (this.textLabel.lineHeight = t);
}
},
_N$lineHeight: {
default: void 0,
type: cc.Float
},
fontColor: {
get: function() {
return this.textLabel ? this.textLabel.node.color : cc.Color.BLACK;
},
set: function(t) {
if (this.textLabel) {
this.textLabel.node.color = t;
this.textLabel.node.opacity = t.a;
}
}
},
_N$fontColor: void 0,
placeholder: {
tooltip: !1,
get: function() {
return this.placeholderLabel ? this.placeholderLabel.string : "";
},
set: function(t) {
this.placeholderLabel && (this.placeholderLabel.string = t);
}
},
_N$placeholder: {
default: void 0,
type: cc.String
},
placeholderFontSize: {
get: function() {
return this.placeholderLabel ? this.placeholderLabel.fontSize : 0;
},
set: function(t) {
this.placeholderLabel && (this.placeholderLabel.fontSize = t);
}
},
_N$placeholderFontSize: {
default: void 0,
type: cc.Float
},
placeholderFontColor: {
get: function() {
return this.placeholderLabel ? this.placeholderLabel.node.color : cc.Color.BLACK;
},
set: function(t) {
if (this.placeholderLabel) {
this.placeholderLabel.node.color = t;
this.placeholderLabel.node.opacity = t.a;
}
}
},
_N$placeholderFontColor: void 0,
maxLength: {
tooltip: !1,
default: 20
},
_N$maxLength: {
default: void 0,
type: cc.Float
},
stayOnTop: {
default: !1,
notify: function() {
cc.warn("editBox.stayOnTop is removed since v2.1.");
}
},
_tabIndex: 0,
tabIndex: {
tooltip: !1,
get: function() {
return this._tabIndex;
},
set: function(t) {
if (this._tabIndex !== t) {
this._tabIndex = t;
this._impl && this._impl.setTabIndex(t);
}
}
},
editingDidBegan: {
default: [],
type: cc.Component.EventHandler
},
textChanged: {
default: [],
type: cc.Component.EventHandler
},
editingDidEnded: {
default: [],
type: cc.Component.EventHandler
},
editingReturn: {
default: [],
type: cc.Component.EventHandler
}
},
statics: {
_ImplClass: r,
KeyboardReturnType: l,
InputFlag: c,
InputMode: a
},
_init: function() {
this._upgradeComp();
this._isLabelVisible = !0;
this.node.on(cc.Node.EventType.SIZE_CHANGED, this._syncSize, this);
(this._impl = new f._ImplClass()).init(this);
this._updateString(this._string);
this._syncSize();
},
_updateBackgroundSprite: function() {
var t = this.background;
if (!t) {
var e = this.node.getChildByName("BACKGROUND_SPRITE");
e || (e = new cc.Node("BACKGROUND_SPRITE"));
(t = e.getComponent(cc.Sprite)) || (t = e.addComponent(cc.Sprite));
e.parent = this.node;
this.background = t;
}
t.type = cc.Sprite.Type.SLICED;
if (void 0 !== this._N$backgroundImage) {
t.spriteFrame = this._N$backgroundImage;
this._N$backgroundImage = void 0;
}
},
_updateTextLabel: function() {
var t = this.textLabel;
if (!t) {
var e = this.node.getChildByName("TEXT_LABEL");
e || (e = new cc.Node("TEXT_LABEL"));
(t = e.getComponent(s)) || (t = e.addComponent(s));
e.parent = this.node;
this.textLabel = t;
}
t.node.setAnchorPoint(0, 1);
t.overflow = s.Overflow.CLAMP;
if (this.inputMode === a.ANY) {
t.verticalAlign = n.VerticalTextAlignment.TOP;
t.enableWrapText = !0;
} else {
t.verticalAlign = n.VerticalTextAlignment.CENTER;
t.enableWrapText = !1;
}
t.string = this._updateLabelStringStyle(this._string);
if (void 0 !== this._N$fontColor) {
t.node.color = this._N$fontColor;
t.node.opacity = this._N$fontColor.a;
this._N$fontColor = void 0;
}
if (void 0 !== this._N$fontSize) {
t.fontSize = this._N$fontSize;
this._N$fontSize = void 0;
}
if (void 0 !== this._N$lineHeight) {
t.lineHeight = this._N$lineHeight;
this._N$lineHeight = void 0;
}
},
_updatePlaceholderLabel: function() {
var t = this.placeholderLabel;
if (!t) {
var e = this.node.getChildByName("PLACEHOLDER_LABEL");
e || (e = new cc.Node("PLACEHOLDER_LABEL"));
(t = e.getComponent(s)) || (t = e.addComponent(s));
e.parent = this.node;
this.placeholderLabel = t;
}
t.node.setAnchorPoint(0, 1);
t.overflow = s.Overflow.CLAMP;
if (this.inputMode === a.ANY) {
t.verticalAlign = n.VerticalTextAlignment.TOP;
t.enableWrapText = !0;
} else {
t.verticalAlign = n.VerticalTextAlignment.CENTER;
t.enableWrapText = !1;
}
t.string = this.placeholder;
if (void 0 !== this._N$placeholderFontColor) {
t.node.color = this._N$placeholderFontColor;
t.node.opacity = this._N$placeholderFontColor.a;
this._N$placeholderFontColor = void 0;
}
if (void 0 !== this._N$placeholderFontSize) {
t.fontSize = this._N$placeholderFontSize;
this._N$placeholderFontSize = void 0;
}
},
_upgradeComp: function() {
if (void 0 !== this._N$returnType) {
this.returnType = this._N$returnType;
this._N$returnType = void 0;
}
if (void 0 !== this._N$maxLength) {
this.maxLength = this._N$maxLength;
this._N$maxLength = void 0;
}
void 0 !== this._N$backgroundImage && this._updateBackgroundSprite();
void 0 === this._N$fontColor && void 0 === this._N$fontSize && void 0 === this._N$lineHeight || this._updateTextLabel();
void 0 === this._N$placeholderFontColor && void 0 === this._N$placeholderFontSize || this._updatePlaceholderLabel();
if (void 0 !== this._N$placeholder) {
this.placeholder = this._N$placeholder;
this._N$placeholder = void 0;
}
},
_syncSize: function() {
if (this._impl) {
var t = this.node.getContentSize();
this._impl.setSize(t.width, t.height);
}
},
_showLabels: function() {
this._isLabelVisible = !0;
this._updateLabels();
},
_hideLabels: function() {
this._isLabelVisible = !1;
this.textLabel && (this.textLabel.node.active = !1);
this.placeholderLabel && (this.placeholderLabel.node.active = !1);
},
_updateLabels: function() {
if (this._isLabelVisible) {
var t = this._string;
this.textLabel && (this.textLabel.node.active = "" !== t);
this.placeholderLabel && (this.placeholderLabel.node.active = "" === t);
}
},
_updateString: function(t) {
var e = this.textLabel;
if (e) {
var i = t;
i && (i = this._updateLabelStringStyle(i));
e.string = i;
this._updateLabels();
}
},
_updateLabelStringStyle: function(t, e) {
var i = this.inputFlag;
if (e || i !== c.PASSWORD) i === c.INITIAL_CAPS_ALL_CHARACTERS ? t = t.toUpperCase() : i === c.INITIAL_CAPS_WORD ? t = u(t) : i === c.INITIAL_CAPS_SENTENCE && (t = h(t)); else {
for (var n = "", r = t.length, s = 0; s < r; ++s) n += "●";
t = n;
}
return t;
},
editBoxEditingDidBegan: function() {
cc.Component.EventHandler.emitEvents(this.editingDidBegan, this);
this.node.emit("editing-did-began", this);
},
editBoxEditingDidEnded: function() {
cc.Component.EventHandler.emitEvents(this.editingDidEnded, this);
this.node.emit("editing-did-ended", this);
},
editBoxTextChanged: function(t) {
t = this._updateLabelStringStyle(t, !0);
this.string = t;
cc.Component.EventHandler.emitEvents(this.textChanged, t, this);
this.node.emit("text-changed", this);
},
editBoxEditingReturn: function() {
cc.Component.EventHandler.emitEvents(this.editingReturn, this);
this.node.emit("editing-return", this);
},
onEnable: function() {
this._registerEvent();
this._impl && this._impl.enable();
},
onDisable: function() {
this._unregisterEvent();
this._impl && this._impl.disable();
},
onDestroy: function() {
this._impl && this._impl.clear();
},
__preload: function() {
this._init();
},
_registerEvent: function() {
this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchBegan, this);
this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
},
_unregisterEvent: function() {
this.node.off(cc.Node.EventType.TOUCH_START, this._onTouchBegan, this);
this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this);
},
_onTouchBegan: function(t) {
t.stopPropagation();
},
_onTouchCancel: function(t) {
t.stopPropagation();
},
_onTouchEnded: function(t) {
this._impl && this._impl.beginEditing();
t.stopPropagation();
},
setFocus: function() {
cc.errorID(1400, "setFocus()", "focus()");
this._impl && this._impl.setFocus(!0);
},
focus: function() {
this._impl && this._impl.setFocus(!0);
},
blur: function() {
this._impl && this._impl.setFocus(!1);
},
isFocused: function() {
return !!this._impl && this._impl.isFocused();
},
update: function() {
this._impl && this._impl.update();
}
});
cc.EditBox = e.exports = f;
cc.sys.isBrowser && t("./WebEditBoxImpl");
}), {
"../../platform/CCMacro": 235,
"../CCLabel": 122,
"../editbox/EditBoxImplBase": 144,
"./WebEditBoxImpl": 145,
"./types": 147
} ],
144: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
ctor: function() {
this._delegate = null;
this._editing = !1;
},
init: function(t) {},
enable: function() {},
disable: function() {
this._editing && this.endEditing();
},
clear: function() {},
update: function() {},
setTabIndex: function(t) {},
setSize: function(t, e) {},
setFocus: function(t) {
t ? this.beginEditing() : this.endEditing();
},
isFocused: function() {
return this._editing;
},
beginEditing: function() {},
endEditing: function() {}
});
e.exports = n;
}), {} ],
145: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../value-types/mat4"));
var r = t("../../platform/utils"), s = t("../../platform/CCMacro"), o = t("./types"), a = t("../CCLabel"), c = t("./tabIndexUtil"), l = cc.EditBox, u = cc.js, h = o.InputMode, f = o.InputFlag, _ = o.KeyboardReturnType, d = {
zoomInvalid: !1
};
cc.sys.OS_ANDROID !== cc.sys.os || cc.sys.browserType !== cc.sys.BROWSER_TYPE_SOUGOU && cc.sys.browserType !== cc.sys.BROWSER_TYPE_360 || (d.zoomInvalid = !0);
var p = 0, m = cc.v3(), y = null, v = !1, g = !1, b = l._ImplClass;
function C() {
b.call(this);
this._domId = "EditBoxId_" + ++p;
this._placeholderStyleSheet = null;
this._elem = null;
this._isTextArea = !1;
this._worldMat = new n.default();
this._cameraMat = new n.default();
this._m00 = 0;
this._m01 = 0;
this._m04 = 0;
this._m05 = 0;
this._m12 = 0;
this._m13 = 0;
this._w = 0;
this._h = 0;
this._cacheViewportRect = cc.rect(0, 0, 0, 0);
this._inputMode = null;
this._inputFlag = null;
this._returnType = null;
this._eventListeners = {};
this._textLabelFont = null;
this._textLabelFontSize = null;
this._textLabelFontColor = null;
this._textLabelAlign = null;
this._placeholderLabelFont = null;
this._placeholderLabelFontSize = null;
this._placeholderLabelFontColor = null;
this._placeholderLabelAlign = null;
this._placeholderLineHeight = null;
}
u.extend(C, b);
l._ImplClass = C;
Object.assign(C.prototype, {
init: function(t) {
if (t) {
this._delegate = t;
t.inputMode === h.ANY ? this._createTextArea() : this._createInput();
c.add(this);
this.setTabIndex(t.tabIndex);
this._initStyleSheet();
this._registerEventListeners();
this._addDomToGameContainer();
v = cc.view.isAutoFullScreenEnabled();
g = cc.view._resizeWithBrowserSize;
}
},
clear: function() {
this._removeEventListeners();
this._removeDomFromGameContainer();
c.remove(this);
y === this && (y = null);
},
update: function() {},
setTabIndex: function(t) {
this._elem.tabIndex = t;
c.resort();
},
setSize: function(t, e) {
var i = this._elem;
i.style.width = t + "px";
i.style.height = e + "px";
},
beginEditing: function() {
y && y !== this && y.setFocus(!1);
this._editing = !0;
y = this;
this._delegate.editBoxEditingDidBegan();
this._showDom();
this._elem.focus();
},
endEditing: function() {
this._elem && this._elem.blur();
},
_createInput: function() {
this._isTextArea = !1;
this._elem = document.createElement("input");
},
_createTextArea: function() {
this._isTextArea = !0;
this._elem = document.createElement("textarea");
},
_addDomToGameContainer: function() {
cc.game.container.appendChild(this._elem);
document.head.appendChild(this._placeholderStyleSheet);
},
_removeDomFromGameContainer: function() {
r.contains(cc.game.container, this._elem) && cc.game.container.removeChild(this._elem);
r.contains(document.head, this._placeholderStyleSheet) && document.head.removeChild(this._placeholderStyleSheet);
delete this._elem;
delete this._placeholderStyleSheet;
},
_showDom: function() {
this._updateMatrix();
this._updateMaxLength();
this._updateInputType();
this._updateStyleSheet();
this._elem.style.display = "";
this._delegate._hideLabels();
cc.sys.isMobile && this._showDomOnMobile();
},
_hideDom: function() {
this._elem.style.display = "none";
this._delegate._showLabels();
cc.sys.isMobile && this._hideDomOnMobile();
},
_showDomOnMobile: function() {
if (cc.sys.os === cc.sys.OS_ANDROID) {
if (v) {
cc.view.enableAutoFullScreen(!1);
cc.screen.exitFullScreen();
}
g && cc.view.resizeWithBrowserSize(!1);
this._adjustWindowScroll();
}
},
_hideDomOnMobile: function() {
if (cc.sys.os === cc.sys.OS_ANDROID) {
g && cc.view.resizeWithBrowserSize(!0);
setTimeout((function() {
y || v && cc.view.enableAutoFullScreen(!0);
}), 800);
}
this._scrollBackWindow();
},
_adjustWindowScroll: function() {
var t = this;
setTimeout((function() {
window.scrollY < 100 && t._elem.scrollIntoView({
block: "start",
inline: "nearest",
behavior: "smooth"
});
}), 800);
},
_scrollBackWindow: function() {
setTimeout((function() {
var t = cc.sys;
t.browserType !== t.BROWSER_TYPE_WECHAT || t.os !== t.OS_IOS ? window.scrollTo(0, 0) : window.top && window.top.scrollTo(0, 0);
}), 800);
},
_updateMatrix: function() {
var t = this._delegate.node;
t.getWorldMatrix(this._worldMat);
var e = this._worldMat, i = e.m, r = cc.view;
if (this._m00 !== i[0] || this._m01 !== i[1] || this._m04 !== i[4] || this._m05 !== i[5] || this._m12 !== i[12] || this._m13 !== i[13] || this._w !== t._contentSize.width || this._h !== t._contentSize.height || !this._cacheViewportRect.equals(r._viewportRect)) {
this._m00 = i[0];
this._m01 = i[1];
this._m04 = i[4];
this._m05 = i[5];
this._m12 = i[12];
this._m13 = i[13];
this._w = t._contentSize.width;
this._h = t._contentSize.height;
this._cacheViewportRect.set(r._viewportRect);
var s, o = r._scaleX, a = r._scaleY, c = r._viewportRect, l = r._devicePixelRatio;
m.x = -t._anchorPoint.x * this._w;
m.y = -t._anchorPoint.y * this._h;
n.default.transform(e, e, m);
cc.Camera.findCamera(t).getWorldToScreenMatrix2D(this._cameraMat);
s = this._cameraMat;
n.default.mul(s, s, e);
o /= l;
a /= l;
var u = cc.game.container, h = s.m, f = h[0] * o, _ = h[1], p = h[4], y = h[5] * a, v = u && u.style.paddingLeft && parseInt(u.style.paddingLeft);
v += c.x / l;
var g = u && u.style.paddingBottom && parseInt(u.style.paddingBottom);
g += c.y / l;
var b = h[12] * o + v, C = h[13] * a + g;
if (d.zoomInvalid) {
this.setSize(t.width * f, t.height * y);
f = 1;
y = 1;
}
var x = this._elem, A = "matrix(" + f + "," + -_ + "," + -p + "," + y + "," + b + "," + -C + ")";
x.style.transform = A;
x.style["-webkit-transform"] = A;
x.style["transform-origin"] = "0px 100% 0px";
x.style["-webkit-transform-origin"] = "0px 100% 0px";
}
},
_updateInputType: function() {
var t = this._delegate, e = t.inputMode, i = t.inputFlag, n = t.returnType, r = this._elem;
if (this._inputMode !== e || this._inputFlag !== i || this._returnType !== n) {
this._inputMode = e;
this._inputFlag = i;
this._returnType = n;
if (this._isTextArea) {
var s = "none";
i === f.INITIAL_CAPS_ALL_CHARACTERS ? s = "uppercase" : i === f.INITIAL_CAPS_WORD && (s = "capitalize");
r.style.textTransform = s;
} else if (i !== f.PASSWORD) {
var o = r.type;
if (e === h.EMAIL_ADDR) o = "email"; else if (e === h.NUMERIC || e === h.DECIMAL) o = "number"; else if (e === h.PHONE_NUMBER) {
o = "number";
r.pattern = "[0-9]*";
} else if (e === h.URL) o = "url"; else {
o = "text";
n === _.SEARCH && (o = "search");
}
r.type = o;
var a = "none";
i === f.INITIAL_CAPS_ALL_CHARACTERS ? a = "uppercase" : i === f.INITIAL_CAPS_WORD && (a = "capitalize");
r.style.textTransform = a;
} else r.type = "password";
}
},
_updateMaxLength: function() {
var t = this._delegate.maxLength;
t < 0 && (t = 65535);
this._elem.maxLength = t;
},
_initStyleSheet: function() {
var t = this._elem;
t.style.display = "none";
t.style.border = 0;
t.style.background = "transparent";
t.style.width = "100%";
t.style.height = "100%";
t.style.active = 0;
t.style.outline = "medium";
t.style.padding = "0";
t.style.textTransform = "uppercase";
t.style.position = "absolute";
t.style.bottom = "0px";
t.style.left = "2px";
t.className = "cocosEditBox";
t.id = this._domId;
if (this._isTextArea) {
t.style.resize = "none";
t.style.overflow_y = "scroll";
} else {
t.type = "text";
t.style["-moz-appearance"] = "textfield";
}
this._placeholderStyleSheet = document.createElement("style");
},
_updateStyleSheet: function() {
var t = this._delegate, e = this._elem;
e.value = t.string;
e.placeholder = t.placeholder;
this._updateTextLabel(t.textLabel);
this._updatePlaceholderLabel(t.placeholderLabel);
},
_updateTextLabel: function(t) {
if (t) {
var e = t.font;
e = !e || e instanceof cc.BitmapFont ? t.fontFamily : e._fontFamily;
var i = t.fontSize * t.node.scaleY;
if (this._textLabelFont !== e || this._textLabelFontSize !== i || this._textLabelFontColor !== t.fontColor || this._textLabelAlign !== t.horizontalAlign) {
this._textLabelFont = e;
this._textLabelFontSize = i;
this._textLabelFontColor = t.fontColor;
this._textLabelAlign = t.horizontalAlign;
var n = this._elem;
n.style.fontSize = i + "px";
n.style.color = t.node.color.toCSS();
n.style.fontFamily = e;
switch (t.horizontalAlign) {
case a.HorizontalAlign.LEFT:
n.style.textAlign = "left";
break;

case a.HorizontalAlign.CENTER:
n.style.textAlign = "center";
break;

case a.HorizontalAlign.RIGHT:
n.style.textAlign = "right";
}
}
}
},
_updatePlaceholderLabel: function(t) {
if (t) {
var e = t.font;
e = !e || e instanceof cc.BitmapFont ? t.fontFamily : t.font._fontFamily;
var i = t.fontSize * t.node.scaleY;
if (this._placeholderLabelFont !== e || this._placeholderLabelFontSize !== i || this._placeholderLabelFontColor !== t.fontColor || this._placeholderLabelAlign !== t.horizontalAlign || this._placeholderLineHeight !== t.fontSize) {
this._placeholderLabelFont = e;
this._placeholderLabelFontSize = i;
this._placeholderLabelFontColor = t.fontColor;
this._placeholderLabelAlign = t.horizontalAlign;
this._placeholderLineHeight = t.fontSize;
var n, r = this._placeholderStyleSheet, s = t.node.color.toCSS(), o = t.fontSize;
switch (t.horizontalAlign) {
case a.HorizontalAlign.LEFT:
n = "left";
break;

case a.HorizontalAlign.CENTER:
n = "center";
break;

case a.HorizontalAlign.RIGHT:
n = "right";
}
r.innerHTML = "#" + this._domId + "::-webkit-input-placeholder,#" + this._domId + "::-moz-placeholder,#" + this._domId + ":-ms-input-placeholder{text-transform: initial; font-family: " + e + "; font-size: " + i + "px; color: " + s + "; line-height: " + o + "px; text-align: " + n + ";}";
cc.sys.browserType === cc.sys.BROWSER_TYPE_EDGE && (r.innerHTML += "#" + this._domId + "::-ms-clear{display: none;}");
}
}
},
_registerEventListeners: function() {
var t = this, e = this._elem, i = !1, n = this._eventListeners;
n.compositionStart = function() {
i = !0;
};
n.compositionEnd = function() {
i = !1;
t._delegate.editBoxTextChanged(e.value);
};
n.onInput = function() {
i || t._delegate.editBoxTextChanged(e.value);
};
n.onClick = function(e) {
t._editing && cc.sys.isMobile && t._adjustWindowScroll();
};
n.onKeydown = function(i) {
if (i.keyCode === s.KEY.enter) {
i.stopPropagation();
t._delegate.editBoxEditingReturn();
t._isTextArea || e.blur();
} else if (i.keyCode === s.KEY.tab) {
i.stopPropagation();
i.preventDefault();
c.next(t);
}
};
n.onBlur = function() {
t._editing = !1;
y = null;
t._hideDom();
t._delegate.editBoxEditingDidEnded();
};
n.onResize = function() {
t._updateMatrix();
};
e.addEventListener("compositionstart", n.compositionStart);
e.addEventListener("compositionend", n.compositionEnd);
e.addEventListener("input", n.onInput);
e.addEventListener("keydown", n.onKeydown);
e.addEventListener("blur", n.onBlur);
e.addEventListener("touchstart", n.onClick);
window.addEventListener("resize", n.onResize);
window.addEventListener("orientationchange", n.onResize);
},
_removeEventListeners: function() {
var t = this._elem, e = this._eventListeners;
t.removeEventListener("compositionstart", e.compositionStart);
t.removeEventListener("compositionend", e.compositionEnd);
t.removeEventListener("input", e.onInput);
t.removeEventListener("keydown", e.onKeydown);
t.removeEventListener("blur", e.onBlur);
t.removeEventListener("touchstart", e.onClick);
window.removeEventListener("resize", e.onResize);
window.removeEventListener("orientationchange", e.onResize);
e.compositionStart = null;
e.compositionEnd = null;
e.onInput = null;
e.onKeydown = null;
e.onBlur = null;
e.onClick = null;
e.onResize = null;
}
});
}), {
"../../platform/CCMacro": 235,
"../../platform/utils": 254,
"../../value-types/mat4": 330,
"../CCLabel": 122,
"./tabIndexUtil": 146,
"./types": 147
} ],
146: [ (function(t, e, i) {
"use strict";
e.exports = {
_tabIndexList: [],
add: function(t) {
var e = this._tabIndexList;
-1 === e.indexOf(t) && e.push(t);
},
remove: function(t) {
var e = this._tabIndexList, i = e.indexOf(t);
-1 !== i && e.splice(i, 1);
},
resort: function() {
this._tabIndexList.sort((function(t, e) {
return t._delegate._tabIndex - e._delegate._tabIndex;
}));
},
next: function(t) {
var e = this._tabIndexList, i = e.indexOf(t);
t.setFocus(!1);
if (-1 !== i) {
var n = e[i + 1];
n && n._delegate._tabIndex >= 0 && n.setFocus(!0);
}
}
};
}), {} ],
147: [ (function(t, e, i) {
"use strict";
var n = cc.Enum({
DEFAULT: 0,
DONE: 1,
SEND: 2,
SEARCH: 3,
GO: 4,
NEXT: 5
}), r = cc.Enum({
ANY: 0,
EMAIL_ADDR: 1,
NUMERIC: 2,
PHONE_NUMBER: 3,
URL: 4,
DECIMAL: 5,
SINGLE_LINE: 6
}), s = cc.Enum({
PASSWORD: 0,
SENSITIVE: 1,
INITIAL_CAPS_WORD: 2,
INITIAL_CAPS_SENTENCE: 3,
INITIAL_CAPS_ALL_CHARACTERS: 4,
DEFAULT: 5
});
e.exports = {
KeyboardReturnType: n,
InputMode: r,
InputFlag: s
};
}), {} ],
148: [ (function(t, e, i) {
"use strict";
t("./CCComponent");
t("./CCComponentEventHandler");
t("./missing-script");
var n = t("./WXSubContextView"), r = t("./SwanSubContextView");
n || (n = cc.Class({
name: "cc.WXSubContextView",
extends: cc.Component
}));
r || (r = cc.Class({
name: "cc.SwanSubContextView",
extends: cc.Component
}));
var s = [ t("./CCSprite"), t("./CCWidget"), t("./CCCanvas"), t("./CCAudioSource"), t("./CCAnimation"), t("./CCButton"), t("./CCLabel"), t("./CCProgressBar"), t("./CCMask"), t("./CCScrollBar"), t("./CCScrollView"), t("./CCPageViewIndicator"), t("./CCPageView"), t("./CCSlider"), t("./CCLayout"), t("./editbox/CCEditBox"), t("./CCLabelOutline"), t("./CCLabelShadow"), t("./CCRichText"), t("./CCToggleContainer"), t("./CCToggleGroup"), t("./CCToggle"), t("./CCBlockInputEvents"), t("./CCMotionStreak"), n, r ];
e.exports = s;
}), {
"./CCAnimation": 115,
"./CCAudioSource": 116,
"./CCBlockInputEvents": 117,
"./CCButton": 118,
"./CCCanvas": 119,
"./CCComponent": 120,
"./CCComponentEventHandler": 121,
"./CCLabel": 122,
"./CCLabelOutline": 123,
"./CCLabelShadow": 124,
"./CCLayout": 125,
"./CCMask": 126,
"./CCMotionStreak": 127,
"./CCPageView": 128,
"./CCPageViewIndicator": 129,
"./CCProgressBar": 130,
"./CCRichText": 132,
"./CCScrollBar": 133,
"./CCScrollView": 134,
"./CCSlider": 135,
"./CCSprite": 136,
"./CCToggle": 138,
"./CCToggleContainer": 139,
"./CCToggleGroup": 140,
"./CCWidget": 142,
"./SwanSubContextView": void 0,
"./WXSubContextView": void 0,
"./editbox/CCEditBox": 143,
"./missing-script": 149
} ],
149: [ (function(t, e, i) {
"use strict";
var n = cc.js, r = t("../utils/misc").BUILTIN_CLASSID_RE, s = cc.Class({
name: "cc.MissingClass",
properties: {
_$erialized: {
default: null,
visible: !1,
editorOnly: !0
}
}
}), o = cc.Class({
name: "cc.MissingScript",
extends: cc.Component,
editor: {
inspector: "packages://inspector/inspectors/comps/missing-script.js"
},
properties: {
compiled: {
default: !1,
serializable: !1
},
_$erialized: {
default: null,
visible: !1,
editorOnly: !0
}
},
ctor: !1,
statics: {
safeFindClass: function(t, e) {
var i = n._getClassById(t);
if (i) return i;
if (t) {
cc.deserialize.reportMissingClass(t);
return o.getMissingWrapper(t, e);
}
return null;
},
getMissingWrapper: function(t, e) {
return e.node && (/^[0-9a-zA-Z+/]{23}$/.test(t) || r.test(t)) ? o : s;
}
},
onLoad: function() {
cc.warnID(4600, this.node.name);
}
});
cc._MissingScript = e.exports = o;
}), {
"../utils/misc": 313
} ],
150: [ (function(t, e, i) {
"use strict";
var n = cc.js;
t("../event/event");
var r = function(t, e) {
cc.Event.call(this, cc.Event.MOUSE, e);
this._eventType = t;
this._button = 0;
this._x = 0;
this._y = 0;
this._prevX = 0;
this._prevY = 0;
this._scrollX = 0;
this._scrollY = 0;
};
n.extend(r, cc.Event);
var s = r.prototype;
s.setScrollData = function(t, e) {
this._scrollX = t;
this._scrollY = e;
};
s.getScrollX = function() {
return this._scrollX;
};
s.getScrollY = function() {
return this._scrollY;
};
s.setLocation = function(t, e) {
this._x = t;
this._y = e;
};
s.getLocation = function() {
return cc.v2(this._x, this._y);
};
s.getLocationInView = function() {
return cc.v2(this._x, cc.view._designResolutionSize.height - this._y);
};
s._setPrevCursor = function(t, e) {
this._prevX = t;
this._prevY = e;
};
s.getPreviousLocation = function() {
return cc.v2(this._prevX, this._prevY);
};
s.getDelta = function() {
return cc.v2(this._x - this._prevX, this._y - this._prevY);
};
s.getDeltaX = function() {
return this._x - this._prevX;
};
s.getDeltaY = function() {
return this._y - this._prevY;
};
s.setButton = function(t) {
this._button = t;
};
s.getButton = function() {
return this._button;
};
s.getLocationX = function() {
return this._x;
};
s.getLocationY = function() {
return this._y;
};
r.NONE = 0;
r.DOWN = 1;
r.UP = 2;
r.MOVE = 3;
r.SCROLL = 4;
r.BUTTON_LEFT = 0;
r.BUTTON_RIGHT = 2;
r.BUTTON_MIDDLE = 1;
r.BUTTON_4 = 3;
r.BUTTON_5 = 4;
r.BUTTON_6 = 5;
r.BUTTON_7 = 6;
r.BUTTON_8 = 7;
var o = function(t, e) {
cc.Event.call(this, cc.Event.TOUCH, e);
this._eventCode = 0;
this._touches = t || [];
this.touch = null;
this.currentTouch = null;
};
n.extend(o, cc.Event);
(s = o.prototype).getEventCode = function() {
return this._eventCode;
};
s.getTouches = function() {
return this._touches;
};
s._setEventCode = function(t) {
this._eventCode = t;
};
s._setTouches = function(t) {
this._touches = t;
};
s.setLocation = function(t, e) {
this.touch && this.touch.setTouchInfo(this.touch.getID(), t, e);
};
s.getLocation = function() {
return this.touch ? this.touch.getLocation() : cc.v2();
};
s.getLocationInView = function() {
return this.touch ? this.touch.getLocationInView() : cc.v2();
};
s.getPreviousLocation = function() {
return this.touch ? this.touch.getPreviousLocation() : cc.v2();
};
s.getStartLocation = function() {
return this.touch ? this.touch.getStartLocation() : cc.v2();
};
s.getID = function() {
return this.touch ? this.touch.getID() : null;
};
s.getDelta = function() {
return this.touch ? this.touch.getDelta() : cc.v2();
};
s.getDeltaX = function() {
return this.touch ? this.touch.getDelta().x : 0;
};
s.getDeltaY = function() {
return this.touch ? this.touch.getDelta().y : 0;
};
s.getLocationX = function() {
return this.touch ? this.touch.getLocationX() : 0;
};
s.getLocationY = function() {
return this.touch ? this.touch.getLocationY() : 0;
};
o.MAX_TOUCHES = 5;
o.BEGAN = 0;
o.MOVED = 1;
o.ENDED = 2;
o.CANCELED = 3;
var a = function(t, e) {
cc.Event.call(this, cc.Event.ACCELERATION, e);
this.acc = t;
};
n.extend(a, cc.Event);
var c = function(t, e, i) {
cc.Event.call(this, cc.Event.KEYBOARD, i);
this.keyCode = t;
this.isPressed = e;
};
n.extend(c, cc.Event);
cc.Event.EventMouse = r;
cc.Event.EventTouch = o;
cc.Event.EventAcceleration = a;
cc.Event.EventKeyboard = c;
e.exports = cc.Event;
}), {
"../event/event": 157
} ],
151: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
cc.EventListener = function(t, e, i) {
this._onEvent = i;
this._type = t || 0;
this._listenerID = e || "";
this._registered = !1;
this._fixedPriority = 0;
this._node = null;
this._target = null;
this._paused = !0;
this._isEnabled = !0;
};
cc.EventListener.prototype = {
constructor: cc.EventListener,
_setPaused: function(t) {
this._paused = t;
},
_isPaused: function() {
return this._paused;
},
_setRegistered: function(t) {
this._registered = t;
},
_isRegistered: function() {
return this._registered;
},
_getType: function() {
return this._type;
},
_getListenerID: function() {
return this._listenerID;
},
_setFixedPriority: function(t) {
this._fixedPriority = t;
},
_getFixedPriority: function() {
return this._fixedPriority;
},
_setSceneGraphPriority: function(t) {
this._target = t;
this._node = t;
},
_getSceneGraphPriority: function() {
return this._node;
},
checkAvailable: function() {
return null !== this._onEvent;
},
clone: function() {
return null;
},
setEnabled: function(t) {
this._isEnabled = t;
},
isEnabled: function() {
return this._isEnabled;
},
retain: function() {},
release: function() {}
};
cc.EventListener.UNKNOWN = 0;
cc.EventListener.TOUCH_ONE_BY_ONE = 1;
cc.EventListener.TOUCH_ALL_AT_ONCE = 2;
cc.EventListener.KEYBOARD = 3;
cc.EventListener.MOUSE = 4;
cc.EventListener.ACCELERATION = 6;
cc.EventListener.CUSTOM = 8;
var r = cc.EventListener.ListenerID = {
MOUSE: "__cc_mouse",
TOUCH_ONE_BY_ONE: "__cc_touch_one_by_one",
TOUCH_ALL_AT_ONCE: "__cc_touch_all_at_once",
KEYBOARD: "__cc_keyboard",
ACCELERATION: "__cc_acceleration"
}, s = function(t, e) {
this._onCustomEvent = e;
cc.EventListener.call(this, cc.EventListener.CUSTOM, t, this._callback);
};
n.extend(s, cc.EventListener);
n.mixin(s.prototype, {
_onCustomEvent: null,
_callback: function(t) {
null !== this._onCustomEvent && this._onCustomEvent(t);
},
checkAvailable: function() {
return cc.EventListener.prototype.checkAvailable.call(this) && null !== this._onCustomEvent;
},
clone: function() {
return new s(this._listenerID, this._onCustomEvent);
}
});
var o = function() {
cc.EventListener.call(this, cc.EventListener.MOUSE, r.MOUSE, this._callback);
};
n.extend(o, cc.EventListener);
n.mixin(o.prototype, {
onMouseDown: null,
onMouseUp: null,
onMouseMove: null,
onMouseScroll: null,
_callback: function(t) {
var e = cc.Event.EventMouse;
switch (t._eventType) {
case e.DOWN:
this.onMouseDown && this.onMouseDown(t);
break;

case e.UP:
this.onMouseUp && this.onMouseUp(t);
break;

case e.MOVE:
this.onMouseMove && this.onMouseMove(t);
break;

case e.SCROLL:
this.onMouseScroll && this.onMouseScroll(t);
}
},
clone: function() {
var t = new o();
t.onMouseDown = this.onMouseDown;
t.onMouseUp = this.onMouseUp;
t.onMouseMove = this.onMouseMove;
t.onMouseScroll = this.onMouseScroll;
return t;
},
checkAvailable: function() {
return !0;
}
});
var a = function() {
cc.EventListener.call(this, cc.EventListener.TOUCH_ONE_BY_ONE, r.TOUCH_ONE_BY_ONE, null);
this._claimedTouches = [];
};
n.extend(a, cc.EventListener);
n.mixin(a.prototype, {
constructor: a,
_claimedTouches: null,
swallowTouches: !1,
onTouchBegan: null,
onTouchMoved: null,
onTouchEnded: null,
onTouchCancelled: null,
setSwallowTouches: function(t) {
this.swallowTouches = t;
},
isSwallowTouches: function() {
return this.swallowTouches;
},
clone: function() {
var t = new a();
t.onTouchBegan = this.onTouchBegan;
t.onTouchMoved = this.onTouchMoved;
t.onTouchEnded = this.onTouchEnded;
t.onTouchCancelled = this.onTouchCancelled;
t.swallowTouches = this.swallowTouches;
return t;
},
checkAvailable: function() {
if (!this.onTouchBegan) {
cc.logID(1801);
return !1;
}
return !0;
}
});
var c = function() {
cc.EventListener.call(this, cc.EventListener.TOUCH_ALL_AT_ONCE, r.TOUCH_ALL_AT_ONCE, null);
};
n.extend(c, cc.EventListener);
n.mixin(c.prototype, {
constructor: c,
onTouchesBegan: null,
onTouchesMoved: null,
onTouchesEnded: null,
onTouchesCancelled: null,
clone: function() {
var t = new c();
t.onTouchesBegan = this.onTouchesBegan;
t.onTouchesMoved = this.onTouchesMoved;
t.onTouchesEnded = this.onTouchesEnded;
t.onTouchesCancelled = this.onTouchesCancelled;
return t;
},
checkAvailable: function() {
if (null === this.onTouchesBegan && null === this.onTouchesMoved && null === this.onTouchesEnded && null === this.onTouchesCancelled) {
cc.logID(1802);
return !1;
}
return !0;
}
});
var l = function(t) {
this._onAccelerationEvent = t;
cc.EventListener.call(this, cc.EventListener.ACCELERATION, r.ACCELERATION, this._callback);
};
n.extend(l, cc.EventListener);
n.mixin(l.prototype, {
constructor: l,
_onAccelerationEvent: null,
_callback: function(t) {
this._onAccelerationEvent(t.acc, t);
},
checkAvailable: function() {
cc.assertID(this._onAccelerationEvent, 1803);
return !0;
},
clone: function() {
return new l(this._onAccelerationEvent);
}
});
var u = function() {
cc.EventListener.call(this, cc.EventListener.KEYBOARD, r.KEYBOARD, this._callback);
};
n.extend(u, cc.EventListener);
n.mixin(u.prototype, {
constructor: u,
onKeyPressed: null,
onKeyReleased: null,
_callback: function(t) {
t.isPressed ? this.onKeyPressed && this.onKeyPressed(t.keyCode, t) : this.onKeyReleased && this.onKeyReleased(t.keyCode, t);
},
clone: function() {
var t = new u();
t.onKeyPressed = this.onKeyPressed;
t.onKeyReleased = this.onKeyReleased;
return t;
},
checkAvailable: function() {
if (null === this.onKeyPressed && null === this.onKeyReleased) {
cc.logID(1800);
return !1;
}
return !0;
}
});
cc.EventListener.create = function(t) {
cc.assertID(t && t.event, 1900);
var e = t.event;
delete t.event;
var i = null;
if (e === cc.EventListener.TOUCH_ONE_BY_ONE) i = new a(); else if (e === cc.EventListener.TOUCH_ALL_AT_ONCE) i = new c(); else if (e === cc.EventListener.MOUSE) i = new o(); else if (e === cc.EventListener.CUSTOM) {
i = new s(t.eventName, t.callback);
delete t.eventName;
delete t.callback;
} else if (e === cc.EventListener.KEYBOARD) i = new u(); else if (e === cc.EventListener.ACCELERATION) {
i = new l(t.callback);
delete t.callback;
}
for (var n in t) i[n] = t[n];
return i;
};
e.exports = cc.EventListener;
}), {
"../platform/js": 250
} ],
152: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
t("./CCEventListener");
var r = cc.EventListener.ListenerID, s = function() {
this._fixedListeners = [];
this._sceneGraphListeners = [];
this.gt0Index = 0;
};
s.prototype = {
constructor: s,
size: function() {
return this._fixedListeners.length + this._sceneGraphListeners.length;
},
empty: function() {
return 0 === this._fixedListeners.length && 0 === this._sceneGraphListeners.length;
},
push: function(t) {
0 === t._getFixedPriority() ? this._sceneGraphListeners.push(t) : this._fixedListeners.push(t);
},
clearSceneGraphListeners: function() {
this._sceneGraphListeners.length = 0;
},
clearFixedListeners: function() {
this._fixedListeners.length = 0;
},
clear: function() {
this._sceneGraphListeners.length = 0;
this._fixedListeners.length = 0;
},
getFixedPriorityListeners: function() {
return this._fixedListeners;
},
getSceneGraphPriorityListeners: function() {
return this._sceneGraphListeners;
}
};
var o = function(t) {
var e = cc.Event, i = t.type;
if (i === e.ACCELERATION) return r.ACCELERATION;
if (i === e.KEYBOARD) return r.KEYBOARD;
if (i.startsWith(e.MOUSE)) return r.MOUSE;
i.startsWith(e.TOUCH) && cc.logID(2e3);
return "";
}, a = {
DIRTY_NONE: 0,
DIRTY_FIXED_PRIORITY: 1,
DIRTY_SCENE_GRAPH_PRIORITY: 2,
DIRTY_ALL: 3,
_listenersMap: {},
_priorityDirtyFlagMap: {},
_nodeListenersMap: {},
_toAddedListeners: [],
_toRemovedListeners: [],
_dirtyListeners: {},
_inDispatch: 0,
_isEnabled: !1,
_currentTouch: null,
_currentTouchListener: null,
_internalCustomListenerIDs: [],
_setDirtyForNode: function(t) {
var e = this._nodeListenersMap[t._id];
if (void 0 !== e) for (var i = 0, n = e.length; i < n; i++) {
var r = e[i]._getListenerID();
null == this._dirtyListeners[r] && (this._dirtyListeners[r] = !0);
}
if (t.childrenCount > 0) for (var s = t._children, o = 0, a = s.length; o < a; o++) this._setDirtyForNode(s[o]);
},
pauseTarget: function(t, e) {
if (t instanceof cc._BaseNode) {
var i, n, r = this._nodeListenersMap[t._id];
if (r) for (i = 0, n = r.length; i < n; i++) r[i]._setPaused(!0);
if (!0 === e) {
var s = t._children;
for (i = 0, n = s ? s.length : 0; i < n; i++) this.pauseTarget(s[i], !0);
}
} else cc.warnID(3506);
},
resumeTarget: function(t, e) {
if (t instanceof cc._BaseNode) {
var i, n, r = this._nodeListenersMap[t._id];
if (r) for (i = 0, n = r.length; i < n; i++) r[i]._setPaused(!1);
this._setDirtyForNode(t);
if (!0 === e) {
var s = t._children;
for (i = 0, n = s ? s.length : 0; i < n; i++) this.resumeTarget(s[i], !0);
}
} else cc.warnID(3506);
},
_addListener: function(t) {
0 === this._inDispatch ? this._forceAddEventListener(t) : this._toAddedListeners.push(t);
},
_forceAddEventListener: function(t) {
var e = t._getListenerID(), i = this._listenersMap[e];
if (!i) {
i = new s();
this._listenersMap[e] = i;
}
i.push(t);
if (0 === t._getFixedPriority()) {
this._setDirty(e, this.DIRTY_SCENE_GRAPH_PRIORITY);
var n = t._getSceneGraphPriority();
null === n && cc.logID(3507);
this._associateNodeAndEventListener(n, t);
n.activeInHierarchy && this.resumeTarget(n);
} else this._setDirty(e, this.DIRTY_FIXED_PRIORITY);
},
_getListeners: function(t) {
return this._listenersMap[t];
},
_updateDirtyFlagForSceneGraph: function() {
var t = this._dirtyListeners;
for (var e in t) this._setDirty(e, this.DIRTY_SCENE_GRAPH_PRIORITY);
this._dirtyListeners = {};
},
_removeAllListenersInVector: function(t) {
if (t) for (var e, i = t.length - 1; i >= 0; i--) {
(e = t[i])._setRegistered(!1);
if (null != e._getSceneGraphPriority()) {
this._dissociateNodeAndEventListener(e._getSceneGraphPriority(), e);
e._setSceneGraphPriority(null);
}
0 === this._inDispatch && cc.js.array.removeAt(t, i);
}
},
_removeListenersForListenerID: function(t) {
var e, i = this._listenersMap[t];
if (i) {
var n = i.getFixedPriorityListeners(), r = i.getSceneGraphPriorityListeners();
this._removeAllListenersInVector(r);
this._removeAllListenersInVector(n);
delete this._priorityDirtyFlagMap[t];
if (!this._inDispatch) {
i.clear();
delete this._listenersMap[t];
}
}
var s, o = this._toAddedListeners;
for (e = o.length - 1; e >= 0; e--) (s = o[e]) && s._getListenerID() === t && cc.js.array.removeAt(o, e);
},
_sortEventListeners: function(t) {
var e = this.DIRTY_NONE, i = this._priorityDirtyFlagMap;
i[t] && (e = i[t]);
if (e !== this.DIRTY_NONE) {
i[t] = this.DIRTY_NONE;
e & this.DIRTY_FIXED_PRIORITY && this._sortListenersOfFixedPriority(t);
if (e & this.DIRTY_SCENE_GRAPH_PRIORITY) {
cc.director.getScene() && this._sortListenersOfSceneGraphPriority(t);
}
}
},
_sortListenersOfSceneGraphPriority: function(t) {
var e = this._getListeners(t);
if (e) {
var i = e.getSceneGraphPriorityListeners();
i && 0 !== i.length && e.getSceneGraphPriorityListeners().sort(this._sortEventListenersOfSceneGraphPriorityDes);
}
},
_sortEventListenersOfSceneGraphPriorityDes: function(t, e) {
var i = t._getSceneGraphPriority(), n = e._getSceneGraphPriority();
if (!(e && n && n._activeInHierarchy && null !== n._parent)) return -1;
if (!t || !i || !i._activeInHierarchy || null === i._parent) return 1;
for (var r = i, s = n, o = !1; r._parent._id !== s._parent._id; ) {
r = null === r._parent._parent ? (o = !0) && n : r._parent;
s = null === s._parent._parent ? (o = !0) && i : s._parent;
}
if (r._id === s._id) {
if (r._id === n._id) return -1;
if (r._id === i._id) return 1;
}
return o ? r._localZOrder - s._localZOrder : s._localZOrder - r._localZOrder;
},
_sortListenersOfFixedPriority: function(t) {
var e = this._listenersMap[t];
if (e) {
var i = e.getFixedPriorityListeners();
if (i && 0 !== i.length) {
i.sort(this._sortListenersOfFixedPriorityAsc);
for (var n = 0, r = i.length; n < r && !(i[n]._getFixedPriority() >= 0); ) ++n;
e.gt0Index = n;
}
}
},
_sortListenersOfFixedPriorityAsc: function(t, e) {
return t._getFixedPriority() - e._getFixedPriority();
},
_onUpdateListeners: function(t) {
var e, i, n, r = t.getFixedPriorityListeners(), s = t.getSceneGraphPriorityListeners(), o = this._toRemovedListeners;
if (s) for (e = s.length - 1; e >= 0; e--) if (!(i = s[e])._isRegistered()) {
cc.js.array.removeAt(s, e);
-1 !== (n = o.indexOf(i)) && o.splice(n, 1);
}
if (r) for (e = r.length - 1; e >= 0; e--) if (!(i = r[e])._isRegistered()) {
cc.js.array.removeAt(r, e);
-1 !== (n = o.indexOf(i)) && o.splice(n, 1);
}
s && 0 === s.length && t.clearSceneGraphListeners();
r && 0 === r.length && t.clearFixedListeners();
},
frameUpdateListeners: function() {
var t = this._listenersMap, e = this._priorityDirtyFlagMap;
for (var i in t) if (t[i].empty()) {
delete e[i];
delete t[i];
}
var n = this._toAddedListeners;
if (0 !== n.length) {
for (var r = 0, s = n.length; r < s; r++) this._forceAddEventListener(n[r]);
n.length = 0;
}
0 !== this._toRemovedListeners.length && this._cleanToRemovedListeners();
},
_updateTouchListeners: function(t) {
var e = this._inDispatch;
cc.assertID(e > 0, 3508);
if (!(e > 1)) {
var i;
(i = this._listenersMap[r.TOUCH_ONE_BY_ONE]) && this._onUpdateListeners(i);
(i = this._listenersMap[r.TOUCH_ALL_AT_ONCE]) && this._onUpdateListeners(i);
cc.assertID(1 === e, 3509);
var n = this._toAddedListeners;
if (0 !== n.length) {
for (var s = 0, o = n.length; s < o; s++) this._forceAddEventListener(n[s]);
this._toAddedListeners.length = 0;
}
0 !== this._toRemovedListeners.length && this._cleanToRemovedListeners();
}
},
_cleanToRemovedListeners: function() {
for (var t = this._toRemovedListeners, e = 0; e < t.length; e++) {
var i = t[e], n = this._listenersMap[i._getListenerID()];
if (n) {
var r, s = n.getFixedPriorityListeners(), o = n.getSceneGraphPriorityListeners();
o && -1 !== (r = o.indexOf(i)) && o.splice(r, 1);
s && -1 !== (r = s.indexOf(i)) && s.splice(r, 1);
}
}
t.length = 0;
},
_onTouchEventCallback: function(t, e) {
if (!t._isRegistered()) return !1;
var i = e.event, n = i.currentTouch;
i.currentTarget = t._node;
var r, s = !1, o = i.getEventCode(), c = cc.Event.EventTouch;
if (o === c.BEGAN) {
if (!cc.macro.ENABLE_MULTI_TOUCH && a._currentTouch) {
var l = a._currentTouchListener._node;
if (l && l.activeInHierarchy) return !1;
}
if (t.onTouchBegan && (s = t.onTouchBegan(n, i)) && t._registered) {
t._claimedTouches.push(n);
a._currentTouchListener = t;
a._currentTouch = n;
}
} else if (t._claimedTouches.length > 0 && -1 !== (r = t._claimedTouches.indexOf(n))) {
s = !0;
if (!cc.macro.ENABLE_MULTI_TOUCH && a._currentTouch && a._currentTouch !== n) return !1;
if (o === c.MOVED && t.onTouchMoved) t.onTouchMoved(n, i); else if (o === c.ENDED) {
t.onTouchEnded && t.onTouchEnded(n, i);
t._registered && t._claimedTouches.splice(r, 1);
a._clearCurTouch();
} else if (o === c.CANCELED) {
t.onTouchCancelled && t.onTouchCancelled(n, i);
t._registered && t._claimedTouches.splice(r, 1);
a._clearCurTouch();
}
}
if (i.isStopped()) {
a._updateTouchListeners(i);
return !0;
}
if (s && t.swallowTouches) {
e.needsMutableSet && e.touches.splice(n, 1);
return !0;
}
return !1;
},
_dispatchTouchEvent: function(t) {
this._sortEventListeners(r.TOUCH_ONE_BY_ONE);
this._sortEventListeners(r.TOUCH_ALL_AT_ONCE);
var e = this._getListeners(r.TOUCH_ONE_BY_ONE), i = this._getListeners(r.TOUCH_ALL_AT_ONCE);
if (null !== e || null !== i) {
var n = t.getTouches(), s = cc.js.array.copy(n), o = {
event: t,
needsMutableSet: e && i,
touches: s,
selTouch: null
};
if (e) for (var a = 0; a < n.length; a++) {
t.currentTouch = n[a];
t._propagationStopped = t._propagationImmediateStopped = !1;
this._dispatchEventToListeners(e, this._onTouchEventCallback, o);
}
if (i && s.length > 0) {
this._dispatchEventToListeners(i, this._onTouchesEventCallback, {
event: t,
touches: s
});
if (t.isStopped()) return;
}
this._updateTouchListeners(t);
}
},
_onTouchesEventCallback: function(t, e) {
if (!t._registered) return !1;
var i = cc.Event.EventTouch, n = e.event, r = e.touches, s = n.getEventCode();
n.currentTarget = t._node;
s === i.BEGAN && t.onTouchesBegan ? t.onTouchesBegan(r, n) : s === i.MOVED && t.onTouchesMoved ? t.onTouchesMoved(r, n) : s === i.ENDED && t.onTouchesEnded ? t.onTouchesEnded(r, n) : s === i.CANCELED && t.onTouchesCancelled && t.onTouchesCancelled(r, n);
if (n.isStopped()) {
a._updateTouchListeners(n);
return !0;
}
return !1;
},
_associateNodeAndEventListener: function(t, e) {
var i = this._nodeListenersMap[t._id];
if (!i) {
i = [];
this._nodeListenersMap[t._id] = i;
}
i.push(e);
},
_dissociateNodeAndEventListener: function(t, e) {
var i = this._nodeListenersMap[t._id];
if (i) {
cc.js.array.remove(i, e);
0 === i.length && delete this._nodeListenersMap[t._id];
}
},
_dispatchEventToListeners: function(t, e, i) {
var n, r, s = !1, o = t.getFixedPriorityListeners(), a = t.getSceneGraphPriorityListeners(), c = 0;
if (o && 0 !== o.length) for (;c < t.gt0Index; ++c) if ((r = o[c]).isEnabled() && !r._isPaused() && r._isRegistered() && e(r, i)) {
s = !0;
break;
}
if (a && !s) for (n = 0; n < a.length; n++) if ((r = a[n]).isEnabled() && !r._isPaused() && r._isRegistered() && e(r, i)) {
s = !0;
break;
}
if (o && !s) for (;c < o.length; ++c) if ((r = o[c]).isEnabled() && !r._isPaused() && r._isRegistered() && e(r, i)) {
s = !0;
break;
}
},
_setDirty: function(t, e) {
var i = this._priorityDirtyFlagMap;
null == i[t] ? i[t] = e : i[t] = e | i[t];
},
_sortNumberAsc: function(t, e) {
return t - e;
},
hasEventListener: function(t) {
return !!this._getListeners(t);
},
addListener: function(t, e) {
cc.assertID(t && e, 3503);
if (cc.js.isNumber(e) || e instanceof cc._BaseNode) {
if (t instanceof cc.EventListener) {
if (t._isRegistered()) {
cc.logID(3505);
return;
}
} else {
cc.assertID(!cc.js.isNumber(e), 3504);
t = cc.EventListener.create(t);
}
if (t.checkAvailable()) {
if (cc.js.isNumber(e)) {
if (0 === e) {
cc.logID(3500);
return;
}
t._setSceneGraphPriority(null);
t._setFixedPriority(e);
t._setRegistered(!0);
t._setPaused(!1);
this._addListener(t);
} else {
t._setSceneGraphPriority(e);
t._setFixedPriority(0);
t._setRegistered(!0);
this._addListener(t);
}
return t;
}
} else cc.warnID(3506);
},
addCustomListener: function(t, e) {
var i = new cc.EventListener.create({
event: cc.EventListener.CUSTOM,
eventName: t,
callback: e
});
this.addListener(i, 1);
return i;
},
removeListener: function(t) {
if (null != t) {
var e, i = this._listenersMap;
for (var n in i) {
var r = i[n], s = r.getFixedPriorityListeners(), o = r.getSceneGraphPriorityListeners();
(e = this._removeListenerInVector(o, t)) ? this._setDirty(t._getListenerID(), this.DIRTY_SCENE_GRAPH_PRIORITY) : (e = this._removeListenerInVector(s, t)) && this._setDirty(t._getListenerID(), this.DIRTY_FIXED_PRIORITY);
if (r.empty()) {
delete this._priorityDirtyFlagMap[t._getListenerID()];
delete i[n];
}
if (e) break;
}
if (!e) for (var a = this._toAddedListeners, c = a.length - 1; c >= 0; c--) {
var l = a[c];
if (l === t) {
cc.js.array.removeAt(a, c);
l._setRegistered(!1);
break;
}
}
this._currentTouchListener === t && this._clearCurTouch();
}
},
_clearCurTouch: function() {
this._currentTouchListener = null;
this._currentTouch = null;
},
_removeListenerInCallback: function(t, e) {
if (null == t) return !1;
for (var i = t.length - 1; i >= 0; i--) {
var n = t[i];
if (n._onCustomEvent === e || n._onEvent === e) {
n._setRegistered(!1);
if (null != n._getSceneGraphPriority()) {
this._dissociateNodeAndEventListener(n._getSceneGraphPriority(), n);
n._setSceneGraphPriority(null);
}
0 === this._inDispatch ? cc.js.array.removeAt(t, i) : this._toRemovedListeners.push(n);
return !0;
}
}
return !1;
},
_removeListenerInVector: function(t, e) {
if (null == t) return !1;
for (var i = t.length - 1; i >= 0; i--) {
var n = t[i];
if (n === e) {
n._setRegistered(!1);
if (null != n._getSceneGraphPriority()) {
this._dissociateNodeAndEventListener(n._getSceneGraphPriority(), n);
n._setSceneGraphPriority(null);
}
0 === this._inDispatch ? cc.js.array.removeAt(t, i) : this._toRemovedListeners.push(n);
return !0;
}
}
return !1;
},
removeListeners: function(t, e) {
var i = this;
if (cc.js.isNumber(t) || t instanceof cc._BaseNode) if (void 0 !== t._id) {
var n, s = i._nodeListenersMap[t._id];
if (s) {
var o = cc.js.array.copy(s);
for (n = 0; n < o.length; n++) i.removeListener(o[n]);
delete i._nodeListenersMap[t._id];
}
var a = i._toAddedListeners;
for (n = 0; n < a.length; ) {
var c = a[n];
if (c._getSceneGraphPriority() === t) {
c._setSceneGraphPriority(null);
c._setRegistered(!1);
a.splice(n, 1);
} else ++n;
}
if (!0 === e) {
var l, u = t.children;
for (n = 0, l = u.length; n < l; n++) i.removeListeners(u[n], !0);
}
} else t === cc.EventListener.TOUCH_ONE_BY_ONE ? i._removeListenersForListenerID(r.TOUCH_ONE_BY_ONE) : t === cc.EventListener.TOUCH_ALL_AT_ONCE ? i._removeListenersForListenerID(r.TOUCH_ALL_AT_ONCE) : t === cc.EventListener.MOUSE ? i._removeListenersForListenerID(r.MOUSE) : t === cc.EventListener.ACCELERATION ? i._removeListenersForListenerID(r.ACCELERATION) : t === cc.EventListener.KEYBOARD ? i._removeListenersForListenerID(r.KEYBOARD) : cc.logID(3501); else cc.warnID(3506);
},
removeCustomListeners: function(t) {
this._removeListenersForListenerID(t);
},
removeAllListeners: function() {
var t = this._listenersMap, e = this._internalCustomListenerIDs;
for (var i in t) -1 === e.indexOf(i) && this._removeListenersForListenerID(i);
},
setPriority: function(t, e) {
if (null != t) {
var i = this._listenersMap;
for (var n in i) {
var r = i[n].getFixedPriorityListeners();
if (r) {
if (-1 !== r.indexOf(t)) {
null != t._getSceneGraphPriority() && cc.logID(3502);
if (t._getFixedPriority() !== e) {
t._setFixedPriority(e);
this._setDirty(t._getListenerID(), this.DIRTY_FIXED_PRIORITY);
}
return;
}
}
}
}
},
setEnabled: function(t) {
this._isEnabled = t;
},
isEnabled: function() {
return this._isEnabled;
},
dispatchEvent: function(t) {
if (this._isEnabled) {
this._updateDirtyFlagForSceneGraph();
this._inDispatch++;
if (t && t.getType) if (t.getType().startsWith(cc.Event.TOUCH)) {
this._dispatchTouchEvent(t);
this._inDispatch--;
} else {
var e = o(t);
this._sortEventListeners(e);
var i = this._listenersMap[e];
if (null != i) {
this._dispatchEventToListeners(i, this._onListenerCallback, t);
this._onUpdateListeners(i);
}
this._inDispatch--;
} else cc.errorID(3511);
}
},
_onListenerCallback: function(t, e) {
e.currentTarget = t._target;
t._onEvent(e);
return e.isStopped();
},
dispatchCustomEvent: function(t, e) {
var i = new cc.Event.EventCustom(t);
i.setUserData(e);
this.dispatchEvent(i);
}
};
n.get(cc, "eventManager", (function() {
cc.errorID(1405, "cc.eventManager", "cc.EventTarget or cc.systemEvent");
return a;
}));
e.exports = cc.internal.eventManager = a;
}), {
"../platform/js": 250,
"./CCEventListener": 151
} ],
153: [ (function(t, e, i) {
"use strict";
cc.Touch = function(t, e, i) {
this._lastModified = 0;
this.setTouchInfo(i, t, e);
};
cc.Touch.prototype = {
constructor: cc.Touch,
getLocation: function() {
return cc.v2(this._point.x, this._point.y);
},
getLocationX: function() {
return this._point.x;
},
getLocationY: function() {
return this._point.y;
},
getPreviousLocation: function() {
return cc.v2(this._prevPoint.x, this._prevPoint.y);
},
getStartLocation: function() {
return cc.v2(this._startPoint.x, this._startPoint.y);
},
getDelta: function() {
return this._point.sub(this._prevPoint);
},
getLocationInView: function() {
return cc.v2(this._point.x, cc.view._designResolutionSize.height - this._point.y);
},
getPreviousLocationInView: function() {
return cc.v2(this._prevPoint.x, cc.view._designResolutionSize.height - this._prevPoint.y);
},
getStartLocationInView: function() {
return cc.v2(this._startPoint.x, cc.view._designResolutionSize.height - this._startPoint.y);
},
getID: function() {
return this._id;
},
setTouchInfo: function(t, e, i) {
this._prevPoint = this._point;
this._point = cc.v2(e || 0, i || 0);
this._id = t;
if (!this._startPointCaptured) {
this._startPoint = cc.v2(this._point);
cc.view._convertPointWithScale(this._startPoint);
this._startPointCaptured = !0;
}
},
_setPoint: function(t, e) {
if (void 0 === e) {
this._point.x = t.x;
this._point.y = t.y;
} else {
this._point.x = t;
this._point.y = e;
}
},
_setPrevPoint: function(t, e) {
this._prevPoint = void 0 === e ? cc.v2(t.x, t.y) : cc.v2(t || 0, e || 0);
}
};
}), {} ],
154: [ (function(t, e, i) {
"use strict";
t("./CCEvent");
t("./CCTouch");
t("./CCEventListener");
var n = t("./CCEventManager");
e.exports = n;
0;
}), {
"./CCEvent": 150,
"./CCEventListener": 151,
"./CCEventManager": 152,
"./CCTouch": 153
} ],
155: [ (function(t, e, i) {
"use strict";
var n = cc.js, r = t("../platform/callbacks-invoker");
function s() {
r.call(this);
}
n.extend(s, r);
s.prototype.emit = function(t, e) {
var i = t.type, n = this._callbackTable[i];
if (n) {
var r = !n.isInvoking;
n.isInvoking = !0;
for (var s = n.callbackInfos, o = 0, a = s.length; o < a; ++o) {
var c = s[o];
if (c && c.callback) {
c.callback.call(c.target, t, e);
if (t._propagationImmediateStopped) break;
}
}
if (r) {
n.isInvoking = !1;
n.containCanceled && n.purgeCanceled();
}
}
};
e.exports = s;
0;
}), {
"../platform/callbacks-invoker": 243
} ],
156: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("../platform/callbacks-invoker"), s = n.array.fastRemove;
function o() {
r.call(this);
}
n.extend(o, r);
var a = o.prototype;
a.__on = a.on;
a.on = function(t, e, i, n) {
if (e) {
if (!this.hasEventListener(t, e, i)) {
this.__on(t, e, i, n);
i && i.__eventTargets && i.__eventTargets.push(this);
}
return e;
}
cc.errorID(6800);
};
a.__off = a.off;
a.off = function(t, e, i) {
if (e) {
this.__off(t, e, i);
i && i.__eventTargets && s(i.__eventTargets, this);
} else {
var n = this._callbackTable[t];
if (!n) return;
for (var r = n.callbackInfos, o = 0; o < r.length; ++o) {
var a = r[o] && r[o].target;
a && a.__eventTargets && s(a.__eventTargets, this);
}
this.removeAll(t);
}
};
a.targetOff = function(t) {
this.removeAll(t);
t && t.__eventTargets && s(t.__eventTargets, this);
};
a.once = function(t, e, i) {
this.on(t, e, i, !0);
};
a.dispatchEvent = function(t) {
this.emit(t.type, t);
};
cc.EventTarget = e.exports = o;
}), {
"../platform/callbacks-invoker": 243,
"../platform/js": 250
} ],
157: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
cc.Event = function(t, e) {
this.type = t;
this.bubbles = !!e;
this.target = null;
this.currentTarget = null;
this.eventPhase = 0;
this._propagationStopped = !1;
this._propagationImmediateStopped = !1;
};
cc.Event.prototype = {
constructor: cc.Event,
unuse: function() {
this.type = cc.Event.NO_TYPE;
this.target = null;
this.currentTarget = null;
this.eventPhase = cc.Event.NONE;
this._propagationStopped = !1;
this._propagationImmediateStopped = !1;
},
reuse: function(t, e) {
this.type = t;
this.bubbles = e || !1;
},
stopPropagation: function() {
this._propagationStopped = !0;
},
stopPropagationImmediate: function() {
this._propagationImmediateStopped = !0;
},
isStopped: function() {
return this._propagationStopped || this._propagationImmediateStopped;
},
getCurrentTarget: function() {
return this.currentTarget;
},
getType: function() {
return this.type;
}
};
cc.Event.NO_TYPE = "no_type";
cc.Event.TOUCH = "touch";
cc.Event.MOUSE = "mouse";
cc.Event.KEYBOARD = "keyboard";
cc.Event.ACCELERATION = "acceleration";
cc.Event.NONE = 0;
cc.Event.CAPTURING_PHASE = 1;
cc.Event.AT_TARGET = 2;
cc.Event.BUBBLING_PHASE = 3;
var r = function(t, e) {
cc.Event.call(this, t, e);
this.detail = null;
};
n.extend(r, cc.Event);
r.prototype.reset = r;
r.prototype.setUserData = function(t) {
this.detail = t;
};
r.prototype.getUserData = function() {
return this.detail;
};
r.prototype.getEventName = cc.Event.prototype.getType;
var s = new n.Pool(10);
r.put = function(t) {
s.put(t);
};
r.get = function(t, e) {
var i = s._get();
i ? i.reset(t, e) : i = new r(t, e);
return i;
};
cc.Event.EventCustom = r;
e.exports = cc.Event;
}), {
"../platform/js": 250
} ],
158: [ (function(t, e, i) {
"use strict";
t("./event");
t("./event-listeners");
t("./event-target");
t("./system-event");
}), {
"./event": 157,
"./event-listeners": 155,
"./event-target": 156,
"./system-event": 159
} ],
159: [ (function(t, e, i) {
"use strict";
var n = t("../event/event-target"), r = t("../event-manager"), s = t("../platform/CCInputManager"), o = cc.Enum({
KEY_DOWN: "keydown",
KEY_UP: "keyup",
DEVICEMOTION: "devicemotion"
}), a = null, c = null, l = cc.Class({
name: "SystemEvent",
extends: n,
statics: {
EventType: o
},
setAccelerometerEnabled: function(t) {
0;
t && window.DeviceMotionEvent && "function" == typeof DeviceMotionEvent.requestPermission ? DeviceMotionEvent.requestPermission().then((function(t) {
console.log("Device Motion Event request permission: " + t);
s.setAccelerometerEnabled("granted" === t);
})) : s.setAccelerometerEnabled(t);
},
setAccelerometerInterval: function(t) {
0;
s.setAccelerometerInterval(t);
},
on: function(t, e, i, n) {
0;
this._super(t, e, i, n);
if (t === o.KEY_DOWN || t === o.KEY_UP) {
a || (a = cc.EventListener.create({
event: cc.EventListener.KEYBOARD,
onKeyPressed: function(t, e) {
e.type = o.KEY_DOWN;
cc.systemEvent.dispatchEvent(e);
},
onKeyReleased: function(t, e) {
e.type = o.KEY_UP;
cc.systemEvent.dispatchEvent(e);
}
}));
r.hasEventListener(cc.EventListener.ListenerID.KEYBOARD) || r.addListener(a, 1);
}
if (t === o.DEVICEMOTION) {
c || (c = cc.EventListener.create({
event: cc.EventListener.ACCELERATION,
callback: function(t, e) {
e.type = o.DEVICEMOTION;
cc.systemEvent.dispatchEvent(e);
}
}));
r.hasEventListener(cc.EventListener.ListenerID.ACCELERATION) || r.addListener(c, 1);
}
},
off: function(t, e, i) {
0;
this._super(t, e, i);
if (a && (t === o.KEY_DOWN || t === o.KEY_UP)) {
var n = this.hasEventListener(o.KEY_DOWN), s = this.hasEventListener(o.KEY_UP);
n || s || r.removeListener(a);
}
c && t === o.DEVICEMOTION && r.removeListener(c);
}
});
cc.SystemEvent = e.exports = l;
cc.systemEvent = new cc.SystemEvent();
}), {
"../event-manager": 154,
"../event/event-target": 156,
"../platform/CCInputManager": 234
} ],
160: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = o(t("../value-types/vec3")), r = o(t("../value-types/mat3")), s = o(t("./enums"));
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
var a = new n.default(), c = new n.default(), l = new r.default(), u = function(t, e, i) {
var r = l.m, s = i.m;
r[0] = Math.abs(s[0]);
r[1] = Math.abs(s[1]);
r[2] = Math.abs(s[2]);
r[3] = Math.abs(s[4]);
r[4] = Math.abs(s[5]);
r[5] = Math.abs(s[6]);
r[6] = Math.abs(s[8]);
r[7] = Math.abs(s[9]);
r[8] = Math.abs(s[10]);
n.default.transformMat3(t, e, l);
}, h = (function() {
t.create = function(e, i, n, r, s, o) {
return new t(e, i, n, r, s, o);
};
t.clone = function(e) {
return new t(e.center.x, e.center.y, e.center.z, e.halfExtents.x, e.halfExtents.y, e.halfExtents.z);
};
t.copy = function(t, e) {
n.default.copy(t.center, e.center);
n.default.copy(t.halfExtents, e.halfExtents);
return t;
};
t.fromPoints = function(t, e, i) {
n.default.scale(t.center, n.default.add(a, e, i), .5);
n.default.scale(t.halfExtents, n.default.sub(c, i, e), .5);
return t;
};
t.set = function(t, e, i, r, s, o, a) {
n.default.set(t.center, e, i, r);
n.default.set(t.halfExtents, s, o, a);
return t;
};
function t(t, e, i, r, o, a) {
this.center = void 0;
this.halfExtents = void 0;
this._type = void 0;
this._type = s.default.SHAPE_AABB;
this.center = new n.default(t, e, i);
this.halfExtents = new n.default(r, o, a);
}
var e = t.prototype;
e.getBoundary = function(t, e) {
n.default.sub(t, this.center, this.halfExtents);
n.default.add(e, this.center, this.halfExtents);
};
e.transform = function(t, e, i, r, s) {
s || (s = this);
n.default.transformMat4(s.center, this.center, t);
u(s.halfExtents, this.halfExtents, t);
};
return t;
})();
i.default = h;
e.exports = i.default;
}), {
"../value-types/mat3": 329,
"../value-types/vec3": 338,
"./enums": 162
} ],
161: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.point_plane = f;
i.pt_point_plane = function(t, e, i) {
var r = f(e, i);
return n.Vec3.subtract(t, e, n.Vec3.multiplyScalar(t, i.n, r));
};
i.pt_point_aabb = function(t, e, i) {
n.Vec3.copy(t, e);
n.Vec3.subtract(c, i.center, i.halfExtents);
n.Vec3.add(l, i.center, i.halfExtents);
t.x = t.x < c.x ? c.x : t.x;
t.y = t.y < c.x ? c.y : t.y;
t.z = t.z < c.x ? c.z : t.z;
t.x = t.x > l.x ? l.x : t.x;
t.y = t.y > l.x ? l.y : t.y;
t.z = t.z > l.x ? l.z : t.z;
return t;
};
i.pt_point_obb = function(t, e, i) {
var c = i.orientation.m;
n.Vec3.set(r, c[0], c[1], c[2]);
n.Vec3.set(s, c[3], c[4], c[5]);
n.Vec3.set(o, c[6], c[7], c[8]);
u[0] = r;
u[1] = s;
u[2] = o;
h[0] = i.halfExtents.x;
h[1] = i.halfExtents.y;
h[2] = i.halfExtents.z;
n.Vec3.subtract(a, e, i.center);
n.Vec3.set(t, i.center.x, i.center.y, i.center.z);
for (var l = 0; l < 3; l++) {
var f = n.Vec3.dot(a, u[l]);
f > h[l] && (f = h[l]);
f < -h[l] && (f = -h[l]);
t.x += f * u[l].x;
t.y += f * u[l].y;
t.z += f * u[l].z;
}
return t;
};
var n = t("../value-types"), r = new n.Vec3(), s = new n.Vec3(), o = new n.Vec3(), a = new n.Vec3(), c = new n.Vec3(), l = new n.Vec3(), u = new Array(3), h = new Array(3);
function f(t, e) {
return n.Vec3.dot(e.n, t) - e.d;
}
}), {
"../value-types": 328
} ],
162: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
i.default = {
SHAPE_RAY: 1,
SHAPE_LINE: 2,
SHAPE_SPHERE: 4,
SHAPE_AABB: 8,
SHAPE_OBB: 16,
SHAPE_PLANE: 32,
SHAPE_TRIANGLE: 64,
SHAPE_FRUSTUM: 128,
SHAPE_FRUSTUM_ACCURATE: 256
};
e.exports = i.default;
}), {} ],
163: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.frustum = void 0;
var n = t("../value-types"), r = o(t("./enums")), s = o(t("./plane"));
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
function a(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function c(t, e, i) {
e && a(t.prototype, e);
i && a(t, i);
return t;
}
var l = new Array(8);
l[0] = new n.Vec3(1, 1, 1);
l[1] = new n.Vec3(-1, 1, 1);
l[2] = new n.Vec3(-1, -1, 1);
l[3] = new n.Vec3(1, -1, 1);
l[4] = new n.Vec3(1, 1, -1);
l[5] = new n.Vec3(-1, 1, -1);
l[6] = new n.Vec3(-1, -1, -1);
l[7] = new n.Vec3(1, -1, -1);
var u = (function() {
t.create = function() {
return new t();
};
t.clone = function(e) {
return t.copy(new t(), e);
};
t.copy = function(t, e) {
t._type = e._type;
for (var i = 0; i < 6; ++i) s.default.copy(t.planes[i], e.planes[i]);
for (var r = 0; r < 8; ++r) n.Vec3.copy(t.vertices[r], e.vertices[r]);
return t;
};
c(t, [ {
key: "accurate",
set: function(t) {
this._type = t ? r.default.SHAPE_FRUSTUM_ACCURATE : r.default.SHAPE_FRUSTUM;
}
} ]);
function t() {
this.planes = void 0;
this.vertices = void 0;
this._type = void 0;
this._type = r.default.SHAPE_FRUSTUM;
this.planes = new Array(6);
for (var t = 0; t < 6; ++t) this.planes[t] = s.default.create(0, 0, 0, 0);
this.vertices = new Array(8);
for (var e = 0; e < 8; ++e) this.vertices[e] = new n.Vec3();
}
var e = t.prototype;
e.update = function(t, e) {
var i = t.m;
n.Vec3.set(this.planes[0].n, i[3] + i[0], i[7] + i[4], i[11] + i[8]);
this.planes[0].d = -(i[15] + i[12]);
n.Vec3.set(this.planes[1].n, i[3] - i[0], i[7] - i[4], i[11] - i[8]);
this.planes[1].d = -(i[15] - i[12]);
n.Vec3.set(this.planes[2].n, i[3] + i[1], i[7] + i[5], i[11] + i[9]);
this.planes[2].d = -(i[15] + i[13]);
n.Vec3.set(this.planes[3].n, i[3] - i[1], i[7] - i[5], i[11] - i[9]);
this.planes[3].d = -(i[15] - i[13]);
n.Vec3.set(this.planes[4].n, i[3] + i[2], i[7] + i[6], i[11] + i[10]);
this.planes[4].d = -(i[15] + i[14]);
n.Vec3.set(this.planes[5].n, i[3] - i[2], i[7] - i[6], i[11] - i[10]);
this.planes[5].d = -(i[15] - i[14]);
if (this._type === r.default.SHAPE_FRUSTUM_ACCURATE) {
for (var s = 0; s < 6; s++) {
var o = this.planes[s], a = 1 / o.n.length();
n.Vec3.multiplyScalar(o.n, o.n, a);
o.d *= a;
}
for (var c = 0; c < 8; c++) n.Vec3.transformMat4(this.vertices[c], l[c], e);
}
};
e.transform = function(t) {
if (this._type === r.default.SHAPE_FRUSTUM_ACCURATE) {
for (var e = 0; e < 8; e++) n.Vec3.transformMat4(this.vertices[e], this.vertices[e], t);
s.default.fromPoints(this.planes[0], this.vertices[1], this.vertices[5], this.vertices[6]);
s.default.fromPoints(this.planes[1], this.vertices[3], this.vertices[7], this.vertices[4]);
s.default.fromPoints(this.planes[2], this.vertices[6], this.vertices[7], this.vertices[3]);
s.default.fromPoints(this.planes[3], this.vertices[0], this.vertices[4], this.vertices[5]);
s.default.fromPoints(this.planes[4], this.vertices[2], this.vertices[3], this.vertices[0]);
s.default.fromPoints(this.planes[0], this.vertices[7], this.vertices[6], this.vertices[5]);
}
};
return t;
})();
i.frustum = u;
u.createOrtho = (function() {
var t = new n.Vec3();
return function(e, i, r, o, a, c) {
var l = i / 2, u = r / 2;
n.Vec3.set(t, l, u, o);
n.Vec3.transformMat4(e.vertices[0], t, c);
n.Vec3.set(t, -l, u, o);
n.Vec3.transformMat4(e.vertices[1], t, c);
n.Vec3.set(t, -l, -u, o);
n.Vec3.transformMat4(e.vertices[2], t, c);
n.Vec3.set(t, l, -u, o);
n.Vec3.transformMat4(e.vertices[3], t, c);
n.Vec3.set(t, l, u, a);
n.Vec3.transformMat4(e.vertices[4], t, c);
n.Vec3.set(t, -l, u, a);
n.Vec3.transformMat4(e.vertices[5], t, c);
n.Vec3.set(t, -l, -u, a);
n.Vec3.transformMat4(e.vertices[6], t, c);
n.Vec3.set(t, l, -u, a);
n.Vec3.transformMat4(e.vertices[7], t, c);
s.default.fromPoints(e.planes[0], e.vertices[1], e.vertices[6], e.vertices[5]);
s.default.fromPoints(e.planes[1], e.vertices[3], e.vertices[4], e.vertices[7]);
s.default.fromPoints(e.planes[2], e.vertices[6], e.vertices[3], e.vertices[7]);
s.default.fromPoints(e.planes[3], e.vertices[0], e.vertices[5], e.vertices[4]);
s.default.fromPoints(e.planes[4], e.vertices[2], e.vertices[0], e.vertices[3]);
s.default.fromPoints(e.planes[0], e.vertices[7], e.vertices[5], e.vertices[6]);
};
})();
}), {
"../value-types": 328,
"./enums": 162,
"./plane": 168
} ],
164: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = {
enums: !0,
Triangle: !0,
Aabb: !0,
Ray: !0,
intersect: !0,
Sphere: !0,
Obb: !0,
Frustum: !0,
Line: !0,
Plane: !0
};
i.Plane = i.Line = i.Frustum = i.Obb = i.Sphere = i.intersect = i.Ray = i.Aabb = i.Triangle = i.enums = void 0;
var r = p(t("./enums"));
i.enums = r.default;
var s = p(t("./triangle"));
i.Triangle = s.default;
var o = p(t("./aabb"));
i.Aabb = o.default;
var a = p(t("./ray"));
i.Ray = a.default;
var c = p(t("./intersect"));
i.intersect = c.default;
var l = p(t("./sphere"));
i.Sphere = l.default;
var u = p(t("./obb"));
i.Obb = u.default;
var h = p(t("./frustum"));
i.Frustum = h.default;
var f = p(t("./line"));
i.Line = f.default;
var _ = p(t("./plane"));
i.Plane = _.default;
var d = t("./distance");
Object.keys(d).forEach((function(t) {
"default" !== t && "__esModule" !== t && (Object.prototype.hasOwnProperty.call(n, t) || (i[t] = d[t]));
}));
function p(t) {
return t && t.__esModule ? t : {
default: t
};
}
cc.geomUtils = e.exports;
}), {
"./aabb": 160,
"./distance": 161,
"./enums": 162,
"./frustum": 163,
"./intersect": 165,
"./line": 166,
"./obb": 167,
"./plane": 168,
"./ray": 169,
"./sphere": 170,
"./triangle": 171
} ],
165: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = f(t("../../renderer/gfx")), r = f(t("../../renderer/memop/recycle-pool")), s = t("../value-types"), o = f(t("./aabb")), a = (function(t) {
if (t && t.__esModule) return t;
if (null === t || "object" != typeof t && "function" != typeof t) return {
default: t
};
var e = h();
if (e && e.has(t)) return e.get(t);
var i = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
for (var r in t) if (Object.prototype.hasOwnProperty.call(t, r)) {
var s = n ? Object.getOwnPropertyDescriptor(t, r) : null;
s && (s.get || s.set) ? Object.defineProperty(i, r, s) : i[r] = t[r];
}
i.default = t;
e && e.set(t, i);
return i;
})(t("./distance")), c = f(t("./enums")), l = f(t("./ray")), u = f(t("./triangle"));
function h() {
if ("function" != typeof WeakMap) return null;
var t = new WeakMap();
h = function() {
return t;
};
return t;
}
function f(t) {
return t && t.__esModule ? t : {
default: t
};
}
var _ = (function() {
var t = u.default.create(), e = Infinity;
function i(t, e, i, n) {
s.Vec3.set(t, e[i * n], e[i * n + 1], e[i * n + 2]);
}
return function(r, s) {
e = Infinity;
for (var o = s._subMeshes, a = 0; a < o.length; a++) if (o[a]._primitiveType === n.default.PT_TRIANGLES) for (var c = s._subDatas[a] || s._subDatas[0], l = s._getAttrMeshData(a, n.default.ATTR_POSITION), u = c.getIData(Uint16Array), h = c.vfm.element(n.default.ATTR_POSITION).num, f = 0; f < u.length; f += 3) {
i(t.a, l, u[f], h);
i(t.b, l, u[f + 1], h);
i(t.c, l, u[f + 2], h);
var _ = y(r, t);
_ > 0 && _ < e && (e = _);
}
return e;
};
})(), d = (function() {
function t(e, i) {
for (var n = e.children, r = n.length - 1; r >= 0; r--) {
t(n[r], i);
}
i(e);
}
function e(t, e) {
return t.distance - e.distance;
}
function i(t, e, i) {
var n = i.m, r = e.x, s = e.y, o = e.z, a = n[3] * r + n[7] * s + n[11] * o;
a = a ? 1 / a : 1;
t.x = (n[0] * r + n[4] * s + n[8] * o) * a;
t.y = (n[1] * r + n[5] * s + n[9] * o) * a;
t.z = (n[2] * r + n[6] * s + n[10] * o) * a;
return t;
}
var n = new r.default(function() {
return {
distance: 0,
node: null
};
}, 1), a = [], c = o.default.create(), u = new s.Vec3(), h = new s.Vec3(), f = new l.default(), _ = cc.mat4(), d = cc.mat4(), p = new s.Vec3();
function m(t) {
return t > 0 && t < Infinity;
}
return function(r, l, y, v) {
n.reset();
a.length = 0;
t(r = r || cc.director.getScene(), (function(t) {
if (!v || v(t)) {
s.Mat4.invert(d, t.getWorldMatrix(_));
s.Vec3.transformMat4(f.o, l.o, d);
s.Vec3.normalize(f.d, i(f.d, l.d, d));
var e = Infinity, r = t._renderComponent;
if (r instanceof cc.MeshRenderer) e = x(f, r._boundingBox); else if (t.width && t.height) {
s.Vec3.set(u, -t.width * t.anchorX, -t.height * t.anchorY, t.z);
s.Vec3.set(h, t.width * (1 - t.anchorX), t.height * (1 - t.anchorY), t.z);
o.default.fromPoints(c, u, h);
e = x(f, c);
}
if (m(e)) {
y && (e = y(f, t, e));
if (m(e)) {
s.Vec3.scale(p, f.d, e);
i(p, p, _);
var g = n.add();
g.node = t;
g.distance = s.Vec3.mag(p);
a.push(g);
}
}
}
}));
a.sort(e);
return a;
};
})(), p = (function() {
var t = new s.Vec3(0, 0, 0);
return function(e, i) {
var n = s.Vec3.dot(e.d, i.n);
if (Math.abs(n) < Number.EPSILON) return 0;
s.Vec3.multiplyScalar(t, i.n, i.d);
var r = s.Vec3.dot(s.Vec3.subtract(t, t, e.o), i.n) / n;
return r < 0 ? 0 : r;
};
})(), m = (function() {
var t = new s.Vec3(0, 0, 0);
return function(e, i) {
s.Vec3.subtract(t, e.e, e.s);
var n = (i.d - s.Vec3.dot(e.s, i.n)) / s.Vec3.dot(t, i.n);
return n < 0 || n > 1 ? 0 : n;
};
})(), y = (function() {
var t = new s.Vec3(0, 0, 0), e = new s.Vec3(0, 0, 0), i = new s.Vec3(0, 0, 0), n = new s.Vec3(0, 0, 0), r = new s.Vec3(0, 0, 0);
return function(o, a, c) {
s.Vec3.subtract(t, a.b, a.a);
s.Vec3.subtract(e, a.c, a.a);
s.Vec3.cross(i, o.d, e);
var l = s.Vec3.dot(t, i);
if (l < Number.EPSILON && (!c || l > -Number.EPSILON)) return 0;
var u = 1 / l;
s.Vec3.subtract(n, o.o, a.a);
var h = s.Vec3.dot(n, i) * u;
if (h < 0 || h > 1) return 0;
s.Vec3.cross(r, n, t);
var f = s.Vec3.dot(o.d, r) * u;
if (f < 0 || h + f > 1) return 0;
var _ = s.Vec3.dot(e, r) * u;
return _ < 0 ? 0 : _;
};
})(), v = y, g = (function() {
var t = new s.Vec3(0, 0, 0), e = new s.Vec3(0, 0, 0), i = new s.Vec3(0, 0, 0), n = new s.Vec3(0, 0, 0), r = new s.Vec3(0, 0, 0), o = new s.Vec3(0, 0, 0);
return function(a, c, l) {
s.Vec3.subtract(t, c.b, c.a);
s.Vec3.subtract(e, c.c, c.a);
s.Vec3.subtract(i, a.s, a.e);
s.Vec3.cross(r, t, e);
var u = s.Vec3.dot(i, r);
if (u <= 0) return 0;
s.Vec3.subtract(n, a.s, c.a);
var h = s.Vec3.dot(n, r);
if (h < 0 || h > u) return 0;
s.Vec3.cross(o, i, n);
var f = s.Vec3.dot(e, o);
if (f < 0 || f > u) return 0;
var _ = -s.Vec3.dot(t, o);
if (_ < 0 || f + _ > u) return 0;
if (l) {
var d = 1 / u, p = 1 - (f *= d) - (_ *= d);
s.Vec3.set(l, c.a.x * p + c.b.x * f + c.c.x * _, c.a.y * p + c.b.y * f + c.c.y * _, c.a.z * p + c.b.z * f + c.c.z * _);
}
return 1;
};
})(), b = (function() {
var t = new s.Vec3(0, 0, 0), e = new s.Vec3(0, 0, 0), i = new s.Vec3(0, 0, 0), n = new s.Vec3(0, 0, 0), r = new s.Vec3(0, 0, 0), o = new s.Vec3(0, 0, 0), a = new s.Vec3(0, 0, 0);
return function(c, l, u, h, f, _, d) {
s.Vec3.subtract(t, l, c);
s.Vec3.subtract(e, u, c);
s.Vec3.subtract(i, h, c);
s.Vec3.subtract(n, f, c);
s.Vec3.cross(o, n, t);
var p = s.Vec3.dot(e, o);
if (p >= 0) {
var m = -s.Vec3.dot(i, o);
if (m < 0) return 0;
var y = s.Vec3.dot(s.Vec3.cross(a, t, i), e);
if (y < 0) return 0;
if (d) {
var v = 1 / (m + p + y);
m *= v;
p *= v;
y *= v;
s.Vec3.set(d, u.x * m + h.x * p + f.x * y, u.y * m + h.y * p + f.y * y, u.z * m + h.z * p + f.z * y);
}
} else {
s.Vec3.subtract(r, _, c);
var g = s.Vec3.dot(r, o);
if (g < 0) return 0;
var b = s.Vec3.dot(s.Vec3.cross(a, t, e), r);
if (b < 0) return 0;
if (d) {
var C = 1 / (g + (p = -p) + b);
g *= C;
p *= C;
b *= C;
s.Vec3.set(d, u.x * g + _.x * p + f.x * b, u.y * g + _.y * p + f.y * b, u.z * g + _.z * p + f.z * b);
}
}
return 1;
};
})(), C = (function() {
var t = new s.Vec3(0, 0, 0);
return function(e, i) {
var n = i.radius, r = i.center, o = e.o, a = e.d, c = n * n;
s.Vec3.subtract(t, r, o);
var l = t.lengthSqr(), u = s.Vec3.dot(t, a), h = c - (l - u * u);
if (h < 0) return 0;
var f = Math.sqrt(h), _ = l < c ? u + f : u - f;
return _ < 0 ? 0 : _;
};
})(), x = (function() {
var t = new s.Vec3(), e = new s.Vec3();
return function(i, n) {
var r = i.o, o = i.d, a = 1 / o.x, c = 1 / o.y, l = 1 / o.z;
s.Vec3.subtract(t, n.center, n.halfExtents);
s.Vec3.add(e, n.center, n.halfExtents);
var u = (t.x - r.x) * a, h = (e.x - r.x) * a, f = (t.y - r.y) * c, _ = (e.y - r.y) * c, d = (t.z - r.z) * l, p = (e.z - r.z) * l, m = Math.max(Math.max(Math.min(u, h), Math.min(f, _)), Math.min(d, p)), y = Math.min(Math.min(Math.max(u, h), Math.max(f, _)), Math.max(d, p));
return y < 0 || m > y ? 0 : m;
};
})(), A = x, S = (function() {
var t = new s.Vec3(), e = new s.Vec3(), i = new s.Vec3(), n = new s.Vec3(), r = new s.Vec3(), o = new s.Vec3(), a = new s.Vec3(), c = new Array(3), l = new Array(3), u = new Array(3), h = new Array(6);
return function(f, _) {
c[0] = _.halfExtents.x;
c[1] = _.halfExtents.y;
c[2] = _.halfExtents.z;
t = _.center;
e = f.o;
i = f.d;
var d = _.orientation.m;
s.Vec3.set(n, d[0], d[1], d[2]);
s.Vec3.set(r, d[3], d[4], d[5]);
s.Vec3.set(o, d[6], d[7], d[8]);
s.Vec3.subtract(a, t, e);
l[0] = s.Vec3.dot(n, i);
l[1] = s.Vec3.dot(r, i);
l[2] = s.Vec3.dot(o, i);
u[0] = s.Vec3.dot(n, a);
u[1] = s.Vec3.dot(r, a);
u[2] = s.Vec3.dot(o, a);
for (var p = 0; p < 3; ++p) {
if (0 === l[p]) {
if (-u[p] - c[p] > 0 || -u[p] + c[p] < 0) return 0;
l[p] = 1e-7;
}
h[2 * p + 0] = (u[p] + c[p]) / l[p];
h[2 * p + 1] = (u[p] - c[p]) / l[p];
}
var m = Math.max(Math.max(Math.min(h[0], h[1]), Math.min(h[2], h[3])), Math.min(h[4], h[5])), y = Math.min(Math.min(Math.max(h[0], h[1]), Math.max(h[2], h[3])), Math.max(h[4], h[5]));
return y < 0 || m > y || m < 0 ? 0 : m;
};
})(), w = (function() {
var t = new s.Vec3(), e = new s.Vec3(), i = new s.Vec3(), n = new s.Vec3();
return function(r, o) {
s.Vec3.subtract(t, r.center, r.halfExtents);
s.Vec3.add(e, r.center, r.halfExtents);
s.Vec3.subtract(i, o.center, o.halfExtents);
s.Vec3.add(n, o.center, o.halfExtents);
return t.x <= n.x && e.x >= i.x && t.y <= n.y && e.y >= i.y && t.z <= n.z && e.z >= i.z;
};
})();
function T(t, e, i) {
s.Vec3.set(i[0], t.x, e.y, e.z);
s.Vec3.set(i[1], t.x, e.y, t.z);
s.Vec3.set(i[2], t.x, t.y, e.z);
s.Vec3.set(i[3], t.x, t.y, t.z);
s.Vec3.set(i[4], e.x, e.y, e.z);
s.Vec3.set(i[5], e.x, e.y, t.z);
s.Vec3.set(i[6], e.x, t.y, e.z);
s.Vec3.set(i[7], e.x, t.y, t.z);
}
function E(t, e, i, n, r, o) {
s.Vec3.set(o[0], t.x + i.x * e.x + n.x * e.y + r.x * e.z, t.y + i.y * e.x + n.y * e.y + r.y * e.z, t.z + i.z * e.x + n.z * e.y + r.z * e.z);
s.Vec3.set(o[1], t.x - i.x * e.x + n.x * e.y + r.x * e.z, t.y - i.y * e.x + n.y * e.y + r.y * e.z, t.z - i.z * e.x + n.z * e.y + r.z * e.z);
s.Vec3.set(o[2], t.x + i.x * e.x - n.x * e.y + r.x * e.z, t.y + i.y * e.x - n.y * e.y + r.y * e.z, t.z + i.z * e.x - n.z * e.y + r.z * e.z);
s.Vec3.set(o[3], t.x + i.x * e.x + n.x * e.y - r.x * e.z, t.y + i.y * e.x + n.y * e.y - r.y * e.z, t.z + i.z * e.x + n.z * e.y - r.z * e.z);
s.Vec3.set(o[4], t.x - i.x * e.x - n.x * e.y - r.x * e.z, t.y - i.y * e.x - n.y * e.y - r.y * e.z, t.z - i.z * e.x - n.z * e.y - r.z * e.z);
s.Vec3.set(o[5], t.x + i.x * e.x - n.x * e.y - r.x * e.z, t.y + i.y * e.x - n.y * e.y - r.y * e.z, t.z + i.z * e.x - n.z * e.y - r.z * e.z);
s.Vec3.set(o[6], t.x - i.x * e.x + n.x * e.y - r.x * e.z, t.y - i.y * e.x + n.y * e.y - r.y * e.z, t.z - i.z * e.x + n.z * e.y - r.z * e.z);
s.Vec3.set(o[7], t.x - i.x * e.x - n.x * e.y + r.x * e.z, t.y - i.y * e.x - n.y * e.y + r.y * e.z, t.z - i.z * e.x - n.z * e.y + r.z * e.z);
}
function M(t, e) {
for (var i = s.Vec3.dot(e, t[0]), n = i, r = 1; r < 8; ++r) {
var o = s.Vec3.dot(e, t[r]);
i = o < i ? o : i;
n = o > n ? o : n;
}
return [ i, n ];
}
var B = (function() {
for (var t = new Array(15), e = 0; e < 15; e++) t[e] = new s.Vec3(0, 0, 0);
for (var i = new Array(8), n = new Array(8), r = 0; r < 8; r++) {
i[r] = new s.Vec3(0, 0, 0);
n[r] = new s.Vec3(0, 0, 0);
}
var o = new s.Vec3(), a = new s.Vec3();
return function(e, r) {
var c = r.orientation.m;
s.Vec3.set(t[0], 1, 0, 0);
s.Vec3.set(t[1], 0, 1, 0);
s.Vec3.set(t[2], 0, 0, 1);
s.Vec3.set(t[3], c[0], c[1], c[2]);
s.Vec3.set(t[4], c[3], c[4], c[5]);
s.Vec3.set(t[5], c[6], c[7], c[8]);
for (var l = 0; l < 3; ++l) {
s.Vec3.cross(t[6 + 3 * l + 0], t[l], t[0]);
s.Vec3.cross(t[6 + 3 * l + 1], t[l], t[1]);
s.Vec3.cross(t[6 + 3 * l + 1], t[l], t[2]);
}
s.Vec3.subtract(o, e.center, e.halfExtents);
s.Vec3.add(a, e.center, e.halfExtents);
T(o, a, i);
E(r.center, r.halfExtents, t[3], t[4], t[5], n);
for (var u = 0; u < 15; ++u) {
var h = M(i, t[u]), f = M(n, t[u]);
if (f[0] > h[1] || h[0] > f[1]) return 0;
}
return 1;
};
})(), D = function(t, e) {
var i = t.halfExtents.x * Math.abs(e.n.x) + t.halfExtents.y * Math.abs(e.n.y) + t.halfExtents.z * Math.abs(e.n.z), n = s.Vec3.dot(e.n, t.center);
return n + i < e.d ? -1 : n - i > e.d ? 0 : 1;
}, R = function(t, e) {
for (var i = 0; i < e.planes.length; i++) if (-1 === D(t, e.planes[i])) return 0;
return 1;
}, I = (function() {
for (var t = new Array(8), e = 0, i = 0, n = 0; n < t.length; n++) t[n] = new s.Vec3(0, 0, 0);
return function(n, r) {
for (var o = 0, a = !1, c = 0; c < r.planes.length; c++) {
if (-1 === (o = D(n, r.planes[c]))) return 0;
1 === o && (a = !0);
}
if (!a) return 1;
for (var l = 0; l < r.vertices.length; l++) s.Vec3.subtract(t[l], r.vertices[l], n.center);
e = 0, i = 0;
for (var u = 0; u < r.vertices.length; u++) t[u].x > n.halfExtents.x ? e++ : t[u].x < -n.halfExtents.x && i++;
if (e === r.vertices.length || i === r.vertices.length) return 0;
e = 0;
i = 0;
for (var h = 0; h < r.vertices.length; h++) t[h].y > n.halfExtents.y ? e++ : t[h].y < -n.halfExtents.y && i++;
if (e === r.vertices.length || i === r.vertices.length) return 0;
e = 0;
i = 0;
for (var f = 0; f < r.vertices.length; f++) t[f].z > n.halfExtents.z ? e++ : t[f].z < -n.halfExtents.z && i++;
return e === r.vertices.length || i === r.vertices.length ? 0 : 1;
};
})(), P = (function() {
var t = new s.Vec3(0, 0, 0), e = new s.Mat3(), i = function(t, e) {
return Math.abs(t.x) < e.x && Math.abs(t.y) < e.y && Math.abs(t.z) < e.z;
};
return function(n, r) {
s.Vec3.subtract(t, r, n.center);
s.Vec3.transformMat3(t, t, s.Mat3.transpose(e, n.orientation));
return i(t, n.halfExtents);
};
})(), O = (function() {
var t = function(t, e, i, n) {
return Math.abs(t.x * e + t.y * i + t.z * n);
};
return function(e, i) {
var n = e.orientation.m, r = e.halfExtents.x * t(i.n, n[0], n[1], n[2]) + e.halfExtents.y * t(i.n, n[3], n[4], n[5]) + e.halfExtents.z * t(i.n, n[6], n[7], n[8]), o = s.Vec3.dot(i.n, e.center);
return o + r < i.d ? -1 : o - r > i.d ? 0 : 1;
};
})(), L = function(t, e) {
for (var i = 0; i < e.planes.length; i++) if (-1 === O(t, e.planes[i])) return 0;
return 1;
}, V = (function() {
for (var t = new Array(8), e = 0, i = 0, n = 0, r = 0; r < t.length; r++) t[r] = new s.Vec3(0, 0, 0);
var o = function(t, e, i, n) {
return t.x * e + t.y * i + t.z * n;
};
return function(r, a) {
for (var c = 0, l = !1, u = 0; u < a.planes.length; u++) {
if (-1 === (c = O(r, a.planes[u]))) return 0;
1 === c && (l = !0);
}
if (!l) return 1;
for (var h = 0; h < a.vertices.length; h++) s.Vec3.subtract(t[h], a.vertices[h], r.center);
i = 0, n = 0;
for (var f = r.orientation.m, _ = 0; _ < a.vertices.length; _++) (e = o(t[_], f[0], f[1], f[2])) > r.halfExtents.x ? i++ : e < -r.halfExtents.x && n++;
if (i === a.vertices.length || n === a.vertices.length) return 0;
i = 0;
n = 0;
for (var d = 0; d < a.vertices.length; d++) (e = o(t[d], f[3], f[4], f[5])) > r.halfExtents.y ? i++ : e < -r.halfExtents.y && n++;
if (i === a.vertices.length || n === a.vertices.length) return 0;
i = 0;
n = 0;
for (var p = 0; p < a.vertices.length; p++) (e = o(t[p], f[6], f[7], f[8])) > r.halfExtents.z ? i++ : e < -r.halfExtents.z && n++;
return i === a.vertices.length || n === a.vertices.length ? 0 : 1;
};
})(), N = (function() {
for (var t = new Array(15), e = 0; e < 15; e++) t[e] = new s.Vec3(0, 0, 0);
for (var i = new Array(8), n = new Array(8), r = 0; r < 8; r++) {
i[r] = new s.Vec3(0, 0, 0);
n[r] = new s.Vec3(0, 0, 0);
}
return function(e, r) {
var o = e.orientation.m, a = r.orientation.m;
s.Vec3.set(t[0], o[0], o[1], o[2]);
s.Vec3.set(t[1], o[3], o[4], o[5]);
s.Vec3.set(t[2], o[6], o[7], o[8]);
s.Vec3.set(t[3], a[0], a[1], a[2]);
s.Vec3.set(t[4], a[3], a[4], a[5]);
s.Vec3.set(t[5], a[6], a[7], a[8]);
for (var c = 0; c < 3; ++c) {
s.Vec3.cross(t[6 + 3 * c + 0], t[c], t[0]);
s.Vec3.cross(t[6 + 3 * c + 1], t[c], t[1]);
s.Vec3.cross(t[6 + 3 * c + 1], t[c], t[2]);
}
E(e.center, e.halfExtents, t[0], t[1], t[2], i);
E(r.center, r.halfExtents, t[3], t[4], t[5], n);
for (var l = 0; l < 15; ++l) {
var u = M(i, t[l]), h = M(n, t[l]);
if (h[0] > u[1] || u[0] > h[1]) return 0;
}
return 1;
};
})(), F = function(t, e) {
var i = s.Vec3.dot(e.n, t.center), n = t.radius * e.n.length();
return i + n < e.d ? -1 : i - n > e.d ? 0 : 1;
}, z = function(t, e) {
for (var i = 0; i < e.planes.length; i++) if (-1 === F(t, e.planes[i])) return 0;
return 1;
}, k = (function() {
var t = new s.Vec3(0, 0, 0), e = [ 1, -1, 1, -1, 1, -1 ];
return function(i, n) {
for (var r = 0; r < 6; r++) {
var o = n.planes[r], a = i.radius, c = i.center, l = o.n, u = o.d, h = s.Vec3.dot(l, c);
if (h + a < u) return 0;
if (!(h - a > u)) {
s.Vec3.add(t, c, s.Vec3.multiplyScalar(t, l, a));
for (var f = 0; f < 6; f++) if (f !== r && f !== r + e[r]) {
var _ = n.planes[f];
if (s.Vec3.dot(_.n, t) < _.d) return 0;
}
}
}
return 1;
};
})(), G = function(t, e) {
var i = t.radius + e.radius;
return s.Vec3.squaredDistance(t.center, e.center) < i * i;
}, U = (function() {
var t = new s.Vec3();
return function(e, i) {
a.pt_point_aabb(t, e.center, i);
return s.Vec3.squaredDistance(e.center, t) < e.radius * e.radius;
};
})(), j = (function() {
var t = new s.Vec3();
return function(e, i) {
a.pt_point_obb(t, e.center, i);
return s.Vec3.squaredDistance(e.center, t) < e.radius * e.radius;
};
})(), H = {
rayAabb: A,
rayMesh: _,
raycast: d,
rayTriangle: v,
ray_sphere: C,
ray_aabb: x,
ray_obb: S,
ray_plane: p,
ray_triangle: y,
line_plane: m,
line_triangle: g,
line_quad: b,
sphere_sphere: G,
sphere_aabb: U,
sphere_obb: j,
sphere_plane: F,
sphere_frustum: z,
sphere_frustum_accurate: k,
aabb_aabb: w,
aabb_obb: B,
aabb_plane: D,
aabb_frustum: R,
aabb_frustum_accurate: I,
obb_obb: N,
obb_plane: O,
obb_frustum: L,
obb_frustum_accurate: V,
obb_point: P,
resolve: function(t, e, i) {
void 0 === i && (i = null);
var n = t._type, r = e._type, s = this[n | r];
return n < r ? s(t, e, i) : s(e, t, i);
}
};
H[c.default.SHAPE_RAY | c.default.SHAPE_SPHERE] = C;
H[c.default.SHAPE_RAY | c.default.SHAPE_AABB] = x;
H[c.default.SHAPE_RAY | c.default.SHAPE_OBB] = S;
H[c.default.SHAPE_RAY | c.default.SHAPE_PLANE] = p;
H[c.default.SHAPE_RAY | c.default.SHAPE_TRIANGLE] = y;
H[c.default.SHAPE_LINE | c.default.SHAPE_PLANE] = m;
H[c.default.SHAPE_LINE | c.default.SHAPE_TRIANGLE] = g;
H[c.default.SHAPE_SPHERE] = G;
H[c.default.SHAPE_SPHERE | c.default.SHAPE_AABB] = U;
H[c.default.SHAPE_SPHERE | c.default.SHAPE_OBB] = j;
H[c.default.SHAPE_SPHERE | c.default.SHAPE_PLANE] = F;
H[c.default.SHAPE_SPHERE | c.default.SHAPE_FRUSTUM] = z;
H[c.default.SHAPE_SPHERE | c.default.SHAPE_FRUSTUM_ACCURATE] = k;
H[c.default.SHAPE_AABB] = w;
H[c.default.SHAPE_AABB | c.default.SHAPE_OBB] = B;
H[c.default.SHAPE_AABB | c.default.SHAPE_PLANE] = D;
H[c.default.SHAPE_AABB | c.default.SHAPE_FRUSTUM] = R;
H[c.default.SHAPE_AABB | c.default.SHAPE_FRUSTUM_ACCURATE] = I;
H[c.default.SHAPE_OBB] = N;
H[c.default.SHAPE_OBB | c.default.SHAPE_PLANE] = O;
H[c.default.SHAPE_OBB | c.default.SHAPE_FRUSTUM] = L;
H[c.default.SHAPE_OBB | c.default.SHAPE_FRUSTUM_ACCURATE] = V;
var W = H;
i.default = W;
e.exports = i.default;
}), {
"../../renderer/gfx": 354,
"../../renderer/memop/recycle-pool": 356,
"../value-types": 328,
"./aabb": 160,
"./distance": 161,
"./enums": 162,
"./ray": 169,
"./triangle": 171
} ],
166: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("../value-types"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./enums"));
var s = (function() {
t.create = function(e, i, n, r, s, o) {
return new t(e, i, n, r, s, o);
};
t.clone = function(e) {
return new t(e.s.x, e.s.y, e.s.z, e.e.x, e.e.y, e.e.z);
};
t.copy = function(t, e) {
n.Vec3.copy(t.s, e.s);
n.Vec3.copy(t.e, e.e);
return t;
};
t.fromPoints = function(t, e, i) {
n.Vec3.copy(t.s, e);
n.Vec3.copy(t.e, i);
return t;
};
t.set = function(t, e, i, n, r, s, o) {
t.s.x = e;
t.s.y = i;
t.s.z = n;
t.e.x = r;
t.e.y = s;
t.e.z = o;
return t;
};
t.len = function(t) {
return n.Vec3.distance(t.s, t.e);
};
function t(t, e, i, s, o, a) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
void 0 === i && (i = 0);
void 0 === s && (s = 0);
void 0 === o && (o = 0);
void 0 === a && (a = -1);
this.s = void 0;
this.e = void 0;
this._type = void 0;
this._type = r.default.SHAPE_LINE;
this.s = new n.Vec3(t, e, i);
this.e = new n.Vec3(s, o, a);
}
t.prototype.length = function() {
return n.Vec3.distance(this.s, this.e);
};
return t;
})();
i.default = s;
e.exports = i.default;
}), {
"../value-types": 328,
"./enums": 162
} ],
167: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("../value-types"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./enums"));
function s(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function o(t, e, i) {
e && s(t.prototype, e);
i && s(t, i);
return t;
}
var a = new n.Vec3(), c = new n.Vec3(), l = new n.Mat3(), u = function(t, e, i) {
var r = l.m, s = i.m;
r[0] = Math.abs(s[0]);
r[1] = Math.abs(s[1]);
r[2] = Math.abs(s[2]);
r[3] = Math.abs(s[3]);
r[4] = Math.abs(s[4]);
r[5] = Math.abs(s[5]);
r[6] = Math.abs(s[6]);
r[7] = Math.abs(s[7]);
r[8] = Math.abs(s[8]);
n.Vec3.transformMat3(t, e, l);
}, h = (function() {
t.create = function(e, i, n, r, s, o, a, c, l, u, h, f, _, d, p) {
return new t(e, i, n, r, s, o, a, c, l, u, h, f, _, d, p);
};
t.clone = function(e) {
var i = e.orientation.m;
return new t(e.center.x, e.center.y, e.center.z, e.halfExtents.x, e.halfExtents.y, e.halfExtents.z, i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]);
};
t.copy = function(t, e) {
n.Vec3.copy(t.center, e.center);
n.Vec3.copy(t.halfExtents, e.halfExtents);
n.Mat3.copy(t.orientation, e.orientation);
return t;
};
t.fromPoints = function(t, e, i) {
n.Vec3.multiplyScalar(t.center, n.Vec3.add(a, e, i), .5);
n.Vec3.multiplyScalar(t.halfExtents, n.Vec3.subtract(c, i, e), .5);
n.Mat3.identity(t.orientation);
return t;
};
t.set = function(t, e, i, r, s, o, a, c, l, u, h, f, _, d, p, m) {
n.Vec3.set(t.center, e, i, r);
n.Vec3.set(t.halfExtents, s, o, a);
n.Mat3.set(t.orientation, c, l, u, h, f, _, d, p, m);
return t;
};
o(t, [ {
key: "type",
get: function() {
return this._type;
}
} ]);
function t(t, e, i, s, o, a, c, l, u, h, f, _, d, p, m) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
void 0 === i && (i = 0);
void 0 === s && (s = 1);
void 0 === o && (o = 1);
void 0 === a && (a = 1);
void 0 === c && (c = 1);
void 0 === l && (l = 0);
void 0 === u && (u = 0);
void 0 === h && (h = 0);
void 0 === f && (f = 1);
void 0 === _ && (_ = 0);
void 0 === d && (d = 0);
void 0 === p && (p = 0);
void 0 === m && (m = 1);
this.center = void 0;
this.halfExtents = void 0;
this.orientation = void 0;
this._type = void 0;
this._type = r.default.SHAPE_OBB;
this.center = new n.Vec3(t, e, i);
this.halfExtents = new n.Vec3(s, o, a);
this.orientation = new n.Mat3(c, l, u, h, f, _, d, p, m);
}
var e = t.prototype;
e.getBoundary = function(t, e) {
u(a, this.halfExtents, this.orientation);
n.Vec3.subtract(t, this.center, a);
n.Vec3.add(e, this.center, a);
};
e.transform = function(t, e, i, r, s) {
n.Vec3.transformMat4(s.center, this.center, t);
n.Mat3.fromQuat(s.orientation, i);
n.Vec3.multiply(s.halfExtents, this.halfExtents, r);
};
e.translateAndRotate = function(t, e, i) {
n.Vec3.transformMat4(i.center, this.center, t);
n.Mat3.fromQuat(i.orientation, e);
};
e.setScale = function(t, e) {
n.Vec3.multiply(e.halfExtents, this.halfExtents, t);
};
return t;
})();
i.default = h;
e.exports = i.default;
}), {
"../value-types": 328,
"./enums": 162
} ],
168: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("../value-types"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./enums"));
var s = new n.Vec3(0, 0, 0), o = new n.Vec3(0, 0, 0), a = cc.mat4(), c = cc.v4(), l = (function() {
t.create = function(e, i, n, r) {
return new t(e, i, n, r);
};
t.clone = function(e) {
return new t(e.n.x, e.n.y, e.n.z, e.d);
};
t.copy = function(t, e) {
n.Vec3.copy(t.n, e.n);
t.d = e.d;
return t;
};
t.fromPoints = function(t, e, i, r) {
n.Vec3.subtract(s, i, e);
n.Vec3.subtract(o, r, e);
n.Vec3.normalize(t.n, n.Vec3.cross(t.n, s, o));
t.d = n.Vec3.dot(t.n, e);
return t;
};
t.set = function(t, e, i, n, r) {
t.n.x = e;
t.n.y = i;
t.n.z = n;
t.d = r;
return t;
};
t.fromNormalAndPoint = function(t, e, i) {
n.Vec3.copy(t.n, e);
t.d = n.Vec3.dot(e, i);
return t;
};
t.normalize = function(t, e) {
var i = e.n.len();
n.Vec3.normalize(t.n, e.n);
i > 0 && (t.d = e.d / i);
return t;
};
function t(t, e, i, s) {
void 0 === t && (t = 0);
void 0 === e && (e = 1);
void 0 === i && (i = 0);
void 0 === s && (s = 0);
this.n = void 0;
this.d = void 0;
this._type = void 0;
this._type = r.default.SHAPE_PLANE;
this.n = new n.Vec3(t, e, i);
this.d = s;
}
t.prototype.transform = function(t) {
n.Mat4.invert(a, t);
n.Mat4.transpose(a, a);
n.Vec4.set(c, this.n.x, this.n.y, this.n.z, this.d);
n.Vec4.transformMat4(c, c, a);
n.Vec3.set(this.n, c.x, c.y, c.z);
this.d = c.w;
};
return t;
})();
i.default = l;
e.exports = i.default;
}), {
"../value-types": 328,
"./enums": 162
} ],
169: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("../value-types"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./enums"));
var s = (function() {
t.create = function(e, i, n, r, s, o) {
void 0 === e && (e = 0);
void 0 === i && (i = 0);
void 0 === n && (n = 0);
void 0 === r && (r = 0);
void 0 === s && (s = 0);
void 0 === o && (o = 1);
return new t(e, i, n, r, s, o);
};
t.clone = function(e) {
return new t(e.o.x, e.o.y, e.o.z, e.d.x, e.d.y, e.d.z);
};
t.copy = function(t, e) {
n.Vec3.copy(t.o, e.o);
n.Vec3.copy(t.d, e.d);
return t;
};
t.fromPoints = function(t, e, i) {
n.Vec3.copy(t.o, e);
n.Vec3.normalize(t.d, n.Vec3.subtract(t.d, i, e));
return t;
};
t.set = function(t, e, i, n, r, s, o) {
t.o.x = e;
t.o.y = i;
t.o.z = n;
t.d.x = r;
t.d.y = s;
t.d.z = o;
return t;
};
function t(t, e, i, s, o, a) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
void 0 === i && (i = 0);
void 0 === s && (s = 0);
void 0 === o && (o = 0);
void 0 === a && (a = -1);
this.o = void 0;
this.d = void 0;
this._type = void 0;
this._type = r.default.SHAPE_RAY;
this.o = new n.Vec3(t, e, i);
this.d = new n.Vec3(s, o, a);
}
t.prototype.computeHit = function(t, e) {
n.Vec3.normalize(t, this.d);
n.Vec3.scaleAndAdd(t, this.o, t, e);
};
return t;
})();
i.default = s;
e.exports = i.default;
}), {
"../value-types": 328,
"./enums": 162
} ],
170: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("../value-types"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./enums"));
var s = new n.Vec3(), o = (function() {
t.create = function(e, i, n, r) {
return new t(e, i, n, r);
};
t.clone = function(e) {
return new t(e.center.x, e.center.y, e.center.z, e.radius);
};
t.copy = function(t, e) {
n.Vec3.copy(t.center, e.center);
t.radius = e.radius;
return t;
};
t.fromPoints = function(t, e, i) {
n.Vec3.multiplyScalar(t.center, n.Vec3.add(s, e, i), .5);
t.radius = .5 * n.Vec3.subtract(s, i, e).len();
return t;
};
t.set = function(t, e, i, n, r) {
t.center.x = e;
t.center.y = i;
t.center.z = n;
t.radius = r;
return t;
};
function t(t, e, i, s) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
void 0 === i && (i = 0);
void 0 === s && (s = 1);
this.center = void 0;
this.radius = void 0;
this._type = void 0;
this._type = r.default.SHAPE_SPHERE;
this.center = new n.Vec3(t, e, i);
this.radius = s;
}
var e = t.prototype;
e.clone = function() {
return t.clone(this);
};
e.copy = function(e) {
return t.copy(this, e);
};
e.getBoundary = function(t, e) {
n.Vec3.set(t, this.center.x - this.radius, this.center.y - this.radius, this.center.z - this.radius);
n.Vec3.set(e, this.center.x + this.radius, this.center.y + this.radius, this.center.z + this.radius);
};
e.transform = function(t, e, i, r, s) {
n.Vec3.transformMat4(s.center, this.center, t);
s.radius = this.radius * r.maxAxis();
};
e.translateAndRotate = function(t, e, i) {
n.Vec3.transformMat4(i.center, this.center, t);
};
e.setScale = function(t, e) {
e.radius = this.radius * t.maxAxis();
};
return t;
})();
i.default = o;
e.exports = i.default;
}), {
"../value-types": 328,
"./enums": 162
} ],
171: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = s(t("../value-types/vec3")), r = s(t("./enums"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
var o = (function() {
t.create = function(e, i, n, r, s, o, a, c, l) {
return new t(e, i, n, r, s, o, a, c, l);
};
t.clone = function(e) {
return new t(e.a.x, e.a.y, e.a.z, e.b.x, e.b.y, e.b.z, e.c.x, e.c.y, e.c.z);
};
t.copy = function(t, e) {
n.default.copy(t.a, e.a);
n.default.copy(t.b, e.b);
n.default.copy(t.c, e.c);
return t;
};
t.fromPoints = function(t, e, i, r) {
n.default.copy(t.a, e);
n.default.copy(t.b, i);
n.default.copy(t.c, r);
return t;
};
t.set = function(t, e, i, n, r, s, o, a, c, l) {
t.a.x = e;
t.a.y = i;
t.a.z = n;
t.b.x = r;
t.b.y = s;
t.b.z = o;
t.c.x = a;
t.c.y = c;
t.c.z = l;
return t;
};
function t(t, e, i, s, o, a, c, l, u) {
this.a = void 0;
this.b = void 0;
this.c = void 0;
this._type = void 0;
this.a = new n.default(t, e, i);
this.b = new n.default(s, o, a);
this.c = new n.default(c, l, u);
this._type = r.default.SHAPE_TRIANGLE;
}
return t;
})();
i.default = o;
e.exports = i.default;
}), {
"../value-types/vec3": 338,
"./enums": 162
} ],
172: [ (function(t, e, i) {
"use strict";
var n = t("../components/CCRenderComponent"), r = t("../assets/material/CCMaterial"), s = t("./types"), o = s.LineCap, a = s.LineJoin, c = cc.Class({
name: "cc.Graphics",
extends: n,
editor: !1,
ctor: function() {
this._impl = new c._Impl(this);
},
properties: {
_lineWidth: 1,
_strokeColor: cc.Color.BLACK,
_lineJoin: a.MITER,
_lineCap: o.BUTT,
_fillColor: cc.Color.WHITE,
_miterLimit: 10,
lineWidth: {
get: function() {
return this._lineWidth;
},
set: function(t) {
this._lineWidth = t;
this._impl.lineWidth = t;
}
},
lineJoin: {
get: function() {
return this._lineJoin;
},
set: function(t) {
this._lineJoin = t;
this._impl.lineJoin = t;
},
type: a
},
lineCap: {
get: function() {
return this._lineCap;
},
set: function(t) {
this._lineCap = t;
this._impl.lineCap = t;
},
type: o
},
strokeColor: {
get: function() {
return this._strokeColor;
},
set: function(t) {
this._impl.strokeColor = this._strokeColor = cc.color(t);
}
},
fillColor: {
get: function() {
return this._fillColor;
},
set: function(t) {
this._impl.fillColor = this._fillColor = cc.color(t);
}
},
miterLimit: {
get: function() {
return this._miterLimit;
},
set: function(t) {
this._miterLimit = t;
this._impl.miterLimit = t;
}
}
},
statics: {
LineJoin: a,
LineCap: o
},
onRestore: function() {
this._impl || (this._impl = new c._Impl(this));
},
onDestroy: function() {
this.clear(!0);
this._super();
this._impl = null;
},
_getDefaultMaterial: function() {
return r.getBuiltinMaterial("2d-base");
},
_updateMaterial: function() {
var t = this._materials[0];
t && t.define("CC_USE_MODEL", !0);
},
moveTo: function(t, e) {
0;
this._impl.moveTo(t, e);
},
lineTo: function(t, e) {
0;
this._impl.lineTo(t, e);
},
bezierCurveTo: function(t, e, i, n, r, s) {
this._impl.bezierCurveTo(t, e, i, n, r, s);
},
quadraticCurveTo: function(t, e, i, n) {
this._impl.quadraticCurveTo(t, e, i, n);
},
arc: function(t, e, i, n, r, s) {
this._impl.arc(t, e, i, n, r, s);
},
ellipse: function(t, e, i, n) {
this._impl.ellipse(t, e, i, n);
},
circle: function(t, e, i) {
this._impl.circle(t, e, i);
},
rect: function(t, e, i, n) {
this._impl.rect(t, e, i, n);
},
roundRect: function(t, e, i, n, r) {
this._impl.roundRect(t, e, i, n, r);
},
fillRect: function(t, e, i, n) {
this.rect(t, e, i, n);
this.fill();
},
clear: function(t) {
this._impl.clear(t);
this._assembler && this._assembler.clear(t);
},
close: function() {
this._impl.close();
},
stroke: function() {
this._assembler || this._resetAssembler();
this._assembler.stroke(this);
},
fill: function() {
this._assembler || this._resetAssembler();
this._assembler.fill(this);
}
});
cc.Graphics = e.exports = c;
cc.Graphics.Types = s;
cc.Graphics.Helper = t("./helper");
}), {
"../assets/material/CCMaterial": 95,
"../components/CCRenderComponent": 131,
"./helper": 173,
"./types": 175
} ],
173: [ (function(t, e, i) {
"use strict";
var n = t("./types").PointFlags, r = Math.PI, s = Math.min, o = Math.max, a = Math.cos, c = Math.sin, l = Math.abs, u = Math.sign, h = .5522847493;
e.exports = {
arc: function(t, e, i, n, u, h, f) {
var _, d, p, m = 0, y = 0, v = 0, g = 0, b = 0, C = 0, x = 0, A = 0, S = 0, w = 0, T = 0, E = 0, M = 0;
y = h - u;
if (f = f || !1) if (l(y) >= 2 * r) y = 2 * r; else for (;y < 0; ) y += 2 * r; else if (l(y) >= 2 * r) y = 2 * -r; else for (;y > 0; ) y -= 2 * r;
p = 0 | o(1, s(l(y) / (.5 * r) + .5, 5));
v = l(4 / 3 * (1 - a(_ = y / p / 2)) / c(_));
f || (v = -v);
for (d = 0; d <= p; d++) {
g = a(m = u + y * (d / p));
b = c(m);
C = e + g * n;
x = i + b * n;
A = -b * n * v;
S = g * n * v;
0 === d ? t.moveTo(C, x) : t.bezierCurveTo(w + E, T + M, C - A, x - S, C, x);
w = C;
T = x;
E = A;
M = S;
}
},
ellipse: function(t, e, i, n, r) {
t.moveTo(e - n, i);
t.bezierCurveTo(e - n, i + r * h, e - n * h, i + r, e, i + r);
t.bezierCurveTo(e + n * h, i + r, e + n, i + r * h, e + n, i);
t.bezierCurveTo(e + n, i - r * h, e + n * h, i - r, e, i - r);
t.bezierCurveTo(e - n * h, i - r, e - n, i - r * h, e - n, i);
t.close();
},
roundRect: function(t, e, i, n, r, o) {
if (o < .1) t.rect(e, i, n, r); else {
var a = s(o, .5 * l(n)) * u(n), c = s(o, .5 * l(r)) * u(r);
t.moveTo(e, i + c);
t.lineTo(e, i + r - c);
t.bezierCurveTo(e, i + r - c * (1 - h), e + a * (1 - h), i + r, e + a, i + r);
t.lineTo(e + n - a, i + r);
t.bezierCurveTo(e + n - a * (1 - h), i + r, e + n, i + r - c * (1 - h), e + n, i + r - c);
t.lineTo(e + n, i + c);
t.bezierCurveTo(e + n, i + c * (1 - h), e + n - a * (1 - h), i, e + n - a, i);
t.lineTo(e + a, i);
t.bezierCurveTo(e + a * (1 - h), i, e, i + c * (1 - h), e, i + c);
t.close();
}
},
tesselateBezier: function t(e, i, r, s, o, a, c, u, h, f, _) {
var d, p, m, y, v, g, b, C, x, A, S, w, T, E, M, B;
if (!(f > 10)) {
v = .5 * (a + u);
g = .5 * (c + h);
b = .5 * ((d = .5 * (i + s)) + (m = .5 * (s + a)));
C = .5 * ((p = .5 * (r + o)) + (y = .5 * (o + c)));
if (((M = l((s - u) * (E = h - r) - (o - h) * (T = u - i))) + (B = l((a - u) * E - (c - h) * T))) * (M + B) < e._tessTol * (T * T + E * E)) e._addPoint(u, h, 0 === _ ? _ | n.PT_BEVEL : _); else {
t(e, i, r, d, p, b, C, S = .5 * (b + (x = .5 * (m + v))), w = .5 * (C + (A = .5 * (y + g))), f + 1, 0);
t(e, S, w, x, A, v, g, u, h, f + 1, _);
}
}
}
};
}), {
"./types": 175
} ],
174: [ (function(t, e, i) {
"use strict";
t("./graphics");
}), {
"./graphics": 172
} ],
175: [ (function(t, e, i) {
"use strict";
var n = cc.Enum({
BUTT: 0,
ROUND: 1,
SQUARE: 2
}), r = cc.Enum({
BEVEL: 0,
ROUND: 1,
MITER: 2
}), s = cc.Enum({
PT_CORNER: 1,
PT_LEFT: 2,
PT_BEVEL: 4,
PT_INNERBEVEL: 8
});
e.exports = {
LineCap: n,
LineJoin: r,
PointFlags: s
};
}), {} ],
176: [ (function(t, e, i) {
"use strict";
t("./platform");
t("./assets");
t("./CCNode");
t("./CCPrivateNode");
t("./CCScene");
t("./components");
t("./graphics");
t("./collider");
t("./collider/CCIntersection");
t("./physics.4164b");
t("./camera/CCCamera");
t("./geom-utils");
t("./mesh");
t("./3d");
t("./base-ui/CCWidgetManager");
}), {
"./3d": 29,
"./CCNode": 72,
"./CCPrivateNode": 73,
"./CCScene": 74,
"./assets": 93,
"./base-ui/CCWidgetManager": 104,
"./camera/CCCamera": 105,
"./collider": 113,
"./collider/CCIntersection": 111,
"./components": 148,
"./geom-utils": 164,
"./graphics": 174,
"./mesh": 199,
"./physics.4164b": 214,
"./platform": 247
} ],
177: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("./pipeline"), s = t("./loading-items"), o = t("./asset-loader"), a = t("./downloader"), c = t("./loader"), l = t("./asset-table"), u = t("../platform/utils").callInNextTick, h = t("./auto-release-utils"), f = Object.create(null);
f.assets = new l();
f.internal = new l();
var _ = {
url: null,
raw: !1
};
function d(t) {
var e, i, n;
if ("object" == typeof t) {
i = t;
if (t.url) return i;
e = t.uuid;
} else {
i = {};
e = t;
}
n = i.type ? "uuid" === i.type : cc.AssetLibrary._uuidInSettings(e);
cc.AssetLibrary._getAssetInfoInRuntime(e, _);
i.url = n ? _.url : e;
if (_.url && "uuid" === i.type && _.raw) {
i.type = null;
i.isRawAsset = !0;
} else n || (i.isRawAsset = !0);
return i;
}
var p = [], m = [];
function y() {
var t = new o(), e = new a(), i = new c();
r.call(this, [ t, e, i ]);
this.assetLoader = t;
this.md5Pipe = null;
this.downloader = e;
this.loader = i;
this.onProgress = null;
this._autoReleaseSetting = n.createMap(!0);
0;
}
n.extend(y, r);
var v = y.prototype;
v.init = function(t) {};
v.getXMLHttpRequest = function() {
return window.XMLHttpRequest ? new window.XMLHttpRequest() : new ActiveXObject("MSXML2.XMLHTTP");
};
v.addDownloadHandlers = function(t) {
this.downloader.addHandlers(t);
};
v.addLoadHandlers = function(t) {
this.loader.addHandlers(t);
};
v.load = function(t, e, i) {
0;
if (void 0 === i) {
i = e;
e = this.onProgress || null;
}
var n, r = this, o = !1;
if (!(t instanceof Array)) if (t) {
o = !0;
t = [ t ];
} else t = [];
p.length = 0;
for (var a = 0; a < t.length; ++a) {
var c = t[a];
if (c && c.id) {
cc.warnID(4920, c.id);
c.uuid || c.url || (c.url = c.id);
}
if ((n = d(c)).url || n.uuid) {
var l = this._cache[n.url];
p.push(l || n);
}
}
var h = s.create(this, e, (function(t, e) {
u((function() {
if (i) {
if (o) {
var s = n.url;
i.call(r, t, e.getContent(s));
} else i.call(r, t, e);
i = null;
}
e.destroy();
}));
}));
s.initQueueDeps(h);
h.append(p);
p.length = 0;
};
v.flowInDeps = function(t, e, i) {
m.length = 0;
for (var n = 0; n < e.length; ++n) {
var r = d(e[n]);
if (r.url || r.uuid) {
var o = this._cache[r.url];
o ? m.push(o) : m.push(r);
}
}
var a = s.create(this, t ? function(t, e, i) {
this._ownerQueue && this._ownerQueue.onProgress && this._ownerQueue._childOnProgress(i);
} : null, (function(e, n) {
i(e, n);
t && t.deps && (t.deps.length = 0);
n.destroy();
}));
if (t) {
var c = s.getQueue(t);
a._ownerQueue = c._ownerQueue || c;
}
var l = a.append(m, t);
m.length = 0;
return l;
};
v._assetTables = f;
v._getResUuid = function(t, e, i, n) {
var r = f[i = i || "assets"];
if (!t || !r) return null;
var s = t.indexOf("?");
-1 !== s && (t = t.substr(0, s));
var o = r.getUuid(t, e);
if (!o) {
var a = cc.path.extname(t);
if (a) {
t = t.slice(0, -a.length);
(o = r.getUuid(t, e)) && !n && cc.warnID(4901, t, a);
}
}
return o;
};
v._getReferenceKey = function(t) {
var e;
"object" == typeof t ? e = t._uuid || null : "string" == typeof t && (e = this._getResUuid(t, null, null, !0) || t);
if (!e) {
cc.warnID(4800, t);
return e;
}
cc.AssetLibrary._getAssetInfoInRuntime(e, _);
return this._cache[_.url] ? _.url : e;
};
v._urlNotFound = function(t, e, i) {
u((function() {
t = cc.url.normalize(t);
var r = (e ? n.getClassName(e) : "Asset") + ' in "resources/' + t + '" does not exist.';
i && i(new Error(r), []);
}));
};
v._parseLoadResArgs = function(t, e, i) {
if (void 0 === i) {
var r = t instanceof Array || n.isChildClassOf(t, cc.RawAsset);
if (e) {
i = e;
r && (e = this.onProgress || null);
} else if (void 0 === e && !r) {
i = t;
e = this.onProgress || null;
t = null;
}
if (void 0 !== e && !r) {
e = t;
t = null;
}
}
return {
type: t,
onProgress: e,
onComplete: i
};
};
v.loadRes = function(t, e, i, n, r) {
if (5 !== arguments.length) {
r = n;
n = i;
i = "assets";
}
var s = this._parseLoadResArgs(e, n, r);
e = s.type;
n = s.onProgress;
r = s.onComplete;
var o = this, a = o._getResUuid(t, e, i);
a ? this.load({
type: "uuid",
uuid: a
}, n, (function(t, e) {
e && o.setAutoReleaseRecursively(a, !1);
r && r(t, e);
})) : o._urlNotFound(t, e, r);
};
v._loadResUuids = function(t, e, i, n) {
if (t.length > 0) {
var r = this, s = t.map((function(t) {
return {
type: "uuid",
uuid: t
};
}));
this.load(s, e, (function(t, e) {
if (i) {
for (var o = [], a = n && [], c = 0; c < s.length; ++c) {
var l = s[c].uuid, u = this._getReferenceKey(l), h = e.getContent(u);
if (h) {
r.setAutoReleaseRecursively(l, !1);
o.push(h);
a && a.push(n[c]);
}
}
n ? i(t, o, a) : i(t, o);
}
}));
} else i && u((function() {
n ? i(null, [], []) : i(null, []);
}));
};
v.loadResArray = function(t, e, i, n, r) {
if (5 !== arguments.length) {
r = n;
n = i;
i = "assets";
}
var s = this._parseLoadResArgs(e, n, r);
e = s.type;
n = s.onProgress;
r = s.onComplete;
for (var o = [], a = e instanceof Array, c = 0; c < t.length; c++) {
var l = t[c], u = a ? e[c] : e, h = this._getResUuid(l, u, i);
if (!h) {
this._urlNotFound(l, u, r);
return;
}
o.push(h);
}
this._loadResUuids(o, n, r);
};
v.loadResDir = function(t, e, i, n, r) {
if (5 !== arguments.length) {
r = n;
n = i;
i = "assets";
}
if (f[i]) {
var s = this._parseLoadResArgs(e, n, r);
e = s.type;
n = s.onProgress;
r = s.onComplete;
var o = [], a = f[i].getUuidArray(t, e, o);
this._loadResUuids(a, n, r, o);
}
};
v.getRes = function(t, e) {
var i = this._cache[t];
if (!i) {
var n = this._getResUuid(t, e, null, !0);
if (!n) return null;
var r = this._getReferenceKey(n);
i = this._cache[r];
}
i && i.alias && (i = i.alias);
return i && i.complete ? i.content : null;
};
v.getResCount = function() {
return Object.keys(this._cache).length;
};
v.getDependsRecursively = function(t) {
if (t) {
var e = this._getReferenceKey(t), i = h.getDependsRecursively(e);
i.push(e);
return i;
}
return [];
};
v.release = function(t) {
if (Array.isArray(t)) for (var e = 0; e < t.length; e++) {
var i = t[e];
this.release(i);
} else if (t) {
var n = this._getReferenceKey(t);
if (n && n in cc.AssetLibrary.getBuiltinDeps()) return;
var r = this.getItem(n);
if (r) {
this.removeItem(n);
t = r.content;
0;
}
if (t instanceof cc.Asset) {
var s = t.nativeUrl;
s && this.release(s);
t.destroy();
}
}
};
v.releaseAsset = function(t) {
var e = t._uuid;
e && this.release(e);
};
v.releaseRes = function(t, e, i) {
var n = this._getResUuid(t, e, i);
n ? this.release(n) : cc.errorID(4914, t);
};
v.releaseResDir = function(t, e, i) {
if (f[i = i || "assets"]) for (var n = f[i].getUuidArray(t, e), r = 0; r < n.length; r++) {
var s = n[r];
this.release(s);
}
};
v.releaseAll = function() {
for (var t in this._cache) this.release(t);
};
v.removeItem = function(t) {
var e = r.prototype.removeItem.call(this, t);
delete this._autoReleaseSetting[t];
return e;
};
v.setAutoRelease = function(t, e) {
var i = this._getReferenceKey(t);
i && (this._autoReleaseSetting[i] = !!e);
};
v.setAutoReleaseRecursively = function(t, e) {
e = !!e;
var i = this._getReferenceKey(t);
if (i) {
this._autoReleaseSetting[i] = e;
for (var n = h.getDependsRecursively(i), r = 0; r < n.length; r++) {
var s = n[r];
this._autoReleaseSetting[s] = e;
}
} else 0;
};
v.isAutoRelease = function(t) {
var e = this._getReferenceKey(t);
return !!e && !!this._autoReleaseSetting[e];
};
cc.loader = new y();
0;
e.exports = cc.loader;
}), {
"../platform/js": 250,
"../platform/utils": 254,
"./asset-loader": 178,
"./asset-table": 179,
"./auto-release-utils": 181,
"./downloader": 183,
"./loader": 186,
"./loading-items": 187,
"./pipeline": 190,
"./released-asset-checker": 191
} ],
178: [ (function(t, e, i) {
"use strict";
t("../utils/CCPath");
var n = t("../CCDebug"), r = t("./pipeline"), s = t("./loading-items"), o = "AssetLoader", a = function(t) {
this.id = o;
this.async = !0;
this.pipeline = null;
};
a.ID = o;
var c = [];
a.prototype.handle = function(t, e) {
var i = t.uuid;
if (!i) return t.content || null;
cc.AssetLibrary.queryAssetInfo(i, (function(r, o, a) {
if (r) e(r); else {
t.url = t.rawUrl = o;
t.isRawAsset = a;
if (a) {
var l = cc.path.extname(o).toLowerCase();
if (!l) {
e(new Error(n.getError(4931, i, o)));
return;
}
l = l.substr(1);
var u = s.getQueue(t);
c[0] = {
queueId: t.queueId,
id: o,
url: o,
type: l,
error: null,
alias: t,
complete: !0
};
0;
u.append(c);
t.type = l;
e(null, t.content);
} else {
t.type = "uuid";
e(null, t.content);
}
}
}));
};
r.AssetLoader = e.exports = a;
}), {
"../CCDebug": 69,
"../utils/CCPath": 302,
"./loading-items": 187,
"./pipeline": 190
} ],
179: [ (function(t, e, i) {
"use strict";
var n = t("../utils/misc").pushToMap, r = t("../platform/js");
function s(t, e) {
this.uuid = t;
this.type = e;
}
function o() {
this._pathToUuid = r.createMap(!0);
}
function a(t, e) {
if (t.length > e.length) {
var i = t.charCodeAt(e.length);
return 46 === i || 47 === i;
}
return !0;
}
var c = o.prototype;
c.getUuid = function(t, e) {
t = cc.url.normalize(t);
var i = this._pathToUuid[t];
if (i) if (Array.isArray(i)) {
if (!e) return i[0].uuid;
for (var n = 0; n < i.length; n++) {
var s = i[n];
if (r.isChildClassOf(s.type, e)) return s.uuid;
}
} else {
if (!e || r.isChildClassOf(i.type, e)) return i.uuid;
0;
}
return "";
};
c.getUuidArray = function(t, e, i) {
"/" === (t = cc.url.normalize(t))[t.length - 1] && (t = t.slice(0, -1));
var n = this._pathToUuid, s = [], o = r.isChildClassOf;
for (var c in n) if (c.startsWith(t) && a(c, t) || !t) {
var l = n[c];
if (Array.isArray(l)) for (var u = 0; u < l.length; u++) {
var h = l[u];
if (!e || o(h.type, e)) {
s.push(h.uuid);
i && i.push(c);
} else 0;
} else if (!e || o(l.type, e)) {
s.push(l.uuid);
i && i.push(c);
} else 0;
}
0;
return s;
};
c.add = function(t, e, i, r) {
t = t.substring(0, t.length - cc.path.extname(t).length);
var o = new s(e, i);
n(this._pathToUuid, t, o, r);
};
c._getInfo_DEBUG = !1;
c.reset = function() {
this._pathToUuid = r.createMap(!0);
};
e.exports = o;
}), {
"../platform/js": 250,
"../utils/misc": 313
} ],
180: [ (function(t, e, i) {
"use strict";
var n = t("../platform/CCSys"), r = t("../CCDebug"), s = n.__audioSupport, o = s.format, a = s.context;
function c(t, e) {
var i = document.createElement("audio");
i.src = t.url;
var n = function() {
clearTimeout(r);
i.removeEventListener("canplaythrough", o, !1);
i.removeEventListener("error", a, !1);
s.USE_LOADER_EVENT && i.removeEventListener(s.USE_LOADER_EVENT, o, !1);
}, r = setTimeout((function() {
0 === i.readyState ? a() : o();
}), 8e3), o = function() {
n();
e(null, i);
}, a = function() {
n();
var i = "load audio failure - " + t.url;
cc.log(i);
e(i);
};
i.addEventListener("canplaythrough", o, !1);
i.addEventListener("error", a, !1);
s.USE_LOADER_EVENT && i.addEventListener(s.USE_LOADER_EVENT, o, !1);
}
function l(t, e) {
a || e(new Error(r.getError(4926)));
var i = cc.loader.getXMLHttpRequest();
i.open("GET", t.url, !0);
i.responseType = "arraybuffer";
i.onload = function() {
a.decodeAudioData(i.response, (function(t) {
e(null, t);
}), (function() {
e("decode error - " + t.id, null);
}));
};
i.onerror = function() {
e("request error - " + t.id, null);
};
i.send();
}
e.exports = function(t, e) {
if (0 === o.length) return new Error(r.getError(4927));
var i;
i = s.WEB_AUDIO ? t._owner instanceof cc.AudioClip ? t._owner.loadMode === cc.AudioClip.LoadMode.WEB_AUDIO ? l : c : t.urlParam && t.urlParam.useDom ? c : l : c;
i(t, e);
};
}), {
"../CCDebug": 69,
"../platform/CCSys": 239
} ],
181: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
function r(t, e) {
var i = cc.loader.getItem(t);
if (i) {
var n = i.dependKeys;
if (n) for (var s = 0; s < n.length; s++) {
var o = n[s];
if (!e[o]) {
e[o] = !0;
r(o, e);
}
}
}
}
function s(t, e) {
if (t._uuid) {
var i = cc.loader._getReferenceKey(t);
if (!e[i]) {
e[i] = !0;
r(i, e);
}
}
}
function o(t, e) {
for (var i = Object.getOwnPropertyNames(t), n = 0; n < i.length; n++) {
var r = t[i[n]];
if ("object" == typeof r && r) if (Array.isArray(r)) for (var o = 0; o < r.length; o++) {
var a = r[o];
a instanceof cc.RawAsset && s(a, e);
} else if (r.constructor && r.constructor !== Object) r instanceof cc.RawAsset && s(r, e); else for (var c = Object.getOwnPropertyNames(r), l = 0; l < c.length; l++) {
var u = r[c[l]];
u instanceof cc.RawAsset && s(u, e);
}
}
}
function a(t, e) {
for (var i = 0; i < t._components.length; i++) o(t._components[i], e);
for (var n = 0; n < t._children.length; n++) a(t._children[n], e);
}
e.exports = {
autoRelease: function(t, e, i) {
var r = cc.loader._autoReleaseSetting, s = n.createMap();
if (e) for (var o = 0; o < e.length; o++) s[e[o]] = !0;
for (var c = 0; c < i.length; c++) a(i[c], s);
if (t) for (var l = 0; l < t.length; l++) {
var u = t[l];
!1 === r[u] || s[u] || cc.loader.release(u);
}
for (var h = Object.keys(r), f = 0; f < h.length; f++) {
var _ = h[f];
!0 !== r[_] || s[_] || cc.loader.release(_);
}
},
getDependsRecursively: function(t) {
var e = {};
r(t, e);
return Object.keys(e);
}
};
}), {
"../platform/js": 250
} ],
182: [ (function(t, e, i) {
"use strict";
e.exports = function(t, e) {
var i = t.url, n = cc.loader.getXMLHttpRequest(), r = "Load binary data failed: " + i;
n.open("GET", i, !0);
n.responseType = "arraybuffer";
n.onload = function() {
var t = n.response;
if (t) {
var i = new Uint8Array(t);
e(null, i);
} else e({
status: n.status,
errorMessage: r + "(no response)"
});
};
n.onerror = function() {
e({
status: n.status,
errorMessage: r + "(error)"
});
};
n.ontimeout = function() {
e({
status: n.status,
errorMessage: r + "(time out)"
});
};
n.send(null);
};
}), {} ],
183: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("../CCDebug");
t("../utils/CCPath");
var s, o = t("./pipeline"), a = t("./pack-downloader"), c = t("./binary-downloader"), l = t("./text-downloader"), u = t("./utils").urlAppendTimestamp;
function h() {
return null;
}
function f(t, e, i) {
var n = t.url, s = document, o = document.createElement("script");
"file:" !== window.location.protocol && (o.crossOrigin = "anonymous");
o.async = i;
o.src = u(n);
function a() {
o.parentNode.removeChild(o);
o.removeEventListener("load", a, !1);
o.removeEventListener("error", c, !1);
e(null, n);
}
function c() {
o.parentNode.removeChild(o);
o.removeEventListener("load", a, !1);
o.removeEventListener("error", c, !1);
e(new Error(r.getError(4928, n)));
}
o.addEventListener("load", a, !1);
o.addEventListener("error", c, !1);
s.body.appendChild(o);
}
function _(t, e, i, n) {
void 0 === i && (i = !0);
var s = u(t.url);
n = n || new Image();
i && "file:" !== window.location.protocol ? n.crossOrigin = "anonymous" : n.crossOrigin = null;
if (n.complete && n.naturalWidth > 0 && n.src === s) return n;
var o = function i() {
n.removeEventListener("load", i);
n.removeEventListener("error", a);
n.id = t.id;
e(null, n);
}, a = function i() {
n.removeEventListener("load", o);
n.removeEventListener("error", i);
"https:" !== window.location.protocol && n.crossOrigin && "anonymous" === n.crossOrigin.toLowerCase() ? _(t, e, !1, n) : e(new Error(r.getError(4930, s)));
};
n.addEventListener("load", o);
n.addEventListener("error", a);
n.src = s;
}
function d(t, e) {
e(null, t.url);
}
var p = {
js: f,
png: _,
jpg: _,
bmp: _,
jpeg: _,
gif: _,
ico: _,
tiff: _,
webp: _,
image: _,
pvr: c,
pkm: c,
mp3: s = t("./audio-downloader"),
ogg: s,
wav: s,
m4a: s,
txt: l,
xml: l,
vsh: l,
fsh: l,
atlas: l,
tmx: l,
tsx: l,
json: l,
ExportJson: l,
plist: l,
fnt: l,
font: h,
eot: h,
ttf: h,
woff: h,
svg: h,
ttc: h,
uuid: function(t, e) {
var i = a.load(t, e);
return void 0 === i ? this.extMap.json(t, e) : i || void 0;
},
binary: c,
bin: c,
dbbin: c,
skel: c,
mp4: d,
avi: d,
mov: d,
mpg: d,
mpeg: d,
rm: d,
rmvb: d,
default: l
}, m = "Downloader", y = function(t) {
this.id = m;
this.async = !0;
this.pipeline = null;
this._curConcurrent = 0;
this._loadQueue = [];
this._subpackages = {};
this.extMap = n.mixin(t, p);
};
y.ID = m;
y.PackDownloader = a;
y.prototype.addHandlers = function(t) {
n.mixin(this.extMap, t);
};
y.prototype._handleLoadQueue = function() {
for (;this._curConcurrent < cc.macro.DOWNLOAD_MAX_CONCURRENT; ) {
var t = this._loadQueue.shift();
if (!t) break;
var e = this.handle(t.item, t.callback);
void 0 !== e && (e instanceof Error ? t.callback(e) : t.callback(null, e));
}
};
y.prototype.handle = function(t, e) {
var i = this, n = this.extMap[t.type] || this.extMap.default, r = void 0;
if (this._curConcurrent < cc.macro.DOWNLOAD_MAX_CONCURRENT) {
this._curConcurrent++;
if (void 0 !== (r = n.call(this, t, (function(t, n) {
i._curConcurrent = Math.max(0, i._curConcurrent - 1);
i._handleLoadQueue();
e && e(t, n);
})))) {
this._curConcurrent = Math.max(0, this._curConcurrent - 1);
this._handleLoadQueue();
return r;
}
} else if (t.ignoreMaxConcurrency) {
if (void 0 !== (r = n.call(this, t, e))) return r;
} else this._loadQueue.push({
item: t,
callback: e
});
};
y.prototype.loadSubpackage = function(t, e, i) {
if (!i && e) {
i = e;
e = null;
}
var n = this._subpackages[t];
n ? n.loaded ? i && i() : f({
url: n.path + "index.js"
}, (function(t) {
t || (n.loaded = !0);
i && i(t);
})) : i && i(new Error("Can't find subpackage " + t));
};
o.Downloader = e.exports = y;
}), {
"../CCDebug": 69,
"../platform/js": 250,
"../utils/CCPath": 302,
"./audio-downloader": 180,
"./binary-downloader": 182,
"./pack-downloader": 189,
"./pipeline": 190,
"./text-downloader": 193,
"./utils": 195
} ],
184: [ (function(t, e, i) {
"use strict";
var n = t("../utils/text-utils"), r = null, s = "BES bswy:->@123丁ぁᄁ", o = {}, a = -1, c = [], l = 3e3, u = (function() {
var t = void 0;
return function() {
if (void 0 === t) if (window.FontFace) {
var e = /Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent), i = /OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent) && /Apple/.exec(window.navigator.vendor);
t = e ? parseInt(e[1], 10) > 42 : !i;
} else t = !1;
return t;
};
})();
function h() {
for (var t = !0, e = Date.now(), i = c.length - 1; i >= 0; i--) {
var o = c[i], u = o.fontFamilyName;
if (e - o.startTime > l) {
cc.warnID(4933, u);
o.callback(null, u);
c.splice(i, 1);
} else {
var h = o.refWidth, f = "40px " + u;
r.font = f;
if (h !== n.safeMeasureText(r, s, f)) {
c.splice(i, 1);
o.callback(null, u);
} else t = !1;
}
}
if (t) {
clearInterval(a);
a = -1;
}
}
function f(t, e, i) {
var n = new Promise(function(i, n) {
(function r() {
Date.now() - t >= l ? n() : document.fonts.load("40px " + e).then((function(t) {
t.length >= 1 ? i() : setTimeout(r, 100);
}), (function() {
n();
}));
})();
}), r = null, s = new Promise(function(t, e) {
r = setTimeout(e, l);
});
Promise.race([ s, n ]).then((function() {
if (r) {
clearTimeout(r);
r = null;
}
i(null, e);
}), (function() {
cc.warnID(4933, e);
i(null, e);
}));
}
var _ = {
loadFont: function(t, e) {
var i = t.url, l = _._getFontFamily(i);
if (o[l]) return l;
if (!r) {
var d = document.createElement("canvas");
d.width = 100;
d.height = 100;
r = d.getContext("2d");
}
var p = "40px " + l;
r.font = p;
var m = n.safeMeasureText(r, s, p), y = document.createElement("style");
y.type = "text/css";
var v = "";
isNaN(l - 0) ? v += "@font-face { font-family:" + l + "; src:" : v += "@font-face { font-family:'" + l + "'; src:";
v += "url('" + i + "');";
y.textContent = v + "}";
document.body.appendChild(y);
var g = document.createElement("div"), b = g.style;
b.fontFamily = l;
g.innerHTML = ".";
b.position = "absolute";
b.left = "-100px";
b.top = "-100px";
document.body.appendChild(g);
if (u()) f(Date.now(), l, e); else {
var C = {
fontFamilyName: l,
refWidth: m,
callback: e,
startTime: Date.now()
};
c.push(C);
-1 === a && (a = setInterval(h, 100));
}
o[l] = y;
},
_getFontFamily: function(t) {
var e = t.lastIndexOf(".ttf");
if (-1 === e) return t;
var i, n = t.lastIndexOf("/");
-1 !== (i = -1 === n ? t.substring(0, e) + "_LABEL" : t.substring(n + 1, e) + "_LABEL").indexOf(" ") && (i = '"' + i + '"');
return i;
}
};
e.exports = _;
}), {
"../utils/text-utils": 320
} ],
185: [ (function(t, e, i) {
"use strict";
t("./downloader");
t("./loader");
t("./loading-items");
t("./pipeline");
t("./CCLoader");
}), {
"./CCLoader": 177,
"./downloader": 183,
"./loader": 186,
"./loading-items": 187,
"./pipeline": 190
} ],
186: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("../platform/CCSAXParser").plistParser, s = t("./pipeline"), o = t("../assets/CCTexture2D"), a = t("./uuid-loader"), c = t("./font-loader");
function l(t) {
if ("string" != typeof t.content) return new Error("JSON Loader: Input item doesn't contain string content");
try {
return JSON.parse(t.content);
} catch (e) {
return new Error("JSON Loader: Parse json [" + t.id + "] failed : " + e);
}
}
function u(t) {
if (t._owner instanceof cc.Asset) return null;
var e = t.content;
if (cc.sys.platform !== cc.sys.FB_PLAYABLE_ADS && !(e instanceof Image)) return new Error("Image Loader: Input item doesn't contain Image content");
var i = t.texture || new o();
i._uuid = t.uuid;
i.url = t.url;
i._setRawAsset(t.rawUrl, !1);
i._nativeAsset = e;
return i;
}
function h(t, e) {
if (t._owner instanceof cc.Asset) return null;
var i = new cc.AudioClip();
i._setRawAsset(t.rawUrl, !1);
i._nativeAsset = t.content;
i.url = t.url;
return i;
}
function f(t) {
return t.load ? t.load(t.content) : null;
}
var _ = 13, d = 55727696, p = 0, m = 6, y = 7, v = 12;
var g = 16, b = 6, C = 8, x = 10, A = 12, S = 14, w = 0, T = 1, E = 3;
function M(t, e) {
return t[e] << 8 | t[e + 1];
}
var B = {
png: u,
jpg: u,
bmp: u,
jpeg: u,
gif: u,
ico: u,
tiff: u,
webp: u,
image: u,
pvr: function(t) {
var e = t.content instanceof ArrayBuffer ? t.content : t.content.buffer, i = new Int32Array(e, 0, _);
if (i[p] != d) return new Error("Invalid magic number in PVR header");
var n = i[y], r = i[m], s = i[v] + 52;
return {
_data: new Uint8Array(e, s),
_compressed: !0,
width: n,
height: r
};
},
pkm: function(t) {
var e = t.content instanceof ArrayBuffer ? t.content : t.content.buffer, i = new Uint8Array(e), n = M(i, b);
if (n !== w && n !== T && n !== E) return new Error("Invalid magic number in ETC header");
var r = M(i, A), s = M(i, S);
M(i, C), M(i, x);
return {
_data: new Uint8Array(e, g),
_compressed: !0,
width: r,
height: s
};
},
mp3: h,
ogg: h,
wav: h,
m4a: h,
json: l,
ExportJson: l,
plist: function(t) {
if ("string" != typeof t.content) return new Error("Plist Loader: Input item doesn't contain string content");
var e = r.parse(t.content);
return e || new Error("Plist Loader: Parse [" + t.id + "] failed");
},
uuid: a,
prefab: a,
fire: a,
scene: a,
binary: f,
dbbin: f,
bin: f,
skel: f,
font: c.loadFont,
eot: c.loadFont,
ttf: c.loadFont,
woff: c.loadFont,
svg: c.loadFont,
ttc: c.loadFont,
default: function() {
return null;
}
}, D = function(t) {
this.id = "Loader";
this.async = !0;
this.pipeline = null;
this.extMap = n.mixin(t, B);
};
D.ID = "Loader";
D.prototype.addHandlers = function(t) {
this.extMap = n.mixin(this.extMap, t);
};
D.prototype.handle = function(t, e) {
return (this.extMap[t.type] || this.extMap.default).call(this, t, e);
};
s.Loader = e.exports = D;
}), {
"../assets/CCTexture2D": 92,
"../platform/CCSAXParser": 237,
"../platform/js": 250,
"./font-loader": 184,
"./pipeline": 190,
"./uuid-loader": 196
} ],
187: [ (function(t, e, i) {
"use strict";
var n = t("../platform/callbacks-invoker");
t("../utils/CCPath");
var r = t("../platform/js"), s = 0 | 998 * Math.random(), o = r.createMap(!0), a = [], c = {
WORKING: 1,
COMPLETE: 2,
ERROR: 3
}, l = r.createMap(!0);
function u(t) {
return "string" == typeof (t.url || t);
}
function h(t) {
if (t) {
var e = t.split("?");
if (e && e[0] && e[1]) {
var i = {};
e[1].split("&").forEach((function(t) {
var e = t.split("=");
i[e[0]] = e[1];
}));
return i;
}
}
}
function f(t, e) {
var i = "object" == typeof t ? t.url : t, n = {
queueId: e,
id: i,
url: i,
rawUrl: void 0,
urlParam: h(i),
type: "",
error: null,
content: null,
complete: !1,
states: {},
deps: null
};
if ("object" == typeof t) {
r.mixin(n, t);
if (t.skips) for (var s = 0; s < t.skips.length; s++) {
var o = t.skips[s];
n.states[o] = c.COMPLETE;
}
}
n.rawUrl = n.url;
i && !n.type && (n.type = cc.path.extname(i).toLowerCase().substr(1));
return n;
}
var _ = [];
function d(t, e, i) {
if (!t || !e) return !1;
var n = !1;
_.push(e.id);
if (e.deps) {
var r, s, o = e.deps;
for (r = 0; r < o.length; r++) {
if ((s = o[r]).id === t.id) {
n = !0;
break;
}
if (!(_.indexOf(s.id) >= 0) && (s.deps && d(t, s, !0))) {
n = !0;
break;
}
}
}
i || (_.length = 0);
return n;
}
var p = function(t, e, i, a) {
n.call(this);
this._id = ++s;
o[this._id] = this;
this._pipeline = t;
this._errorUrls = r.createMap(!0);
this._appending = !1;
this._ownerQueue = null;
this.onProgress = i;
this.onComplete = a;
this.map = r.createMap(!0);
this.completed = {};
this.totalCount = 0;
this.completedCount = 0;
this._pipeline ? this.active = !0 : this.active = !1;
e && (e.length > 0 ? this.append(e) : this.allComplete());
};
p.ItemState = new cc.Enum(c);
p.create = function(t, e, i, n) {
if (void 0 === i) {
if ("function" == typeof e) {
n = e;
e = i = null;
}
} else if (void 0 === n) if ("function" == typeof e) {
n = i;
i = e;
e = null;
} else {
n = i;
i = null;
}
var r = a.pop();
if (r) {
r._pipeline = t;
r.onProgress = i;
r.onComplete = n;
o[r._id] = r;
r._pipeline && (r.active = !0);
e && r.append(e);
} else r = new p(t, e, i, n);
return r;
};
p.getQueue = function(t) {
return t.queueId ? o[t.queueId] : null;
};
p.itemComplete = function(t) {
var e = o[t.queueId];
e && e.itemComplete(t.id);
};
p.initQueueDeps = function(t) {
var e = l[t._id];
if (e) {
e.completed.length = 0;
e.deps.length = 0;
} else e = l[t._id] = {
completed: [],
deps: []
};
};
p.registerQueueDep = function(t, e) {
var i = t.queueId || t;
if (!i) return !1;
var n = l[i];
if (n) -1 === n.deps.indexOf(e) && n.deps.push(e); else if (t.id) for (var r in l) {
var s = l[r];
-1 !== s.deps.indexOf(t.id) && -1 === s.deps.indexOf(e) && s.deps.push(e);
}
};
p.finishDep = function(t) {
for (var e in l) {
var i = l[e];
-1 !== i.deps.indexOf(t) && -1 === i.completed.indexOf(t) && i.completed.push(t);
}
};
var m = p.prototype;
r.mixin(m, n.prototype);
m.append = function(t, e) {
if (!this.active) return [];
e && !e.deps && (e.deps = []);
this._appending = !0;
var i, n, r, s = [];
for (i = 0; i < t.length; ++i) if (!(n = t[i]).queueId || this.map[n.id]) {
if (u(n)) {
var a = (r = f(n, this._id)).id;
if (!this.map[a]) {
this.map[a] = r;
this.totalCount++;
e && e.deps.push(r);
p.registerQueueDep(e || this._id, a);
s.push(r);
}
}
} else {
this.map[n.id] = n;
e && e.deps.push(n);
if (n.complete || d(e, n)) {
this.totalCount++;
this.itemComplete(n.id);
continue;
}
var c = this, l = o[n.queueId];
if (l) {
this.totalCount++;
p.registerQueueDep(e || this._id, n.id);
l.addListener(n.id, (function(t) {
c.itemComplete(t.id);
}));
}
}
this._appending = !1;
this.completedCount === this.totalCount ? this.allComplete() : this._pipeline.flowIn(s);
return s;
};
m._childOnProgress = function(t) {
if (this.onProgress) {
var e = l[this._id];
this.onProgress(e ? e.completed.length : this.completedCount, e ? e.deps.length : this.totalCount, t);
}
};
m.allComplete = function() {
var t = r.isEmptyObject(this._errorUrls) ? null : this._errorUrls;
this.onComplete && this.onComplete(t, this);
};
m.isCompleted = function() {
return this.completedCount >= this.totalCount;
};
m.isItemCompleted = function(t) {
return !!this.completed[t];
};
m.exists = function(t) {
return !!this.map[t];
};
m.getContent = function(t) {
var e = this.map[t], i = null;
e && (e.content ? i = e.content : e.alias && (i = e.alias.content));
return i;
};
m.getError = function(t) {
var e = this.map[t], i = null;
e && (e.error ? i = e.error : e.alias && (i = e.alias.error));
return i;
};
m.addListener = n.prototype.on;
m.hasListener = n.prototype.hasEventListener;
m.removeListener = n.prototype.off;
m.removeAllListeners = n.prototype.removeAll;
m.removeItem = function(t) {
var e = this.map[t];
if (e && this.completed[e.alias || t]) {
delete this.completed[t];
delete this.map[t];
if (e.alias) {
delete this.completed[e.alias.id];
delete this.map[e.alias.id];
}
this.completedCount--;
this.totalCount--;
}
};
m.itemComplete = function(t) {
var e = this.map[t];
if (e) {
var i = t in this._errorUrls;
e.error instanceof Error || r.isString(e.error) ? this._errorUrls[t] = e.error : e.error ? r.mixin(this._errorUrls, e.error) : !e.error && i && delete this._errorUrls[t];
this.completed[t] = e;
this.completedCount++;
p.finishDep(e.id);
if (this.onProgress) {
var n = l[this._id];
this.onProgress(n ? n.completed.length : this.completedCount, n ? n.deps.length : this.totalCount, e);
}
this.emit(t, e);
this.removeAll(t);
!this._appending && this.completedCount >= this.totalCount && this.allComplete();
}
};
m.destroy = function() {
this.active = !1;
this._appending = !1;
this._pipeline = null;
this._ownerQueue = null;
r.clear(this._errorUrls);
this.onProgress = null;
this.onComplete = null;
this.map = r.createMap(!0);
this.completed = {};
this.totalCount = 0;
this.completedCount = 0;
n.call(this);
if (l[this._id]) {
l[this._id].completed.length = 0;
l[this._id].deps.length = 0;
}
delete o[this._id];
delete l[this._id];
-1 === a.indexOf(this) && a.length < 10 && a.push(this);
};
cc.LoadingItems = e.exports = p;
}), {
"../platform/callbacks-invoker": 243,
"../platform/js": 250,
"../utils/CCPath": 302
} ],
188: [ (function(t, e, i) {
"use strict";
var n = t("./pipeline"), r = "MD5Pipe", s = /.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-]{8,})/, o = function(t, e, i) {
this.id = r;
this.async = !1;
this.pipeline = null;
this.md5AssetsMap = t;
this.md5NativeAssetsMap = e;
this.libraryBase = i;
};
o.ID = r;
o.prototype.handle = function(t) {
t.url = this.transformURL(t.url);
return null;
};
o.prototype.transformURL = function(t) {
var e = !t.startsWith(this.libraryBase) ? this.md5NativeAssetsMap : this.md5AssetsMap;
return t = t.replace(s, (function(t, i) {
var n = e[i];
return n ? t + "." + n : t;
}));
};
n.MD5Pipe = e.exports = o;
}), {
"./pipeline": 190
} ],
189: [ (function(t, e, i) {
"use strict";
var n = t("./unpackers"), r = t("../utils/misc").pushToMap, s = {
Invalid: 0,
Removed: 1,
Downloading: 2,
Loaded: 3
};
function o() {
this.unpacker = null;
this.state = s.Invalid;
this.duration = 0;
}
var a = {}, c = {}, l = {}, u = [], h = null;
function f(t, e) {
return new Error("Can not retrieve " + t + " from packer " + e);
}
e.exports = {
msToRelease: 12e4,
initPacks: function(t) {
c = t;
a = {};
for (var e in t) for (var i = t[e], n = 0; n < i.length; n++) {
var s = i[n], o = 1 === i.length;
r(a, s, e, o);
}
},
_loadNewPack: function(t, e, i) {
var n = this, r = cc.AssetLibrary.getLibUrlNoExt(e) + ".json";
cc.loader.load({
url: r,
ignoreMaxConcurrency: !0
}, (function(s, o) {
if (s) {
cc.errorID(4916, t);
return i(s);
}
l[e].url = r;
var a = n._doLoadNewPack(t, e, o);
a ? i(null, a) : i(f(t, e));
}));
},
_doPreload: function(t, e) {
var i = l[t];
i || ((i = l[t] = new o()).state = s.Downloading);
if (i.state !== s.Loaded) {
i.unpacker = new n.JsonUnpacker();
i.unpacker.load(c[t], e);
i.state = s.Loaded;
}
},
_doLoadNewPack: function(t, e, i) {
var r = l[e];
if (r.state !== s.Loaded) {
"string" == typeof i && (i = JSON.parse(i));
Array.isArray(i) ? r.unpacker = new n.JsonUnpacker() : i.type === n.TextureUnpacker.ID && (r.unpacker = new n.TextureUnpacker());
r.unpacker.load(c[e], i);
r.state = s.Loaded;
r.duration = 0;
u.push(e);
var o = this;
h || (h = setInterval((function() {
for (var t = o.msToRelease / 5e3, e = u.length - 1; e >= 0; e--) {
var i = u[e];
++l[i].duration > t && o.release(i);
}
if (0 === u.length) {
clearInterval(h);
h = null;
}
}), 5e3));
}
return r.unpacker.retrieve(t);
},
_selectLoadedPack: function(t) {
for (var e = s.Invalid, i = "", n = 0; n < t.length; n++) {
var r = t[n], o = l[r];
if (o) {
var a = o.state;
if (a === s.Loaded) return r;
if (a > e) {
e = a;
i = r;
}
}
}
return e !== s.Invalid ? i : t[0];
},
load: function(t, e) {
var i = t.uuid, n = a[i];
if (n) {
Array.isArray(n) && (n = this._selectLoadedPack(n));
var r = l[n];
if (r && r.state === s.Loaded) {
r.duration = 0;
var c = r.unpacker.retrieve(i);
return c || f(i, n);
}
if (!r) {
console.log("Create unpacker %s for %s", n, i);
(r = l[n] = new o()).state = s.Downloading;
}
this._loadNewPack(i, n, e);
return null;
}
},
release: function(t) {
var e = l[t];
if (e) {
cc.loader.release(e.url);
delete l[t];
cc.js.array.fastRemove(u, t);
}
}
};
0;
}), {
"../utils/misc": 313,
"./unpackers": 194
} ],
190: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("./loading-items"), s = r.ItemState;
function o(t, e) {
var i = t.id, n = e.states[i], r = t.next, a = t.pipeline;
if (!e.error && n !== s.WORKING && n !== s.ERROR) if (n === s.COMPLETE) r ? o(r, e) : a.flowOut(e); else {
e.states[i] = s.WORKING;
var c = t.handle(e, (function(t, n) {
if (t) {
e.error = t;
e.states[i] = s.ERROR;
a.flowOut(e);
} else {
n && (e.content = n);
e.states[i] = s.COMPLETE;
r ? o(r, e) : a.flowOut(e);
}
}));
if (c instanceof Error) {
e.error = c;
e.states[i] = s.ERROR;
a.flowOut(e);
} else if (void 0 !== c) {
null !== c && (e.content = c);
e.states[i] = s.COMPLETE;
r ? o(r, e) : a.flowOut(e);
}
}
}
var a = function(t) {
this._pipes = t;
this._cache = n.createMap(!0);
for (var e = 0; e < t.length; ++e) {
var i = t[e];
if (i.handle && i.id) {
i.pipeline = this;
i.next = e < t.length - 1 ? t[e + 1] : null;
}
}
};
a.ItemState = s;
var c = a.prototype;
c.insertPipe = function(t, e) {
if (!t.handle || !t.id || e > this._pipes.length) cc.warnID(4921); else if (this._pipes.indexOf(t) > 0) cc.warnID(4922); else {
t.pipeline = this;
var i = null;
e < this._pipes.length && (i = this._pipes[e]);
var n = null;
e > 0 && (n = this._pipes[e - 1]);
n && (n.next = t);
t.next = i;
this._pipes.splice(e, 0, t);
}
};
c.insertPipeAfter = function(t, e) {
var i = this._pipes.indexOf(t);
i < 0 || this.insertPipe(e, i + 1);
};
c.appendPipe = function(t) {
if (t.handle && t.id) {
t.pipeline = this;
t.next = null;
this._pipes.length > 0 && (this._pipes[this._pipes.length - 1].next = t);
this._pipes.push(t);
}
};
c.flowIn = function(t) {
var e, i, n = this._pipes[0];
if (n) {
for (e = 0; e < t.length; e++) {
i = t[e];
this._cache[i.id] = i;
}
for (e = 0; e < t.length; e++) o(n, i = t[e]);
} else for (e = 0; e < t.length; e++) this.flowOut(t[e]);
};
c.flowInDeps = function(t, e, i) {
return r.create(this, (function(t, e) {
i(t, e);
e.destroy();
})).append(e, t);
};
c.flowOut = function(t) {
t.error ? delete this._cache[t.id] : this._cache[t.id] || (this._cache[t.id] = t);
t.complete = !0;
r.itemComplete(t);
};
c.copyItemStates = function(t, e) {
if (e instanceof Array) for (var i = 0; i < e.length; ++i) e[i].states = t.states; else e.states = t.states;
};
c.getItem = function(t) {
var e = this._cache[t];
if (!e) return e;
e.alias && (e = e.alias);
return e;
};
c.removeItem = function(t) {
var e = this._cache[t];
e && e.complete && delete this._cache[t];
return e;
};
c.clear = function() {
for (var t in this._cache) {
var e = this._cache[t];
delete this._cache[t];
if (!e.complete) {
e.error = new Error("Canceled manually");
this.flowOut(e);
}
}
};
cc.Pipeline = e.exports = a;
}), {
"../platform/js": 250,
"./loading-items": 187
} ],
191: [ (function(t, e, i) {
"use strict";
}), {
"../platform/js": 250
} ],
192: [ (function(t, e, i) {
"use strict";
var n = t("./pipeline"), r = "SubPackPipe", s = /.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-]{8,})/;
function o(t) {
var e = t.match(s);
return e ? e[1] : "";
}
var a = Object.create(null), c = function(t) {
this.id = r;
this.async = !1;
this.pipeline = null;
for (var e in t) {
var i = t[e];
i.uuids && i.uuids.forEach((function(t) {
a[t] = i.path;
}));
}
};
c.ID = r;
c.prototype.handle = function(t) {
t.url = this.transformURL(t.url);
return null;
};
c.prototype.transformURL = function(t) {
var e = o(t);
if (e) {
var i = a[e];
if (i) return t.replace("res/raw-assets/", i + "raw-assets/");
}
return t;
};
n.SubPackPipe = e.exports = c;
}), {
"./pipeline": 190
} ],
193: [ (function(t, e, i) {
"use strict";
var n = t("./utils").urlAppendTimestamp;
e.exports = function(t, e) {
var i = t.url;
i = n(i);
var r = cc.loader.getXMLHttpRequest(), s = "Load text file failed: " + i;
r.open("GET", i, !0);
r.overrideMimeType && r.overrideMimeType("text/plain; charset=utf-8");
r.onload = function() {
4 === r.readyState ? 200 === r.status || 0 === r.status ? e(null, r.responseText) : e({
status: r.status,
errorMessage: s + "(wrong status)"
}) : e({
status: r.status,
errorMessage: s + "(wrong readyState)"
});
};
r.onerror = function() {
e({
status: r.status,
errorMessage: s + "(error)"
});
};
r.ontimeout = function() {
e({
status: r.status,
errorMessage: s + "(time out)"
});
};
r.send(null);
};
}), {
"./utils": 195
} ],
194: [ (function(t, e, i) {
"use strict";
var n = t("../assets/CCTexture2D"), r = t("../platform/js");
function s() {
this.jsons = {};
}
s.prototype.load = function(t, e) {
e.length !== t.length && cc.errorID(4915);
for (var i = 0; i < t.length; i++) {
var n = t[i], r = e[i];
this.jsons[n] = r;
}
};
s.prototype.retrieve = function(t) {
return this.jsons[t] || null;
};
function o() {
this.contents = {};
}
o.ID = r._getClassId(n);
o.prototype.load = function(t, e) {
var i = e.data.split("|");
i.length !== t.length && cc.errorID(4915);
for (var n = 0; n < t.length; n++) this.contents[t[n]] = i[n];
};
o.prototype.retrieve = function(t) {
var e = this.contents[t];
return e ? {
__type__: o.ID,
content: e
} : null;
};
0;
e.exports = {
JsonUnpacker: s,
TextureUnpacker: o
};
}), {
"../assets/CCTexture2D": 92,
"../platform/js": 250
} ],
195: [ (function(t, e, i) {
"use strict";
var n = /\?/;
e.exports = {
urlAppendTimestamp: function(t) {
cc.game.config.noCache && "string" == typeof t && (n.test(t) ? t += "&_t=" + (new Date() - 0) : t += "?_t=" + (new Date() - 0));
return t;
}
};
}), {} ],
196: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = t("../CCDebug");
t("../platform/deserialize");
var s = t("./loading-items");
function o(t) {
return t && (t[0] && "cc.Scene" === t[0].__type__ || t[1] && "cc.Scene" === t[1].__type__ || t[0] && "cc.Prefab" === t[0].__type__);
}
function a(t, e, i, n) {
var r, s, o, a = i.uuidList, c = i.uuidObjList, l = i.uuidPropList, u = i._stillUseUrl, h = t.dependKeys = [];
if (n) {
r = [];
for (s = 0; s < a.length; s++) {
o = a[s];
var f = c[s], _ = l[s], d = cc.AssetLibrary._getAssetInfoInRuntime(o);
if (d.raw) {
var p = d.url;
f[_] = p;
h.push(p);
} else r.push({
type: "uuid",
uuid: o,
deferredLoadRaw: !0,
_owner: f,
_ownerProp: _,
_stillUseUrl: u[s]
});
}
} else {
r = new Array(a.length);
for (s = 0; s < a.length; s++) {
o = a[s];
r[s] = {
type: "uuid",
uuid: o,
_owner: c[s],
_ownerProp: l[s],
_stillUseUrl: u[s]
};
}
e._native && !e.constructor.preventPreloadNativeObject && r.push({
url: e.nativeUrl,
_owner: e,
_ownerProp: "_nativeAsset"
});
}
return r;
}
function c(t, e, i, n, r) {
e.content = i;
var o = e.dependKeys;
t.flowInDeps(e, n, (function(t, e) {
var a, c = e.map;
for (var l in c) (a = c[l]).uuid && a.content && (a.content._uuid = a.uuid);
function u(t) {
var e = t.content;
this._stillUseUrl && (e = e && cc.RawAsset.wasRawAssetType(e.constructor) ? e.nativeUrl : t.rawUrl);
"_nativeAsset" === this._ownerProp && (this._owner.url = t.url);
this._owner[this._ownerProp] = e;
t.uuid !== i._uuid && o.indexOf(t.id) < 0 && o.push(t.id);
}
for (var h = 0; h < n.length; h++) {
var f = n[h], _ = f.uuid, d = f.url;
f._owner, f._ownerProp;
if (a = c[d]) {
var p = f;
if (a.complete || a.content) if (a.error) {
cc._throw(a.error.message || a.error.errorMessage || a.error);
} else u.call(p, a); else {
var m = s.getQueue(a), y = m._callbackTable[_];
y ? y.unshift(u, p) : m.addListener(_, u, p);
}
}
}
if (!t && i.onLoad) try {
i.onLoad();
} catch (t) {
cc._throw(t);
}
r(t, i);
}));
}
function l(t, e, i) {
0;
var n = e.deferredLoadRaw;
n ? t instanceof cc.Asset && t.constructor.preventDeferredLoadDependents && (n = !1) : i && (t instanceof cc.SceneAsset || t instanceof cc.Prefab) && (n = t.asyncLoadAssets);
return n;
}
function u(t, e) {
var i, s;
if ("string" == typeof t.content) try {
i = JSON.parse(t.content);
} catch (e) {
return new Error(r.getError(4923, t.id, e.stack));
} else {
if ("object" != typeof t.content) return new Error(r.getError(4924));
i = t.content;
}
var u = o(i);
s = u ? cc._MissingScript.safeFindClass : function(t) {
var e = n._getClassById(t);
if (e) return e;
cc.warnID(4903, t);
return Object;
};
var h, f = cc.deserialize.Details.pool.get();
try {
h = cc.deserialize(i, f, {
classFinder: s,
target: t.existingAsset,
customEnv: t
});
} catch (e) {
cc.deserialize.Details.pool.put(f);
var _ = e + "\n" + e.stack;
return new Error(r.getError(4925, t.id, _));
}
h._uuid = t.uuid;
h.url = h.nativeUrl;
0;
var d = a(t, h, f, l(h, t, u));
cc.deserialize.Details.pool.put(f);
if (0 === d.length) {
h.onLoad && h.onLoad();
return e(null, h);
}
c(this.pipeline, t, h, d, e);
}
e.exports = u;
u.isSceneObj = o;
}), {
"../CCDebug": 69,
"../platform/deserialize": 245,
"../platform/js": 250,
"./loading-items": 187
} ],
197: [ (function(t, e, i) {
"use strict";
s(t("../../renderer/core/input-assembler"));
var n = s(t("../../renderer/gfx")), r = t("./mesh-data");
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
t("../renderer");
var o = t("../event/event-target");
function a(t, e, i) {
t[e] = i._val;
}
function c(t, e, i) {
t[e] = i.x;
t[e + 1] = i.y;
}
function l(t, e, i) {
t[e] = i.x;
t[e + 1] = i.y;
t[e + 2] = i.z;
}
var u = {
5120: "getInt8",
5121: "getUint8",
5122: "getInt16",
5123: "getUint16",
5124: "getInt32",
5125: "getUint32",
5126: "getFloat32"
}, h = {
5120: "setInt8",
5121: "setUint8",
5122: "setInt16",
5123: "setUint16",
5124: "setInt32",
5125: "setUint32",
5126: "setFloat32"
}, f = (function() {
var t = new ArrayBuffer(2);
new DataView(t).setInt16(0, 256, !0);
return 256 === new Int16Array(t)[0];
})(), _ = cc.Class({
name: "cc.Mesh",
extends: cc.Asset,
mixins: [ o ],
properties: {
_nativeAsset: {
override: !0,
get: function() {
return this._buffer;
},
set: function(t) {
this._buffer = ArrayBuffer.isView(t) ? t.buffer : t;
this.initWithBuffer();
}
},
_vertexBundles: {
default: null,
type: r.VertexBundle
},
_primitives: {
default: null,
Primitive: r.Primitive
},
_minPos: cc.v3(),
_maxPos: cc.v3(),
subMeshes: {
get: function() {
return this._subMeshes;
},
set: function(t) {
this._subMeshes = t;
}
},
subDatas: {
get: function() {
return this._subDatas;
}
}
},
ctor: function() {
this._subMeshes = [];
this.loaded = !1;
this._subDatas = [];
},
initWithBuffer: function() {
this._subMeshes.length = 0;
for (var t = this._primitives, e = 0; e < t.length; e++) {
var i = t[e], s = i.data, o = new Uint8Array(this._buffer, s.offset, s.length), a = this._vertexBundles[i.vertexBundleIndices[0]], c = a.data, l = new n.default.VertexFormat(a.formats), u = new Uint8Array(this._buffer, c.offset, c.length), h = this._canVertexFormatBatch(l), f = new r.MeshData();
f.vData = u;
f.iData = o;
f.vfm = l;
f.offset = c.offset;
f.canBatch = h;
this._subDatas.push(f);
f.vDirty = !0;
}
this.loaded = !0;
this.emit("load");
},
_canVertexFormatBatch: function(t) {
var e = t._attr2el[n.default.ATTR_POSITION];
return !e || e.type === n.default.ATTR_TYPE_FLOAT32 && t._bytes % 4 == 0;
},
init: function(t, e, i, n) {
void 0 === i && (i = !1);
void 0 === n && (n = 0);
var s = new Uint8Array(t._bytes * e), o = new r.MeshData();
o.vData = s;
o.vfm = t;
o.vDirty = !0;
o.canBatch = this._canVertexFormatBatch(t);
var a = this._subDatas[n];
if (a) {
a.vb && a.vb.destroy();
a.ib && a.ib.destroy();
}
this._subDatas[n] = o;
this.loaded = !0;
this.emit("load");
this.emit("init-format");
},
setVertices: function(t, e, i) {
i = i || 0;
var r = this._subDatas[i], s = r.vfm.element(t);
if (!s) return cc.warn("Cannot find " + t + " attribute in vertex defines.");
var o, u = "number" == typeof e[0], h = s.num, f = u ? e.length / h | 0 : e.length;
r.vData.byteLength < f * s.stride && r.setVData(new Uint8Array(f * r.vfm._bytes));
var _ = 4;
if (t === n.default.ATTR_COLOR) if (u) {
o = r.getVData();
_ = 1;
} else o = r.getVData(Uint32Array); else o = r.getVData(Float32Array);
var d = s.stride / _, p = s.offset / _;
if (u) for (var m = 0, y = e.length / h; m < y; m++) for (var v = m * h, g = m * d + p, b = 0; b < h; b++) o[g + b] = e[v + b]; else {
var C;
C = t === n.default.ATTR_COLOR ? a : 2 === h ? c : l;
for (var x = 0, A = e.length; x < A; x++) {
C(o, x * d + p, e[x]);
}
}
r.vDirty = !0;
},
setIndices: function(t, e, i) {
e = e || 0;
var r = t;
if (t instanceof Uint16Array) r = new Uint8Array(t.buffer, t.byteOffset, t.byteLength); else if (Array.isArray(t)) {
r = new Uint16Array(t);
r = new Uint8Array(r.buffer, r.byteOffset, r.byteLength);
}
i ? n.default.USAGE_DYNAMIC : n.default.USAGE_STATIC;
var s = this._subDatas[e];
if (s.ib) {
s.iData = r;
s.iDirty = !0;
} else {
s.iData = r;
}
},
setPrimitiveType: function(t, e) {
e = e || 0;
this._subMeshes[e] ? this._subMeshes[e]._primitiveType = t : cc.warn("Do not have sub mesh at index " + e);
},
clear: function() {
this._subMeshes.length = 0;
for (var t = this._subDatas, e = 0, i = t.length; e < i; e++) {
var n = t[e].vb;
n && n.destroy();
var r = t[e].ib;
r && r.destroy();
}
t.length = 0;
},
setBoundingBox: function(t, e) {
this._minPos = t;
this._maxPos = e;
},
destroy: function() {
this.clear();
},
_uploadData: function() {
for (var t = this._subDatas, e = 0, i = t.length; e < i; e++) {
var n = t[e];
if (n.vDirty) {
var r = n.vb, s = n.vData;
r.update(0, s);
n.vDirty = !1;
}
if (n.iDirty) {
var o = n.ib, a = n.iData;
o.update(0, a);
n.iDirty = !1;
}
}
},
_getAttrMeshData: function(t, e) {
var i = this._subDatas[t];
if (!i) return [];
var n = i.vfm, r = n.element(e);
if (!r) return [];
i.attrDatas || (i.attrDatas = {});
var s = i.attrDatas, o = s[e];
if (o) return o;
o = s[e] = [];
for (var a = i.vData, c = new DataView(a.buffer, a.byteOffset, a.byteLength), l = r.stride, h = r.offset, _ = r.num, d = r.bytes / _, p = u[r.type], m = a.byteLength / n._bytes, y = 0; y < m; y++) for (var v = y * l + h, g = 0; g < _; g++) {
var b = c[p](v + g * d, f);
o.push(b);
}
return o;
},
copyAttribute: function(t, e, i, n, r) {
var s = !1, o = this._subDatas[t];
if (!o) return s;
var a = o.vfm, c = a.element(e);
if (!c) return s;
var l = h[c.type];
if (!l) return s;
var u = this._getAttrMeshData(t, e), _ = o.vData.byteLength / a._bytes, d = c.bytes / c.num;
if (u.length > 0) {
for (var p = new DataView(i, r), m = n, y = c.num, v = 0; v < _; ++v) for (var g = v * y, b = 0; b < y; ++b) {
var C = g + b, x = m * v + d * b;
p[l](x, u[C], f);
}
s = !0;
}
return s;
},
copyIndices: function(t, e) {
var i = this._subDatas[t];
if (!i) return !1;
for (var r = i.iData, s = r.length / 2, o = new DataView(r.buffer, r.byteOffset, r.byteLength), a = u[n.default.INDEX_FMT_UINT8], c = 0; c < s; ++c) e[c] = o[a](2 * c);
return !0;
}
});
cc.Mesh = e.exports = _;
}), {
"../../renderer/core/input-assembler": 350,
"../../renderer/gfx": 354,
"../event/event-target": 156,
"../renderer": 262,
"./mesh-data": 200
} ],
198: [ (function(t, e, i) {
"use strict";
var n = a(t("../../renderer/gfx")), r = (a(t("../../renderer/core/input-assembler")), 
a(t("../geom-utils/aabb"))), s = t("../utils/mesh-util"), o = (a(t("../value-types/vec3")), 
a(t("../value-types/mat4")), a(t("../assets/material/material-variant")));
function a(t) {
return t && t.__esModule ? t : {
default: t
};
}
var c = t("../components/CCRenderComponent"), l = t("./CCMesh"), u = t("../renderer/render-flow"), h = (t("../renderer"), 
t("../assets/material/CCMaterial")), f = cc.Enum({
OFF: 0,
ON: 1
}), _ = cc.Class({
name: "cc.MeshRenderer",
extends: c,
editor: !1,
properties: {
_mesh: {
default: null,
type: l
},
_receiveShadows: !1,
_shadowCastingMode: f.OFF,
_enableAutoBatch: !1,
mesh: {
get: function() {
return this._mesh;
},
set: function(t) {
if (this._mesh !== t) {
this._setMesh(t);
if (t) {
this.markForRender(!0);
this.node._renderFlag |= u.FLAG_TRANSFORM;
} else this.disableRender();
}
},
type: l,
animatable: !1
},
textures: {
default: [],
type: cc.Texture2D,
visible: !1
},
receiveShadows: {
get: function() {
return this._receiveShadows;
},
set: function(t) {
this._receiveShadows = t;
this._updateReceiveShadow();
},
animatable: !1
},
shadowCastingMode: {
get: function() {
return this._shadowCastingMode;
},
set: function(t) {
this._shadowCastingMode = t;
this._updateCastShadow();
},
type: f,
animatable: !1
},
enableAutoBatch: {
get: function() {
return this._enableAutoBatch;
},
set: function(t) {
this._enableAutoBatch = t;
}
}
},
statics: {
ShadowCastingMode: f
},
ctor: function() {
this._boundingBox = cc.geomUtils && new r.default();
0;
},
onEnable: function() {
var t = this;
this._super();
if (this._mesh && !this._mesh.loaded) {
this.disableRender();
this._mesh.once("load", (function() {
if (t.isValid) {
t._setMesh(t._mesh);
t.markForRender(!0);
}
}));
(0, s.postLoadMesh)(this._mesh);
} else this._setMesh(this._mesh);
this._updateRenderNode();
this._updateMaterial();
},
onDestroy: function() {
this._setMesh(null);
cc.pool.assembler.put(this._assembler);
},
_updateRenderNode: function() {
this._assembler.setRenderNode(this.node);
},
_setMesh: function(t) {
cc.geomUtils && t && r.default.fromPoints(this._boundingBox, t._minPos, t._maxPos);
this._mesh && this._mesh.off("init-format", this._updateMeshAttribute, this);
t && t.on("init-format", this._updateMeshAttribute, this);
this._mesh = t;
this._updateMeshAttribute();
},
_getDefaultMaterial: function() {
return h.getBuiltinMaterial("unlit");
},
_validateRender: function() {
var t = this._mesh;
t && t._subDatas.length > 0 || this.disableRender();
},
_updateMaterial: function() {
var t = this.textures;
if (t && t.length > 0) for (var e = this._getDefaultMaterial(), i = 0; i < t.length; i++) {
var n = this._materials[i];
if (!n || n._uuid === e._uuid) {
if (!n) {
n = o.default.create(e, this);
this.setMaterial(i, n);
}
n.setProperty("diffuseTexture", t[i]);
}
}
this._updateReceiveShadow();
this._updateCastShadow();
this._updateMeshAttribute();
},
_updateReceiveShadow: function() {
for (var t = this.getMaterials(), e = 0; e < t.length; e++) t[e].define("CC_USE_SHADOW_MAP", this._receiveShadows, void 0, !0);
},
_updateCastShadow: function() {
for (var t = this.getMaterials(), e = 0; e < t.length; e++) t[e].define("CC_CASTING_SHADOW", this._shadowCastingMode === f.ON, void 0, !0);
},
_updateMeshAttribute: function() {
var t = this._mesh && this._mesh.subDatas;
if (t) {
for (var e = this.getMaterials(), i = 0; i < e.length && t[i]; i++) {
var r = t[i].vfm, s = e[i];
s.define("CC_USE_ATTRIBUTE_COLOR", !!r.element(n.default.ATTR_COLOR), void 0, !0);
s.define("CC_USE_ATTRIBUTE_UV0", !!r.element(n.default.ATTR_UV0), void 0, !0);
s.define("CC_USE_ATTRIBUTE_NORMAL", !!r.element(n.default.ATTR_NORMAL), void 0, !0);
s.define("CC_USE_ATTRIBUTE_TANGENT", !!r.element(n.default.ATTR_TANGENT), void 0, !0);
}
this._assembler.updateMeshData(this);
}
},
_checkBacth: function() {}
});
cc.MeshRenderer = e.exports = _;
}), {
"../../renderer/core/input-assembler": 350,
"../../renderer/gfx": 354,
"../assets/material/CCMaterial": 95,
"../assets/material/material-variant": 102,
"../components/CCRenderComponent": 131,
"../geom-utils/aabb": 160,
"../renderer": 262,
"../renderer/render-flow": 263,
"../utils/mesh-util": 312,
"../value-types/mat4": 330,
"../value-types/vec3": 338,
"./CCMesh": 197
} ],
199: [ (function(t, e, i) {
"use strict";
t("./CCMesh");
t("./CCMeshRenderer");
t("./mesh-renderer");
}), {
"./CCMesh": 197,
"./CCMeshRenderer": 198,
"./mesh-renderer": 201
} ],
200: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.MeshData = c;
i.Primitive = i.VertexBundle = i.VertexFormat = i.BufferRange = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../renderer/gfx"));
var r = cc.Class({
name: "cc.BufferRange",
properties: {
offset: 0,
length: 0
}
});
i.BufferRange = r;
var s = cc.Class({
name: "cc.mesh.VertexFormat",
properties: {
name: "",
type: -1,
num: -1,
normalize: !1
}
});
i.VertexFormat = s;
var o = cc.Class({
name: "cc.mesh.VertexBundle",
properties: {
data: {
default: null,
type: r
},
formats: {
default: [],
type: s
},
verticesCount: 0
}
});
i.VertexBundle = o;
var a = cc.Class({
name: "cc.mesh.Primitive",
properties: {
vertexBundleIndices: {
default: [],
type: cc.Float
},
data: {
default: null,
type: r
},
indexUnit: n.default.INDEX_FMT_UINT16,
topology: n.default.PT_TRIANGLES
}
});
i.Primitive = a;
function c() {
this.vData = null;
this.float32VData = null;
this.uint32VData = null;
this.iData = null;
this.uint16IData = null;
this.vfm = null;
this.offset = 0;
this.vb = null;
this.ib = null;
this.vDirty = !1;
this.iDirty = !1;
this.enable = !0;
}
c.prototype.setVData = function(t) {
this.vData = t;
this.float32VData = null;
this.uint32VData = null;
};
c.prototype.getVData = function(t) {
if (t === Float32Array) {
this.float32VData || (this.float32VData = new Float32Array(this.vData.buffer, this.vData.byteOffset, this.vData.byteLength / 4));
return this.float32VData;
}
if (t === Uint32Array) {
this.uint32VData || (this.uint32VData = new Uint32Array(this.vData.buffer, this.vData.byteOffset, this.vData.byteLength / 4));
return this.uint32VData;
}
return this.vData;
};
c.prototype.getIData = function(t) {
if (t === Uint16Array) {
this.uint16IData || (this.uint16IData = new Uint16Array(this.iData.buffer, this.iData.byteOffset, this.iData.byteLength / 2));
return this.uint16IData;
}
return this.iData;
};
}), {
"../../renderer/gfx": 354
} ],
201: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = o(t("../renderer/assembler")), r = o(t("../../renderer/gfx")), s = o(t("../value-types/vec3"));
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
function a(t) {
return function() {
var e, i = h(t);
if (u()) {
var n = h(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return c(this, e);
};
}
function c(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? l(t) : e;
}
function l(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function u() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function h(t) {
return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function f(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var _ = t("./CCMeshRenderer"), d = new s.default(), p = (function(t) {
f(e, t);
a(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.init = function(e) {
t.prototype.init.call(this, e);
this._worldDatas = {};
this._renderNode = null;
};
i.setRenderNode = function(t) {
this._renderNode = t;
};
i.fillBuffers = function(t, e) {
if (t.mesh) {
t.mesh._uploadData();
for (var i = e.cullingMask === t.node._cullingMask, n = t.enableAutoBatch, s = t._materials, o = t.mesh._subMeshes, a = t.mesh.subDatas, c = 0; c < o.length; c++) {
var l = o[c], u = a[c], h = s[c] || s[0];
if (n && u.canBatch && l._primitiveType === r.default.PT_TRIANGLES) {
i && h.getHash() === e.material.getHash() || e._flush();
e.material = h;
e.cullingMask = t.node._cullingMask;
e.node = e._dummyNode;
this._fillBuffer(t, u, e, c);
} else {
e._flush();
e.material = h;
e.cullingMask = t.node._cullingMask;
e.node = this._renderNode;
e._flushIA(l);
}
}
0;
}
};
i._fillBuffer = function(t, e, i, n) {
var r = e.getVData(Float32Array), s = e.vfm, o = r.byteLength / s._bytes | 0, a = e.getIData(Uint16Array), c = a.length, l = i.getBuffer("mesh", s), u = l.request(o, c), h = u.indiceOffset, f = u.byteOffset >> 2, _ = u.vertexOffset, d = l._vData, p = l._iData;
!i.worldMatDirty && this._worldDatas[n] || this._updateWorldVertices(n, o, r, s, t.node._worldMatrix);
d.set(this._worldDatas[n], f);
for (var m = 0; m < c; m++) p[h + m] = _ + a[m];
};
i._updateWorldVertices = function(t, e, i, n, o) {
var a = this._worldDatas[t];
a || (a = this._worldDatas[t] = new Float32Array(i.length)).set(i);
for (var c = n._bytes / 4, l = n._elements, u = 0, h = l.length; u < h; u++) {
var f = l[u], _ = f.offset / 4;
if (f.name === r.default.ATTR_POSITION || f.name === r.default.ATTR_NORMAL) for (var p = f.name === r.default.ATTR_NORMAL ? s.default.transformMat4Normal : s.default.transformMat4, m = 0; m < e; m++) {
var y = m * c + _;
d.x = i[y];
d.y = i[y + 1];
d.z = i[y + 2];
p(d, d, o);
a[y] = d.x;
a[y + 1] = d.y;
a[y + 2] = d.z;
}
}
};
i._drawDebugDatas = function(t, e, i) {
var n = t._debugDatas[i];
if (n) for (var r = 0; r < n.length; r++) {
var s = n[r];
if (s) {
var o = s.material;
e.material = o;
e._flushIA(s.ia);
}
}
};
return e;
})(n.default);
i.default = p;
n.default.register(_, p);
e.exports = i.default;
}), {
"../../renderer/gfx": 354,
"../renderer/assembler": 259,
"../value-types/vec3": 338,
"./CCMeshRenderer": 198
} ],
202: [ (function(t, e, i) {
"use strict";
var n = t("./component-scheduler"), r = t("./platform/CCObject").Flags, s = t("./platform/js"), o = r.IsPreloadStarted, a = r.IsOnLoadStarted, c = r.IsOnLoadCalled, l = r.Deactivating, u = cc.Class({
extends: n.LifeCycleInvoker,
add: function(t) {
this._zero.array.push(t);
},
remove: function(t) {
this._zero.fastRemove(t);
},
cancelInactive: function(t) {
n.LifeCycleInvoker.stableRemoveInactive(this._zero, t);
},
invoke: function() {
this._invoke(this._zero);
this._zero.array.length = 0;
}
}), h = n.createInvokeImpl("c.__preload();"), f = n.createInvokeImpl("c.onLoad();c._objFlags|=" + c, !1, c), _ = new s.Pool(4);
_.get = function() {
var t = this._get() || {
preload: new u(h),
onLoad: new n.OneOffInvoker(f),
onEnable: new n.OneOffInvoker(n.invokeOnEnable)
};
t.preload._zero.i = -1;
var e = t.onLoad;
e._zero.i = -1;
e._neg.i = -1;
e._pos.i = -1;
(e = t.onEnable)._zero.i = -1;
e._neg.i = -1;
e._pos.i = -1;
return t;
};
function d(t, e, i) {
0;
e ? t._removeComponent(e) : s.array.removeAt(t._components, i);
}
function p() {
this._activatingStack = [];
}
var m = cc.Class({
ctor: p,
reset: p,
_activateNodeRecursively: function(t, e, i, n) {
if (t._objFlags & l) cc.errorID(3816, t.name); else {
t._activeInHierarchy = !0;
for (var r = t._components.length, s = 0; s < r; ++s) {
var o = t._components[s];
if (o instanceof cc.Component) this.activateComp(o, e, i, n); else {
d(t, o, s);
--s;
--r;
}
}
t._childArrivalOrder = t._children.length;
for (var a = 0, c = t._children.length; a < c; ++a) {
var u = t._children[a];
u._localZOrder = 4294901760 & u._localZOrder | a + 1;
u._active && this._activateNodeRecursively(u, e, i, n);
}
t._onPostActivated(!0);
}
},
_deactivateNodeRecursively: function(t) {
0;
t._objFlags |= l;
t._activeInHierarchy = !1;
for (var e = t._components.length, i = 0; i < e; ++i) {
var n = t._components[i];
if (n._enabled) {
cc.director._compScheduler.disableComp(n);
if (t._activeInHierarchy) {
t._objFlags &= ~l;
return;
}
}
}
for (var r = 0, s = t._children.length; r < s; ++r) {
var o = t._children[r];
if (o._activeInHierarchy) {
this._deactivateNodeRecursively(o);
if (t._activeInHierarchy) {
t._objFlags &= ~l;
return;
}
}
}
t._onPostActivated(!1);
t._objFlags &= ~l;
},
activateNode: function(t, e) {
if (e) {
var i = _.get();
this._activatingStack.push(i);
this._activateNodeRecursively(t, i.preload, i.onLoad, i.onEnable);
i.preload.invoke();
i.onLoad.invoke();
i.onEnable.invoke();
this._activatingStack.pop();
_.put(i);
} else {
this._deactivateNodeRecursively(t);
for (var n = this._activatingStack, r = 0; r < n.length; r++) {
var s = n[r];
s.preload.cancelInactive(o);
s.onLoad.cancelInactive(a);
s.onEnable.cancelInactive();
}
}
t.emit("active-in-hierarchy-changed", t);
},
activateComp: function(t, e, i, n) {
if (cc.isValid(t, !0)) {
if (!(t._objFlags & o)) {
t._objFlags |= o;
t.__preload && (e ? e.add(t) : t.__preload());
}
if (!(t._objFlags & a)) {
t._objFlags |= a;
if (t.onLoad) if (i) i.add(t); else {
t.onLoad();
t._objFlags |= c;
} else t._objFlags |= c;
}
if (t._enabled) {
if (!t.node._activeInHierarchy) return;
cc.director._compScheduler.enableComp(t, n);
}
}
},
destroyComp: function(t) {
cc.director._compScheduler.disableComp(t);
t.onDestroy && t._objFlags & c && t.onDestroy();
},
resetComp: !1
});
e.exports = m;
}), {
"./component-scheduler": 114,
"./platform/CCObject": 236,
"./platform/js": 250,
"./utils/misc": 313
} ],
203: [ (function(t, e, i) {
"use strict";
var n = t("./CCPhysicsTypes").PTM_RATIO, r = t("./CCPhysicsTypes").ContactType, s = [], o = [ cc.v2(), cc.v2() ], a = new b2.WorldManifold(), c = {
points: [],
separations: [],
normal: cc.v2()
};
function l() {
this.localPoint = cc.v2();
this.normalImpulse = 0;
this.tangentImpulse = 0;
}
var u = [ new l(), new l() ], h = (new b2.Manifold(), {
type: 0,
localPoint: cc.v2(),
localNormal: cc.v2(),
points: []
}), f = {
normalImpulses: [],
tangentImpulses: []
};
function _() {}
_.prototype.init = function(t) {
this.colliderA = t.GetFixtureA().collider;
this.colliderB = t.GetFixtureB().collider;
this.disabled = !1;
this.disabledOnce = !1;
this._impulse = null;
this._inverted = !1;
this._b2contact = t;
t._contact = this;
};
_.prototype.reset = function() {
this.setTangentSpeed(0);
this.resetFriction();
this.resetRestitution();
this.colliderA = null;
this.colliderB = null;
this.disabled = !1;
this._impulse = null;
this._b2contact._contact = null;
this._b2contact = null;
};
_.prototype.getWorldManifold = function() {
var t = c.points, e = c.separations, i = c.normal;
this._b2contact.GetWorldManifold(a);
var r = a.points, s = a.separations, l = this._b2contact.GetManifold().pointCount;
t.length = e.length = l;
for (var u = 0; u < l; u++) {
var h = o[u];
h.x = r[u].x * n;
h.y = r[u].y * n;
t[u] = h;
e[u] = s[u] * n;
}
i.x = a.normal.x;
i.y = a.normal.y;
if (this._inverted) {
i.x *= -1;
i.y *= -1;
}
return c;
};
_.prototype.getManifold = function() {
for (var t = h.points, e = h.localNormal, i = h.localPoint, r = this._b2contact.GetManifold(), s = r.points, o = t.length = r.pointCount, a = 0; a < o; a++) {
var c = u[a], l = s[a];
c.localPoint.x = l.localPoint.x * n;
c.localPoint.Y = l.localPoint.Y * n;
c.normalImpulse = l.normalImpulse * n;
c.tangentImpulse = l.tangentImpulse;
t[a] = c;
}
i.x = r.localPoint.x * n;
i.y = r.localPoint.y * n;
e.x = r.localNormal.x;
e.y = r.localNormal.y;
h.type = r.type;
if (this._inverted) {
e.x *= -1;
e.y *= -1;
}
return h;
};
_.prototype.getImpulse = function() {
var t = this._impulse;
if (!t) return null;
for (var e = f.normalImpulses, i = f.tangentImpulses, r = t.count, s = 0; s < r; s++) {
e[s] = t.normalImpulses[s] * n;
i[s] = t.tangentImpulses[s];
}
i.length = e.length = r;
return f;
};
_.prototype.emit = function(t) {
var e;
switch (t) {
case r.BEGIN_CONTACT:
e = "onBeginContact";
break;

case r.END_CONTACT:
e = "onEndContact";
break;

case r.PRE_SOLVE:
e = "onPreSolve";
break;

case r.POST_SOLVE:
e = "onPostSolve";
}
var i, n, s, o, a = this.colliderA, c = this.colliderB, l = a.body, u = c.body;
if (l.enabledContactListener) {
i = l.node._components;
this._inverted = !1;
for (n = 0, s = i.length; n < s; n++) (o = i[n])[e] && o[e](this, a, c);
}
if (u.enabledContactListener) {
i = u.node._components;
this._inverted = !0;
for (n = 0, s = i.length; n < s; n++) (o = i[n])[e] && o[e](this, c, a);
}
if (this.disabled || this.disabledOnce) {
this.setEnabled(!1);
this.disabledOnce = !1;
}
};
_.get = function(t) {
var e;
(e = 0 === s.length ? new cc.PhysicsContact() : s.pop()).init(t);
return e;
};
_.put = function(t) {
var e = t._contact;
if (e) {
s.push(e);
e.reset();
}
};
var d = _.prototype;
d.setEnabled = function(t) {
this._b2contact.SetEnabled(t);
};
d.isTouching = function() {
return this._b2contact.IsTouching();
};
d.setTangentSpeed = function(t) {
this._b2contact.SetTangentSpeed(t / n);
};
d.getTangentSpeed = function() {
return this._b2contact.GetTangentSpeed() * n;
};
d.setFriction = function(t) {
this._b2contact.SetFriction(t);
};
d.getFriction = function() {
return this._b2contact.GetFriction();
};
d.resetFriction = function() {
return this._b2contact.ResetFriction();
};
d.setRestitution = function(t) {
this._b2contact.SetRestitution(t);
};
d.getRestitution = function() {
return this._b2contact.GetRestitution();
};
d.resetRestitution = function() {
return this._b2contact.ResetRestitution();
};
_.ContactType = r;
cc.PhysicsContact = e.exports = _;
}), {
"./CCPhysicsTypes": 205
} ],
204: [ (function(t, e, i) {
"use strict";
var n = t("./CCPhysicsTypes"), r = n.ContactType, s = n.BodyType, o = n.RayCastType, a = n.DrawBits, c = n.PTM_RATIO, l = (n.ANGLE_TO_PHYSICS_ANGLE, 
n.PHYSICS_ANGLE_TO_ANGLE), u = t("./utils").convertToNodeRotation, h = t("./platform/CCPhysicsDebugDraw"), f = new b2.AABB(), _ = new b2.Vec2(), d = new b2.Vec2(), p = cc.v2(), m = cc.Class({
mixins: [ cc.EventTarget ],
statics: {
DrawBits: a,
PTM_RATIO: c,
VELOCITY_ITERATIONS: 10,
POSITION_ITERATIONS: 10,
FIXED_TIME_STEP: 1 / 60,
MAX_ACCUMULATOR: .2
},
ctor: function() {
this._debugDrawFlags = 0;
this._debugDrawer = null;
this._world = null;
this._bodies = [];
this._joints = [];
this._contactMap = {};
this._contactID = 0;
this._delayEvents = [];
this._accumulator = 0;
cc.director._scheduler && cc.director._scheduler.enableForTarget(this);
this.enabledAccumulator = !1;
},
pushDelayEvent: function(t, e, i) {
this._steping ? this._delayEvents.push({
target: t,
func: e,
args: i
}) : t[e].apply(t, i);
},
update: function(t) {
var e = this._world;
if (e && this.enabled) {
this.emit("before-step");
this._steping = !0;
var i = m.VELOCITY_ITERATIONS, n = m.POSITION_ITERATIONS;
if (this.enabledAccumulator) {
this._accumulator += t;
var r = m.FIXED_TIME_STEP, s = m.MAX_ACCUMULATOR;
this._accumulator > s && (this._accumulator = s);
for (;this._accumulator > r; ) {
e.Step(r, i, n);
this._accumulator -= r;
}
} else {
var o = 1 / cc.game.config.frameRate;
e.Step(o, i, n);
}
if (this.debugDrawFlags) {
this._checkDebugDrawValid();
this._debugDrawer.clear();
e.DrawDebugData();
}
this._steping = !1;
for (var a = this._delayEvents, c = 0, l = a.length; c < l; c++) {
var u = a[c];
u.target[u.func].apply(u.target, u.args);
}
a.length = 0;
this._syncNode();
}
},
testPoint: function(t) {
var e = _.x = t.x / c, i = _.y = t.y / c, n = .2 / c;
f.lowerBound.x = e - n;
f.lowerBound.y = i - n;
f.upperBound.x = e + n;
f.upperBound.y = i + n;
var r = this._aabbQueryCallback;
r.init(_);
this._world.QueryAABB(r, f);
var s = r.getFixture();
return s ? s.collider : null;
},
testAABB: function(t) {
f.lowerBound.x = t.xMin / c;
f.lowerBound.y = t.yMin / c;
f.upperBound.x = t.xMax / c;
f.upperBound.y = t.yMax / c;
var e = this._aabbQueryCallback;
e.init();
this._world.QueryAABB(e, f);
return e.getFixtures().map((function(t) {
return t.collider;
}));
},
rayCast: function(t, e, i) {
if (t.equals(e)) return [];
i = i || o.Closest;
_.x = t.x / c;
_.y = t.y / c;
d.x = e.x / c;
d.y = e.y / c;
var n = this._raycastQueryCallback;
n.init(i);
this._world.RayCast(n, _, d);
var r = n.getFixtures();
if (r.length > 0) {
for (var s = n.getPoints(), a = n.getNormals(), l = n.getFractions(), u = [], h = 0, f = r.length; h < f; h++) {
var p = r[h], m = p.collider;
if (i === o.AllClosest) {
var y = u.find((function(t) {
return t.collider === m;
}));
if (y) {
if (l[h] < y.fraction) {
y.fixtureIndex = m._getFixtureIndex(p);
y.point.x = s[h].x * c;
y.point.y = s[h].y * c;
y.normal.x = a[h].x;
y.normal.y = a[h].y;
y.fraction = l[h];
}
continue;
}
}
u.push({
collider: m,
fixtureIndex: m._getFixtureIndex(p),
point: cc.v2(s[h].x * c, s[h].y * c),
normal: cc.v2(a[h]),
fraction: l[h]
});
}
return u;
}
return [];
},
syncPosition: function() {
for (var t = this._bodies, e = 0; e < t.length; e++) t[e].syncPosition();
},
syncRotation: function() {
for (var t = this._bodies, e = 0; e < t.length; e++) t[e].syncRotation();
},
_registerContactFixture: function(t) {
this._contactListener.registerContactFixture(t);
},
_unregisterContactFixture: function(t) {
this._contactListener.unregisterContactFixture(t);
},
_addBody: function(t, e) {
var i = this._world, n = t.node;
if (i && n) {
t._b2Body = i.CreateBody(e);
t._b2Body.body = t;
this._bodies.push(t);
}
},
_removeBody: function(t) {
var e = this._world;
if (e) {
t._b2Body.body = null;
e.DestroyBody(t._b2Body);
t._b2Body = null;
cc.js.array.remove(this._bodies, t);
}
},
_addJoint: function(t, e) {
var i = this._world.CreateJoint(e);
if (i) {
i._joint = t;
t._joint = i;
this._joints.push(t);
}
},
_removeJoint: function(t) {
t._isValid() && this._world.DestroyJoint(t._joint);
t._joint && (t._joint._joint = null);
cc.js.array.remove(this._joints, t);
},
_initCallback: function() {
if (this._world) {
if (!this._contactListener) {
var t = new cc.PhysicsContactListener();
t.setBeginContact(this._onBeginContact);
t.setEndContact(this._onEndContact);
t.setPreSolve(this._onPreSolve);
t.setPostSolve(this._onPostSolve);
this._world.SetContactListener(t);
this._contactListener = t;
this._aabbQueryCallback = new cc.PhysicsAABBQueryCallback();
this._raycastQueryCallback = new cc.PhysicsRayCastCallback();
}
} else cc.warn("Please init PhysicsManager first");
},
_init: function() {
this.enabled = !0;
this.debugDrawFlags = a.e_shapeBit;
},
_getWorld: function() {
return this._world;
},
_syncNode: function() {
for (var t = this._bodies, e = 0, i = t.length; e < i; e++) {
var n = t[e], r = n.node, o = n._b2Body, a = o.GetPosition();
p.x = a.x * c;
p.y = a.y * c;
var h = o.GetAngle() * l;
if (null !== r.parent.parent) {
p = r.parent.convertToNodeSpaceAR(p);
h = u(r.parent, h);
}
var f = r._eventMask;
r._eventMask = 0;
r.position = p;
r.angle = -h;
r._eventMask = f;
n.type === s.Animated && n.resetVelocity();
}
},
_onBeginContact: function(t) {
cc.PhysicsContact.get(t).emit(r.BEGIN_CONTACT);
},
_onEndContact: function(t) {
var e = t._contact;
if (e) {
e.emit(r.END_CONTACT);
cc.PhysicsContact.put(t);
}
},
_onPreSolve: function(t) {
var e = t._contact;
e && e.emit(r.PRE_SOLVE);
},
_onPostSolve: function(t, e) {
var i = t._contact;
if (i) {
i._impulse = e;
i.emit(r.POST_SOLVE);
i._impulse = null;
}
},
_checkDebugDrawValid: function() {
if (!this._debugDrawer || !this._debugDrawer.isValid) {
var t = new cc.Node("PHYSICS_MANAGER_DEBUG_DRAW");
t.zIndex = cc.macro.MAX_ZINDEX;
cc.game.addPersistRootNode(t);
this._debugDrawer = t.addComponent(cc.Graphics);
var e = new h(this._debugDrawer);
e.SetFlags(this.debugDrawFlags);
this._world.SetDebugDraw(e);
}
}
});
cc.js.getset(m.prototype, "enabled", (function() {
return this._enabled;
}), (function(t) {
0;
if (t && !this._world) {
var e = new b2.World(new b2.Vec2(0, -10));
e.SetAllowSleeping(!0);
this._world = e;
this._initCallback();
}
this._enabled = t;
}));
cc.js.getset(m.prototype, "debugDrawFlags", (function() {
return this._debugDrawFlags;
}), (function(t) {
0;
t && !this._debugDrawFlags ? this._debugDrawer && this._debugDrawer.node && (this._debugDrawer.node.active = !0) : !t && this._debugDrawFlags && this._debugDrawer && this._debugDrawer.node && (this._debugDrawer.node.active = !1);
if (t) {
this._checkDebugDrawValid();
this._world.m_debugDraw.SetFlags(t);
}
this._debugDrawFlags = t;
if (t) {
this._checkDebugDrawValid();
this._world.m_debugDraw.SetFlags(t);
}
}));
cc.js.getset(m.prototype, "gravity", (function() {
if (this._world) {
var t = this._world.GetGravity();
return cc.v2(t.x * c, t.y * c);
}
return cc.v2();
}), (function(t) {
this._world && this._world.SetGravity(new b2.Vec2(t.x / c, t.y / c));
}));
cc.PhysicsManager = e.exports = m;
}), {
"./CCPhysicsTypes": 205,
"./platform/CCPhysicsDebugDraw": 226,
"./utils": 228
} ],
205: [ (function(t, e, i) {
"use strict";
var n = cc.Enum({
Static: 0,
Kinematic: 1,
Dynamic: 2,
Animated: 3
});
cc.RigidBodyType = n;
var r = cc.Enum({
Closest: 0,
Any: 1,
AllClosest: 2,
All: 3
});
cc.RayCastType = r;
e.exports = {
BodyType: n,
ContactType: {
BEGIN_CONTACT: "begin-contact",
END_CONTACT: "end-contact",
PRE_SOLVE: "pre-solve",
POST_SOLVE: "post-solve"
},
RayCastType: r,
DrawBits: b2.DrawFlags,
PTM_RATIO: 32,
ANGLE_TO_PHYSICS_ANGLE: -Math.PI / 180,
PHYSICS_ANGLE_TO_ANGLE: -180 / Math.PI
};
}), {} ],
206: [ (function(t, e, i) {
"use strict";
function n(t, e) {
var i = e.length;
return e[t < 0 ? i - -t % i : t % i];
}
function r(t, e, i) {
for (var r = []; e < t; ) e += i.length;
for (;t <= e; ++t) r.push(n(t, i));
return r;
}
function s(t, e, i) {
if (o(t, i)) {
if (l(n(t, i), n(t - 1, i), n(e, i)) && u(n(t, i), n(t + 1, i), n(e, i))) return !1;
} else if (u(n(t, i), n(t + 1, i), n(e, i)) || l(n(t, i), n(t - 1, i), n(e, i))) return !1;
if (o(e, i)) {
if (l(n(e, i), n(e - 1, i), n(t, i)) && u(n(e, i), n(e + 1, i), n(t, i))) return !1;
} else if (u(n(e, i), n(e + 1, i), n(t, i)) || l(n(e, i), n(e - 1, i), n(t, i))) return !1;
for (var r = 0; r < i.length; ++r) if ((r + 1) % i.length != t && r != t && (r + 1) % i.length != e && r != e) {
var s = cc.v2();
if (m(n(t, i), n(e, i), n(r, i), n(r + 1, i), s)) return !1;
}
return !0;
}
function o(t, e) {
return a(t, e);
}
function a(t, e, i) {
if ("undefined" == typeof i) {
var r = t, s = e;
t = n(r - 1, s);
e = n(r, s);
i = n(r + 1, s);
}
return v(t, e, i) < 0;
}
function c(t, e, i) {
return v(t, e, i) > 0;
}
function l(t, e, i) {
return v(t, e, i) >= 0;
}
function u(t, e, i) {
return v(t, e, i) <= 0;
}
function h(t, e) {
var i = e.x - t.x, n = e.y - t.y;
return i * i + n * n;
}
function f(t) {
_(t) || t.reverse();
}
function _(t) {
return t.length < 3 || d(t) > 0;
}
function d(t) {
var e, i = 0;
for (e = 0; e < t.length; e++) {
var n = (e + 1) % t.length;
i += t[e].x * t[n].y;
i -= t[e].y * t[n].x;
}
return i /= 2;
}
function p(t, e, i, n) {
var r = cc.v2(), s = e.y - t.y, o = t.x - e.x, a = s * t.x + o * t.y, c = n.y - i.y, l = i.x - n.x, u = c * i.x + l * i.y, h = s * l - c * o;
if (!y(h, 0)) {
r.x = (l * a - o * u) / h;
r.y = (s * u - c * a) / h;
}
return r;
}
function m(t, e, i, n, r) {
if (t == i || t == n || e == i || e == n) return !1;
var s = t.x, o = t.y, a = e.x, c = e.y, l = i.x, u = i.y, h = n.x, f = n.y;
if (Math.max(s, a) < Math.min(l, h) || Math.max(l, h) < Math.min(s, a)) return !1;
if (Math.max(o, c) < Math.min(u, f) || Math.max(u, f) < Math.min(o, c)) return !1;
var _ = (h - l) * (o - u) - (f - u) * (s - l), d = (a - s) * (o - u) - (c - o) * (s - l), p = (f - u) * (a - s) - (h - l) * (c - o);
if (Math.abs(p) < 1e-6) return !1;
d /= p;
if (0 < (_ /= p) && _ < 1 && 0 < d && d < 1) {
r.x = s + _ * (a - s);
r.y = o + _ * (c - o);
return !0;
}
return !1;
}
function y(t, e) {
return Math.abs(t - e) <= 1e-6;
}
function v(t, e, i) {
return t.x * (e.y - i.y) + e.x * (i.y - t.y) + i.x * (t.y - e.y);
}
e.exports = {
ConvexPartition: function t(e) {
f(e);
for (var i, _, d, m, y, v, g = [], b = cc.v2(), C = cc.v2(), x = 0, A = 0, S = 0; S < e.length; ++S) if (o(S, e)) {
_ = d = 1e8;
for (var w = 0; w < e.length; ++w) {
if (c(n(S - 1, e), n(S, e), n(w, e)) && u(n(S - 1, e), n(S, e), n(w - 1, e))) {
m = p(n(S - 1, e), n(S, e), n(w, e), n(w - 1, e));
if (a(n(S + 1, e), n(S, e), m) && (i = h(n(S, e), m)) < _) {
_ = i;
b = m;
x = w;
}
}
if (c(n(S + 1, e), n(S, e), n(w + 1, e)) && u(n(S + 1, e), n(S, e), n(w, e))) {
m = p(n(S + 1, e), n(S, e), n(w, e), n(w + 1, e));
if (c(n(S - 1, e), n(S, e), m) && (i = h(n(S, e), m)) < d) {
d = i;
A = w;
C = m;
}
}
}
if (x == (A + 1) % e.length) {
var T = b.add(C).div(2);
(y = r(S, A, e)).push(T);
(v = r(x, S, e)).push(T);
} else {
for (var E = 0, M = x; A < x; ) A += e.length;
for (w = x; w <= A; ++w) if (s(S, w, e)) {
var B = 1 / (h(n(S, e), n(w, e)) + 1);
o(w, e) ? u(n(w - 1, e), n(w, e), n(S, e)) && l(n(w + 1, e), n(w, e), n(S, e)) ? B += 3 : B += 2 : B += 1;
if (B > E) {
M = w;
E = B;
}
}
y = r(S, M, e);
v = r(M, S, e);
}
return g = (g = g.concat(t(y))).concat(t(v));
}
g.push(e);
for (S = g.length - 1; S >= 0; S--) 0 == g[S].length && g.splice(S, 0);
return g;
},
ForceCounterClockWise: f,
IsCounterClockWise: _
};
}), {} ],
207: [ (function(t, e, i) {
"use strict";
var n = t("../CCNode").EventType, r = t("./CCPhysicsTypes").PTM_RATIO, s = t("./CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, o = t("./CCPhysicsTypes").PHYSICS_ANGLE_TO_ANGLE, a = t("./utils").getWorldRotation, c = t("./CCPhysicsTypes").BodyType, l = new b2.Vec2(), u = new b2.Vec2(), h = cc.Vec2.ZERO, f = cc.Class({
name: "cc.RigidBody",
extends: cc.Component,
editor: !1,
properties: {
_type: c.Dynamic,
_allowSleep: !0,
_gravityScale: 1,
_linearDamping: 0,
_angularDamping: 0,
_linearVelocity: cc.v2(0, 0),
_angularVelocity: 0,
_fixedRotation: !1,
enabled: {
get: function() {
return this._enabled;
},
set: function() {
cc.warnID(8200);
},
visible: !1,
override: !0
},
enabledContactListener: {
default: !1,
tooltip: !1
},
bullet: {
default: !1,
tooltip: !1
},
type: {
type: c,
tooltip: !1,
get: function() {
return this._type;
},
set: function(t) {
this._type = t;
this._b2Body && (t === c.Animated ? this._b2Body.SetType(c.Kinematic) : this._b2Body.SetType(t));
}
},
allowSleep: {
tooltip: !1,
get: function() {
return this._b2Body ? this._b2Body.IsSleepingAllowed() : this._allowSleep;
},
set: function(t) {
this._allowSleep = t;
this._b2Body && this._b2Body.SetSleepingAllowed(t);
}
},
gravityScale: {
tooltip: !1,
get: function() {
return this._gravityScale;
},
set: function(t) {
this._gravityScale = t;
this._b2Body && this._b2Body.SetGravityScale(t);
}
},
linearDamping: {
tooltip: !1,
get: function() {
return this._linearDamping;
},
set: function(t) {
this._linearDamping = t;
this._b2Body && this._b2Body.SetLinearDamping(this._linearDamping);
}
},
angularDamping: {
tooltip: !1,
get: function() {
return this._angularDamping;
},
set: function(t) {
this._angularDamping = t;
this._b2Body && this._b2Body.SetAngularDamping(t);
}
},
linearVelocity: {
tooltip: !1,
type: cc.Vec2,
get: function() {
var t = this._linearVelocity;
if (this._b2Body) {
var e = this._b2Body.GetLinearVelocity();
t.x = e.x * r;
t.y = e.y * r;
}
return t;
},
set: function(t) {
this._linearVelocity = t;
var e = this._b2Body;
if (e) {
var i = e.m_linearVelocity;
i.Set(t.x / r, t.y / r);
e.SetLinearVelocity(i);
}
}
},
angularVelocity: {
tooltip: !1,
get: function() {
return this._b2Body ? this._b2Body.GetAngularVelocity() * o : this._angularVelocity;
},
set: function(t) {
this._angularVelocity = t;
this._b2Body && this._b2Body.SetAngularVelocity(t * s);
}
},
fixedRotation: {
tooltip: !1,
get: function() {
return this._fixedRotation;
},
set: function(t) {
this._fixedRotation = t;
this._b2Body && this._b2Body.SetFixedRotation(t);
}
},
awake: {
visible: !1,
tooltip: !1,
get: function() {
return !!this._b2Body && this._b2Body.IsAwake();
},
set: function(t) {
this._b2Body && this._b2Body.SetAwake(t);
}
},
awakeOnLoad: {
default: !0,
tooltip: !1,
animatable: !1
},
active: {
visible: !1,
get: function() {
return !!this._b2Body && this._b2Body.IsActive();
},
set: function(t) {
this._b2Body && this._b2Body.SetActive(t);
}
}
},
getLocalPoint: function(t, e) {
e = e || cc.v2();
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
var i = this._b2Body.GetLocalPoint(l, e);
e.x = i.x * r;
e.y = i.y * r;
}
return e;
},
getWorldPoint: function(t, e) {
e = e || cc.v2();
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
var i = this._b2Body.GetWorldPoint(l, e);
e.x = i.x * r;
e.y = i.y * r;
}
return e;
},
getWorldVector: function(t, e) {
e = e || cc.v2();
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
var i = this._b2Body.GetWorldVector(l, e);
e.x = i.x * r;
e.y = i.y * r;
}
return e;
},
getLocalVector: function(t, e) {
e = e || cc.v2();
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
var i = this._b2Body.GetLocalVector(l, e);
e.x = i.x * r;
e.y = i.y * r;
}
return e;
},
getWorldPosition: function(t) {
t = t || cc.v2();
if (this._b2Body) {
var e = this._b2Body.GetPosition();
t.x = e.x * r;
t.y = e.y * r;
}
return t;
},
getWorldRotation: function() {
return this._b2Body ? this._b2Body.GetAngle() * o : 0;
},
getLocalCenter: function(t) {
t = t || cc.v2();
if (this._b2Body) {
var e = this._b2Body.GetLocalCenter();
t.x = e.x * r;
t.y = e.y * r;
}
return t;
},
getWorldCenter: function(t) {
t = t || cc.v2();
if (this._b2Body) {
var e = this._b2Body.GetWorldCenter();
t.x = e.x * r;
t.y = e.y * r;
}
return t;
},
getLinearVelocityFromWorldPoint: function(t, e) {
e = e || cc.v2();
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
var i = this._b2Body.GetLinearVelocityFromWorldPoint(l, e);
e.x = i.x * r;
e.y = i.y * r;
}
return e;
},
getMass: function() {
return this._b2Body ? this._b2Body.GetMass() : 0;
},
getInertia: function() {
return this._b2Body ? this._b2Body.GetInertia() * r * r : 0;
},
getJointList: function() {
if (!this._b2Body) return [];
var t = [], e = this._b2Body.GetJointList();
if (!e) return [];
t.push(e.joint._joint);
for (var i = e.prev; i; ) {
t.push(i.joint._joint);
i = i.prev;
}
for (var n = e.next; n; ) {
t.push(n.joint._joint);
n = n.next;
}
return t;
},
applyForce: function(t, e, i) {
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
u.Set(e.x / r, e.y / r);
this._b2Body.ApplyForce(l, u, i);
}
},
applyForceToCenter: function(t, e) {
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
this._b2Body.ApplyForceToCenter(l, e);
}
},
applyTorque: function(t, e) {
this._b2Body && this._b2Body.ApplyTorque(t / r, e);
},
applyLinearImpulse: function(t, e, i) {
if (this._b2Body) {
l.Set(t.x / r, t.y / r);
u.Set(e.x / r, e.y / r);
this._b2Body.ApplyLinearImpulse(l, u, i);
}
},
applyAngularImpulse: function(t, e) {
this._b2Body && this._b2Body.ApplyAngularImpulse(t / r / r, e);
},
syncPosition: function(t) {
var e = this._b2Body;
if (e) {
var i, n = this.node.convertToWorldSpaceAR(h);
(i = this.type === c.Animated ? e.GetLinearVelocity() : e.GetPosition()).x = n.x / r;
i.y = n.y / r;
if (this.type === c.Animated && t) {
var s = e.GetPosition(), o = cc.game.config.frameRate;
i.x = (i.x - s.x) * o;
i.y = (i.y - s.y) * o;
e.SetAwake(!0);
e.SetLinearVelocity(i);
} else e.SetTransformVec(i, e.GetAngle());
}
},
syncRotation: function(t) {
var e = this._b2Body;
if (e) {
var i = s * a(this.node);
if (this.type === c.Animated && t) {
var n = e.GetAngle(), r = cc.game.config.frameRate;
e.SetAwake(!0);
e.SetAngularVelocity((i - n) * r);
} else e.SetTransformVec(e.GetPosition(), i);
}
},
resetVelocity: function() {
var t = this._b2Body;
if (t) {
var e = t.m_linearVelocity;
e.Set(0, 0);
t.SetLinearVelocity(e);
t.SetAngularVelocity(0);
}
},
onEnable: function() {
this._init();
},
onDisable: function() {
this._destroy();
},
_registerNodeEvents: function() {
var t = this.node;
t.on(n.POSITION_CHANGED, this._onNodePositionChanged, this);
t.on(n.ROTATION_CHANGED, this._onNodeRotationChanged, this);
t.on(n.SCALE_CHANGED, this._onNodeScaleChanged, this);
},
_unregisterNodeEvents: function() {
var t = this.node;
t.off(n.POSITION_CHANGED, this._onNodePositionChanged, this);
t.off(n.ROTATION_CHANGED, this._onNodeRotationChanged, this);
t.off(n.SCALE_CHANGED, this._onNodeScaleChanged, this);
},
_onNodePositionChanged: function() {
this.syncPosition(!0);
},
_onNodeRotationChanged: function(t) {
this.syncRotation(!0);
},
_onNodeScaleChanged: function(t) {
if (this._b2Body) for (var e = this.getComponents(cc.PhysicsCollider), i = 0; i < e.length; i++) e[i].apply();
},
_init: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__init", []);
},
_destroy: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__destroy", []);
},
__init: function() {
if (!this._inited) {
this._registerNodeEvents();
var t = new b2.BodyDef();
this.type === c.Animated ? t.type = c.Kinematic : t.type = this.type;
t.allowSleep = this.allowSleep;
t.gravityScale = this.gravityScale;
t.linearDamping = this.linearDamping;
t.angularDamping = this.angularDamping;
var e = this.linearVelocity;
t.linearVelocity = new b2.Vec2(e.x / r, e.y / r);
t.angularVelocity = this.angularVelocity * s;
t.fixedRotation = this.fixedRotation;
t.bullet = this.bullet;
var i = this.node, n = i.convertToWorldSpaceAR(h);
t.position = new b2.Vec2(n.x / r, n.y / r);
t.angle = -Math.PI / 180 * a(i);
t.awake = this.awakeOnLoad;
cc.director.getPhysicsManager()._addBody(this, t);
this._inited = !0;
}
},
__destroy: function() {
if (this._inited) {
cc.director.getPhysicsManager()._removeBody(this);
this._unregisterNodeEvents();
this._inited = !1;
}
},
_getBody: function() {
return this._b2Body;
}
});
cc.RigidBody = e.exports = f;
}), {
"../CCNode": 72,
"./CCPhysicsTypes": 205,
"./utils": 228
} ],
208: [ (function(t, e, i) {
"use strict";
var n = t("../../../external/box2d/box2d");
window.b2 = {};
for (var r in n) if (-1 === r.indexOf("b2_")) {
var s = r.replace("b2", "");
b2[s] = n[r];
}
b2.maxPolygonVertices = 8;
}), {
"../../../external/box2d/box2d": 389
} ],
209: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.PhysicsBoxCollider",
extends: cc.PhysicsCollider,
mixins: [ cc.Collider.Box ],
editor: {
menu: !1,
requireComponent: cc.RigidBody
},
_createShape: function(t) {
var e = Math.abs(t.x), i = Math.abs(t.y), r = this.size.width / 2 / n * e, s = this.size.height / 2 / n * i, o = this.offset.x / n * e, a = this.offset.y / n * i, c = new b2.PolygonShape();
c.SetAsBox(r, s, new b2.Vec2(o, a), 0);
return c;
}
});
cc.PhysicsBoxCollider = e.exports = r;
}), {
"../CCPhysicsTypes": 205
} ],
210: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.PhysicsChainCollider",
extends: cc.PhysicsCollider,
editor: {
menu: !1,
inspector: !1,
requireComponent: cc.RigidBody
},
properties: {
loop: !1,
points: {
default: function() {
return [ cc.v2(-50, 0), cc.v2(50, 0) ];
},
type: [ cc.Vec2 ]
},
threshold: {
default: 1,
serializable: !1,
visible: !1
}
},
_createShape: function(t) {
for (var e = new b2.ChainShape(), i = this.points, r = [], s = 0; s < i.length; s++) {
var o = i[s];
r.push(new b2.Vec2(o.x / n * t.x, o.y / n * t.y));
}
this.loop ? e.CreateLoop(r, r.length) : e.CreateChain(r, r.length);
return e;
},
resetInEditor: !1,
resetPointsByContour: !1
});
cc.PhysicsChainCollider = e.exports = r;
}), {
"../CCPhysicsTypes": 205
} ],
211: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.PhysicsCircleCollider",
extends: cc.PhysicsCollider,
mixins: [ cc.Collider.Circle ],
editor: {
menu: !1,
requireComponent: cc.RigidBody
},
_createShape: function(t) {
var e = Math.abs(t.x), i = Math.abs(t.y), r = this.offset.x / n * e, s = this.offset.y / n * i, o = new b2.CircleShape();
o.m_radius = this.radius / n * e;
o.m_p = new b2.Vec2(r, s);
return o;
}
});
cc.PhysicsCircleCollider = e.exports = r;
}), {
"../CCPhysicsTypes": 205
} ],
212: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../utils").getWorldScale, s = cc.Class({
name: "cc.PhysicsCollider",
extends: cc.Collider,
ctor: function() {
this._fixtures = [];
this._shapes = [];
this._inited = !1;
this._rect = cc.rect();
},
properties: {
_density: 1,
_sensor: !1,
_friction: .2,
_restitution: 0,
density: {
tooltip: !1,
get: function() {
return this._density;
},
set: function(t) {
this._density = t;
}
},
sensor: {
tooltip: !1,
get: function() {
return this._sensor;
},
set: function(t) {
this._sensor = t;
}
},
friction: {
tooltip: !1,
get: function() {
return this._friction;
},
set: function(t) {
this._friction = t;
}
},
restitution: {
tooltip: !1,
get: function() {
return this._restitution;
},
set: function(t) {
this._restitution = t;
}
},
body: {
default: null,
type: cc.RigidBody,
visible: !1
}
},
onDisable: function() {
this._destroy();
},
onEnable: function() {
this._init();
},
start: function() {
this._init();
},
_getFixtureIndex: function(t) {
return this._fixtures.indexOf(t);
},
_init: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__init", []);
},
_destroy: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__destroy", []);
},
__init: function() {
if (!this._inited) {
var t = this.body || this.getComponent(cc.RigidBody);
if (t) {
var e = t._getBody();
if (e) {
var i = t.node, n = r(i);
this._scale = n;
var s = 0 === n.x && 0 === n.y ? [] : this._createShape(n);
s instanceof Array || (s = [ s ]);
for (var o = 1 << i.groupIndex, a = 0, c = cc.game.collisionMatrix[i.groupIndex], l = 0; l < c.length; l++) c[l] && (a |= 1 << l);
for (var u = {
categoryBits: o,
maskBits: a,
groupIndex: 0
}, h = cc.director.getPhysicsManager(), f = 0; f < s.length; f++) {
var _ = s[f], d = new b2.FixtureDef();
d.density = this.density;
d.isSensor = this.sensor;
d.friction = this.friction;
d.restitution = this.restitution;
d.shape = _;
d.filter = u;
var p = e.CreateFixture(d);
p.collider = this;
t.enabledContactListener && h._registerContactFixture(p);
this._shapes.push(_);
this._fixtures.push(p);
}
this.body = t;
this._inited = !0;
}
}
}
},
__destroy: function() {
if (this._inited) {
for (var t = this._fixtures, e = this.body._getBody(), i = cc.director.getPhysicsManager(), n = t.length - 1; n >= 0; n--) {
var r = t[n];
r.collider = null;
i._unregisterContactFixture(r);
e && e.DestroyFixture(r);
}
this.body = null;
this._fixtures.length = 0;
this._shapes.length = 0;
this._inited = !1;
}
},
_createShape: function() {},
apply: function() {
this._destroy();
this._init();
},
getAABB: function() {
for (var t = 1e7, e = 1e7, i = -1e7, r = -1e7, s = this._fixtures, o = 0; o < s.length; o++) for (var a = s[o], c = a.GetShape().GetChildCount(), l = 0; l < c; l++) {
var u = a.GetAABB(l);
u.lowerBound.x < t && (t = u.lowerBound.x);
u.lowerBound.y < e && (e = u.lowerBound.y);
u.upperBound.x > i && (i = u.upperBound.x);
u.upperBound.y > r && (r = u.upperBound.y);
}
t *= n;
e *= n;
i *= n;
r *= n;
var h = this._rect;
h.x = t;
h.y = e;
h.width = i - t;
h.height = r - e;
return h;
}
});
cc.PhysicsCollider = e.exports = s;
}), {
"../CCPhysicsTypes": 205,
"../utils": 228
} ],
213: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPolygonSeparator"), s = cc.Class({
name: "cc.PhysicsPolygonCollider",
extends: cc.PhysicsCollider,
mixins: [ cc.Collider.Polygon ],
editor: {
menu: !1,
inspector: !1,
requireComponent: cc.RigidBody
},
_createShape: function(t) {
var e = [], i = this.points;
i.length > 0 && i[0].equals(i[i.length - 1]) && (i.length -= 1);
for (var s = r.ConvexPartition(i), o = this.offset, a = 0; a < s.length; a++) {
for (var c = s[a], l = null, u = [], h = null, f = 0, _ = c.length; f < _; f++) {
l || (l = new b2.PolygonShape());
var d = c[f], p = (d.x + o.x) / n * t.x, m = (d.y + o.y) / n * t.y, y = new b2.Vec2(p, m);
u.push(y);
h || (h = y);
if (u.length === b2.maxPolygonVertices) {
l.Set(u, u.length);
e.push(l);
l = null;
f < _ - 1 && (u = [ h, u[u.length - 1] ]);
}
}
if (l) {
l.Set(u, u.length);
e.push(l);
}
}
return e;
}
});
cc.PhysicsPolygonCollider = e.exports = s;
}), {
"../CCPhysicsTypes": 205,
"../CCPolygonSeparator": 206
} ],
214: [ (function(t, e, i) {
"use strict";
t("./box2d-adapter");
t("./CCPhysicsManager");
t("./CCRigidBody");
t("./CCPhysicsContact");
t("./collider/CCPhysicsCollider");
t("./collider/CCPhysicsChainCollider");
t("./collider/CCPhysicsCircleCollider");
t("./collider/CCPhysicsBoxCollider");
t("./collider/CCPhysicsPolygonCollider");
t("./joint/CCJoint");
t("./joint/CCDistanceJoint");
t("./joint/CCRevoluteJoint");
t("./joint/CCMouseJoint");
t("./joint/CCMotorJoint");
t("./joint/CCPrismaticJoint");
t("./joint/CCWeldJoint");
t("./joint/CCWheelJoint");
t("./joint/CCRopeJoint");
t("./platform/CCPhysicsContactListner");
t("./platform/CCPhysicsAABBQueryCallback");
t("./platform/CCPhysicsRayCastCallback");
}), {
"./CCPhysicsContact": 203,
"./CCPhysicsManager": 204,
"./CCRigidBody": 207,
"./box2d-adapter": 208,
"./collider/CCPhysicsBoxCollider": 209,
"./collider/CCPhysicsChainCollider": 210,
"./collider/CCPhysicsCircleCollider": 211,
"./collider/CCPhysicsCollider": 212,
"./collider/CCPhysicsPolygonCollider": 213,
"./joint/CCDistanceJoint": 215,
"./joint/CCJoint": 216,
"./joint/CCMotorJoint": 217,
"./joint/CCMouseJoint": 218,
"./joint/CCPrismaticJoint": 219,
"./joint/CCRevoluteJoint": 220,
"./joint/CCRopeJoint": 221,
"./joint/CCWeldJoint": 222,
"./joint/CCWheelJoint": 223,
"./platform/CCPhysicsAABBQueryCallback": 224,
"./platform/CCPhysicsContactListner": 225,
"./platform/CCPhysicsRayCastCallback": 227
} ],
215: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.DistanceJoint",
extends: cc.Joint,
editor: !1,
properties: {
_distance: 1,
_frequency: 0,
_dampingRatio: 0,
distance: {
tooltip: !1,
get: function() {
return this._distance;
},
set: function(t) {
this._distance = t;
this._joint && this._joint.SetLength(t);
}
},
frequency: {
tooltip: !1,
get: function() {
return this._frequency;
},
set: function(t) {
this._frequency = t;
this._joint && this._joint.SetFrequency(t);
}
},
dampingRatio: {
tooltip: !1,
get: function() {
return this._dampingRatio;
},
set: function(t) {
this._dampingRatio = t;
this._joint && this._joint.SetDampingRatio(t);
}
}
},
_createJointDef: function() {
var t = new b2.DistanceJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.length = this.distance / n;
t.dampingRatio = this.dampingRatio;
t.frequencyHz = this.frequency;
return t;
}
});
cc.DistanceJoint = e.exports = r;
}), {
"../CCPhysicsTypes": 205
} ],
216: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.Joint",
extends: cc.Component,
editor: {
requireComponent: cc.RigidBody
},
properties: {
anchor: {
default: cc.v2(0, 0),
tooltip: !1
},
connectedAnchor: {
default: cc.v2(0, 0),
tooltip: !1
},
connectedBody: {
default: null,
type: cc.RigidBody,
tooltip: !1
},
collideConnected: {
default: !1,
tooltip: !1
}
},
onDisable: function() {
this._destroy();
},
onEnable: function() {
this._init();
},
start: function() {
this._init();
},
apply: function() {
this._destroy();
this._init();
},
getWorldAnchor: function() {
if (this._joint) {
var t = this._joint.GetAnchorA();
return cc.v2(t.x * n, t.y * n);
}
return cc.Vec2.ZERO;
},
getWorldConnectedAnchor: function() {
if (this._joint) {
var t = this._joint.GetAnchorB();
return cc.v2(t.x * n, t.y * n);
}
return cc.Vec2.ZERO;
},
getReactionForce: function(t) {
var e = cc.v2();
return this._joint ? this._joint.GetReactionForce(t, e) : e;
},
getReactionTorque: function(t) {
return this._joint ? this._joint.GetReactionTorque(t) : 0;
},
_init: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__init", []);
},
_destroy: function() {
cc.director.getPhysicsManager().pushDelayEvent(this, "__destroy", []);
},
__init: function() {
if (!this._inited) {
this.body = this.getComponent(cc.RigidBody);
if (this._isValid()) {
var t = this._createJointDef();
if (!t) return;
t.bodyA = this.body._getBody();
t.bodyB = this.connectedBody._getBody();
t.collideConnected = this.collideConnected;
cc.director.getPhysicsManager()._addJoint(this, t);
this._inited = !0;
}
}
},
__destroy: function() {
if (this._inited) {
cc.director.getPhysicsManager()._removeJoint(this);
this._joint = null;
this._inited = !1;
}
},
_createJointDef: function() {
return null;
},
_isValid: function() {
return this.body && this.body._getBody() && this.connectedBody && this.connectedBody._getBody();
}
});
cc.Joint = e.exports = r;
}), {
"../CCPhysicsTypes": 205
} ],
217: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, s = cc.Class({
name: "cc.MotorJoint",
extends: cc.Joint,
editor: !1,
properties: {
_linearOffset: cc.v2(0, 0),
_angularOffset: 0,
_maxForce: 1,
_maxTorque: 1,
_correctionFactor: .3,
anchor: {
tooltip: !1,
default: cc.v2(0, 0),
override: !0,
visible: !1
},
connectedAnchor: {
tooltip: !1,
default: cc.v2(0, 0),
override: !0,
visible: !1
},
linearOffset: {
tooltip: !1,
get: function() {
return this._linearOffset;
},
set: function(t) {
this._linearOffset = t;
this._joint && this._joint.SetLinearOffset(new b2.Vec2(t.x / n, t.y / n));
}
},
angularOffset: {
tooltip: !1,
get: function() {
return this._angularOffset;
},
set: function(t) {
this._angularOffset = t;
this._joint && this._joint.SetAngularOffset(t);
}
},
maxForce: {
tooltip: !1,
get: function() {
return this._maxForce;
},
set: function(t) {
this._maxForce = t;
this._joint && this._joint.SetMaxForce(t);
}
},
maxTorque: {
tooltip: !1,
get: function() {
return this._maxTorque;
},
set: function(t) {
this._maxTorque = t;
this._joint && this._joint.SetMaxTorque(t);
}
},
correctionFactor: {
tooltip: !1,
get: function() {
return this._correctionFactor;
},
set: function(t) {
this._correctionFactor = t;
this._joint && this._joint.SetCorrectionFactor(t);
}
}
},
_createJointDef: function() {
var t = new b2.MotorJointDef();
t.linearOffset = new b2.Vec2(this.linearOffset.x / n, this.linearOffset.y / n);
t.angularOffset = this.angularOffset * r;
t.maxForce = this.maxForce;
t.maxTorque = this.maxTorque;
t.correctionFactor = this.correctionFactor;
return t;
}
});
cc.MotorJoint = e.exports = s;
}), {
"../CCPhysicsTypes": 205
} ],
218: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = new b2.Vec2(), s = cc.Class({
name: "cc.MouseJoint",
extends: cc.Joint,
editor: !1,
properties: {
_target: 1,
_frequency: 5,
_dampingRatio: .7,
_maxForce: 0,
connectedBody: {
default: null,
type: cc.RigidBody,
visible: !1,
override: !0
},
collideConnected: {
default: !0,
visible: !1,
override: !0
},
anchor: {
tooltip: !1,
default: cc.v2(0, 0),
override: !0,
visible: !1
},
connectedAnchor: {
tooltip: !1,
default: cc.v2(0, 0),
override: !0,
visible: !1
},
mouseRegion: {
tooltip: !1,
default: null,
type: cc.Node
},
target: {
tooltip: !1,
visible: !1,
get: function() {
return this._target;
},
set: function(t) {
this._target = t;
if (this._joint) {
r.x = t.x / n;
r.y = t.y / n;
this._joint.SetTarget(r);
}
}
},
frequency: {
tooltip: !1,
get: function() {
return this._frequency;
},
set: function(t) {
this._frequency = t;
this._joint && this._joint.SetFrequency(t);
}
},
dampingRatio: {
tooltip: !1,
get: function() {
return this._dampingRatio;
},
set: function(t) {
this._dampingRatio = t;
this._joint && this._joint.SetDampingRatio(t);
}
},
maxForce: {
tooltip: !1,
visible: !1,
get: function() {
return this._maxForce;
},
set: function(t) {
this._maxForce = t;
this._joint && this._joint.SetMaxForce(t);
}
}
},
onLoad: function() {
var t = this.mouseRegion || this.node;
t.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this);
t.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
t.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
t.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
},
onEnable: function() {},
start: function() {},
onTouchBegan: function(t) {
var e = cc.director.getPhysicsManager(), i = this._pressPoint = t.touch.getLocation();
cc.Camera && cc.Camera.main && (i = cc.Camera.main.getScreenToWorldPoint(i));
var n = e.testPoint(i);
if (n) {
(this.connectedBody = n.body).awake = !0;
this.maxForce = 1e3 * this.connectedBody.getMass();
this.target = i;
this._init();
}
},
onTouchMove: function(t) {
this._pressPoint = t.touch.getLocation();
},
onTouchEnd: function(t) {
this._destroy();
this._pressPoint = null;
},
_createJointDef: function() {
var t = new b2.MouseJointDef();
r.x = this.target.x / n;
r.y = this.target.y / n;
t.target = r;
t.maxForce = this.maxForce;
t.dampingRatio = this.dampingRatio;
t.frequencyHz = this.frequency;
return t;
},
update: function() {
if (this._pressPoint && this._isValid()) {
var t = cc.Camera.findCamera(this.node);
this.target = t ? t.getScreenToWorldPoint(this._pressPoint) : this._pressPoint;
}
}
});
cc.MouseJoint = e.exports = s;
}), {
"../CCPhysicsTypes": 205
} ],
219: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, s = cc.Class({
name: "cc.PrismaticJoint",
extends: cc.Joint,
editor: !1,
properties: {
localAxisA: {
default: cc.v2(1, 0),
tooltip: !1
},
referenceAngle: {
default: 0,
tooltip: !1
},
enableLimit: {
default: !1,
tooltip: !1
},
enableMotor: {
default: !1,
tooltip: !1
},
lowerLimit: {
default: 0,
tooltip: !1
},
upperLimit: {
default: 0,
tooltip: !1
},
_maxMotorForce: 0,
_motorSpeed: 0,
maxMotorForce: {
tooltip: !1,
get: function() {
return this._maxMotorForce;
},
set: function(t) {
this._maxMotorForce = t;
this._joint && this._joint.SetMaxMotorForce(t);
}
},
motorSpeed: {
tooltip: !1,
get: function() {
return this._motorSpeed;
},
set: function(t) {
this._motorSpeed = t;
this._joint && this._joint.SetMotorSpeed(t);
}
}
},
_createJointDef: function() {
var t = new b2.PrismaticJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.localAxisA = new b2.Vec2(this.localAxisA.x, this.localAxisA.y);
t.referenceAngle = this.referenceAngle * r;
t.enableLimit = this.enableLimit;
t.lowerTranslation = this.lowerLimit / n;
t.upperTranslation = this.upperLimit / n;
t.enableMotor = this.enableMotor;
t.maxMotorForce = this.maxMotorForce;
t.motorSpeed = this.motorSpeed;
return t;
}
});
cc.PrismaticJoint = e.exports = s;
}), {
"../CCPhysicsTypes": 205
} ],
220: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, s = t("../CCPhysicsTypes").PHYSICS_ANGLE_TO_ANGLE, o = cc.Class({
name: "cc.RevoluteJoint",
extends: cc.Joint,
editor: !1,
properties: {
_maxMotorTorque: 0,
_motorSpeed: 0,
_enableLimit: !1,
_enableMotor: !1,
referenceAngle: {
default: 0,
tooltip: !1
},
lowerAngle: {
default: 0,
tooltip: !1
},
upperAngle: {
default: 0,
tooltip: !1
},
maxMotorTorque: {
tooltip: !1,
get: function() {
return this._maxMotorTorque;
},
set: function(t) {
this._maxMotorTorque = t;
this._joint && this._joint.SetMaxMotorTorque(t);
}
},
motorSpeed: {
tooltip: !1,
get: function() {
return this._motorSpeed;
},
set: function(t) {
this._motorSpeed = t;
this._joint && this._joint.SetMotorSpeed(t * r);
}
},
enableLimit: {
tooltip: !1,
get: function() {
return this._enableLimit;
},
set: function(t) {
this._enableLimit = t;
this._joint && this._joint.EnableLimit(t);
}
},
enableMotor: {
tooltip: !1,
get: function() {
return this._enableMotor;
},
set: function(t) {
this._enableMotor = t;
this._joint && this._joint.EnableMotor(t);
}
}
},
getJointAngle: function() {
return this._joint ? this._joint.GetJointAngle() * s : 0;
},
setLimits: function(t, e) {
if (this._joint) return this._joint.SetLimits(t * r, e * r);
},
_createJointDef: function() {
var t = new b2.RevoluteJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.lowerAngle = this.upperAngle * r;
t.upperAngle = this.lowerAngle * r;
t.maxMotorTorque = this.maxMotorTorque;
t.motorSpeed = this.motorSpeed * r;
t.enableLimit = this.enableLimit;
t.enableMotor = this.enableMotor;
t.referenceAngle = this.referenceAngle * r;
return t;
}
});
cc.RevoluteJoint = e.exports = o;
}), {
"../CCPhysicsTypes": 205
} ],
221: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.Class({
name: "cc.RopeJoint",
extends: cc.Joint,
editor: !1,
properties: {
_maxLength: 1,
maxLength: {
tooltip: !1,
get: function() {
return this._maxLength;
},
set: function(t) {
this._maxLength = t;
this._joint && this._joint.SetMaxLength(t);
}
}
},
_createJointDef: function() {
var t = new b2.RopeJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.maxLength = this.maxLength / n;
return t;
}
});
cc.RopeJoint = e.exports = r;
}), {
"../CCPhysicsTypes": 205
} ],
222: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, s = cc.Class({
name: "cc.WeldJoint",
extends: cc.Joint,
editor: !1,
properties: {
referenceAngle: {
default: 0,
tooltip: !1
},
_frequency: 0,
_dampingRatio: 0,
frequency: {
tooltip: !1,
get: function() {
return this._frequency;
},
set: function(t) {
this._frequency = t;
this._joint && this._joint.SetFrequency(t);
}
},
dampingRatio: {
tooltip: !1,
get: function() {
return this._dampingRatio;
},
set: function(t) {
this._dampingRatio = t;
this._joint && this._joint.SetDampingRatio(t);
}
}
},
_createJointDef: function() {
var t = new b2.WeldJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.referenceAngle = this.referenceAngle * r;
t.frequencyHz = this.frequency;
t.dampingRatio = this.dampingRatio;
return t;
}
});
cc.WeldJoint = e.exports = s;
}), {
"../CCPhysicsTypes": 205
} ],
223: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = t("../CCPhysicsTypes").ANGLE_TO_PHYSICS_ANGLE, s = cc.Class({
name: "cc.WheelJoint",
extends: cc.Joint,
editor: !1,
properties: {
_maxMotorTorque: 0,
_motorSpeed: 0,
_enableMotor: !1,
_frequency: 2,
_dampingRatio: .7,
localAxisA: {
default: cc.v2(1, 0),
tooltip: !1
},
maxMotorTorque: {
tooltip: !1,
get: function() {
return this._maxMotorTorque;
},
set: function(t) {
this._maxMotorTorque = t;
this._joint && this._joint.SetMaxMotorTorque(t);
}
},
motorSpeed: {
tooltip: !1,
get: function() {
return this._motorSpeed;
},
set: function(t) {
this._motorSpeed = t;
this._joint && this._joint.SetMotorSpeed(t * r);
}
},
enableMotor: {
tooltip: !1,
get: function() {
return this._enableMotor;
},
set: function(t) {
this._enableMotor = t;
this._joint && this._joint.EnableMotor(t);
}
},
frequency: {
tooltip: !1,
get: function() {
return this._frequency;
},
set: function(t) {
this._frequency = t;
this._joint && this._joint.SetSpringFrequencyHz(t);
}
},
dampingRatio: {
tooltip: !1,
get: function() {
return this._dampingRatio;
},
set: function(t) {
this._dampingRatio = t;
this._joint && this._joint.SetDampingRatio(t);
}
}
},
_createJointDef: function() {
var t = new b2.WheelJointDef();
t.localAnchorA = new b2.Vec2(this.anchor.x / n, this.anchor.y / n);
t.localAnchorB = new b2.Vec2(this.connectedAnchor.x / n, this.connectedAnchor.y / n);
t.localAxisA = new b2.Vec2(this.localAxisA.x, this.localAxisA.y);
t.maxMotorTorque = this.maxMotorTorque;
t.motorSpeed = this.motorSpeed * r;
t.enableMotor = this.enableMotor;
t.dampingRatio = this.dampingRatio;
t.frequencyHz = this.frequency;
return t;
}
});
cc.WheelJoint = e.exports = s;
}), {
"../CCPhysicsTypes": 205
} ],
224: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").BodyType;
function r() {
this._point = new b2.Vec2();
this._isPoint = !1;
this._fixtures = [];
}
r.prototype.init = function(t) {
if (t) {
this._isPoint = !0;
this._point.x = t.x;
this._point.y = t.y;
} else this._isPoint = !1;
this._fixtures.length = 0;
};
r.prototype.ReportFixture = function(t) {
if (t.GetBody().GetType() === n.Dynamic) if (this._isPoint) {
if (t.TestPoint(this._point)) {
this._fixtures.push(t);
return !1;
}
} else this._fixtures.push(t);
return !0;
};
r.prototype.getFixture = function() {
return this._fixtures[0];
};
r.prototype.getFixtures = function() {
return this._fixtures;
};
cc.PhysicsAABBQueryCallback = e.exports = r;
}), {
"../CCPhysicsTypes": 205
} ],
225: [ (function(t, e, i) {
"use strict";
function n() {
this._contactFixtures = [];
}
n.prototype.setBeginContact = function(t) {
this._BeginContact = t;
};
n.prototype.setEndContact = function(t) {
this._EndContact = t;
};
n.prototype.setPreSolve = function(t) {
this._PreSolve = t;
};
n.prototype.setPostSolve = function(t) {
this._PostSolve = t;
};
n.prototype.BeginContact = function(t) {
if (this._BeginContact) {
var e = t.GetFixtureA(), i = t.GetFixtureB(), n = this._contactFixtures;
t._shouldReport = !1;
if (-1 !== n.indexOf(e) || -1 !== n.indexOf(i)) {
t._shouldReport = !0;
this._BeginContact(t);
}
}
};
n.prototype.EndContact = function(t) {
if (this._EndContact && t._shouldReport) {
t._shouldReport = !1;
this._EndContact(t);
}
};
n.prototype.PreSolve = function(t, e) {
this._PreSolve && t._shouldReport && this._PreSolve(t, e);
};
n.prototype.PostSolve = function(t, e) {
this._PostSolve && t._shouldReport && this._PostSolve(t, e);
};
n.prototype.registerContactFixture = function(t) {
this._contactFixtures.push(t);
};
n.prototype.unregisterContactFixture = function(t) {
cc.js.array.remove(this._contactFixtures, t);
};
cc.PhysicsContactListener = e.exports = n;
}), {} ],
226: [ (function(t, e, i) {
"use strict";
var n = t("../CCPhysicsTypes").PTM_RATIO, r = cc.v2(), s = cc.Color.GREEN, o = cc.Color.RED;
function a(t) {
b2.Draw.call(this);
this._drawer = t;
this._xf = this._dxf = new b2.Transform();
}
cc.js.extend(a, b2.Draw);
cc.js.mixin(a.prototype, {
_DrawPolygon: function(t, e) {
for (var i = this._drawer, s = 0; s < e; s++) {
b2.Transform.MulXV(this._xf, t[s], r);
var o = r.x * n, a = r.y * n;
0 === s ? i.moveTo(o, a) : i.lineTo(o, a);
}
i.close();
},
DrawPolygon: function(t, e, i) {
this._applyStrokeColor(i);
this._DrawPolygon(t, e);
this._drawer.stroke();
},
DrawSolidPolygon: function(t, e, i) {
this._applyFillColor(i);
this._DrawPolygon(t, e);
this._drawer.fill();
this._drawer.stroke();
},
_DrawCircle: function(t, e) {
var i = this._xf.p;
this._drawer.circle((t.x + i.x) * n, (t.y + i.y) * n, e * n);
},
DrawCircle: function(t, e, i) {
this._applyStrokeColor(i);
this._DrawCircle(t, e);
this._drawer.stroke();
},
DrawSolidCircle: function(t, e, i, n) {
this._applyFillColor(n);
this._DrawCircle(t, e);
this._drawer.fill();
},
DrawSegment: function(t, e, i) {
var s = this._drawer;
if (t.x !== e.x || t.y !== e.y) {
this._applyStrokeColor(i);
b2.Transform.MulXV(this._xf, t, r);
s.moveTo(r.x * n, r.y * n);
b2.Transform.MulXV(this._xf, e, r);
s.lineTo(r.x * n, r.y * n);
s.stroke();
} else {
this._applyFillColor(i);
this._DrawCircle(t, 2 / n);
s.fill();
}
},
DrawTransform: function(t) {
var e = this._drawer;
e.strokeColor = o;
r.x = r.y = 0;
b2.Transform.MulXV(t, r, r);
e.moveTo(r.x * n, r.y * n);
r.x = 1;
r.y = 0;
b2.Transform.MulXV(t, r, r);
e.lineTo(r.x * n, r.y * n);
e.stroke();
e.strokeColor = s;
r.x = r.y = 0;
b2.Transform.MulXV(t, r, r);
e.moveTo(r.x * n, r.y * n);
r.x = 0;
r.y = 1;
b2.Transform.MulXV(t, r, r);
e.lineTo(r.x * n, r.y * n);
e.stroke();
},
DrawPoint: function(t, e, i) {},
_applyStrokeColor: function(t) {
var e = this._drawer.strokeColor;
e.r = 255 * t.r;
e.g = 255 * t.g;
e.b = 255 * t.b;
e.a = 150;
this._drawer.strokeColor = e;
},
_applyFillColor: function(t) {
var e = this._drawer.fillColor;
e.r = 255 * t.r;
e.g = 255 * t.g;
e.b = 255 * t.b;
e.a = 150;
this._drawer.fillColor = e;
},
PushTransform: function(t) {
this._xf = t;
},
PopTransform: function() {
this._xf = this._dxf;
}
});
e.exports = a;
}), {
"../CCPhysicsTypes": 205
} ],
227: [ (function(t, e, i) {
"use strict";
function n() {
this._type = 0;
this._fixtures = [];
this._points = [];
this._normals = [];
this._fractions = [];
}
n.prototype.init = function(t) {
this._type = t;
this._fixtures.length = 0;
this._points.length = 0;
this._normals.length = 0;
this._fractions.length = 0;
};
n.prototype.ReportFixture = function(t, e, i, n) {
if (0 === this._type) {
this._fixtures[0] = t;
this._points[0] = e;
this._normals[0] = i;
this._fractions[0] = n;
return n;
}
this._fixtures.push(t);
this._points.push(cc.v2(e));
this._normals.push(cc.v2(i));
this._fractions.push(n);
return 1 === this._type ? 0 : this._type >= 2 ? 1 : n;
};
n.prototype.getFixtures = function() {
return this._fixtures;
};
n.prototype.getPoints = function() {
return this._points;
};
n.prototype.getNormals = function() {
return this._normals;
};
n.prototype.getFractions = function() {
return this._fractions;
};
cc.PhysicsRayCastCallback = e.exports = n;
}), {} ],
228: [ (function(t, e, i) {
"use strict";
e.exports = {
getWorldRotation: function(t) {
for (var e = t.angle, i = t.parent; i.parent; ) {
e += i.angle;
i = i.parent;
}
return -e;
},
getWorldScale: function(t) {
for (var e = t.scaleX, i = t.scaleY, n = t.parent; n.parent; ) {
e *= n.scaleX;
i *= n.scaleY;
n = n.parent;
}
return cc.v2(e, i);
},
convertToNodeRotation: function(t, e) {
e -= -t.angle;
for (var i = t.parent; i.parent; ) {
e -= -i.angle;
i = i.parent;
}
return e;
}
};
}), {} ],
229: [ (function(t, e, i) {
"use strict";
t("../assets/CCAsset");
var n = t("./utils").callInNextTick, r = t("../load-pipeline/CCLoader"), s = t("../load-pipeline/asset-table"), o = t("../load-pipeline/pack-downloader"), a = t("../load-pipeline/auto-release-utils"), c = t("../utils/decode-uuid"), l = t("../load-pipeline/md5-pipe"), u = t("../load-pipeline/subpackage-pipe"), h = t("./js"), f = "", _ = "", d = h.createMap(!0);
function p(t) {
return t && (t.constructor === cc.SceneAsset || t instanceof cc.Scene);
}
function m(t, e) {
this.url = t;
this.type = e;
}
var y = {
loadAsset: function(t, e, i) {
if ("string" != typeof t) return n(e, new Error("[AssetLibrary] uuid must be string"), null);
var s = {
uuid: t,
type: "uuid"
};
i && i.existingAsset && (s.existingAsset = i.existingAsset);
r.load(s, (function(i, n) {
if (i || !n) {
var s = "string" == typeof i ? i : i ? i.message || i.errorMessage || JSON.stringify(i) : "Unknown error";
i = new Error("[AssetLibrary] loading JSON or dependencies failed:" + s);
} else {
if (n.constructor === cc.SceneAsset) {
var o = cc.loader._getReferenceKey(t);
n.scene.dependAssets = a.getDependsRecursively(o);
}
if (p(n)) {
var c = cc.loader._getReferenceKey(t);
r.removeItem(c);
}
}
e && e(i, n);
}));
},
getLibUrlNoExt: function(t, e) {
t = c(t);
return (e ? _ + "assets/" : f) + t.slice(0, 2) + "/" + t;
},
_queryAssetInfoInEditor: function(t, e) {
0;
},
_getAssetInfoInRuntime: function(t, e) {
e = e || {
url: null,
raw: !1
};
var i = d[t];
if (i && !h.isChildClassOf(i.type, cc.Asset)) {
e.url = _ + i.url;
e.raw = !0;
} else {
e.url = this.getLibUrlNoExt(t) + ".json";
e.raw = !1;
}
return e;
},
_uuidInSettings: function(t) {
return t in d;
},
queryAssetInfo: function(t, e) {
var i = this._getAssetInfoInRuntime(t);
e(null, i.url, i.raw);
},
parseUuidInEditor: function(t) {},
loadJson: function(t, e) {
var i = "" + (new Date().getTime() + Math.random()), n = {
uuid: i,
type: "uuid",
content: t,
skips: [ r.assetLoader.id, r.downloader.id ]
};
r.load(n, (function(t, n) {
if (t) t = new Error("[AssetLibrary] loading JSON or dependencies failed: " + t.message); else {
if (n.constructor === cc.SceneAsset) {
var s = cc.loader._getReferenceKey(i);
n.scene.dependAssets = a.getDependsRecursively(s);
}
if (p(n)) {
var o = cc.loader._getReferenceKey(i);
r.removeItem(o);
}
}
n._uuid = "";
e && e(t, n);
}));
},
getAssetByUuid: function(t) {
return y._uuidToAsset[t] || null;
},
init: function(t) {
0;
var e = t.libraryPath;
e = e.replace(/\\/g, "/");
f = cc.path.stripSep(e) + "/";
_ = t.rawAssetsBase;
if (t.subpackages) {
var i = new u(t.subpackages);
cc.loader.insertPipeAfter(cc.loader.assetLoader, i);
cc.loader.subPackPipe = i;
}
var n = t.md5AssetsMap;
if (n && n.import) {
var a = 0, p = 0, y = h.createMap(!0), v = n.import;
for (a = 0; a < v.length; a += 2) y[p = c(v[a])] = v[a + 1];
var g = h.createMap(!0);
v = n["raw-assets"];
for (a = 0; a < v.length; a += 2) g[p = c(v[a])] = v[a + 1];
var b = new l(y, g, f);
cc.loader.insertPipeAfter(cc.loader.assetLoader, b);
cc.loader.md5Pipe = b;
}
var C = r._assetTables;
for (var x in C) C[x].reset();
var A = t.rawAssets;
if (A) for (var S in A) {
var w = A[S];
for (var p in w) {
var T = w[p], E = T[0], M = T[1], B = cc.js._getClassById(M);
if (B) {
d[p] = new m(S + "/" + E, B);
var D = cc.path.extname(E);
D && (E = E.slice(0, -D.length));
var R = 1 === T[2];
C[S] || (C[S] = new s());
C[S].add(E, p, B, !R);
} else cc.error("Cannot get", M);
}
}
t.packedAssets && o.initPacks(t.packedAssets);
cc.url._init(t.mountPaths && t.mountPaths.assets || _ + "assets");
},
_uuidToAsset: {}
}, v = {
effect: {},
material: {}
}, g = {};
function b(t, e, i) {
var n = t + "s", r = v[t] = {}, s = "internal";
0;
cc.loader.loadResDir(n, e, s, (function() {}), (function(t, e) {
if (t) cc.error(t); else for (var n = 0; n < e.length; n++) {
var s = e[n];
cc.loader.getDependsRecursively(s).forEach((function(t) {
return g[t] = !0;
}));
r["" + s.name] = s;
}
i();
}));
}
y._loadBuiltins = function(t) {
if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) return t && t();
b("effect", cc.EffectAsset, (function() {
b("material", cc.Material, t);
}));
};
y.getBuiltin = function(t, e) {
return v[t][e];
};
y.getBuiltins = function(t) {
return t ? v[t] : v;
};
y.resetBuiltins = function() {
v = {
effect: {},
material: {}
};
g = {};
};
y.getBuiltinDeps = function() {
return g;
};
e.exports = cc.AssetLibrary = y;
}), {
"../assets/CCAsset": 76,
"../load-pipeline/CCLoader": 177,
"../load-pipeline/asset-table": 179,
"../load-pipeline/auto-release-utils": 181,
"../load-pipeline/md5-pipe": 188,
"../load-pipeline/pack-downloader": 189,
"../load-pipeline/subpackage-pipe": 192,
"../utils/decode-uuid": 307,
"./js": 250,
"./utils": 254
} ],
230: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = t("./CCEnum"), s = t("./utils"), o = (s.isPlainEmptyObj_DEV, 
s.cloneable_DEV, t("./attribute")), a = o.DELIMETER, c = t("./preprocess-class");
t("./requiring-frame");
var l = [ "name", "extends", "mixins", "ctor", "__ctor__", "properties", "statics", "editor", "__ES6__" ];
function u(t, e) {
t.indexOf(e) < 0 && t.push(e);
}
var h = {
datas: null,
push: function(t) {
if (this.datas) this.datas.push(t); else {
this.datas = [ t ];
var e = this;
setTimeout((function() {
e.init();
}), 0);
}
},
init: function() {
var t = this.datas;
if (t) {
for (var e = 0; e < t.length; ++e) {
var i = t[e], r = i.cls, s = i.props;
"function" == typeof s && (s = s());
var o = n.getClassName(r);
s ? M(r, o, s, r.$super, i.mixins) : cc.errorID(3633, o);
}
this.datas = null;
}
}
};
function f(t, e) {
0;
u(t.__props__, e);
}
function _(t, e, i, n, r) {
var s = n.default;
0;
o.setClassAttr(t, i, "default", s);
f(t, i);
R(t, n, e, i, !1);
}
function d(t, e, i, r, s) {
var a = r.get, c = r.set, l = t.prototype, u = Object.getOwnPropertyDescriptor(l, i), h = !u;
if (a) {
0;
R(t, r, e, i, !0);
0;
o.setClassAttr(t, i, "serializable", !1);
0;
s || n.get(l, i, a, h, h);
0;
}
if (c) {
if (!s) {
0;
n.set(l, i, c, h, h);
}
0;
}
}
function p(t) {
return "function" == typeof t ? t() : t;
}
function m(t, e, i) {
for (var r in e) t.hasOwnProperty(r) || i && !i(r) || Object.defineProperty(t, r, n.getPropertyDescriptor(e, r));
}
function y(t, e, i, r) {
var s, a, c = r.__ctor__, l = r.ctor, u = r.__ES6__;
if (u) {
s = [ l ];
a = l;
} else {
s = c ? [ c ] : w(e, i, r);
a = S(s, e, t, r);
n.value(a, "extend", (function(t) {
t.extends = this;
return B(t);
}), !0);
}
n.value(a, "__ctors__", s.length > 0 ? s : null, !0);
var h = a.prototype;
if (e) {
if (!u) {
n.extend(a, e);
h = a.prototype;
}
a.$super = e;
0;
}
if (i) {
for (var f = i.length - 1; f >= 0; f--) {
var _ = i[f];
m(h, _.prototype);
m(a, _, (function(t) {
return _.hasOwnProperty(t) && !0;
}));
B._isCCClass(_) && m(o.getClassAttrs(a), o.getClassAttrs(_));
}
h.constructor = a;
}
u || (h.__initProps__ = A);
n.setClassName(t, a);
return a;
}
function v(t, e, i, r) {
var s = cc.Component, o = cc._RF.peek();
if (o && n.isChildClassOf(e, s)) {
if (n.isChildClassOf(o.cls, s)) {
cc.errorID(3615);
return null;
}
0;
t = t || o.script;
}
var a = y(t, e, i, r);
if (o) if (n.isChildClassOf(e, s)) {
var c = o.uuid;
if (c) {
n._setClassId(c, a);
0;
}
o.cls = a;
} else n.isChildClassOf(o.cls, s) || (o.cls = a);
return a;
}
function g(t) {
for (var e = n.getClassName(t), i = t.constructor, r = "new " + e + "(", s = 0; s < i.__props__.length; s++) {
var o = t[i.__props__[s]];
0;
r += o;
s < i.__props__.length - 1 && (r += ",");
}
return r + ")";
}
function b(t) {
return JSON.stringify(t).replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029");
}
function C(t, e) {
for (var i = [], n = "", r = 0; r < e.length; r++) {
var s = e[r], o = s + a + "default";
if (o in t) {
var c, l;
c = x.test(s) ? "this." + s + "=" : "this[" + b(s) + "]=";
var u = t[o];
if ("object" == typeof u && u) l = u instanceof cc.ValueType ? g(u) : Array.isArray(u) ? "[]" : "{}"; else if ("function" == typeof u) {
var h = i.length;
i.push(u);
l = "F[" + h + "]()";
0;
} else l = "string" == typeof u ? b(u) : u;
n += c = c + l + ";\n";
}
}
return 0 === i.length ? Function(n) : Function("F", "return (function(){\n" + n + "})")(i);
}
var x = /^[A-Za-z_$][0-9A-Za-z_$]*$/;
function A(t) {
var e = o.getClassAttrs(t), i = t.__props__;
if (null === i) {
h.init();
i = t.__props__;
}
var n = C(e, i);
t.prototype.__initProps__ = n;
n.call(this);
}
var S = function(t, e, i, n) {
var r = "return function CCClass(){\n";
e && E(e, n, i) && (r += "this._super=null;\n");
r += "this.__initProps__(CCClass);\n";
var s = t.length;
if (s > 0) {
0;
var o = "].apply(this,arguments);\n";
if (1 === s) r += "CCClass.__ctors__[0" + o; else {
r += "var cs=CCClass.__ctors__;\n";
for (var a = 0; a < s; a++) r += "cs[" + a + o;
}
0;
}
r += "}";
return Function(r)();
};
function w(t, e, i) {
function n(t) {
return B._isCCClass(t) ? t.__ctors__ || [] : [ t ];
}
for (var r = [], s = [ t ].concat(e), o = 0; o < s.length; o++) {
var a = s[o];
if (a) for (var c = n(a), l = 0; l < c.length; l++) u(r, c[l]);
}
var h = i.ctor;
h && r.push(h);
return r;
}
var T = /xyz/.test((function() {
xyz;
})) ? /\b\._super\b/ : /.*/;
/xyz/.test((function() {
xyz;
}));
function E(t, e, i) {
var r = !1;
for (var s in e) if (!(l.indexOf(s) >= 0)) {
var o = e[s];
if ("function" == typeof o) {
var a = n.getPropertyDescriptor(t.prototype, s);
if (a) {
var c = a.value;
if ("function" == typeof c) {
if (T.test(o)) {
r = !0;
e[s] = (function(t, e) {
return function() {
var i = this._super;
this._super = t;
var n = e.apply(this, arguments);
this._super = i;
return n;
};
})(c, o);
}
continue;
}
}
0;
}
}
return r;
}
function M(t, e, i, n, r, s) {
t.__props__ = [];
n && n.__props__ && (t.__props__ = n.__props__.slice());
if (r) for (var l = 0; l < r.length; ++l) {
var u = r[l];
u.__props__ && (t.__props__ = t.__props__.concat(u.__props__.filter((function(e) {
return t.__props__.indexOf(e) < 0;
}))));
}
if (i) {
c.preprocessAttrs(i, e, t, s);
for (var h in i) {
var f = i[h];
"default" in f ? _(t, e, h, f) : d(t, e, h, f, s);
}
}
var p = o.getClassAttrs(t);
t.__values__ = t.__props__.filter((function(t) {
return !1 !== p[t + a + "serializable"];
}));
}
function B(t) {
var e = (t = t || {}).name, i = t.extends, r = t.mixins, s = v(e, i, r, t);
e || (e = cc.js.getClassName(s));
s._sealed = !0;
i && (i._sealed = !1);
var o = t.properties;
if ("function" == typeof o || i && null === i.__props__ || r && r.some((function(t) {
return null === t.__props__;
}))) {
h.push({
cls: s,
props: o,
mixins: r
});
s.__props__ = s.__values__ = null;
} else M(s, e, o, i, t.mixins, t.__ES6__);
var a = t.statics;
if (a) {
var u;
0;
for (u in a) s[u] = a[u];
}
for (var f in t) if (!(l.indexOf(f) >= 0)) {
var _ = t[f];
c.validateMethodWithProps(_, f, e, s, i) && n.value(s.prototype, f, _, !0, !0);
}
var d = t.editor;
d && n.isChildClassOf(i, cc.Component) && cc.Component._registerEditorProps(s, d);
return s;
}
B._isCCClass = function(t) {
return t && t.hasOwnProperty("__ctors__");
};
B._fastDefine = function(t, e, i) {
n.setClassName(t, e);
for (var r = e.__props__ = e.__values__ = Object.keys(i), s = o.getClassAttrs(e), c = 0; c < r.length; c++) {
var l = r[c];
s[l + a + "visible"] = !1;
s[l + a + "default"] = i[l];
}
};
B.Attr = o;
B.attr = o.attr;
B.getInheritanceChain = function(t) {
for (var e = []; t = n.getSuper(t); ) t !== Object && e.push(t);
return e;
};
var D = {
Integer: "Number",
Float: "Number",
Boolean: "Boolean",
String: "String"
};
function R(t, e, i, n, s) {
var c = null, l = "";
function u() {
l = n + a;
return c = o.getClassAttrs(t);
}
0;
var h = e.type;
if (h) {
var f = D[h];
if (f) {
(c || u())[l + "type"] = h;
0;
} else if ("Object" === h) 0; else if (h === o.ScriptUuid) {
(c || u())[l + "type"] = "Script";
c[l + "ctor"] = cc.ScriptAsset;
} else if ("object" == typeof h) if (r.isEnum(h)) {
(c || u())[l + "type"] = "Enum";
c[l + "enumList"] = r.getList(h);
} else 0; else if ("function" == typeof h) {
(c || u())[l + "type"] = "Object";
c[l + "ctor"] = h;
0;
} else 0;
}
function _(t, i) {
if (t in e) {
var n = e[t];
typeof n === i && ((c || u())[l + t] = n);
}
}
e.editorOnly && ((c || u())[l + "editorOnly"] = !0);
0;
e.url && ((c || u())[l + "saveUrlAsAsset"] = !0);
!1 === e.serializable && ((c || u())[l + "serializable"] = !1);
_("formerlySerializedAs", "string");
0;
var d = e.range;
if (d) if (Array.isArray(d)) if (d.length >= 2) {
(c || u())[l + "min"] = d[0];
c[l + "max"] = d[1];
d.length > 2 && (c[l + "step"] = d[2]);
} else 0; else 0;
_("min", "number");
_("max", "number");
_("step", "number");
}
cc.Class = B;
e.exports = {
isArray: function(t) {
t = p(t);
return Array.isArray(t);
},
fastDefine: B._fastDefine,
getNewValueTypeCode: g,
IDENTIFIER_RE: x,
escapeForJS: b,
getDefault: p
};
0;
}), {
"./CCEnum": 232,
"./attribute": 242,
"./js": 250,
"./preprocess-class": 251,
"./requiring-frame": 252,
"./utils": 254
} ],
231: [ (function(t, e, i) {
"use strict";
t("./CCClass");
var n = t("./preprocess-class"), r = t("./js"), s = "__ccclassCache__";
function o(t) {
return t;
}
function a(t, e) {
return t[e] || (t[e] = {});
}
function c(t) {
return function(e) {
return "function" == typeof e ? t(e) : function(i) {
return t(i, e);
};
};
}
function l(t, e, i) {
return function(t) {
0;
return function(i) {
return e(i, t);
};
};
}
var u = l.bind(null, !1);
function h(t) {
return l.bind(null, !1);
}
var f = h(), _ = h();
function d(t, e) {
0;
return a(t, s);
}
function p(t) {
var e;
try {
e = t();
} catch (e) {
return t;
}
return "object" != typeof e || null === e ? e : t;
}
function m(t) {
var e;
try {
e = new t();
} catch (t) {
0;
return {};
}
return e;
}
function y(t, e, i, s, o, a) {
var c, l = o && (o.get || o.set);
s && (c = n.getFullFormOfProperty(s, l));
var u = e[i], h = r.mixin(u || {}, c || s || {});
if (l) {
o.get && (h.get = o.get);
o.set && (h.set = o.set);
} else {
0;
var f = void 0;
if (o) {
if (o.initializer) {
f = p(o.initializer);
!0;
}
} else {
var _ = a.default || (a.default = m(t));
if (_.hasOwnProperty(i)) {
f = _[i];
!0;
}
}
0;
h.default = f;
}
e[i] = h;
}
var v = c((function(t, e) {
var i = r.getSuper(t);
i === Object && (i = null);
var n = {
name: e,
extends: i,
ctor: t,
__ES6__: !0
}, o = t[s];
if (o) {
var a = o.proto;
a && r.mixin(n, a);
t[s] = void 0;
}
return cc.Class(n);
}));
function g(t, e, i) {
return t((function(t, n) {
var r = d(t);
if (r) {
var s = void 0 !== i ? i : n;
a(a(r, "proto"), "editor")[e] = s;
}
}), e);
}
function b(t) {
return t(o);
}
var C = b(c), x = g(u, "requireComponent"), A = b(f), S = g(_, "executionOrder"), w = b(c), T = b(c), E = b(f), M = b(f), B = b(f);
cc._decorator = e.exports = {
ccclass: v,
property: function(t, e, i) {
var n = null;
function r(t, e, i) {
var r = d(t.constructor);
if (r) {
var s = a(a(r, "proto"), "properties");
y(t.constructor, s, e, n, i, r);
}
}
if ("undefined" == typeof e) {
n = t;
return r;
}
r(t, e, i);
},
executeInEditMode: C,
requireComponent: x,
menu: A,
executionOrder: S,
disallowMultiple: w,
playOnFocus: T,
inspector: E,
icon: M,
help: B,
mixins: function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
return function(e) {
var i = d(e);
i && (a(i, "proto").mixins = t);
};
}
};
}), {
"./CCClass": 230,
"./js": 250,
"./preprocess-class": 251,
"./utils": 254
} ],
232: [ (function(t, e, i) {
"use strict";
var n = t("./js");
function r(t) {
if ("__enums__" in t) return t;
n.value(t, "__enums__", null, !0);
for (var e = -1, i = Object.keys(t), r = 0; r < i.length; r++) {
var s = i[r], o = t[s];
if (-1 === o) {
o = ++e;
t[s] = o;
} else if ("number" == typeof o) e = o; else if ("string" == typeof o && Number.isInteger(parseFloat(s))) continue;
var a = "" + o;
if (s !== a) {
0;
n.value(t, a, s);
}
}
return t;
}
r.isEnum = function(t) {
return t && t.hasOwnProperty("__enums__");
};
r.getList = function(t) {
if (t.__enums__) return t.__enums__;
var e = t.__enums__ = [];
for (var i in t) {
var n = t[i];
Number.isInteger(n) && e.push({
name: i,
value: n
});
}
e.sort((function(t, e) {
return t.value - e.value;
}));
return e;
};
e.exports = cc.Enum = r;
}), {
"./js": 250
} ],
233: [ (function(t, e, i) {
"use strict";
var n, r = t("../event-manager"), s = t("./CCInputManager");
cc.Acceleration = function(t, e, i, n) {
this.x = t || 0;
this.y = e || 0;
this.z = i || 0;
this.timestamp = n || 0;
};
s.setAccelerometerEnabled = function(t) {
var e = this;
if (e._accelEnabled !== t) {
e._accelEnabled = t;
var i = cc.director.getScheduler();
i.enableForTarget(e);
if (e._accelEnabled) {
e._registerAccelerometerEvent();
e._accelCurTime = 0;
i.scheduleUpdate(e);
} else {
e._unregisterAccelerometerEvent();
e._accelCurTime = 0;
i.unscheduleUpdate(e);
}
jsb.device.setMotionEnabled(t);
}
};
s.setAccelerometerInterval = function(t) {
if (this._accelInterval !== t) {
this._accelInterval = t;
jsb.device.setMotionInterval(t);
}
};
s._registerKeyboardEvent = function() {
cc.game.canvas.addEventListener("keydown", (function(t) {
r.dispatchEvent(new cc.Event.EventKeyboard(t.keyCode, !0));
t.stopPropagation();
t.preventDefault();
}), !1);
cc.game.canvas.addEventListener("keyup", (function(t) {
r.dispatchEvent(new cc.Event.EventKeyboard(t.keyCode, !1));
t.stopPropagation();
t.preventDefault();
}), !1);
};
s._registerAccelerometerEvent = function() {
var t = window, e = this;
e._acceleration = new cc.Acceleration();
e._accelDeviceEvent = t.DeviceMotionEvent || t.DeviceOrientationEvent;
cc.sys.browserType === cc.sys.BROWSER_TYPE_MOBILE_QQ && (e._accelDeviceEvent = window.DeviceOrientationEvent);
var i = e._accelDeviceEvent === t.DeviceMotionEvent ? "devicemotion" : "deviceorientation", r = navigator.userAgent;
(/Android/.test(r) || /Adr/.test(r) && cc.sys.browserType === cc.BROWSER_TYPE_UC) && (e._minus = -1);
n = e.didAccelerate.bind(e);
t.addEventListener(i, n, !1);
};
s._unregisterAccelerometerEvent = function() {
var t = window, e = this._accelDeviceEvent === t.DeviceMotionEvent ? "devicemotion" : "deviceorientation";
n && t.removeEventListener(e, n, !1);
};
s.didAccelerate = function(t) {
var e = this, i = window;
if (e._accelEnabled) {
var n, r, s, o = e._acceleration;
if (e._accelDeviceEvent === window.DeviceMotionEvent) {
var a = t.accelerationIncludingGravity;
n = e._accelMinus * a.x * .1;
r = e._accelMinus * a.y * .1;
s = .1 * a.z;
} else {
n = t.gamma / 90 * .981;
r = -t.beta / 90 * .981;
s = t.alpha / 90 * .981;
}
if (cc.view._isRotated) {
var c = n;
n = -r;
r = c;
}
o.x = n;
o.y = r;
o.z = s;
o.timestamp = t.timeStamp || Date.now();
var l = o.x;
if (90 === i.orientation) {
o.x = -o.y;
o.y = l;
} else if (-90 === i.orientation) {
o.x = o.y;
o.y = -l;
} else if (180 === i.orientation) {
o.x = -o.x;
o.y = -o.y;
}
if (cc.sys.os === cc.sys.OS_ANDROID && cc.sys.browserType !== cc.sys.BROWSER_TYPE_MOBILE_QQ) {
o.x = -o.x;
o.y = -o.y;
}
}
};
}), {
"../event-manager": 154,
"./CCInputManager": 234
} ],
234: [ (function(t, e, i) {
"use strict";
var n = t("./CCMacro"), r = t("./CCSys"), s = t("../event-manager"), o = n.TOUCH_TIMEOUT, a = cc.v2(), c = {
_mousePressed: !1,
_isRegisterEvent: !1,
_preTouchPoint: cc.v2(0, 0),
_prevMousePoint: cc.v2(0, 0),
_preTouchPool: [],
_preTouchPoolPointer: 0,
_touches: [],
_touchesIntegerDict: {},
_indexBitsUsed: 0,
_maxTouches: 8,
_accelEnabled: !1,
_accelInterval: .2,
_accelMinus: 1,
_accelCurTime: 0,
_acceleration: null,
_accelDeviceEvent: null,
_canvasBoundingRect: {
left: 0,
top: 0,
adjustedLeft: 0,
adjustedTop: 0,
width: 0,
height: 0
},
_getUnUsedIndex: function() {
for (var t = this._indexBitsUsed, e = cc.sys.now(), i = 0; i < this._maxTouches; i++) {
if (!(1 & t)) {
this._indexBitsUsed |= 1 << i;
return i;
}
var n = this._touches[i];
if (e - n._lastModified > o) {
this._removeUsedIndexBit(i);
delete this._touchesIntegerDict[n.getID()];
return i;
}
t >>= 1;
}
return -1;
},
_removeUsedIndexBit: function(t) {
if (!(t < 0 || t >= this._maxTouches)) {
var e = 1 << t;
e = ~e;
this._indexBitsUsed &= e;
}
},
_glView: null,
_updateCanvasBoundingRect: function() {
var t = cc.game.canvas, e = this._canvasBoundingRect, i = document.documentElement, n = window.pageXOffset - i.clientLeft, r = window.pageYOffset - i.clientTop;
if (t.getBoundingClientRect) {
var s = t.getBoundingClientRect();
e.left = s.left + n;
e.top = s.top + r;
e.width = s.width;
e.height = s.height;
} else if (t instanceof HTMLCanvasElement) {
e.left = n;
e.top = r;
e.width = t.width;
e.height = t.height;
} else {
e.left = n;
e.top = r;
e.width = parseInt(t.style.width);
e.height = parseInt(t.style.height);
}
},
handleTouchesBegin: function(t) {
for (var e, i, n, o = [], a = this._touchesIntegerDict, c = r.now(), l = 0, u = t.length; l < u; l++) if (null == a[n = (e = t[l]).getID()]) {
var h = this._getUnUsedIndex();
if (-1 === h) {
cc.logID(2300, h);
continue;
}
(i = this._touches[h] = new cc.Touch(e._point.x, e._point.y, e.getID()))._lastModified = c;
i._setPrevPoint(e._prevPoint);
a[n] = h;
o.push(i);
}
if (o.length > 0) {
this._glView._convertTouchesWithScale(o);
var f = new cc.Event.EventTouch(o);
f._eventCode = cc.Event.EventTouch.BEGAN;
s.dispatchEvent(f);
}
},
handleTouchesMove: function(t) {
for (var e, i, n, o = [], a = this._touches, c = r.now(), l = 0, u = t.length; l < u; l++) {
n = (e = t[l]).getID();
if (null != (i = this._touchesIntegerDict[n]) && a[i]) {
a[i]._setPoint(e._point);
a[i]._setPrevPoint(e._prevPoint);
a[i]._lastModified = c;
o.push(a[i]);
}
}
if (o.length > 0) {
this._glView._convertTouchesWithScale(o);
var h = new cc.Event.EventTouch(o);
h._eventCode = cc.Event.EventTouch.MOVED;
s.dispatchEvent(h);
}
},
handleTouchesEnd: function(t) {
var e = this.getSetOfTouchesEndOrCancel(t);
if (e.length > 0) {
this._glView._convertTouchesWithScale(e);
var i = new cc.Event.EventTouch(e);
i._eventCode = cc.Event.EventTouch.ENDED;
s.dispatchEvent(i);
}
this._preTouchPool.length = 0;
},
handleTouchesCancel: function(t) {
var e = this.getSetOfTouchesEndOrCancel(t);
if (e.length > 0) {
this._glView._convertTouchesWithScale(e);
var i = new cc.Event.EventTouch(e);
i._eventCode = cc.Event.EventTouch.CANCELED;
s.dispatchEvent(i);
}
this._preTouchPool.length = 0;
},
getSetOfTouchesEndOrCancel: function(t) {
for (var e, i, n, r = [], s = this._touches, o = this._touchesIntegerDict, a = 0, c = t.length; a < c; a++) if (null != (i = o[n = (e = t[a]).getID()]) && s[i]) {
s[i]._setPoint(e._point);
s[i]._setPrevPoint(e._prevPoint);
r.push(s[i]);
this._removeUsedIndexBit(i);
delete o[n];
}
return r;
},
getPreTouch: function(t) {
for (var e = null, i = this._preTouchPool, n = t.getID(), r = i.length - 1; r >= 0; r--) if (i[r].getID() === n) {
e = i[r];
break;
}
e || (e = t);
return e;
},
setPreTouch: function(t) {
for (var e = !1, i = this._preTouchPool, n = t.getID(), r = i.length - 1; r >= 0; r--) if (i[r].getID() === n) {
i[r] = t;
e = !0;
break;
}
if (!e) if (i.length <= 50) i.push(t); else {
i[this._preTouchPoolPointer] = t;
this._preTouchPoolPointer = (this._preTouchPoolPointer + 1) % 50;
}
},
getTouchByXY: function(t, e, i) {
var n = this._preTouchPoint, r = this._glView.convertToLocationInView(t, e, i), s = new cc.Touch(r.x, r.y, 0);
s._setPrevPoint(n.x, n.y);
n.x = r.x;
n.y = r.y;
return s;
},
getMouseEvent: function(t, e, i) {
var n = this._prevMousePoint, r = new cc.Event.EventMouse(i);
r._setPrevCursor(n.x, n.y);
n.x = t.x;
n.y = t.y;
this._glView._convertMouseToLocationInView(n, e);
r.setLocation(n.x, n.y);
return r;
},
getPointByEvent: function(t, e) {
cc.sys.browserType !== cc.sys.BROWSER_TYPE_QQ && cc.sys.browserType !== cc.sys.BROWSER_TYPE_UC && cc.sys.browserType !== cc.sys.BROWSER_TYPE_SAFARI || this._updateCanvasBoundingRect();
if (null != t.pageX) return {
x: t.pageX,
y: t.pageY
};
e.left -= document.body.scrollLeft;
e.top -= document.body.scrollTop;
return {
x: t.clientX,
y: t.clientY
};
},
getTouchesByEvent: function(t, e) {
for (var i, n, s, o = [], c = this._glView, l = this._preTouchPoint, u = t.changedTouches.length, h = 0; h < u; h++) if (i = t.changedTouches[h]) {
var f = void 0;
f = r.BROWSER_TYPE_FIREFOX === r.browserType ? c.convertToLocationInView(i.pageX, i.pageY, e, a) : c.convertToLocationInView(i.clientX, i.clientY, e, a);
if (null != i.identifier) {
n = new cc.Touch(f.x, f.y, i.identifier);
s = this.getPreTouch(n).getLocation();
n._setPrevPoint(s.x, s.y);
this.setPreTouch(n);
} else (n = new cc.Touch(f.x, f.y))._setPrevPoint(l.x, l.y);
l.x = f.x;
l.y = f.y;
o.push(n);
}
return o;
},
registerSystemEvent: function(t) {
if (!this._isRegisterEvent) {
this._glView = cc.view;
var e = this, i = this._canvasBoundingRect;
window.addEventListener("resize", this._updateCanvasBoundingRect.bind(this));
var n = r.isMobile, o = "mouse" in r.capabilities, a = "touches" in r.capabilities;
if (o) {
if (!n) {
window.addEventListener("mousedown", (function() {
e._mousePressed = !0;
}), !1);
window.addEventListener("mouseup", (function(t) {
if (e._mousePressed) {
e._mousePressed = !1;
var n = e.getPointByEvent(t, i);
if (!cc.rect(i.left, i.top, i.width, i.height).contains(n)) {
e.handleTouchesEnd([ e.getTouchByXY(n.x, n.y, i) ]);
var r = e.getMouseEvent(n, i, cc.Event.EventMouse.UP);
r.setButton(t.button);
s.dispatchEvent(r);
}
}
}), !1);
}
for (var c = cc.Event.EventMouse, l = [ !n && [ "mousedown", c.DOWN, function(i, n, r, s) {
e._mousePressed = !0;
e.handleTouchesBegin([ e.getTouchByXY(r.x, r.y, s) ]);
t.focus();
} ], !n && [ "mouseup", c.UP, function(t, i, n, r) {
e._mousePressed = !1;
e.handleTouchesEnd([ e.getTouchByXY(n.x, n.y, r) ]);
} ], !n && [ "mousemove", c.MOVE, function(t, i, n, r) {
e.handleTouchesMove([ e.getTouchByXY(n.x, n.y, r) ]);
e._mousePressed || i.setButton(null);
} ], [ "mousewheel", c.SCROLL, function(t, e) {
e.setScrollData(0, t.wheelDelta);
} ], [ "DOMMouseScroll", c.SCROLL, function(t, e) {
e.setScrollData(0, -120 * t.detail);
} ] ], u = 0; u < l.length; ++u) {
var h = l[u];
h && (function() {
var n = h[0], r = h[1], o = h[2];
t.addEventListener(n, (function(t) {
var n = e.getPointByEvent(t, i), a = e.getMouseEvent(n, i, r);
a.setButton(t.button);
o(t, a, n, i);
s.dispatchEvent(a);
t.stopPropagation();
t.preventDefault();
}), !1);
})();
}
}
if (window.navigator.msPointerEnabled) {
var f = {
MSPointerDown: e.handleTouchesBegin,
MSPointerMove: e.handleTouchesMove,
MSPointerUp: e.handleTouchesEnd,
MSPointerCancel: e.handleTouchesCancel
}, _ = function(n) {
var r = f[n];
t.addEventListener(n, (function(t) {
var n = document.documentElement;
i.adjustedLeft = i.left - n.scrollLeft;
i.adjustedTop = i.top - n.scrollTop;
r.call(e, [ e.getTouchByXY(t.clientX, t.clientY, i) ]);
t.stopPropagation();
}), !1);
};
for (var d in f) _(d);
}
if (a) {
var p = {
touchstart: function(i) {
e.handleTouchesBegin(i);
t.focus();
},
touchmove: function(t) {
e.handleTouchesMove(t);
},
touchend: function(t) {
e.handleTouchesEnd(t);
},
touchcancel: function(t) {
e.handleTouchesCancel(t);
}
}, m = function(n) {
var r = p[n];
t.addEventListener(n, (function(t) {
if (t.changedTouches) {
var n = document.body;
i.adjustedLeft = i.left - (n.scrollLeft || window.scrollX || 0);
i.adjustedTop = i.top - (n.scrollTop || window.scrollY || 0);
r(e.getTouchesByEvent(t, i));
t.stopPropagation();
t.preventDefault();
}
}), !1);
};
for (var y in p) m(y);
}
this._registerKeyboardEvent();
this._isRegisterEvent = !0;
}
},
_registerKeyboardEvent: function() {},
_registerAccelerometerEvent: function() {},
update: function(t) {
if (this._accelCurTime > this._accelInterval) {
this._accelCurTime -= this._accelInterval;
s.dispatchEvent(new cc.Event.EventAcceleration(this._acceleration));
}
this._accelCurTime += t;
}
};
e.exports = cc.internal.inputManager = c;
}), {
"../event-manager": 154,
"./CCMacro": 235,
"./CCSys": 239
} ],
235: [ (function(t, e, i) {
"use strict";
cc.macro = {
RAD: Math.PI / 180,
DEG: 180 / Math.PI,
REPEAT_FOREVER: Number.MAX_VALUE - 1,
FLT_EPSILON: 1.192092896e-7,
MIN_ZINDEX: -Math.pow(2, 15),
MAX_ZINDEX: Math.pow(2, 15) - 1,
ONE: 1,
ZERO: 0,
SRC_ALPHA: 770,
SRC_ALPHA_SATURATE: 776,
SRC_COLOR: 768,
DST_ALPHA: 772,
DST_COLOR: 774,
ONE_MINUS_SRC_ALPHA: 771,
ONE_MINUS_SRC_COLOR: 769,
ONE_MINUS_DST_ALPHA: 773,
ONE_MINUS_DST_COLOR: 775,
ONE_MINUS_CONSTANT_ALPHA: 32772,
ONE_MINUS_CONSTANT_COLOR: 32770,
ORIENTATION_PORTRAIT: 1,
ORIENTATION_LANDSCAPE: 2,
ORIENTATION_AUTO: 3,
DENSITYDPI_DEVICE: "device-dpi",
DENSITYDPI_HIGH: "high-dpi",
DENSITYDPI_MEDIUM: "medium-dpi",
DENSITYDPI_LOW: "low-dpi",
FIX_ARTIFACTS_BY_STRECHING_TEXEL_TMX: !0,
DIRECTOR_STATS_POSITION: cc.v2(0, 0),
ENABLE_STACKABLE_ACTIONS: !0,
TOUCH_TIMEOUT: 5e3,
BATCH_VERTEX_COUNT: 2e4,
ENABLE_TILEDMAP_CULLING: !0,
DOWNLOAD_MAX_CONCURRENT: 64,
ENABLE_TRANSPARENT_CANVAS: !1,
ENABLE_WEBGL_ANTIALIAS: !1,
ENABLE_CULLING: !1,
CLEANUP_IMAGE_CACHE: !1,
SHOW_MESH_WIREFRAME: !1,
SHOW_MESH_NORMAL: !1,
ENABLE_MULTI_TOUCH: !0
};
Object.defineProperty(cc.macro, "ROTATE_ACTION_CCW", {
set: function(t) {
cc.RotateTo && cc.RotateBy && (cc.RotateTo._reverse = cc.RotateBy._reverse = t);
}
});
cc.macro.SUPPORT_TEXTURE_FORMATS = [ ".pkm", ".pvr", ".webp", ".jpg", ".jpeg", ".bmp", ".png" ];
cc.macro.KEY = {
none: 0,
back: 6,
menu: 18,
backspace: 8,
tab: 9,
enter: 13,
shift: 16,
ctrl: 17,
alt: 18,
pause: 19,
capslock: 20,
escape: 27,
space: 32,
pageup: 33,
pagedown: 34,
end: 35,
home: 36,
left: 37,
up: 38,
right: 39,
down: 40,
select: 41,
insert: 45,
Delete: 46,
0: 48,
1: 49,
2: 50,
3: 51,
4: 52,
5: 53,
6: 54,
7: 55,
8: 56,
9: 57,
a: 65,
b: 66,
c: 67,
d: 68,
e: 69,
f: 70,
g: 71,
h: 72,
i: 73,
j: 74,
k: 75,
l: 76,
m: 77,
n: 78,
o: 79,
p: 80,
q: 81,
r: 82,
s: 83,
t: 84,
u: 85,
v: 86,
w: 87,
x: 88,
y: 89,
z: 90,
num0: 96,
num1: 97,
num2: 98,
num3: 99,
num4: 100,
num5: 101,
num6: 102,
num7: 103,
num8: 104,
num9: 105,
"*": 106,
"+": 107,
"-": 109,
numdel: 110,
"/": 111,
f1: 112,
f2: 113,
f3: 114,
f4: 115,
f5: 116,
f6: 117,
f7: 118,
f8: 119,
f9: 120,
f10: 121,
f11: 122,
f12: 123,
numlock: 144,
scrolllock: 145,
";": 186,
semicolon: 186,
equal: 187,
"=": 187,
",": 188,
comma: 188,
dash: 189,
".": 190,
period: 190,
forwardslash: 191,
grave: 192,
"[": 219,
openbracket: 219,
backslash: 220,
"]": 221,
closebracket: 221,
quote: 222,
dpadLeft: 1e3,
dpadRight: 1001,
dpadUp: 1003,
dpadDown: 1004,
dpadCenter: 1005
};
cc.macro.ImageFormat = cc.Enum({
JPG: 0,
PNG: 1,
TIFF: 2,
WEBP: 3,
PVR: 4,
ETC: 5,
S3TC: 6,
ATITC: 7,
TGA: 8,
RAWDATA: 9,
UNKNOWN: 10
});
cc.macro.BlendFactor = cc.Enum({
ONE: 1,
ZERO: 0,
SRC_ALPHA: 770,
SRC_COLOR: 768,
DST_ALPHA: 772,
DST_COLOR: 774,
ONE_MINUS_SRC_ALPHA: 771,
ONE_MINUS_SRC_COLOR: 769,
ONE_MINUS_DST_ALPHA: 773,
ONE_MINUS_DST_COLOR: 775
});
cc.macro.TextAlignment = cc.Enum({
LEFT: 0,
CENTER: 1,
RIGHT: 2
});
cc.macro.VerticalTextAlignment = cc.Enum({
TOP: 0,
CENTER: 1,
BOTTOM: 2
});
e.exports = cc.macro;
}), {} ],
236: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = t("./CCClass"), s = 1;
function o() {
this._name = "";
this._objFlags = 0;
}
r.fastDefine("cc.Object", o, {
_name: "",
_objFlags: 0
});
n.value(o, "Flags", {
Destroyed: s,
DontSave: 8,
EditorOnly: 16,
Dirty: 32,
DontDestroy: 64,
PersistentMask: -4192741,
Destroying: 128,
Deactivating: 256,
LockedInEditor: 512,
HideInHierarchy: 1024,
IsPreloadStarted: 8192,
IsOnLoadStarted: 32768,
IsOnLoadCalled: 16384,
IsOnEnableCalled: 2048,
IsStartCalled: 65536,
IsEditorOnEnableCalled: 4096,
IsPositionLocked: 1 << 21,
IsRotationLocked: 1 << 17,
IsScaleLocked: 1 << 18,
IsAnchorLocked: 1 << 19,
IsSizeLocked: 1 << 20
});
var a = [];
function c() {
for (var t = a.length, e = 0; e < t; ++e) {
var i = a[e];
i._objFlags & s || i._destroyImmediate();
}
t === a.length ? a.length = 0 : a.splice(0, t);
0;
}
n.value(o, "_deferredDestroy", c);
0;
var l = o.prototype;
n.getset(l, "name", (function() {
return this._name;
}), (function(t) {
this._name = t;
}), !0);
n.get(l, "isValid", (function() {
return !(this._objFlags & s);
}), !0);
0;
l.destroy = function() {
if (this._objFlags & s) {
cc.warnID(5e3);
return !1;
}
if (4 & this._objFlags) return !1;
this._objFlags |= 4;
a.push(this);
0;
return !0;
};
0;
function u(t, e) {
var i, n = t instanceof cc._BaseNode || t instanceof cc.Component, s = n ? "_id" : null, o = {};
for (i in t) if (t.hasOwnProperty(i)) {
if (i === s) continue;
switch (typeof t[i]) {
case "string":
o[i] = "";
break;

case "object":
case "function":
o[i] = null;
}
}
if (cc.Class._isCCClass(e)) for (var a = cc.Class.Attr.getClassAttrs(e), c = e.__props__, l = 0; l < c.length; l++) {
var u = (i = c[l]) + cc.Class.Attr.DELIMETER + "default";
if (u in a) {
if (n && "_id" === i) continue;
switch (typeof a[u]) {
case "string":
o[i] = "";
break;

case "object":
case "function":
o[i] = null;
break;

case "undefined":
o[i] = void 0;
}
}
}
var h = "";
for (i in o) {
var f;
f = r.IDENTIFIER_RE.test(i) ? "o." + i + "=" : "o[" + r.escapeForJS(i) + "]=";
var _ = o[i];
"" === _ && (_ = '""');
h += f + _ + ";\n";
}
return Function("o", h);
}
l._destruct = function() {
var t = this.constructor, e = t.__destruct__;
if (!e) {
e = u(this, t);
n.value(t, "__destruct__", e, !0);
}
e(this);
};
l._onPreDestroy = null;
l._destroyImmediate = function() {
if (this._objFlags & s) cc.errorID(5e3); else {
this._onPreDestroy && this._onPreDestroy();
this._destruct();
this._objFlags |= s;
}
};
0;
l._deserialize = null;
cc.isValid = function(t, e) {
return "object" == typeof t ? !(!t || t._objFlags & (e ? 4 | s : s)) : "undefined" != typeof t;
};
0;
cc.Object = e.exports = o;
}), {
"./CCClass": 230,
"./js": 250
} ],
237: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js");
cc.SAXParser = function() {
if (window.DOMParser) {
this._isSupportDOMParser = !0;
this._parser = new DOMParser();
} else {
this._isSupportDOMParser = !1;
this._parser = null;
}
};
cc.SAXParser.prototype = {
constructor: cc.SAXParser,
parse: function(t) {
return this._parseXML(t);
},
_parseXML: function(t) {
var e;
if (this._isSupportDOMParser) e = this._parser.parseFromString(t, "text/xml"); else {
(e = new ActiveXObject("Microsoft.XMLDOM")).async = "false";
e.loadXML(t);
}
return e;
}
};
cc.PlistParser = function() {
cc.SAXParser.call(this);
};
n.extend(cc.PlistParser, cc.SAXParser);
n.mixin(cc.PlistParser.prototype, {
parse: function(t) {
var e = this._parseXML(t), i = e.documentElement;
if ("plist" !== i.tagName) {
cc.warnID(5100);
return {};
}
for (var n = null, r = 0, s = i.childNodes.length; r < s && 1 !== (n = i.childNodes[r]).nodeType; r++) ;
e = null;
return this._parseNode(n);
},
_parseNode: function(t) {
var e = null, i = t.tagName;
if ("dict" === i) e = this._parseDict(t); else if ("array" === i) e = this._parseArray(t); else if ("string" === i) if (1 === t.childNodes.length) e = t.firstChild.nodeValue; else {
e = "";
for (var n = 0; n < t.childNodes.length; n++) e += t.childNodes[n].nodeValue;
} else "false" === i ? e = !1 : "true" === i ? e = !0 : "real" === i ? e = parseFloat(t.firstChild.nodeValue) : "integer" === i && (e = parseInt(t.firstChild.nodeValue, 10));
return e;
},
_parseArray: function(t) {
for (var e = [], i = 0, n = t.childNodes.length; i < n; i++) {
var r = t.childNodes[i];
1 === r.nodeType && e.push(this._parseNode(r));
}
return e;
},
_parseDict: function(t) {
for (var e = {}, i = null, n = 0, r = t.childNodes.length; n < r; n++) {
var s = t.childNodes[n];
1 === s.nodeType && ("key" === s.tagName ? i = s.firstChild.nodeValue : e[i] = this._parseNode(s));
}
return e;
}
});
cc.saxParser = new cc.SAXParser();
cc.plistParser = new cc.PlistParser();
e.exports = {
saxParser: cc.saxParser,
plistParser: cc.plistParser
};
}), {
"../platform/js": 250
} ],
238: [ (function(t, e, i) {
"use strict";
cc.screen = {
_supportsFullScreen: !1,
_onfullscreenchange: null,
_onfullscreenerror: null,
_preOnFullScreenChange: null,
_preOnFullScreenError: null,
_preOnTouch: null,
_touchEvent: "",
_fn: null,
_fnMap: [ [ "requestFullscreen", "exitFullscreen", "fullscreenchange", "fullscreenEnabled", "fullscreenElement", "fullscreenerror" ], [ "requestFullScreen", "exitFullScreen", "fullScreenchange", "fullScreenEnabled", "fullScreenElement", "fullscreenerror" ], [ "webkitRequestFullScreen", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitIsFullScreen", "webkitCurrentFullScreenElement", "webkitfullscreenerror" ], [ "mozRequestFullScreen", "mozCancelFullScreen", "mozfullscreenchange", "mozFullScreen", "mozFullScreenElement", "mozfullscreenerror" ], [ "msRequestFullscreen", "msExitFullscreen", "MSFullscreenChange", "msFullscreenEnabled", "msFullscreenElement", "msfullscreenerror" ] ],
init: function() {
this._fn = {};
var t, e, i, n, r = this._fnMap;
for (t = 0, e = r.length; t < e; t++) if ((i = r[t]) && "undefined" != typeof document[i[1]]) {
for (t = 0, n = i.length; t < n; t++) this._fn[r[0][t]] = i[t];
break;
}
this._supportsFullScreen = void 0 !== this._fn.requestFullscreen;
this._touchEvent = "ontouchend" in window ? "touchend" : "mousedown";
},
fullScreen: function() {
return !!this._supportsFullScreen && !!(document[this._fn.fullscreenElement] || document[this._fn.webkitFullscreenElement] || document[this._fn.mozFullScreenElement]);
},
requestFullScreen: function(t, e, i) {
if (t && "video" === t.tagName.toLowerCase()) {
if (cc.sys.os === cc.sys.OS_IOS && cc.sys.isBrowser && t.readyState > 0) {
t.webkitEnterFullscreen && t.webkitEnterFullscreen();
return;
}
t.setAttribute("x5-video-player-fullscreen", "true");
}
if (this._supportsFullScreen) {
t = t || document.documentElement;
if (e) {
var n = this._fn.fullscreenchange;
this._onfullscreenchange && document.removeEventListener(n, this._onfullscreenchange);
this._onfullscreenchange = e;
document.addEventListener(n, e, !1);
}
if (i) {
var r = this._fn.fullscreenerror;
this._onfullscreenerror && document.removeEventListener(r, this._onfullscreenerror);
this._onfullscreenerror = i;
document.addEventListener(r, i, {
once: !0
});
}
t[this._fn.requestFullscreen]();
}
},
exitFullScreen: function(t) {
if (t && "video" === t.tagName.toLowerCase()) {
if (cc.sys.os === cc.sys.OS_IOS && cc.sys.isBrowser) {
t.webkitExitFullscreen && t.webkitExitFullscreen();
return;
}
t.setAttribute("x5-video-player-fullscreen", "false");
}
return !this._supportsFullScreen || document[this._fn.exitFullscreen]();
},
autoFullScreen: function(t, e) {
t = t || document.body;
this._ensureFullScreen(t, e);
this.requestFullScreen(t, e);
},
disableAutoFullScreen: function(t) {
var e = cc.game.canvas || t, i = this._touchEvent;
if (this._preOnTouch) {
e.removeEventListener(i, this._preOnTouch);
this._preOnTouch = null;
}
},
_ensureFullScreen: function(t, e) {
var i = this, n = cc.game.canvas || t, r = this._fn.fullscreenerror;
if ("undefined" != typeof document[r]) {
var s = this._touchEvent;
this._preOnFullScreenError && t.removeEventListener(r, this._preOnFullScreenError);
this._preOnFullScreenError = o;
t.addEventListener(r, o, {
once: !0
});
}
function o() {
i._preOnFullScreenError = null;
i._preOnTouch && n.removeEventListener(s, i._preOnTouch);
i._preOnTouch = function() {
i._preOnTouch = null;
i.requestFullScreen(t, e);
};
n.addEventListener(s, i._preOnTouch, {
once: !0
});
}
}
};
cc.screen.init();
}), {} ],
239: [ (function(t, e, i) {
"use strict";
var n, r = "qgame" === (n = window._CCSettings ? _CCSettings.platform : void 0), s = "quickgame" === n, o = "huawei" === n, a = "jkw-game" === n, c = "qtt-game" === n, l = "undefined" == typeof window ? global : window;
var u = cc && cc.sys ? cc.sys : (function() {
cc.sys = {};
var t = cc.sys;
t.LANGUAGE_ENGLISH = "en";
t.LANGUAGE_CHINESE = "zh";
t.LANGUAGE_FRENCH = "fr";
t.LANGUAGE_ITALIAN = "it";
t.LANGUAGE_GERMAN = "de";
t.LANGUAGE_SPANISH = "es";
t.LANGUAGE_DUTCH = "du";
t.LANGUAGE_RUSSIAN = "ru";
t.LANGUAGE_KOREAN = "ko";
t.LANGUAGE_JAPANESE = "ja";
t.LANGUAGE_HUNGARIAN = "hu";
t.LANGUAGE_PORTUGUESE = "pt";
t.LANGUAGE_ARABIC = "ar";
t.LANGUAGE_NORWEGIAN = "no";
t.LANGUAGE_POLISH = "pl";
t.LANGUAGE_TURKISH = "tr";
t.LANGUAGE_UKRAINIAN = "uk";
t.LANGUAGE_ROMANIAN = "ro";
t.LANGUAGE_BULGARIAN = "bg";
t.LANGUAGE_UNKNOWN = "unknown";
t.OS_IOS = "iOS";
t.OS_ANDROID = "Android";
t.OS_WINDOWS = "Windows";
t.OS_MARMALADE = "Marmalade";
t.OS_LINUX = "Linux";
t.OS_BADA = "Bada";
t.OS_BLACKBERRY = "Blackberry";
t.OS_OSX = "OS X";
t.OS_WP8 = "WP8";
t.OS_WINRT = "WINRT";
t.OS_UNKNOWN = "Unknown";
t.UNKNOWN = -1;
t.WIN32 = 0;
t.LINUX = 1;
t.MACOS = 2;
t.ANDROID = 3;
t.IPHONE = 4;
t.IPAD = 5;
t.BLACKBERRY = 6;
t.NACL = 7;
t.EMSCRIPTEN = 8;
t.TIZEN = 9;
t.WINRT = 10;
t.WP8 = 11;
t.MOBILE_BROWSER = 100;
t.DESKTOP_BROWSER = 101;
t.EDITOR_PAGE = 102;
t.EDITOR_CORE = 103;
t.WECHAT_GAME = 104;
t.QQ_PLAY = 105;
t.FB_PLAYABLE_ADS = 106;
t.BAIDU_GAME = 107;
t.VIVO_GAME = 108;
t.OPPO_GAME = 109;
t.HUAWEI_GAME = 110;
t.XIAOMI_GAME = 111;
t.JKW_GAME = 112;
t.ALIPAY_GAME = 113;
t.WECHAT_GAME_SUB = 114;
t.BAIDU_GAME_SUB = 115;
t.QTT_GAME = 116;
t.BROWSER_TYPE_WECHAT = "wechat";
t.BROWSER_TYPE_WECHAT_GAME = "wechatgame";
t.BROWSER_TYPE_WECHAT_GAME_SUB = "wechatgamesub";
t.BROWSER_TYPE_BAIDU_GAME = "baidugame";
t.BROWSER_TYPE_BAIDU_GAME_SUB = "baidugamesub";
t.BROWSER_TYPE_XIAOMI_GAME = "xiaomigame";
t.BROWSER_TYPE_ALIPAY_GAME = "alipaygame";
t.BROWSER_TYPE_QQ_PLAY = "qqplay";
t.BROWSER_TYPE_ANDROID = "androidbrowser";
t.BROWSER_TYPE_IE = "ie";
t.BROWSER_TYPE_EDGE = "edge";
t.BROWSER_TYPE_QQ = "qqbrowser";
t.BROWSER_TYPE_MOBILE_QQ = "mqqbrowser";
t.BROWSER_TYPE_UC = "ucbrowser";
t.BROWSER_TYPE_UCBS = "ucbs";
t.BROWSER_TYPE_360 = "360browser";
t.BROWSER_TYPE_BAIDU_APP = "baiduboxapp";
t.BROWSER_TYPE_BAIDU = "baidubrowser";
t.BROWSER_TYPE_MAXTHON = "maxthon";
t.BROWSER_TYPE_OPERA = "opera";
t.BROWSER_TYPE_OUPENG = "oupeng";
t.BROWSER_TYPE_MIUI = "miuibrowser";
t.BROWSER_TYPE_FIREFOX = "firefox";
t.BROWSER_TYPE_SAFARI = "safari";
t.BROWSER_TYPE_CHROME = "chrome";
t.BROWSER_TYPE_LIEBAO = "liebao";
t.BROWSER_TYPE_QZONE = "qzone";
t.BROWSER_TYPE_SOUGOU = "sogou";
t.BROWSER_TYPE_UNKNOWN = "unknown";
t.isNative = !0;
t.isBrowser = "object" == typeof window && "object" == typeof document && !1;
t.glExtension = function(t) {
return !!cc.renderer.device.ext(t);
};
t.getMaxJointMatrixSize = function() {
if (!t._maxJointMatrixSize) {
var e = cc.game._renderContext, i = Math.floor(e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS) / 4) - 10;
t._maxJointMatrixSize = i < 50 ? 0 : 50;
}
return t._maxJointMatrixSize;
};
if (l.__globalAdapter && l.__globalAdapter.adaptSys) l.__globalAdapter.adaptSys(t); else {
var e, i;
e = r ? t.VIVO_GAME : s ? t.OPPO_GAME : o ? t.HUAWEI_GAME : a ? t.JKW_GAME : c ? t.QTT_GAME : __getPlatform();
t.platform = e;
t.isMobile = e === t.ANDROID || e === t.IPAD || e === t.IPHONE || e === t.WP8 || e === t.TIZEN || e === t.BLACKBERRY || e === t.XIAOMI_GAME || r || s || o || a || c;
t.os = __getOS();
t.language = __getCurrentLanguage();
i = __getCurrentLanguageCode();
t.languageCode = i ? i.toLowerCase() : void 0;
t.osVersion = __getOSVersion();
t.osMainVersion = parseInt(t.osVersion);
t.browserType = null;
t.browserVersion = null;
var n, u = window.innerWidth, h = window.innerHeight, f = window.devicePixelRatio || 1;
t.windowPixelResolution = {
width: f * u,
height: f * h
};
t.localStorage = window.localStorage;
n = t.capabilities = {
canvas: !1,
opengl: !0,
webp: !0
};
if (t.isMobile) {
n.accelerometer = !0;
n.touches = !0;
} else {
n.keyboard = !0;
n.mouse = !0;
n.touches = !1;
}
t.__audioSupport = {
ONLY_ONE: !1,
WEB_AUDIO: !1,
DELAY_CREATE_CTX: !1,
format: [ ".mp3" ]
};
}
t.NetworkType = {
NONE: 0,
LAN: 1,
WWAN: 2
};
t.getNetworkType = function() {
return t.NetworkType.LAN;
};
t.getBatteryLevel = function() {
return 1;
};
t.garbageCollect = function() {};
t.restartVM = function() {};
t.getSafeAreaRect = function() {
var t = cc.view.getVisibleSize();
return cc.rect(0, 0, t.width, t.height);
};
t.isObjectValid = function(t) {
return !!t;
};
t.dump = function() {
var t = "";
t += "isMobile : " + this.isMobile + "\r\n";
t += "language : " + this.language + "\r\n";
t += "browserType : " + this.browserType + "\r\n";
t += "browserVersion : " + this.browserVersion + "\r\n";
t += "capabilities : " + JSON.stringify(this.capabilities) + "\r\n";
t += "os : " + this.os + "\r\n";
t += "osVersion : " + this.osVersion + "\r\n";
t += "platform : " + this.platform + "\r\n";
t += "Using " + (cc.game.renderType === cc.game.RENDER_TYPE_WEBGL ? "WEBGL" : "CANVAS") + " renderer.\r\n";
cc.log(t);
};
t.openURL = function(t) {
jsb.openURL(t);
};
t.now = function() {
return Date.now ? Date.now() : +new Date();
};
return t;
})();
e.exports = u;
}), {} ],
240: [ (function(t, e, i) {
"use strict";
var n = t("../event/event-target"), r = t("../platform/js"), s = t("../renderer");
t("../platform/CCClass");
var o = {
init: function() {
this.html = document.getElementsByTagName("html")[0];
},
availWidth: function(t) {
return t && t !== this.html ? t.clientWidth : window.innerWidth;
},
availHeight: function(t) {
return t && t !== this.html ? t.clientHeight : window.innerHeight;
},
meta: {
width: "device-width"
},
adaptationType: cc.sys.browserType
};
cc.sys.os === cc.sys.OS_IOS && (o.adaptationType = cc.sys.BROWSER_TYPE_SAFARI);
switch (o.adaptationType) {
case cc.sys.BROWSER_TYPE_SAFARI:
o.meta["minimal-ui"] = "true";
o.availWidth = cc.sys.isMobile ? function(t) {
return window.innerWidth;
} : function(t) {
return t.clientWidth;
};
o.availHeight = cc.sys.isMobile ? function(t) {
return window.innerHeight;
} : function(t) {
return t.clientHeight;
};
break;

case cc.sys.BROWSER_TYPE_SOUGOU:
case cc.sys.BROWSER_TYPE_UC:
o.meta["minimal-ui"] = "true";
o.availWidth = function(t) {
return t.clientWidth;
};
o.availHeight = function(t) {
return t.clientHeight;
};
}
var a = null, c = function() {
n.call(this);
var t = this, e = cc.ContainerStrategy, i = cc.ContentStrategy;
o.init(this);
t._frameSize = cc.size(0, 0);
t._designResolutionSize = cc.size(0, 0);
t._originalDesignResolutionSize = cc.size(0, 0);
t._scaleX = 1;
t._scaleY = 1;
t._viewportRect = cc.rect(0, 0, 0, 0);
t._visibleRect = cc.rect(0, 0, 0, 0);
t._autoFullScreen = !1;
t._devicePixelRatio = 1;
t._maxPixelRatio = 4;
t._retinaEnabled = !1;
t._resizeCallback = null;
t._resizing = !1;
t._resizeWithBrowserSize = !1;
t._orientationChanging = !0;
t._isRotated = !1;
t._orientation = cc.macro.ORIENTATION_AUTO;
t._isAdjustViewport = !0;
t._antiAliasEnabled = !1;
t._resolutionPolicy = null;
t._rpExactFit = new cc.ResolutionPolicy(e.EQUAL_TO_FRAME, i.EXACT_FIT);
t._rpShowAll = new cc.ResolutionPolicy(e.EQUAL_TO_FRAME, i.SHOW_ALL);
t._rpNoBorder = new cc.ResolutionPolicy(e.EQUAL_TO_FRAME, i.NO_BORDER);
t._rpFixedHeight = new cc.ResolutionPolicy(e.EQUAL_TO_FRAME, i.FIXED_HEIGHT);
t._rpFixedWidth = new cc.ResolutionPolicy(e.EQUAL_TO_FRAME, i.FIXED_WIDTH);
cc.game.once(cc.game.EVENT_ENGINE_INITED, this.init, this);
};
cc.js.extend(c, n);
cc.js.mixin(c.prototype, {
init: function() {
this._initFrameSize();
var t = cc.game.canvas.width, e = cc.game.canvas.height;
this._designResolutionSize.width = t;
this._designResolutionSize.height = e;
this._originalDesignResolutionSize.width = t;
this._originalDesignResolutionSize.height = e;
this._viewportRect.width = t;
this._viewportRect.height = e;
this._visibleRect.width = t;
this._visibleRect.height = e;
cc.winSize.width = this._visibleRect.width;
cc.winSize.height = this._visibleRect.height;
cc.visibleRect && cc.visibleRect.init(this._visibleRect);
},
_resizeEvent: function(t) {
var e;
e = this.setDesignResolutionSize ? this : cc.view;
var i = cc.sys;
if (i.browserType !== i.BROWSER_TYPE_UC || i.os !== i.OS_IOS) {
var n = e._frameSize.width, r = e._frameSize.height, s = e._isRotated;
if (cc.sys.isMobile) {
var o = cc.game.container.style, a = o.margin;
o.margin = "0";
o.display = "none";
e._initFrameSize();
o.margin = a;
o.display = "block";
} else e._initFrameSize();
if (!0 === t || e._isRotated !== s || e._frameSize.width !== n || e._frameSize.height !== r) {
var c = e._originalDesignResolutionSize.width, l = e._originalDesignResolutionSize.height;
e._resizing = !0;
c > 0 && e.setDesignResolutionSize(c, l, e._resolutionPolicy);
e._resizing = !1;
e.emit("canvas-resize");
e._resizeCallback && e._resizeCallback.call();
}
} else setTimeout((function() {
e._resizeEvent(t);
}), 0);
},
_orientationChange: function() {
cc.view._orientationChanging = !0;
cc.view._resizeEvent();
cc.sys.browserType === cc.sys.BROWSER_TYPE_SAFARI && cc.sys.isMobile && setTimeout((function() {
window.innerHeight > window.innerWidth && window.scrollTo(0, 1);
}), 500);
},
resizeWithBrowserSize: function(t) {
if (t) {
if (!this._resizeWithBrowserSize) {
this._resizeWithBrowserSize = !0;
window.addEventListener("resize", this._resizeEvent);
window.addEventListener("orientationchange", this._orientationChange);
}
} else if (this._resizeWithBrowserSize) {
this._resizeWithBrowserSize = !1;
window.removeEventListener("resize", this._resizeEvent);
window.removeEventListener("orientationchange", this._orientationChange);
}
},
setResizeCallback: function(t) {
0;
"function" != typeof t && null != t || (this._resizeCallback = t);
},
setOrientation: function(t) {
if ((t &= cc.macro.ORIENTATION_AUTO) && this._orientation !== t) {
this._orientation = t;
var e = this._originalDesignResolutionSize.width, i = this._originalDesignResolutionSize.height;
this.setDesignResolutionSize(e, i, this._resolutionPolicy);
}
},
_initFrameSize: function() {
var t = this._frameSize, e = o.availWidth(cc.game.frame), i = o.availHeight(cc.game.frame), n = e >= i;
if (!cc.sys.isMobile || n && this._orientation & cc.macro.ORIENTATION_LANDSCAPE || !n && this._orientation & cc.macro.ORIENTATION_PORTRAIT) {
t.width = e;
t.height = i;
cc.game.container.style["-webkit-transform"] = "rotate(0deg)";
cc.game.container.style.transform = "rotate(0deg)";
this._isRotated = !1;
} else {
t.width = i;
t.height = e;
cc.game.container.style["-webkit-transform"] = "rotate(90deg)";
cc.game.container.style.transform = "rotate(90deg)";
cc.game.container.style["-webkit-transform-origin"] = "0px 0px 0px";
cc.game.container.style.transformOrigin = "0px 0px 0px";
this._isRotated = !0;
}
this._orientationChanging && setTimeout((function() {
cc.view._orientationChanging = !1;
}), 1e3);
},
_setViewportMeta: function(t, e) {
var i = document.getElementById("cocosMetaElement");
i && e && document.head.removeChild(i);
var n, r, s, o = document.getElementsByName("viewport"), a = o ? o[0] : null;
n = a ? a.content : "";
(i = i || document.createElement("meta")).id = "cocosMetaElement";
i.name = "viewport";
i.content = "";
for (r in t) if (-1 == n.indexOf(r)) n += "," + r + "=" + t[r]; else if (e) {
s = new RegExp(r + "s*=s*[^,]+");
n.replace(s, r + "=" + t[r]);
}
/^,/.test(n) && (n = n.substr(1));
i.content = n;
a && (a.content = n);
document.head.appendChild(i);
},
_adjustViewportMeta: function() {
this._isAdjustViewport, 0;
},
adjustViewportMeta: function(t) {
this._isAdjustViewport = t;
},
enableRetina: function(t) {
0;
this._retinaEnabled = !!t;
},
isRetinaEnabled: function() {
0;
return this._retinaEnabled;
},
enableAntiAlias: function(t) {
cc.warnID(9200);
if (this._antiAliasEnabled !== t) {
this._antiAliasEnabled = t;
if (cc.game.renderType === cc.game.RENDER_TYPE_WEBGL) {
var e = cc.loader._cache;
for (var i in e) {
var n = e[i], r = n && n.content instanceof cc.Texture2D ? n.content : null;
if (r) {
var s = cc.Texture2D.Filter;
t ? r.setFilters(s.LINEAR, s.LINEAR) : r.setFilters(s.NEAREST, s.NEAREST);
}
}
} else if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) {
var o = cc.game.canvas.getContext("2d");
o.imageSmoothingEnabled = t;
o.mozImageSmoothingEnabled = t;
}
}
},
isAntiAliasEnabled: function() {
return this._antiAliasEnabled;
},
enableAutoFullScreen: function(t) {
if (t && t !== this._autoFullScreen && cc.sys.isMobile) {
this._autoFullScreen = !0;
cc.screen.autoFullScreen(cc.game.frame);
} else {
this._autoFullScreen = !1;
cc.screen.disableAutoFullScreen(cc.game.frame);
}
},
isAutoFullScreenEnabled: function() {
return this._autoFullScreen;
},
setCanvasSize: function(t, e) {
var i = cc.game.canvas, n = cc.game.container;
i.width = t * this._devicePixelRatio;
i.height = e * this._devicePixelRatio;
i.style.width = t + "px";
i.style.height = e + "px";
n.style.width = t + "px";
n.style.height = e + "px";
this._resizeEvent();
},
getCanvasSize: function() {
return cc.size(cc.game.canvas.width, cc.game.canvas.height);
},
getFrameSize: function() {
return cc.size(this._frameSize.width, this._frameSize.height);
},
setFrameSize: function(t, e) {
this._frameSize.width = t;
this._frameSize.height = e;
cc.game.frame.style.width = t + "px";
cc.game.frame.style.height = e + "px";
this._resizeEvent(!0);
},
getVisibleSize: function() {
return cc.size(this._visibleRect.width, this._visibleRect.height);
},
getVisibleSizeInPixel: function() {
return cc.size(this._visibleRect.width * this._scaleX, this._visibleRect.height * this._scaleY);
},
getVisibleOrigin: function() {
return cc.v2(this._visibleRect.x, this._visibleRect.y);
},
getVisibleOriginInPixel: function() {
return cc.v2(this._visibleRect.x * this._scaleX, this._visibleRect.y * this._scaleY);
},
getResolutionPolicy: function() {
return this._resolutionPolicy;
},
setResolutionPolicy: function(t) {
var e = this;
if (t instanceof cc.ResolutionPolicy) e._resolutionPolicy = t; else {
var i = cc.ResolutionPolicy;
t === i.EXACT_FIT && (e._resolutionPolicy = e._rpExactFit);
t === i.SHOW_ALL && (e._resolutionPolicy = e._rpShowAll);
t === i.NO_BORDER && (e._resolutionPolicy = e._rpNoBorder);
t === i.FIXED_HEIGHT && (e._resolutionPolicy = e._rpFixedHeight);
t === i.FIXED_WIDTH && (e._resolutionPolicy = e._rpFixedWidth);
}
},
setDesignResolutionSize: function(t, e, i) {
if (t > 0 || e > 0) {
this.setResolutionPolicy(i);
var n = this._resolutionPolicy;
n && n.preApply(this);
cc.sys.isMobile && this._adjustViewportMeta();
this._orientationChanging = !0;
this._resizing || this._initFrameSize();
if (n) {
this._originalDesignResolutionSize.width = this._designResolutionSize.width = t;
this._originalDesignResolutionSize.height = this._designResolutionSize.height = e;
var r = n.apply(this, this._designResolutionSize);
if (r.scale && 2 === r.scale.length) {
this._scaleX = r.scale[0];
this._scaleY = r.scale[1];
}
if (r.viewport) {
var o = this._viewportRect, a = this._visibleRect, c = r.viewport;
o.x = c.x;
o.y = c.y;
o.width = c.width;
o.height = c.height;
a.x = 0;
a.y = 0;
a.width = c.width / this._scaleX;
a.height = c.height / this._scaleY;
}
n.postApply(this);
cc.winSize.width = this._visibleRect.width;
cc.winSize.height = this._visibleRect.height;
cc.visibleRect && cc.visibleRect.init(this._visibleRect);
s.updateCameraViewport();
cc.internal.inputManager._updateCanvasBoundingRect();
this.emit("design-resolution-changed");
} else cc.logID(2201);
} else cc.logID(2200);
},
getDesignResolutionSize: function() {
return cc.size(this._designResolutionSize.width, this._designResolutionSize.height);
},
setRealPixelResolution: function(t, e, i) {
0;
this.setDesignResolutionSize(t, e, i);
},
setViewportInPoints: function(t, e, i, n) {
var r = this._scaleX, s = this._scaleY;
cc.game._renderContext.viewport(t * r + this._viewportRect.x, e * s + this._viewportRect.y, i * r, n * s);
},
setScissorInPoints: function(t, e, i, n) {
var r = this._scaleX, s = this._scaleY, o = Math.ceil(t * r + this._viewportRect.x), c = Math.ceil(e * s + this._viewportRect.y), l = Math.ceil(i * r), u = Math.ceil(n * s), h = cc.game._renderContext;
if (!a) {
var f = h.getParameter(h.SCISSOR_BOX);
a = cc.rect(f[0], f[1], f[2], f[3]);
}
if (a.x !== o || a.y !== c || a.width !== l || a.height !== u) {
a.x = o;
a.y = c;
a.width = l;
a.height = u;
h.scissor(o, c, l, u);
}
},
isScissorEnabled: function() {
return cc.game._renderContext.isEnabled(gl.SCISSOR_TEST);
},
getScissorRect: function() {
if (!a) {
var t = gl.getParameter(gl.SCISSOR_BOX);
a = cc.rect(t[0], t[1], t[2], t[3]);
}
var e = 1 / this._scaleX, i = 1 / this._scaleY;
return cc.rect((a.x - this._viewportRect.x) * e, (a.y - this._viewportRect.y) * i, a.width * e, a.height * i);
},
getViewportRect: function() {
return this._viewportRect;
},
getScaleX: function() {
return this._scaleX;
},
getScaleY: function() {
return this._scaleY;
},
getDevicePixelRatio: function() {
return this._devicePixelRatio;
},
convertToLocationInView: function(t, e, i, n) {
var r = n || cc.v2(), s = i.adjustedLeft ? i.adjustedLeft : i.left, o = i.adjustedTop ? i.adjustedTop : i.top, a = this._devicePixelRatio * (t - s), c = this._devicePixelRatio * (o + i.height - e);
if (this._isRotated) {
r.x = cc.game.canvas.width - c;
r.y = a;
} else {
r.x = a;
r.y = c;
}
return r;
},
_convertMouseToLocationInView: function(t, e) {
var i = this._viewportRect;
t.x = (this._devicePixelRatio * (t.x - e.left) - i.x) / this._scaleX;
t.y = (this._devicePixelRatio * (e.top + e.height - t.y) - i.y) / this._scaleY;
},
_convertPointWithScale: function(t) {
var e = this._viewportRect;
t.x = (t.x - e.x) / this._scaleX;
t.y = (t.y - e.y) / this._scaleY;
},
_convertTouchesWithScale: function(t) {
for (var e, i, n, r = this._viewportRect, s = this._scaleX, o = this._scaleY, a = 0; a < t.length; a++) {
i = (e = t[a])._point;
n = e._prevPoint;
i.x = (i.x - r.x) / s;
i.y = (i.y - r.y) / o;
n.x = (n.x - r.x) / s;
n.y = (n.y - r.y) / o;
}
}
});
cc.ContainerStrategy = cc.Class({
name: "ContainerStrategy",
preApply: function(t) {},
apply: function(t, e) {},
postApply: function(t) {},
_setupContainer: function(t, e, i) {
var n = cc.game.canvas;
this._setupStyle(t, e, i);
var r = t._devicePixelRatio = 1;
r = t._devicePixelRatio = window.devicePixelRatio;
n.width = e * r;
n.height = i * r;
},
_setupStyle: function(t, e, i) {
var n = cc.game.canvas, r = cc.game.container;
if (cc.sys.os === cc.sys.OS_ANDROID) {
document.body.style.width = (t._isRotated ? i : e) + "px";
document.body.style.height = (t._isRotated ? e : i) + "px";
}
r.style.width = n.style.width = e + "px";
r.style.height = n.style.height = i + "px";
},
_fixContainer: function() {
document.body.insertBefore(cc.game.container, document.body.firstChild);
var t = document.body.style;
t.width = window.innerWidth + "px";
t.height = window.innerHeight + "px";
t.overflow = "hidden";
var e = cc.game.container.style;
e.position = "fixed";
e.left = e.top = "0px";
document.body.scrollTop = 0;
}
});
cc.ContentStrategy = cc.Class({
name: "ContentStrategy",
ctor: function() {
this._result = {
scale: [ 1, 1 ],
viewport: null
};
},
_buildResult: function(t, e, i, n, r, s) {
Math.abs(t - i) < 2 && (i = t);
Math.abs(e - n) < 2 && (n = e);
var o = cc.rect((t - i) / 2, (e - n) / 2, i, n);
cc.game.renderType, cc.game.RENDER_TYPE_CANVAS;
this._result.scale = [ r, s ];
this._result.viewport = o;
return this._result;
},
preApply: function(t) {},
apply: function(t, e) {
return {
scale: [ 1, 1 ]
};
},
postApply: function(t) {}
});
(function() {
var t = cc.Class({
name: "EqualToFrame",
extends: cc.ContainerStrategy,
apply: function(t) {
var e = t._frameSize.height, i = cc.game.container.style;
this._setupContainer(t, t._frameSize.width, t._frameSize.height);
t._isRotated ? i.margin = "0 0 0 " + e + "px" : i.margin = "0px";
i.padding = "0px";
}
}), e = cc.Class({
name: "ProportionalToFrame",
extends: cc.ContainerStrategy,
apply: function(t, e) {
var i, n, r = t._frameSize.width, s = t._frameSize.height, o = cc.game.container.style, a = e.width, c = e.height, l = r / a, u = s / c;
l < u ? (i = r, n = c * l) : (i = a * u, n = s);
var h = Math.round((r - i) / 2), f = Math.round((s - n) / 2);
i = r - 2 * h;
n = s - 2 * f;
this._setupContainer(t, i, n);
t._isRotated ? o.margin = "0 0 0 " + s + "px" : o.margin = "0px";
o.paddingLeft = h + "px";
o.paddingRight = h + "px";
o.paddingTop = f + "px";
o.paddingBottom = f + "px";
}
}), i = (cc.Class({
name: "EqualToWindow",
extends: t,
preApply: function(t) {
this._super(t);
cc.game.frame = document.documentElement;
},
apply: function(t) {
this._super(t);
this._fixContainer();
}
}), cc.Class({
name: "ProportionalToWindow",
extends: e,
preApply: function(t) {
this._super(t);
cc.game.frame = document.documentElement;
},
apply: function(t, e) {
this._super(t, e);
this._fixContainer();
}
}), cc.Class({
name: "OriginalContainer",
extends: cc.ContainerStrategy,
apply: function(t) {
this._setupContainer(t, cc.game.canvas.width, cc.game.canvas.height);
}
})), n = ("undefined" == typeof window ? global : window).__globalAdapter;
if (n) {
n.adaptContainerStrategy && n.adaptContainerStrategy(cc.ContainerStrategy.prototype);
n.adaptView && n.adaptView(c.prototype);
}
cc.ContainerStrategy.EQUAL_TO_FRAME = new t();
cc.ContainerStrategy.PROPORTION_TO_FRAME = new e();
cc.ContainerStrategy.ORIGINAL_CONTAINER = new i();
var r = cc.Class({
name: "ExactFit",
extends: cc.ContentStrategy,
apply: function(t, e) {
var i = cc.game.canvas.width, n = cc.game.canvas.height, r = i / e.width, s = n / e.height;
return this._buildResult(i, n, i, n, r, s);
}
}), s = cc.Class({
name: "ShowAll",
extends: cc.ContentStrategy,
apply: function(t, e) {
var i, n, r = cc.game.canvas.width, s = cc.game.canvas.height, o = e.width, a = e.height, c = r / o, l = s / a, u = 0;
c < l ? (i = r, n = a * (u = c)) : (i = o * (u = l), n = s);
return this._buildResult(r, s, i, n, u, u);
}
}), o = cc.Class({
name: "NoBorder",
extends: cc.ContentStrategy,
apply: function(t, e) {
var i, n, r, s = cc.game.canvas.width, o = cc.game.canvas.height, a = e.width, c = e.height, l = s / a, u = o / c;
l < u ? (n = a * (i = u), r = o) : (n = s, r = c * (i = l));
return this._buildResult(s, o, n, r, i, i);
}
}), a = cc.Class({
name: "FixedHeight",
extends: cc.ContentStrategy,
apply: function(t, e) {
var i = cc.game.canvas.width, n = cc.game.canvas.height, r = n / e.height, s = i, o = n;
return this._buildResult(i, n, s, o, r, r);
}
}), l = cc.Class({
name: "FixedWidth",
extends: cc.ContentStrategy,
apply: function(t, e) {
var i = cc.game.canvas.width, n = cc.game.canvas.height, r = i / e.width, s = i, o = n;
return this._buildResult(i, n, s, o, r, r);
}
});
cc.ContentStrategy.EXACT_FIT = new r();
cc.ContentStrategy.SHOW_ALL = new s();
cc.ContentStrategy.NO_BORDER = new o();
cc.ContentStrategy.FIXED_HEIGHT = new a();
cc.ContentStrategy.FIXED_WIDTH = new l();
})();
cc.ResolutionPolicy = cc.Class({
name: "cc.ResolutionPolicy",
ctor: function(t, e) {
this._containerStrategy = null;
this._contentStrategy = null;
this.setContainerStrategy(t);
this.setContentStrategy(e);
},
preApply: function(t) {
this._containerStrategy.preApply(t);
this._contentStrategy.preApply(t);
},
apply: function(t, e) {
this._containerStrategy.apply(t, e);
return this._contentStrategy.apply(t, e);
},
postApply: function(t) {
this._containerStrategy.postApply(t);
this._contentStrategy.postApply(t);
},
setContainerStrategy: function(t) {
t instanceof cc.ContainerStrategy && (this._containerStrategy = t);
},
setContentStrategy: function(t) {
t instanceof cc.ContentStrategy && (this._contentStrategy = t);
}
});
r.get(cc.ResolutionPolicy.prototype, "canvasSize", (function() {
return cc.v2(cc.game.canvas.width, cc.game.canvas.height);
}));
cc.ResolutionPolicy.EXACT_FIT = 0;
cc.ResolutionPolicy.NO_BORDER = 1;
cc.ResolutionPolicy.SHOW_ALL = 2;
cc.ResolutionPolicy.FIXED_HEIGHT = 3;
cc.ResolutionPolicy.FIXED_WIDTH = 4;
cc.ResolutionPolicy.UNKNOWN = 5;
cc.view = new c();
cc.winSize = cc.size();
e.exports = cc.view;
}), {
"../event/event-target": 156,
"../platform/CCClass": 230,
"../platform/js": 250,
"../renderer": 262
} ],
241: [ (function(t, e, i) {
"use strict";
cc.visibleRect = {
topLeft: cc.v2(0, 0),
topRight: cc.v2(0, 0),
top: cc.v2(0, 0),
bottomLeft: cc.v2(0, 0),
bottomRight: cc.v2(0, 0),
bottom: cc.v2(0, 0),
center: cc.v2(0, 0),
left: cc.v2(0, 0),
right: cc.v2(0, 0),
width: 0,
height: 0,
init: function(t) {
var e = this.width = t.width, i = this.height = t.height, n = t.x, r = t.y, s = r + i, o = n + e;
this.topLeft.x = n;
this.topLeft.y = s;
this.topRight.x = o;
this.topRight.y = s;
this.top.x = n + e / 2;
this.top.y = s;
this.bottomLeft.x = n;
this.bottomLeft.y = r;
this.bottomRight.x = o;
this.bottomRight.y = r;
this.bottom.x = n + e / 2;
this.bottom.y = r;
this.center.x = n + e / 2;
this.center.y = r + i / 2;
this.left.x = n;
this.left.y = r + i / 2;
this.right.x = o;
this.right.y = r + i / 2;
}
};
}), {} ],
242: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = (t("./utils").isPlainEmptyObj_DEV, "$_$");
function s(t, e) {
var i = e ? Object.create(e) : {};
n.value(t, "__attrs__", i);
return i;
}
function o(t) {
if ("function" != typeof t) {
return s(t, c(t.constructor));
}
for (var e, i = cc.Class.getInheritanceChain(t), n = i.length - 1; n >= 0; n--) {
var r = i[n];
r.hasOwnProperty("__attrs__") && r.__attrs__ || s(r, (e = i[n + 1]) && e.__attrs__);
}
s(t, (e = i[0]) && e.__attrs__);
return t.__attrs__;
}
function a(t, e, i) {
var n = c(t), s = e + r, o = {};
for (var a in n) a.startsWith(s) && (o[a.slice(s.length)] = n[a]);
return o;
}
function c(t) {
return t.hasOwnProperty("__attrs__") && t.__attrs__ || o(t);
}
function l(t, e) {
this.name = t;
this.default = e;
}
l.prototype.toString = function() {
return this.name;
};
cc.Integer = new l("Integer", 0);
cc.Float = new l("Float", 0);
0;
cc.Boolean = new l("Boolean", !1);
cc.String = new l("String", "");
e.exports = {
PrimitiveType: l,
attr: a,
getClassAttrs: c,
setClassAttr: function(t, e, i, n) {
c(t)[e + r + i] = n;
},
DELIMETER: r,
getTypeChecker_ET: !1,
getObjTypeChecker_ET: !1,
ScriptUuid: {}
};
}), {
"./CCClass": 230,
"./js": 250,
"./utils": 254
} ],
243: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = n.array.fastRemoveAt;
function s() {}
function o() {
this.callback = s;
this.target = void 0;
this.once = !1;
}
o.prototype.set = function(t, e, i) {
this.callback = t;
this.target = e;
this.once = !!i;
};
var a = new n.Pool(function(t) {
t.callback = s;
t.target = void 0;
t.once = !1;
return !0;
}, 32);
a.get = function() {
return this._get() || new o();
};
function c() {
this.callbackInfos = [];
this.isInvoking = !1;
this.containCanceled = !1;
}
var l = c.prototype;
l.removeByCallback = function(t) {
for (var e = 0; e < this.callbackInfos.length; ++e) {
var i = this.callbackInfos[e];
if (i && i.callback === t) {
a.put(i);
r(this.callbackInfos, e);
--e;
}
}
};
l.removeByTarget = function(t) {
for (var e = 0; e < this.callbackInfos.length; ++e) {
var i = this.callbackInfos[e];
if (i && i.target === t) {
a.put(i);
r(this.callbackInfos, e);
--e;
}
}
};
l.cancel = function(t) {
var e = this.callbackInfos[t];
if (e) {
a.put(e);
this.callbackInfos[t] = null;
}
this.containCanceled = !0;
};
l.cancelAll = function() {
for (var t = 0; t < this.callbackInfos.length; t++) {
var e = this.callbackInfos[t];
if (e) {
a.put(e);
this.callbackInfos[t] = null;
}
}
this.containCanceled = !0;
};
l.purgeCanceled = function() {
for (var t = this.callbackInfos.length - 1; t >= 0; --t) {
this.callbackInfos[t] || r(this.callbackInfos, t);
}
this.containCanceled = !1;
};
l.clear = function() {
this.cancelAll();
this.callbackInfos.length = 0;
this.isInvoking = !1;
this.containCanceled = !1;
};
var u = new n.Pool(function(t) {
t.callbackInfos = [];
t.isInvoking = !1;
t.containCanceled = !1;
return !0;
}, 16);
u.get = function() {
return this._get() || new c();
};
function h() {
this._callbackTable = n.createMap(!0);
}
(l = h.prototype).on = function(t, e, i, n) {
var r = this._callbackTable[t];
r || (r = this._callbackTable[t] = u.get());
var s = a.get();
s.set(e, i, n);
r.callbackInfos.push(s);
};
l.hasEventListener = function(t, e, i) {
var n = this._callbackTable[t];
if (!n) return !1;
var r = n.callbackInfos;
if (!e) {
if (n.isInvoking) {
for (var s = 0; s < r.length; ++s) if (r[s]) return !0;
return !1;
}
return r.length > 0;
}
for (var o = 0; o < r.length; ++o) {
var a = r[o];
if (a && a.callback === e && a.target === i) return !0;
}
return !1;
};
l.removeAll = function(t) {
if ("string" == typeof t) {
var e = this._callbackTable[t];
if (e) if (e.isInvoking) e.cancelAll(); else {
e.clear();
u.put(e);
delete this._callbackTable[t];
}
} else if (t) for (var i in this._callbackTable) {
var n = this._callbackTable[i];
if (n.isInvoking) for (var r = n.callbackInfos, s = 0; s < r.length; ++s) {
var o = r[s];
o && o.target === t && n.cancel(s);
} else n.removeByTarget(t);
}
};
l.off = function(t, e, i) {
var n = this._callbackTable[t];
if (n) for (var s = n.callbackInfos, o = 0; o < s.length; ++o) {
var c = s[o];
if (c && c.callback === e && c.target === i) {
if (n.isInvoking) n.cancel(o); else {
r(s, o);
a.put(c);
}
break;
}
}
};
l.emit = function(t, e, i, n, r, s) {
var o = this._callbackTable[t];
if (o) {
var a = !o.isInvoking;
o.isInvoking = !0;
for (var c = o.callbackInfos, l = 0, u = c.length; l < u; ++l) {
var h = c[l];
if (h) {
var f = h.target, _ = h.callback;
h.once && this.off(t, _, f);
f ? _.call(f, e, i, n, r, s) : _(e, i, n, r, s);
}
}
if (a) {
o.isInvoking = !1;
o.containCanceled && o.purgeCanceled();
}
}
};
0;
e.exports = h;
}), {
"./js": 250
} ],
244: [ (function(t, e, i) {
"use strict";
function n(t, e) {
for (var i = 0; i < e.length; i++) {
var r = e[i];
Array.isArray(r) ? n(t, r) : t.push(r);
}
}
e.exports = {
flattenCodeArray: function(t) {
var e = [];
n(e, t);
return e.join("");
}
};
}), {} ],
245: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = t("./attribute"), s = t("./CCClass"), o = t("../utils/misc"), a = function() {
this.uuidList = [];
this.uuidObjList = [];
this.uuidPropList = [];
this._stillUseUrl = n.createMap(!0);
};
a.prototype.reset = function() {
this.uuidList.length = 0;
this.uuidObjList.length = 0;
this.uuidPropList.length = 0;
n.clear(this._stillUseUrl);
};
0;
a.prototype.push = function(t, e, i, n) {
n && (this._stillUseUrl[this.uuidList.length] = !0);
this.uuidList.push(i);
this.uuidObjList.push(t);
this.uuidPropList.push(e);
};
(a.pool = new n.Pool(function(t) {
t.reset();
}, 10)).get = function() {
return this._get() || new a();
};
var c = (function() {
function t(t, e, i, n, r) {
this.result = t;
this.customEnv = n;
this.deserializedList = [];
this.deserializedData = null;
this._classFinder = i;
0;
this._idList = [];
this._idObjList = [];
this._idPropList = [];
}
function e(t) {
var e, i, n, r = t.deserializedList, s = t._idPropList, o = t._idList, a = t._idObjList;
t._classFinder && t._classFinder.onDereferenced;
for (e = 0; e < o.length; e++) {
i = s[e];
n = o[e];
a[e][i] = r[n];
}
}
var i = t.prototype;
i.deserialize = function(t) {
if (Array.isArray(t)) {
var i = t, n = i.length;
this.deserializedList.length = n;
for (var r = 0; r < n; r++) if (i[r]) {
this.deserializedList[r] = this._deserializeObject(i[r], !1);
}
this.deserializedData = n > 0 ? this.deserializedList[0] : [];
} else {
this.deserializedList.length = 1;
this.deserializedData = t ? this._deserializeObject(t, !1) : null;
this.deserializedList[0] = this.deserializedData;
}
e(this);
return this.deserializedData;
};
i._deserializeObject = function(t, e, i, r, s) {
var o, a = null, c = null, u = t.__type__;
if ("TypedArray" === u) {
var h = t.array;
a = new window[t.ctor](h.length);
for (var f = 0; f < h.length; ++f) a[f] = h[f];
return a;
}
if (u) {
if (!(c = this._classFinder(u, t, r, s))) {
this._classFinder === n._getClassById && cc.deserialize.reportMissingClass(u);
return null;
}
if ((a = new c())._deserialize) {
a._deserialize(t.content, this);
return a;
}
cc.Class._isCCClass(c) ? l(this, a, t, c, i) : this._deserializeTypedObject(a, t, c);
} else if (Array.isArray(t)) {
a = new Array(t.length);
for (var _ = 0; _ < t.length; _++) "object" == typeof (o = t[_]) && o ? this._deserializeObjField(a, o, "" + _, null, e) : a[_] = o;
} else {
a = {};
this._deserializePrimitiveObject(a, t);
}
return a;
};
i._deserializeObjField = function(t, e, i, n, r) {
var s = e.__id__;
if (void 0 === s) {
var o = e.__uuid__;
o ? this.result.push(t, i, o, r) : t[i] = this._deserializeObject(e, r);
} else {
var a = this.deserializedList[s];
if (a) t[i] = a; else {
this._idList.push(s);
this._idObjList.push(t);
this._idPropList.push(i);
}
}
};
i._deserializePrimitiveObject = function(t, e) {
for (var i in e) if (e.hasOwnProperty(i)) {
var n = e[i];
"object" != typeof n ? "__type__" !== i && (t[i] = n) : n ? this._deserializeObjField(t, n, i) : t[i] = null;
}
};
i._deserializeTypedObject = function(t, e, i) {
if (i !== cc.Vec2) if (i !== cc.Vec3) if (i !== cc.Color) if (i !== cc.Size) for (var n = r.DELIMETER + "default", o = r.getClassAttrs(i), a = i.__props__ || Object.keys(t), c = 0; c < a.length; c++) {
var l = a[c], u = e[l];
void 0 !== u && e.hasOwnProperty(l) || (u = s.getDefault(o[l + n]));
"object" != typeof u ? t[l] = u : u ? this._deserializeObjField(t, u, l) : t[l] = null;
} else {
t.width = e.width || 0;
t.height = e.height || 0;
} else {
t.r = e.r || 0;
t.g = e.g || 0;
t.b = e.b || 0;
var h = e.a;
t.a = void 0 === h ? 255 : h;
} else {
t.x = e.x || 0;
t.y = e.y || 0;
t.z = e.z || 0;
} else {
t.x = e.x || 0;
t.y = e.y || 0;
}
};
function a(t, e, i, r, s, o) {
if (e instanceof cc.ValueType) {
s || t.push("if(prop){");
var a = n.getClassName(e);
t.push("s._deserializeTypedObject(o" + i + ",prop," + a + ");");
s || t.push("}else o" + i + "=null;");
} else {
t.push("if(prop){");
t.push("s._deserializeObjField(o,prop," + r + ",null," + !!o + ");");
t.push("}else o" + i + "=null;");
}
}
var c = function(t, e) {
for (var i = r.DELIMETER + "type", c = (r.DELIMETER, r.DELIMETER + "default"), l = r.DELIMETER + "saveUrlAsAsset", u = r.DELIMETER + "formerlySerializedAs", h = r.getClassAttrs(e), f = e.__values__, _ = [ "var prop;" ], d = o.BUILTIN_CLASSID_RE.test(n._getClassId(e)), p = 0; p < f.length; p++) {
var m, y, v = f[p];
0;
if (s.IDENTIFIER_RE.test(v)) {
y = '"' + v + '"';
m = "." + v;
} else m = "[" + (y = s.escapeForJS(v)) + "]";
var g = m;
if (h[v + u]) {
var b = h[v + u];
g = s.IDENTIFIER_RE.test(b) ? "." + b : "[" + s.escapeForJS(b) + "]";
}
_.push("prop=d" + g + ";");
_.push('if(typeof (prop)!=="undefined"){');
var C = h[v + l], x = s.getDefault(h[v + c]);
if (d) {
var A, S = h[v + i];
if (void 0 === x && S) A = S instanceof r.PrimitiveType; else {
var w = typeof x;
A = "string" === w && !C || "number" === w || "boolean" === w;
}
A ? _.push("o" + m + "=prop;") : a(_, x, m, y, !0, C);
} else {
_.push('if(typeof (prop)!=="object"){o' + m + "=prop;}else{");
a(_, x, m, y, !1, C);
_.push("}");
}
_.push("}");
}
if (cc.js.isChildClassOf(e, cc._BaseNode) || cc.js.isChildClassOf(e, cc.Component)) {
_.push("d._id&&(o._id=d._id);");
}
if ("_$erialized" === f[f.length - 1]) {
_.push("o._$erialized=JSON.parse(JSON.stringify(d));");
_.push("s._deserializePrimitiveObject(o._$erialized,d);");
}
return Function("s", "o", "d", "k", "t", _.join(""));
};
function l(t, e, i, r, s) {
var o;
if (r.hasOwnProperty("__deserialize__")) o = r.__deserialize__; else {
o = c(t, r);
n.value(r, "__deserialize__", o, !0);
}
o(t, e, i, r, s);
0;
}
t.pool = new n.Pool(function(t) {
t.result = null;
t.customEnv = null;
t.deserializedList.length = 0;
t.deserializedData = null;
t._classFinder = null;
0;
t._idList.length = 0;
t._idObjList.length = 0;
t._idPropList.length = 0;
}, 1);
t.pool.get = function(e, i, n, r, s) {
var o = this._get();
if (o) {
o.result = e;
o.customEnv = r;
o._classFinder = n;
0;
return o;
}
return new t(e, i, n, r, s);
};
return t;
})();
cc.deserialize = function(t, e, i) {
var r = (i = i || {}).classFinder || n._getClassById, s = i.createAssetRefs || cc.sys.platform === cc.sys.EDITOR_CORE, o = i.customEnv, l = i.ignoreEditorOnly;
0;
"string" == typeof t && (t = JSON.parse(t));
var u = !e;
e = e || a.pool.get();
var h = c.pool.get(e, !1, r, o, l);
cc.game._isCloning = !0;
var f = h.deserialize(t);
cc.game._isCloning = !1;
c.pool.put(h);
s && e.assignAssetsBy(Editor.serialize.asAsset);
u && a.pool.put(e);
return f;
};
cc.deserialize.Details = a;
cc.deserialize.reportMissingClass = function(t) {
cc.warnID(5302, t);
};
}), {
"../utils/misc": 313,
"./CCClass": 230,
"./attribute": 242,
"./js": 250
} ],
246: [ (function(t, e, i) {
"use strict";
var n = ".";
function r(t) {
this.id = 0 | 998 * Math.random();
this.prefix = t ? t + n : "";
}
r.prototype.getNewId = function() {
return this.prefix + ++this.id;
};
r.global = new r("global");
e.exports = r;
}), {} ],
247: [ (function(t, e, i) {
"use strict";
t("./js");
t("./CCClass");
t("./CCClassDecorator");
t("./CCEnum");
t("./CCObject");
t("./callbacks-invoker");
t("./url");
t("./deserialize");
t("./instantiate");
t("./instantiate-jit");
t("./requiring-frame");
t("./CCSys");
t("./CCMacro");
t("./CCAssetLibrary");
t("./CCVisibleRect");
}), {
"./CCAssetLibrary": 229,
"./CCClass": 230,
"./CCClassDecorator": 231,
"./CCEnum": 232,
"./CCMacro": 235,
"./CCObject": 236,
"./CCSys": 239,
"./CCVisibleRect": 241,
"./callbacks-invoker": 243,
"./deserialize": 245,
"./instantiate": 249,
"./instantiate-jit": 248,
"./js": 250,
"./requiring-frame": 252,
"./url": 253
} ],
248: [ (function(t, e, i) {
"use strict";
var n = t("./CCObject"), r = n.Flags.Destroyed, s = n.Flags.PersistentMask, o = t("./attribute"), a = t("./js"), c = t("./CCClass"), l = t("./compiler"), u = o.DELIMETER + "default", h = c.IDENTIFIER_RE, f = c.escapeForJS, _ = "var ", d = "o", p = "t", m = {
"cc.Node": "cc.Node",
"cc.Sprite": "cc.Sprite",
"cc.Label": "cc.Label",
"cc.Button": "cc.Button",
"cc.Widget": "cc.Widget",
"cc.Animation": "cc.Animation",
"cc.ClickEvent": !1,
"cc.PrefabInfo": !1
};
try {
!Float32Array.name && (Float32Array.name = "Float32Array");
!Float64Array.name && (Float64Array.name = "Float64Array");
!Int8Array.name && (Int8Array.name = "Int8Array");
!Int16Array.name && (Int16Array.name = "Int16Array");
!Int32Array.name && (Int32Array.name = "Int32Array");
!Uint8Array.name && (Uint8Array.name = "Uint8Array");
!Uint16Array.name && (Uint16Array.name = "Uint16Array");
!Uint32Array.name && (Uint32Array.name = "Uint32Array");
} catch (t) {}
function y(t) {
if (t === Float32Array) return "Float32Array";
if (t === Float64Array) return "Float64Array";
if (t === Int8Array) return "Int8Array";
if (t === Int16Array) return "Int16Array";
if (t === Int32Array) return "Int32Array";
if (t === Uint8Array) return "Uint8Array";
if (t === Uint16Array) return "Uint16Array";
if (t === Uint32Array) return "Uint32Array";
throw new Error("Unknown TypedArray could not be instantiated: " + t);
}
function v(t, e) {
this.varName = t;
this.expression = e;
}
v.prototype.toString = function() {
return _ + this.varName + "=" + this.expression + ";";
};
function g(t, e) {
return e instanceof v ? new v(e.varName, t + e.expression) : t + e;
}
function b(t, e, i) {
if (Array.isArray(i)) {
i[0] = g(e, i[0]);
t.push(i);
} else t.push(g(e, i) + ";");
}
function C(t) {
this._exps = [];
this._targetExp = t;
}
C.prototype.append = function(t, e) {
this._exps.push([ t, e ]);
};
C.prototype.writeCode = function(t) {
var e;
if (this._exps.length > 1) {
t.push(p + "=" + this._targetExp + ";");
e = p;
} else {
if (1 !== this._exps.length) return;
e = this._targetExp;
}
for (var i = 0; i < this._exps.length; i++) {
var n = this._exps[i];
b(t, e + A(n[0]) + "=", n[1]);
}
};
C.pool = new a.Pool(function(t) {
t._exps.length = 0;
t._targetExp = null;
}, 1);
C.pool.get = function(t) {
var e = this._get() || new C();
e._targetExp = t;
return e;
};
function x(t, e) {
if ("function" == typeof t) try {
t = t();
} catch (t) {
return !1;
}
if (t === e) return !0;
if (t && e) {
if (t instanceof cc.ValueType && t.equals(e)) return !0;
if (Array.isArray(t) && Array.isArray(e) || t.constructor === Object && e.constructor === Object) try {
return Array.isArray(t) && Array.isArray(e) && 0 === t.length && 0 === e.length;
} catch (t) {}
}
return !1;
}
function A(t) {
return h.test(t) ? "." + t : "[" + f(t) + "]";
}
function S(t, e) {
this.parent = e;
this.objsToClear_iN$t = [];
this.codeArray = [];
this.objs = [];
this.funcs = [];
this.funcModuleCache = a.createMap();
a.mixin(this.funcModuleCache, m);
this.globalVariables = [];
this.globalVariableId = 0;
this.localVariableId = 0;
this.codeArray.push(_ + d + "," + p + ";", "if(R){", d + "=R;", "}else{", d + "=R=new " + this.getFuncModule(t.constructor, !0) + "();", "}");
a.value(t, "_iN$t", {
globalVar: "R"
}, !0);
this.objsToClear_iN$t.push(t);
this.enumerateObject(this.codeArray, t);
var i;
this.globalVariables.length > 0 && (i = _ + this.globalVariables.join(",") + ";");
var n = l.flattenCodeArray([ "return (function(R){", i || [], this.codeArray, "return o;", "})" ]);
this.result = Function("O", "F", n)(this.objs, this.funcs);
for (var r = 0, s = this.objsToClear_iN$t.length; r < s; ++r) this.objsToClear_iN$t[r]._iN$t = null;
this.objsToClear_iN$t.length = 0;
}
var w = S.prototype;
w.getFuncModule = function(t, e) {
var i = a.getClassName(t);
if (i) {
var n = this.funcModuleCache[i];
if (n) return n;
if (void 0 === n) {
var r = -1 !== i.indexOf(".");
if (r) try {
if (r = t === Function("return " + i)()) {
this.funcModuleCache[i] = i;
return i;
}
} catch (t) {}
}
}
var s = this.funcs.indexOf(t);
if (s < 0) {
s = this.funcs.length;
this.funcs.push(t);
}
var o = "F[" + s + "]";
e && (o = "(" + o + ")");
this.funcModuleCache[i] = o;
return o;
};
w.getObjRef = function(t) {
var e = this.objs.indexOf(t);
if (e < 0) {
e = this.objs.length;
this.objs.push(t);
}
return "O[" + e + "]";
};
w.setValueType = function(t, e, i, n) {
var r = C.pool.get(n), s = e.constructor.__props__;
s || (s = Object.keys(e));
for (var o = 0; o < s.length; o++) {
var a = s[o], c = i[a];
if (e[a] !== c) {
var l = this.enumerateField(i, a, c);
r.append(a, l);
}
}
r.writeCode(t);
C.pool.put(r);
};
w.enumerateCCClass = function(t, e, i) {
for (var n = i.__values__, r = o.getClassAttrs(i), s = 0; s < n.length; s++) {
var a = n[s], l = e[a], h = r[a + u];
if (!x(h, l)) if ("object" == typeof l && l instanceof cc.ValueType && (h = c.getDefault(h)) && h.constructor === l.constructor) {
var f = d + A(a);
this.setValueType(t, h, l, f);
} else this.setObjProp(t, e, a, l);
}
};
w.instantiateArray = function(t) {
if (0 === t.length) return "[]";
var e = "a" + ++this.localVariableId, i = [ new v(e, "new Array(" + t.length + ")") ];
a.value(t, "_iN$t", {
globalVar: "",
source: i
}, !0);
this.objsToClear_iN$t.push(t);
for (var n = 0; n < t.length; ++n) {
b(i, e + "[" + n + "]=", this.enumerateField(t, n, t[n]));
}
return i;
};
w.instantiateTypedArray = function(t) {
var e = t.constructor.name || y(t.constructor);
if (0 === t.length) return "new " + e;
var i = "a" + ++this.localVariableId, n = [ new v(i, "new " + e + "(" + t.length + ")") ];
t._iN$t = {
globalVar: "",
source: n
};
this.objsToClear_iN$t.push(t);
for (var r = 0; r < t.length; ++r) if (0 !== t[r]) {
b(n, i + "[" + r + "]=", t[r]);
}
return n;
};
w.enumerateField = function(t, e, i) {
if ("object" == typeof i && i) {
var r = i._iN$t;
if (r) {
var o = r.globalVar;
if (!o) {
o = r.globalVar = "v" + ++this.globalVariableId;
this.globalVariables.push(o);
var a = r.source[0];
r.source[0] = g(o + "=", a);
}
return o;
}
return ArrayBuffer.isView(i) ? this.instantiateTypedArray(i) : Array.isArray(i) ? this.instantiateArray(i) : this.instantiateObj(i);
}
if ("function" == typeof i) return this.getFuncModule(i);
if ("string" == typeof i) return f(i);
"_objFlags" === e && t instanceof n && (i &= s);
return i;
};
w.setObjProp = function(t, e, i, n) {
b(t, d + A(i) + "=", this.enumerateField(e, i, n));
};
w.enumerateObject = function(t, e) {
var i = e.constructor;
if (cc.Class._isCCClass(i)) this.enumerateCCClass(t, e, i); else for (var n in e) if (e.hasOwnProperty(n) && (95 !== n.charCodeAt(0) || 95 !== n.charCodeAt(1) || "__type__" === n)) {
var r = e[n];
"object" == typeof r && r && r === e._iN$t || this.setObjProp(t, e, n, r);
}
};
w.instantiateObj = function(t) {
if (t instanceof cc.ValueType) return c.getNewValueTypeCode(t);
if (t instanceof cc.Asset) return this.getObjRef(t);
if (t._objFlags & r) return null;
var e, i = t.constructor;
if (cc.Class._isCCClass(i)) {
if (this.parent) if (this.parent instanceof cc.Component) {
if (t instanceof cc._BaseNode || t instanceof cc.Component) return this.getObjRef(t);
} else if (this.parent instanceof cc._BaseNode) if (t instanceof cc._BaseNode) {
if (!t.isChildOf(this.parent)) return this.getObjRef(t);
} else if (t instanceof cc.Component && !t.node.isChildOf(this.parent)) return this.getObjRef(t);
e = new v(d, "new " + this.getFuncModule(i, !0) + "()");
} else if (i === Object) e = new v(d, "{}"); else {
if (i) return this.getObjRef(t);
e = new v(d, "Object.create(null)");
}
var n = [ e ];
a.value(t, "_iN$t", {
globalVar: "",
source: n
}, !0);
this.objsToClear_iN$t.push(t);
this.enumerateObject(n, t);
return [ "(function(){", n, "return o;})();" ];
};
e.exports = {
compile: function(t) {
return new S(t, t instanceof cc._BaseNode && t).result;
},
equalsToDefault: x
};
0;
}), {
"./CCClass": 230,
"./CCObject": 236,
"./attribute": 242,
"./compiler": 244,
"./js": 250
} ],
249: [ (function(t, e, i) {
"use strict";
var n = t("./CCObject"), r = t("../value-types/value-type"), s = n.Flags.Destroyed, o = n.Flags.PersistentMask, a = t("./utils").isDomNode, c = t("./js");
function l(t, e) {
if (!e) {
if ("object" != typeof t || Array.isArray(t)) {
0;
return null;
}
if (!t) {
0;
return null;
}
if (!cc.isValid(t)) {
0;
return null;
}
0;
}
var i;
if (t instanceof n) {
if (t._instantiate) {
cc.game._isCloning = !0;
i = t._instantiate();
cc.game._isCloning = !1;
return i;
}
if (t instanceof cc.Asset) {
0;
return null;
}
}
cc.game._isCloning = !0;
i = h(t);
cc.game._isCloning = !1;
return i;
}
var u = [];
function h(t, e) {
if (Array.isArray(t)) {
0;
return null;
}
if (a && a(t)) {
0;
return null;
}
var i;
if (t._iN$t) i = t._iN$t; else if (t.constructor) {
i = new (0, t.constructor)();
} else i = Object.create(null);
_(t, i, e);
for (var n = 0, r = u.length; n < r; ++n) u[n]._iN$t = null;
u.length = 0;
return i;
}
function f(t, e, i, n) {
for (var s = t.__values__, o = 0; o < s.length; o++) {
var a = s[o], c = e[a];
if ("object" == typeof c && c) {
var l = i[a];
l instanceof r && l.constructor === c.constructor ? l.set(c) : i[a] = c._iN$t || d(c, n);
} else i[a] = c;
}
}
function _(t, e, i) {
c.value(t, "_iN$t", e, !0);
u.push(t);
var r = t.constructor;
if (cc.Class._isCCClass(r)) f(r, t, e, i); else for (var s in t) if (t.hasOwnProperty(s) && (95 !== s.charCodeAt(0) || 95 !== s.charCodeAt(1) || "__type__" === s)) {
var a = t[s];
if ("object" == typeof a && a) {
if (a === e) continue;
e[s] = a._iN$t || d(a, i);
} else e[s] = a;
}
t instanceof n && (e._objFlags &= o);
}
function d(t, e) {
if (t instanceof r) return t.clone();
if (t instanceof cc.Asset) return t;
var i;
if (ArrayBuffer.isView(t)) {
var n = t.length;
i = new t.constructor(n);
t._iN$t = i;
u.push(t);
for (var o = 0; o < n; ++o) i[o] = t[o];
return i;
}
if (Array.isArray(t)) {
var a = t.length;
i = new Array(a);
c.value(t, "_iN$t", i, !0);
u.push(t);
for (var l = 0; l < a; ++l) {
var h = t[l];
i[l] = "object" == typeof h && h ? h._iN$t || d(h, e) : h;
}
return i;
}
if (t._objFlags & s) return null;
var f = t.constructor;
if (cc.Class._isCCClass(f)) {
if (e) if (e instanceof cc.Component) {
if (t instanceof cc._BaseNode || t instanceof cc.Component) return t;
} else if (e instanceof cc._BaseNode) if (t instanceof cc._BaseNode) {
if (!t.isChildOf(e)) return t;
} else if (t instanceof cc.Component && !t.node.isChildOf(e)) return t;
i = new f();
} else if (f === Object) i = {}; else {
if (f) return t;
i = Object.create(null);
}
_(t, i, e);
return i;
}
l._clone = h;
cc.instantiate = l;
e.exports = l;
}), {
"../value-types/value-type": 336,
"./CCObject": 236,
"./js": 250,
"./utils": 254
} ],
250: [ (function(t, e, i) {
"use strict";
var n = new (t("./id-generater"))("TmpCId.");
function r(t, e) {
for (;t; ) {
var i = Object.getOwnPropertyDescriptor(t, e);
if (i) return i;
t = Object.getPrototypeOf(t);
}
return null;
}
function s(t, e, i) {
var n = r(e, t);
Object.defineProperty(i, t, n);
}
var o = {
isNumber: function(t) {
return "number" == typeof t || t instanceof Number;
},
isString: function(t) {
return "string" == typeof t || t instanceof String;
},
addon: function(t) {
t = t || {};
for (var e = 1, i = arguments.length; e < i; e++) {
var n = arguments[e];
if (n) {
if ("object" != typeof n) {
cc.errorID(5402, n);
continue;
}
for (var r in n) r in t || s(r, n, t);
}
}
return t;
},
mixin: function(t) {
t = t || {};
for (var e = 1, i = arguments.length; e < i; e++) {
var n = arguments[e];
if (n) {
if ("object" != typeof n) {
cc.errorID(5403, n);
continue;
}
for (var r in n) s(r, n, t);
}
}
return t;
},
extend: function(t, e) {
0;
for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
t.prototype = Object.create(e.prototype, {
constructor: {
value: t,
writable: !0,
configurable: !0
}
});
return t;
},
getSuper: function(t) {
var e = t.prototype, i = e && Object.getPrototypeOf(e);
return i && i.constructor;
},
isChildClassOf: function(t, e) {
if (t && e) {
if ("function" != typeof t) return !1;
if ("function" != typeof e) {
0;
return !1;
}
if (t === e) return !0;
for (;;) {
if (!(t = o.getSuper(t))) return !1;
if (t === e) return !0;
}
}
return !1;
},
clear: function(t) {
for (var e = Object.keys(t), i = 0; i < e.length; i++) delete t[e[i]];
},
isEmptyObject: function(t) {
for (var e in t) return !1;
return !0;
},
getPropertyDescriptor: r
}, a = {
value: void 0,
enumerable: !1,
writable: !1,
configurable: !0
};
o.value = function(t, e, i, n, r) {
a.value = i;
a.writable = n;
a.enumerable = r;
Object.defineProperty(t, e, a);
a.value = void 0;
};
var c = {
get: null,
set: null,
enumerable: !1
};
o.getset = function(t, e, i, n, r, s) {
if ("function" != typeof n) {
r = n;
n = void 0;
}
c.get = i;
c.set = n;
c.enumerable = r;
c.configurable = s;
Object.defineProperty(t, e, c);
c.get = null;
c.set = null;
};
var l = {
get: null,
enumerable: !1,
configurable: !1
};
o.get = function(t, e, i, n, r) {
l.get = i;
l.enumerable = n;
l.configurable = r;
Object.defineProperty(t, e, l);
l.get = null;
};
var u = {
set: null,
enumerable: !1,
configurable: !1
};
o.set = function(t, e, i, n, r) {
u.set = i;
u.enumerable = n;
u.configurable = r;
Object.defineProperty(t, e, u);
u.set = null;
};
o.getClassName = function(t) {
if ("function" == typeof t) {
var e = t.prototype;
if (e && e.hasOwnProperty("__classname__") && e.__classname__) return e.__classname__;
var i = "";
t.name && (i = t.name);
if (t.toString) {
var n, r = t.toString();
(n = "[" === r.charAt(0) ? r.match(/\[\w+\s*(\w+)\]/) : r.match(/function\s*(\w+)/)) && 2 === n.length && (i = n[1]);
}
return "Object" !== i ? i : "";
}
return t && t.constructor ? o.getClassName(t.constructor) : "";
};
(function() {
var t = {}, e = {};
function i(t, e, i) {
o.getset(o, e, (function() {
return Object.assign({}, i);
}), (function(t) {
o.clear(i);
Object.assign(i, t);
}));
return function(e, n) {
n.prototype.hasOwnProperty(t) && delete i[n.prototype[t]];
o.value(n.prototype, t, e);
if (e) {
var r = i[e];
if (r && r !== n) {
var s = "A Class already exists with the same " + t + ' : "' + e + '".';
0;
cc.error(s);
} else i[e] = n;
}
};
}
o._setClassId = i("__cid__", "_registeredClassIds", t);
var r = i("__classname__", "_registeredClassNames", e);
o.setClassName = function(t, e) {
r(t, e);
if (!e.prototype.hasOwnProperty("__cid__")) {
var i = t || n.getNewId();
i && o._setClassId(i, e);
}
};
o.unregisterClass = function() {
for (var i = 0; i < arguments.length; i++) {
var n = arguments[i].prototype, r = n.__cid__;
r && delete t[r];
var s = n.__classname__;
s && delete e[s];
}
};
o._getClassById = function(e) {
return t[e];
};
o.getClassByName = function(t) {
return e[t];
};
o._getClassId = function(t, e) {
e = "undefined" == typeof e || e;
if ("function" == typeof t && t.prototype.hasOwnProperty("__cid__")) {
0;
return t.prototype.__cid__;
}
if (t && t.constructor) {
var i = t.constructor.prototype;
if (i && i.hasOwnProperty("__cid__")) {
0;
return t.__cid__;
}
}
return "";
};
})();
o.obsolete = function(t, e, i, n) {
var r = /([^.]+)$/, s = r.exec(e)[0], a = r.exec(i)[0];
function c() {
0;
return this[a];
}
n ? o.getset(t, s, c, (function(t) {
0;
this[a] = t;
})) : o.get(t, s, c);
};
o.obsoletes = function(t, e, i, n) {
for (var r in i) {
var s = i[r];
o.obsolete(t, e + "." + r, s, n);
}
};
var h = /(%d)|(%s)/, f = /%s/;
o.formatStr = function() {
var t = arguments.length;
if (0 === t) return "";
var e = arguments[0];
if (1 === t) return "" + e;
if ("string" == typeof e && h.test(e)) for (var i = 1; i < t; ++i) {
var n = arguments[i], r = "number" == typeof n ? h : f;
r.test(e) ? e = e.replace(r, n) : e += " " + n;
} else for (var s = 1; s < t; ++s) e += " " + arguments[s];
return e;
};
o.shiftArguments = function() {
for (var t = arguments.length - 1, e = new Array(t), i = 0; i < t; ++i) e[i] = arguments[i + 1];
return e;
};
o.createMap = function(t) {
var e = Object.create(null);
if (t) {
e["."] = !0;
e["/"] = !0;
delete e["."];
delete e["/"];
}
return e;
};
function _(t, e) {
t.splice(e, 1);
}
function d(t, e) {
var i = t.indexOf(e);
if (i >= 0) {
_(t, i);
return !0;
}
return !1;
}
var p = Array.prototype.indexOf;
o.array = {
remove: d,
fastRemove: function(t, e) {
var i = t.indexOf(e);
if (i >= 0) {
t[i] = t[t.length - 1];
--t.length;
}
},
removeAt: _,
fastRemoveAt: function(t, e) {
var i = t.length;
if (!(e < 0 || e >= i)) {
t[e] = t[i - 1];
t.length = i - 1;
}
},
contains: function(t, e) {
return t.indexOf(e) >= 0;
},
verifyType: function(t, e) {
if (t && t.length > 0) for (var i = 0; i < t.length; i++) if (!(t[i] instanceof e)) {
cc.logID(1300);
return !1;
}
return !0;
},
removeArray: function(t, e) {
for (var i = 0, n = e.length; i < n; i++) d(t, e[i]);
},
appendObjectsAt: function(t, e, i) {
t.splice.apply(t, [ i, 0 ].concat(e));
return t;
},
copy: function(t) {
var e, i = t.length, n = new Array(i);
for (e = 0; e < i; e += 1) n[e] = t[e];
return n;
},
indexOf: p,
MutableForwardIterator: t("../utils/mutable-forward-iterator")
};
function m(t, e) {
if (void 0 === e) {
e = t;
t = null;
}
this.get = null;
this.count = 0;
this._pool = new Array(e);
this._cleanup = t;
}
m.prototype._get = function() {
if (this.count > 0) {
--this.count;
var t = this._pool[this.count];
this._pool[this.count] = null;
return t;
}
return null;
};
m.prototype.put = function(t) {
var e = this._pool;
if (this.count < e.length) {
if (this._cleanup && !1 === this._cleanup(t)) return;
e[this.count] = t;
++this.count;
}
};
m.prototype.resize = function(t) {
if (t >= 0) {
this._pool.length = t;
this.count > t && (this.count = t);
}
};
o.Pool = m;
cc.js = o;
e.exports = o;
}), {
"../utils/mutable-forward-iterator": 314,
"./id-generater": 246
} ],
251: [ (function(t, e, i) {
"use strict";
var n = t("./js"), r = t("./attribute"), s = {
url: {
canUsedInGet: !0
},
default: {},
serializable: {},
editorOnly: {},
formerlySerializedAs: {}
};
function o(t, e, i, n) {
if (t.get || t.set) 0; else if (t.hasOwnProperty("default")) {
var r = "_N$" + e;
t.get = function() {
return this[r];
};
t.set = function(t) {
var e = this[r];
this[r] = t;
i.call(this, e);
};
0;
var o = {};
n[r] = o;
for (var a in s) {
var c = s[a];
if (t.hasOwnProperty(a)) {
o[a] = t[a];
c.canUsedInGet || delete t[a];
}
}
} else 0;
}
function a(t, e, i, n) {
Array.isArray(n) && n.length > 0 && (n = n[0]);
0;
t.type = n;
}
function c(t, e, i, n) {
if (Array.isArray(e)) {
if (!(e.length > 0)) return cc.errorID(5508, i, n);
if (cc.RawAsset.isRawAssetType(e[0])) {
t.url = e[0];
delete t.type;
return;
}
t.type = e = e[0];
}
if ("function" == typeof e) if (e === String) {
t.type = cc.String;
0;
} else if (e === Boolean) {
t.type = cc.Boolean;
0;
} else if (e === Number) {
t.type = cc.Float;
0;
} else 0; else 0;
}
function l(t, e, i, n) {
var r = t ? {
_short: !0
} : {
_short: !0,
default: e
};
i && (n ? r.url = i : r.type = i);
return r;
}
i.getFullFormOfProperty = function(t, e, i, s) {
if (t && t.constructor === Object) return null;
if (Array.isArray(t) && t.length > 0) {
t[0];
0;
return l(e, [], t);
}
if ("function" == typeof t) {
var o = t;
if (!cc.RawAsset.isRawAssetType(o)) {
if (!cc.RawAsset.wasRawAssetType(o)) return l(e, n.isChildClassOf(o, cc.ValueType) ? new o() : null, o);
0;
}
return l(e, "", o, !0);
}
return t instanceof r.PrimitiveType ? l(e, t.default) : l(e, t);
};
i.preprocessAttrs = function(t, e, n, r) {
for (var s in t) {
var l = t[s], u = i.getFullFormOfProperty(l, !1, s, e);
u && (l = t[s] = u);
if (l) {
var h = l.notify;
h && o(l, s, h, t);
"type" in l && c(l, l.type, e, s);
"url" in l && a(l, 0, 0, l.url);
"type" in l && l.type;
}
}
};
i.validateMethodWithProps = function(t, e, i, n, r) {
0;
if ("function" != typeof t && null !== t) {
return !1;
}
0;
return !0;
};
}), {
"./CCClass": 230,
"./attribute": 242,
"./js": 250
} ],
252: [ (function(t, e, i) {
"use strict";
var n = [];
cc._RF = {
push: function(t, e, i) {
if (void 0 === i) {
i = e;
e = "";
}
n.push({
uuid: e,
script: i,
module: t,
exports: t.exports,
beh: null
});
},
pop: function() {
var t = n.pop(), e = t.module, i = e.exports;
if (i === t.exports) {
for (var r in i) return;
e.exports = i = t.cls;
}
},
peek: function() {
return n[n.length - 1];
}
};
0;
}), {} ],
253: [ (function(t, e, i) {
"use strict";
cc.url = {
_rawAssets: "",
normalize: function(t) {
t && (46 === t.charCodeAt(0) && 47 === t.charCodeAt(1) ? t = t.slice(2) : 47 === t.charCodeAt(0) && (t = t.slice(1)));
return t;
},
raw: function(t) {
0;
if ((t = this.normalize(t)).startsWith("resources/")) {
var e = cc.loader._getResUuid(t.slice(10), cc.Asset, null, !0);
if (e) return cc.AssetLibrary.getLibUrlNoExt(e, !0) + cc.path.extname(t);
} else cc.errorID(7002, t);
return this._rawAssets + t;
},
_init: function(t) {
this._rawAssets = cc.path.stripSep(t) + "/";
}
};
e.exports = cc.url;
}), {} ],
254: [ (function(t, e, i) {
"use strict";
t("./js");
e.exports = {
contains: function(t, e) {
if ("function" == typeof t.contains) return t.contains(e);
if ("function" == typeof t.compareDocumentPosition) return !!(16 & t.compareDocumentPosition(e));
var i = e.parentNode;
if (i) do {
if (i === t) return !0;
i = i.parentNode;
} while (null !== i);
return !1;
},
isDomNode: "object" == typeof window && ("function" == typeof Node ? function(t) {
return t instanceof Node;
} : function(t) {
return t && "object" == typeof t && "number" == typeof t.nodeType && "string" == typeof t.nodeName;
}),
callInNextTick: function(t, e, i) {
t && setTimeout((function() {
t(e, i);
}), 0);
}
};
0;
0;
}), {
"./js": 250
} ],
255: [ (function(t, e, i) {
"use strict";
t("./platform/js");
t("./value-types");
t("./utils");
t("./platform/CCInputManager");
t("./platform/CCInputExtension");
t("./event");
t("./platform/CCSys");
t("./platform/CCMacro");
t("./load-pipeline");
t("./CCDirector");
t("./renderer");
t("./platform/CCView");
t("./platform/CCScreen");
t("./CCScheduler");
t("./event-manager");
}), {
"./CCDirector": 70,
"./CCScheduler": 75,
"./event": 158,
"./event-manager": 154,
"./load-pipeline": 185,
"./platform/CCInputExtension": 233,
"./platform/CCInputManager": 234,
"./platform/CCMacro": 235,
"./platform/CCScreen": 238,
"./platform/CCSys": 239,
"./platform/CCView": 240,
"./platform/js": 250,
"./renderer": 262,
"./utils": 311,
"./value-types": 328
} ],
256: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = o(t("./assembler")), r = o(t("./utils/dynamic-atlas/manager")), s = o(t("./webgl/render-data"));
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
function a(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function c(t, e, i) {
e && a(t.prototype, e);
i && a(t, i);
return t;
}
function l(t) {
return function() {
var e, i = _(t);
if (f()) {
var n = _(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return u(this, e);
};
}
function u(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? h(t) : e;
}
function h(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function f() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function _(t) {
return (_ = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function d(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var p = (function(t) {
d(e, t);
l(e);
function e() {
var e;
(e = t.call(this) || this)._renderData = new s.default();
e._renderData.init(h(e));
e.initData();
e.initLocal();
return e;
}
var i = e.prototype;
i.initData = function() {
this._renderData.createQuadData(0, this.verticesFloats, this.indicesCount);
};
i.initLocal = function() {
this._local = [];
this._local.length = 4;
};
i.updateColor = function(t, e) {
var i = this._renderData.uintVDatas[0];
if (i) {
e = e || t.node.color._val;
for (var n = this.floatsPerVert, r = this.colorOffset, s = i.length; r < s; r += n) i[r] = e;
}
};
i.getBuffer = function() {
return cc.renderer._handle._meshBuffer;
};
i.updateWorldVerts = function(t) {
var e = this._local, i = this._renderData.vDatas[0], n = t.node._worldMatrix.m, r = n[0], s = n[1], o = n[4], a = n[5], c = n[12], l = n[13], u = e[0], h = e[2], f = e[1], _ = e[3];
if (1 === r && 0 === s && 0 === o && 1 === a) {
i[0] = u + c;
i[1] = f + l;
i[5] = h + c;
i[6] = f + l;
i[10] = u + c;
i[11] = _ + l;
i[15] = h + c;
i[16] = _ + l;
} else {
var d = r * u, p = r * h, m = s * u, y = s * h, v = o * f, g = o * _, b = a * f, C = a * _;
i[0] = d + v + c;
i[1] = m + b + l;
i[5] = p + v + c;
i[6] = y + b + l;
i[10] = d + g + c;
i[11] = m + C + l;
i[15] = p + g + c;
i[16] = y + C + l;
}
};
i.fillBuffers = function(t, e) {
e.worldMatDirty && this.updateWorldVerts(t);
var i = this._renderData, n = i.vDatas[0], r = i.iDatas[0], s = this.getBuffer(e), o = s.request(this.verticesCount, this.indicesCount), a = o.byteOffset >> 2, c = s._vData;
n.length + a > c.length ? c.set(n.subarray(0, c.length - a), a) : c.set(n, a);
for (var l = s._iData, u = o.indiceOffset, h = o.vertexOffset, f = 0, _ = r.length; f < _; f++) l[u++] = h + r[f];
};
i.packToDynamicAtlas = function(t, e) {
0;
if (!e._original && r.default && e._texture.packable) {
var i = r.default.insertSpriteFrame(e);
i && e._setDynamicAtlasFrame(i);
}
var n = t._materials[0];
if (n && n.getProperty("texture") !== e._texture) {
t._vertsDirty = !0;
t._updateMaterial();
}
};
c(e, [ {
key: "verticesFloats",
get: function() {
return this.verticesCount * this.floatsPerVert;
}
} ]);
return e;
})(n.default);
i.default = p;
cc.js.addon(p.prototype, {
floatsPerVert: 5,
verticesCount: 4,
indicesCount: 6,
uvOffset: 2,
colorOffset: 4
});
cc.Assembler2D = p;
e.exports = i.default;
}), {
"./assembler": 259,
"./utils/dynamic-atlas/manager": 265,
"./webgl/render-data": 300
} ],
257: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("./webgl/vertex-format"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../value-types/vec3"));
for (var s = [], o = 0; o < 4; o++) s.push(cc.v3());
var a = {
floatsPerVert: 6,
uvOffset: 3,
colorOffset: 5,
getBuffer: function(t) {
return t._meshBuffer3D;
},
getVfmt: function() {
return n.vfmt3D;
},
updateWorldVerts: function(t) {
var e = t.node._worldMatrix, i = this._local, n = this._renderData.vDatas[0];
r.default.set(s[0], i[0], i[1], 0);
r.default.set(s[1], i[2], i[1], 0);
r.default.set(s[2], i[0], i[3], 0);
r.default.set(s[3], i[2], i[3], 0);
for (var o = this.floatsPerVert, a = 0; a < 4; a++) {
var c = s[a];
r.default.transformMat4(c, c, e);
var l = o * a;
n[l] = c.x;
n[l + 1] = c.y;
n[l + 2] = c.z;
}
}
};
cc.Assembler3D = a;
var c = a;
i.default = c;
e.exports = i.default;
}), {
"../value-types/vec3": 338,
"./webgl/vertex-format": 301
} ],
258: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../utils/pool"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = 0;
function h(t) {
Object.getOwnPropertyDescriptor(t, "__assemblerId__") || (t.__assemblerId__ = ++u);
return t.__assemblerId__;
}
var f = new (function(t) {
l(e, t);
r(e);
function e() {
for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++) n[r] = arguments[r];
(e = t.call.apply(t, [ this ].concat(n)) || this)._pool = {};
return e;
}
var i = e.prototype;
i.put = function(t) {
if (t) if (this.enabled) {
var e = h(t.constructor), i = this._pool;
i[e] || (i[e] = []);
if (!(this.count > this.maxSize)) {
this._clean(t);
i[e].push(t);
this.count++;
}
} else t.destroy && t.destroy();
};
i.get = function(t) {
var e;
if (this.enabled) {
var i = this._pool, n = h(t);
e = i[n] && i[n].pop();
}
e ? this.count-- : e = new t();
return e;
};
i.clear = function() {
var t = this._pool;
for (var e in t) {
var i = t[e];
if (i) for (var n = 0; n < i.length; n++) i[n].destroy && i[n].destroy();
}
this._pool = {};
this.count = 0;
};
i._clean = function(t) {
t.reset();
t._renderComp = null;
};
return e;
}(n.default))();
n.default.register("assembler", f);
var _ = f;
i.default = _;
e.exports = i.default;
}), {
"../utils/pool": 315
} ],
259: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("./webgl/vertex-format"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./assembler-pool"));
var s = (function() {
function t() {
this._extendNative && this._extendNative();
}
var e = t.prototype;
e.init = function(t) {
this._renderComp = t;
};
e.updateRenderData = function(t) {};
e.fillBuffers = function(t, e) {};
e.getVfmt = function() {
return n.vfmtPosUvColor;
};
return t;
})();
i.default = s;
s.register = function(t, e) {
t.__assembler__ = e;
};
s.init = function(t) {
for (var e = t.constructor, i = e.__assembler__; !i; ) {
if (!(e = e.$super)) {
cc.warn("Can not find assembler for render component : [" + cc.js.getClassName(t) + "]");
return;
}
i = e.__assembler__;
}
i.getConstructor && (i = i.getConstructor(t));
if (!t._assembler || t._assembler.constructor !== i) {
var n = r.default.get(i);
n.init(t);
t._assembler = n;
}
};
cc.Assembler = s;
e.exports = i.default;
}), {
"./assembler-pool": 258,
"./webgl/vertex-format": 301
} ],
260: [ (function(t, e, i) {
"use strict";
var n = function(t) {
var e;
try {
e = t.getContext("2d");
} catch (t) {
console.error(t);
return;
}
this._canvas = t;
this._ctx = e;
this._caps = {};
this._stats = {
drawcalls: 0
};
this._vx = this._vy = this._vw = this._vh = 0;
this._sx = this._sy = this._sw = this._sh = 0;
};
n.prototype._restoreTexture = function(t) {};
n.prototype.setViewport = function(t, e, i, n) {
if (this._vx !== t || this._vy !== e || this._vw !== i || this._vh !== n) {
this._vx = t;
this._vy = e;
this._vw = i;
this._vh = n;
}
};
n.prototype.setScissor = function(t, e, i, n) {
if (this._sx !== t || this._sy !== e || this._sw !== i || this._sh !== n) {
this._sx = t;
this._sy = e;
this._sw = i;
this._sh = n;
}
};
n.prototype.clear = function(t) {
var e = this._ctx;
e.clearRect(this._vx, this._vy, this._vw, this._vh);
if (t && (0 !== t[0] || 0 !== t[1] || 0 !== t[2])) {
e.fillStyle = "rgb(" + t[0] + "," + t[1] + "," + t[2] + ")";
e.globalAlpha = t[3];
e.fillRect(this._vx, this._vy, this._vw, this._vh);
}
};
n.prototype.resetDrawCalls = function() {
this._stats.drawcalls = 0;
};
n.prototype.getDrawCalls = function() {
return this._stats.drawcalls;
};
e.exports = n;
}), {} ],
261: [ (function(t, e, i) {
"use strict";
var n = function(t, e) {
this._device = t;
this._width = 4;
this._height = 4;
this._image = null;
if (e) {
void 0 !== e.width && (this._width = e.width);
void 0 !== e.height && (this._height = e.height);
this.updateImage(e);
}
};
n.prototype.update = function(t) {
this.updateImage(t);
};
n.prototype.updateImage = function(t) {
if (t.images && t.images[0]) {
var e = t.images[0];
e && e !== this._image && (this._image = e);
}
};
n.prototype.destroy = function() {
this._image = null;
};
e.exports = n;
}), {} ],
262: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = o(t("../../renderer/gfx")), r = o(t("../../renderer/core/input-assembler")), s = o(t("../../renderer/core/pass"));
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
function a(t) {
return {
defaultTexture: new n.default.Texture2D(t, {
images: [],
width: 128,
height: 128,
wrapS: n.default.WRAP_REPEAT,
wrapT: n.default.WRAP_REPEAT,
format: n.default.TEXTURE_FMT_RGB8,
mipmap: !1
}),
programTemplates: [],
programChunks: {}
};
}
var c = cc.renderer = {
Texture2D: null,
InputAssembler: r.default,
Pass: s.default,
renderEngine: null,
canvas: null,
device: null,
scene: null,
drawCalls: 0,
_handle: null,
_cameraNode: null,
_camera: null,
_forward: null,
_flow: null,
initWebGL: function(e, i) {
t("./webgl/assemblers");
t("./webgl/model-batcher");
this.Texture2D = n.default.Texture2D;
this.canvas = e;
this._flow = cc.RenderFlow;
this.device = n.default.Device.getInstance();
this.scene = new renderer.Scene();
var r = a(this.device);
this._forward = new renderer.ForwardRenderer(this.device, r);
var s = new renderer.RenderFlow(this.device, this.scene, this._forward);
this._flow.init(s);
},
initCanvas: function(e) {
var i = t("./canvas"), n = t("./canvas/Texture2D"), r = t("./canvas/Device");
this.Device = r;
this.Texture2D = n;
this.canvas = e;
this.device = new r(e);
this._camera = {
a: 1,
b: 0,
c: 0,
d: 1,
tx: 0,
ty: 0
};
this._handle = new i.RenderComponentHandle(this.device, this._camera);
this._forward = new i.ForwardRenderer();
this._flow = cc.RenderFlow;
this._flow.init(this._handle, this._forward);
},
updateCameraViewport: function() {
if (cc.director) {
var t = cc.director.getScene();
t && t.setScale(1, 1, 1);
}
if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) {
var e = cc.view.getViewportRect();
this.device.setViewport(e.x, e.y, e.width, e.height);
this._camera.a = cc.view.getScaleX();
this._camera.d = cc.view.getScaleY();
this._camera.tx = e.x;
this._camera.ty = e.y + e.height;
}
},
render: function(t, e) {
this.device.resetDrawCalls();
if (t) {
this._flow.render(t, e);
this.drawCalls = this.device.getDrawCalls();
}
},
clear: function() {
this._handle.reset();
this._forward.clear();
}
};
i.default = c;
e.exports = i.default;
}), {
"../../renderer/core/input-assembler": 350,
"../../renderer/core/pass": 351,
"../../renderer/gfx": 354,
"../../renderer/renderers/forward-renderer": void 0,
"../../renderer/scene/scene": void 0,
"./canvas": void 0,
"./canvas/Device": 260,
"./canvas/Texture2D": 261,
"./webgl/assemblers": 274,
"./webgl/model-batcher": void 0
} ],
263: [ (function(t, e, i) {
"use strict";
var n, r, s = 0, o = 1 << s++, a = 1 << s++, c = 1 << s++, l = 1 << s++, u = c | l, h = 1 << s++, f = 1 << s++, _ = 1 << s++, d = f | _, p = 1 << s++, m = 1 << s++, y = 1 << s++, v = 1 << s++, g = 0;
function b() {
this._func = T;
this._next = null;
}
var C = b.prototype;
C._doNothing = function() {};
C._localTransform = function(t) {
t._updateLocalMatrix();
t._renderFlag &= ~c;
this._next._func(t);
};
C._worldTransform = function(t) {
n.worldMatDirty++;
var e = t._matrix, i = t._trs, r = e.m;
r[12] = i[0];
r[13] = i[1];
r[14] = i[2];
t._mulMat(t._worldMatrix, t._parent._worldMatrix, e);
t._renderFlag &= ~l;
this._next._func(t);
n.worldMatDirty--;
};
C._opacity = function(t) {
n.parentOpacityDirty++;
t._renderFlag &= ~f;
this._next._func(t);
n.parentOpacityDirty--;
};
C._color = function(t) {
var e = t._renderComponent;
e && e._updateColor();
t._renderFlag &= ~_;
this._next._func(t);
};
C._updateRenderData = function(t) {
var e = t._renderComponent;
e._assembler.updateRenderData(e);
t._renderFlag &= ~h;
this._next._func(t);
};
C._render = function(t) {
var e = t._renderComponent;
e._checkBacth(n, t._cullingMask);
e._assembler.fillBuffers(e, n);
this._next._func(t);
};
C._children = function(t) {
for (var e = g, i = n, r = i.parentOpacity, s = i.parentOpacity *= t._opacity / 255, o = (i.worldMatDirty ? l : 0) | (i.parentOpacityDirty ? d : 0), a = t._children, c = 0, u = a.length; c < u; c++) {
var h = a[c];
h._renderFlag |= o;
if (h._activeInHierarchy && 0 !== h._opacity) {
g = h._cullingMask = 0 === h.groupIndex ? e : 1 << h.groupIndex;
var f = h._color._val;
h._color._fastSetA(h._opacity * s);
A[h._renderFlag]._func(h);
h._color._val = f;
}
}
i.parentOpacity = r;
this._next._func(t);
};
C._postRender = function(t) {
var e = t._renderComponent;
e._checkBacth(n, t._cullingMask);
e._assembler.postFillBuffers(e, n);
this._next._func(t);
};
var x = new b();
x._func = x._doNothing;
x._next = x;
var A = {};
function S(t, e) {
var i = new b();
i._next = e || x;
switch (t) {
case o:
case a:
i._func = i._doNothing;
break;

case c:
i._func = i._localTransform;
break;

case l:
i._func = i._worldTransform;
break;

case f:
i._func = i._opacity;
break;

case _:
i._func = i._color;
break;

case h:
i._func = i._updateRenderData;
break;

case p:
i._func = i._render;
break;

case m:
i._func = i._children;
break;

case y:
i._func = i._postRender;
}
return i;
}
function w(t) {
for (var e = null, i = v; i > 0; ) {
i & t && (e = S(i, e));
i >>= 1;
}
return e;
}
function T(t) {
var e = t._renderFlag;
(A[e] = w(e))._func(t);
}
b.flows = A;
b.createFlow = S;
var E = [];
b.registerValidate = function(t) {
if (!t._inValidateList) {
E.push(t);
t._inValidateList = !0;
}
};
b.validateRenderers = function() {
for (var t = 0, e = E.length; t < e; t++) {
var i = E[t];
if (i.isValid) {
i.enabledInHierarchy ? i._validateRender() : i.disableRender();
i._inValidateList = !1;
}
}
E.length = 0;
};
b.visitRootNode = function(t) {
b.validateRenderers();
g = 1 << t.groupIndex;
if (t._renderFlag & l) {
n.worldMatDirty++;
t._calculWorldMatrix();
t._renderFlag &= ~l;
A[t._renderFlag]._func(t);
n.worldMatDirty--;
} else A[t._renderFlag]._func(t);
};
b.render = function(t, e) {
n.reset();
n.walking = !0;
b.visitRootNode(t);
n.terminate();
n.walking = !1;
r.render(n._renderScene, e);
};
b.init = function(t, e) {
n = t;
r = e;
A[0] = x;
for (var i = 1; i < v; i++) A[i] = new b();
};
b.getBachther = function() {
return n;
};
b.FLAG_DONOTHING = o;
b.FLAG_BREAK_FLOW = a;
b.FLAG_LOCAL_TRANSFORM = c;
b.FLAG_WORLD_TRANSFORM = l;
b.FLAG_TRANSFORM = u;
b.FLAG_OPACITY = f;
b.FLAG_COLOR = _;
b.FLAG_OPACITY_COLOR = d;
b.FLAG_UPDATE_RENDER_DATA = h;
b.FLAG_RENDER = p;
b.FLAG_CHILDREN = m;
b.FLAG_POST_RENDER = y;
b.FLAG_FINAL = v;
e.exports = cc.RenderFlow = b;
}), {} ],
264: [ (function(t, e, i) {
"use strict";
var n = t("../../../assets/CCRenderTexture"), r = 2;
function s(t, e) {
var i = new n();
i.initWithSize(t, e);
i.update();
this._texture = i;
this._x = r;
this._y = r;
this._nexty = r;
this._width = t;
this._height = e;
this._innerTextureInfos = {};
this._innerSpriteFrames = [];
this._count = 0;
}
s.DEFAULT_HASH = new n()._getHash();
cc.js.mixin(s.prototype, {
insertSpriteFrame: function(t) {
var e = t._rect, i = t._texture, n = this._innerTextureInfos[i._id], s = e.x, o = e.y;
if (n) {
s += n.x;
o += n.y;
} else {
var a = i.width, c = i.height;
if (this._x + a + r > this._width) {
this._x = r;
this._y = this._nexty;
}
this._y + c + r > this._nexty && (this._nexty = this._y + c + r);
if (this._nexty > this._height) return null;
if (cc.dynamicAtlasManager.textureBleeding) {
if (a <= 8 || c <= 8) {
this._texture.drawTextureAt(i, this._x - 1, this._y - 1);
this._texture.drawTextureAt(i, this._x - 1, this._y + 1);
this._texture.drawTextureAt(i, this._x + 1, this._y - 1);
this._texture.drawTextureAt(i, this._x + 1, this._y + 1);
}
this._texture.drawTextureAt(i, this._x - 1, this._y);
this._texture.drawTextureAt(i, this._x + 1, this._y);
this._texture.drawTextureAt(i, this._x, this._y - 1);
this._texture.drawTextureAt(i, this._x, this._y + 1);
}
this._texture.drawTextureAt(i, this._x, this._y);
this._innerTextureInfos[i._id] = {
x: this._x,
y: this._y,
texture: i
};
this._count++;
s += this._x;
o += this._y;
this._x += a + r;
this._dirty = !0;
}
var l = {
x: s,
y: o,
texture: this._texture
};
this._innerSpriteFrames.push(t);
return l;
},
update: function() {
if (this._dirty) {
this._texture.update();
this._dirty = !1;
}
},
deleteInnerTexture: function(t) {
if (t && this._innerTextureInfos[t._id]) {
delete this._innerTextureInfos[t._id];
this._count--;
}
},
isEmpty: function() {
return this._count <= 0;
},
reset: function() {
this._x = r;
this._y = r;
this._nexty = r;
for (var t = this._innerSpriteFrames, e = 0, i = t.length; e < i; e++) {
var n = t[e];
n.isValid && n._resetDynamicAtlasFrame();
}
this._innerSpriteFrames.length = 0;
this._innerTextureInfos = {};
},
destroy: function() {
this.reset();
this._texture.destroy();
}
});
e.exports = s;
}), {
"../../../assets/CCRenderTexture": 85
} ],
265: [ (function(t, e, i) {
"use strict";
var n = t("./atlas"), r = [], s = -1, o = 5, a = 2048, c = 512, l = !0;
function u() {
var t = r[++s];
if (!t) {
t = new n(a, a);
r.push(t);
}
return t;
}
function h() {
_.reset();
}
var f = !1, _ = {
Atlas: n,
get enabled() {
return f;
},
set enabled(t) {
if (f !== t) {
if (t) {
this.reset();
cc.director.on(cc.Director.EVENT_BEFORE_SCENE_LAUNCH, h);
} else cc.director.off(cc.Director.EVENT_BEFORE_SCENE_LAUNCH, h);
f = t;
}
},
get maxAtlasCount() {
return o;
},
set maxAtlasCount(t) {
o = t;
},
get textureBleeding() {
return l;
},
set textureBleeding(t) {
l = t;
},
get textureSize() {
return a;
},
set textureSize(t) {
a = t;
},
get maxFrameSize() {
return c;
},
set maxFrameSize(t) {
c = t;
},
insertSpriteFrame: function(t) {
0;
if (!f || s === o || !t || t._original) return null;
if (!t._texture.packable) return null;
var e = r[s];
e || (e = u());
var i = e.insertSpriteFrame(t);
return i || s === o ? i : (e = u()).insertSpriteFrame(t);
},
reset: function() {
for (var t = 0, e = r.length; t < e; t++) r[t].destroy();
r.length = 0;
s = -1;
},
deleteAtlasSpriteFrame: function(t) {
if (t._original) {
var e = t._original._texture;
this.deleteAtlasTexture(e);
}
},
deleteAtlasTexture: function(t) {
if (t) for (var e = r.length - 1; e >= 0; e--) {
r[e].deleteInnerTexture(t);
if (r[e].isEmpty()) {
r[e].destroy();
r.splice(e, 1);
s--;
}
}
},
showDebug: !1,
update: function() {
if (this.enabled) for (var t = 0; t <= s; t++) r[t].update();
}
};
e.exports = cc.dynamicAtlasManager = _;
}), {
"./atlas": 264
} ],
266: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../assembler-2d"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = t("../../../utils/text-utils"), h = t("../../../platform/CCMacro"), f = t("../../../components/CCLabel").Overflow, _ = t("../utils").shareLabelInfo, d = function() {
this.char = "";
this.valid = !0;
this.x = 0;
this.y = 0;
this.line = 0;
this.hash = "";
}, p = cc.rect(), m = null, y = [], v = [], g = [], b = [], C = null, x = 0, A = 0, S = 0, w = 0, T = 0, E = 1, M = null, B = cc.size(), D = "", R = 0, I = 0, P = 0, O = 0, L = 0, V = 0, N = 0, F = !1, z = 0, k = 0, G = 0, U = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.updateRenderData = function(t) {
if (t._vertsDirty && m !== t) {
m = t;
this._reserveQuads(t, t.string.toString().length);
this._updateFontFamily(t);
this._updateProperties(t);
this._updateLabelInfo(t);
this._updateContent();
this.updateWorldVerts(t);
m._actualFontSize = R;
m.node.setContentSize(B);
m._vertsDirty = !1;
m = null;
this._resetProperties();
}
};
i._updateFontScale = function() {
E = R / I;
};
i._updateFontFamily = function(t) {
var e = t.font;
M = e.spriteFrame;
C = e._fntConfig;
_.fontAtlas = e._fontDefDictionary;
this.packToDynamicAtlas(t, M);
};
i._updateLabelInfo = function() {
_.hash = "";
_.margin = 0;
};
i._updateProperties = function(t) {
D = t.string.toString();
R = t.fontSize;
I = C ? C.fontSize : t.fontSize;
P = t.horizontalAlign;
O = t.verticalAlign;
L = t.spacingX;
N = t.overflow;
V = t._lineHeight;
B.width = t.node.width;
B.height = t.node.height;
if (N === f.NONE) {
F = !1;
B.width += 2 * _.margin;
B.height += 2 * _.margin;
} else if (N === f.RESIZE_HEIGHT) {
F = !0;
B.height += 2 * _.margin;
} else F = t.enableWrapText;
_.lineHeight = V;
_.fontSize = R;
this._setupBMFontOverflowMetrics();
};
i._resetProperties = function() {
C = null;
M = null;
_.hash = "";
_.margin = 0;
};
i._updateContent = function() {
this._updateFontScale();
this._computeHorizontalKerningForText();
this._alignText();
};
i._computeHorizontalKerningForText = function() {
for (var t = D, e = t.length, i = C.kerningDict, n = y, r = -1, s = 0; s < e; ++s) {
var o = t.charCodeAt(s), a = i[r << 16 | 65535 & o] || 0;
n[s] = s < e - 1 ? a : 0;
r = o;
}
};
i._multilineTextWrap = function(t) {
for (var e = D.length, i = 0, n = 0, r = 0, s = 0, o = 0, a = 0, c = 0, l = null, h = cc.v2(0, 0), d = 0; d < e; ) {
var p = D.charAt(d);
if ("\n" !== p) {
for (var m = t(D, d, e), v = a, b = c, S = o, M = n, R = !1, I = 0; I < m; ++I) {
var P = d + I;
if ("\r" !== (p = D.charAt(P))) if (l = _.fontAtlas.getLetterDefinitionForChar(p, _)) {
var O = M + l.offsetX * E - _.margin;
if (F && G > 0 && n > 0 && O + l.w * E > G && !u.isUnicodeSpace(p)) {
g.push(o);
o = 0;
i++;
n = 0;
r -= V * this._getFontScale() + 0;
R = !0;
break;
}
h.x = O;
h.y = r - l.offsetY * E + _.margin;
this._recordLetterInfo(h, p, P, i);
P + 1 < y.length && P < e - 1 && (M += y[P + 1]);
M += l.xAdvance * E + L - 2 * _.margin;
S = h.x + l.w * E - _.margin;
v < h.y && (v = h.y);
b > h.y - l.h * E && (b = h.y - l.h * E);
} else {
this._recordPlaceholderInfo(P, p);
console.log("Can't find letter definition in texture atlas " + C.atlasName + " for letter:" + p);
} else this._recordPlaceholderInfo(P, p);
}
if (!R) {
n = M;
o = S;
a < v && (a = v);
c > b && (c = b);
s < o && (s = o);
d += m;
}
} else {
g.push(o);
o = 0;
i++;
n = 0;
r -= V * this._getFontScale() + 0;
this._recordPlaceholderInfo(d, p);
d++;
}
}
g.push(o);
A = (x = i + 1) * V * this._getFontScale();
x > 1 && (A += 0 * (x - 1));
B.width = z;
B.height = k;
z <= 0 && (B.width = parseFloat(s.toFixed(2)) + 2 * _.margin);
k <= 0 && (B.height = parseFloat(A.toFixed(2)) + 2 * _.margin);
w = B.height;
T = 0;
if (N !== f.CLAMP) {
a > 0 && (w = B.height + a);
c < -A && (T = A + c);
}
return !0;
};
i._getFirstCharLen = function() {
return 1;
};
i._getFontScale = function() {
return N === f.SHRINK ? E : 1;
};
i._getFirstWordLen = function(t, e, i) {
var n = t.charAt(e);
if (u.isUnicodeCJK(n) || "\n" === n || u.isUnicodeSpace(n)) return 1;
var r = 1, s = _.fontAtlas.getLetterDefinitionForChar(n, _);
if (!s) return r;
for (var o = s.xAdvance * E + L, a = e + 1; a < i; ++a) {
n = t.charAt(a);
if (!(s = _.fontAtlas.getLetterDefinitionForChar(n, _))) break;
if (o + s.offsetX * E + s.w * E > G && !u.isUnicodeSpace(n) && G > 0) return r;
o += s.xAdvance * E + L;
if ("\n" === n || u.isUnicodeSpace(n) || u.isUnicodeCJK(n)) break;
r++;
}
return r;
};
i._multilineTextWrapByWord = function() {
return this._multilineTextWrap(this._getFirstWordLen);
};
i._multilineTextWrapByChar = function() {
return this._multilineTextWrap(this._getFirstCharLen);
};
i._recordPlaceholderInfo = function(t, e) {
if (t >= v.length) {
var i = new d();
v.push(i);
}
v[t].char = e;
v[t].hash = e.charCodeAt(0) + _.hash;
v[t].valid = !1;
};
i._recordLetterInfo = function(t, e, i, n) {
if (i >= v.length) {
var r = new d();
v.push(r);
}
var s = e.charCodeAt(0) + _.hash;
v[i].line = n;
v[i].char = e;
v[i].hash = s;
v[i].valid = _.fontAtlas.getLetter(s).valid;
v[i].x = t.x;
v[i].y = t.y;
};
i._alignText = function() {
A = 0;
g.length = 0;
this._multilineTextWrapByWord();
this._computeAlignmentOffset();
N === f.SHRINK && R > 0 && this._isVerticalClamp() && this._shrinkLabelToContentSize(this._isVerticalClamp);
this._updateQuads() || N === f.SHRINK && this._shrinkLabelToContentSize(this._isHorizontalClamp);
};
i._scaleFontSizeDown = function(t) {
var e = !0;
if (!t) {
t = .1;
e = !1;
}
R = t;
e && this._updateContent();
};
i._shrinkLabelToContentSize = function(t) {
for (var e = 0, i = 0 | R, n = 0; e < i; ) {
n = e + i + 1 >> 1;
if (n <= 0) break;
E = n / I;
this._multilineTextWrapByWord();
this._computeAlignmentOffset();
t() ? i = n - 1 : e = n;
}
var r = e;
r >= 0 && this._scaleFontSizeDown(r);
};
i._isVerticalClamp = function() {
return A > B.height;
};
i._isHorizontalClamp = function() {
for (var t = !1, e = 0, i = D.length; e < i; ++e) {
var n = v[e];
if (n.valid) {
var r = _.fontAtlas.getLetter(n.hash), s = n.x + r.w * E, o = n.line;
if (z > 0) if (F) {
if (g[o] > B.width && (s > B.width || s < 0)) {
t = !0;
break;
}
} else if (s > B.width) {
t = !0;
break;
}
}
}
return t;
};
i._isHorizontalClamped = function(t, e) {
var i = g[e], n = t > B.width || t < 0;
return F ? i > B.width && n : n;
};
i._updateQuads = function() {
var t = M ? M._texture : _.fontAtlas.getTexture(), e = m.node;
this.verticesCount = this.indicesCount = 0;
this._renderData && (this._renderData.dataLength = 0);
for (var i = B, n = e._anchorPoint.x * i.width, r = e._anchorPoint.y * i.height, s = !0, o = 0, a = D.length; o < a; ++o) {
var c = v[o];
if (c.valid) {
var l = _.fontAtlas.getLetter(c.hash);
p.height = l.h;
p.width = l.w;
p.x = l.u;
p.y = l.v;
var u = c.y + S;
if (k > 0) {
if (u > w) {
var h = u - w;
p.y += h;
p.height -= h;
u -= h;
}
u - l.h * E < T && N === f.CLAMP && (p.height = u < T ? 0 : (u - T) / E);
}
var d = c.line, y = c.x + l.w / 2 * E + b[d];
if (z > 0 && this._isHorizontalClamped(y, d)) if (N === f.CLAMP) p.width = 0; else if (N === f.SHRINK) {
if (B.width > l.w) {
s = !1;
break;
}
p.width = 0;
}
if (p.height > 0 && p.width > 0) {
var g = this._determineRect(p), C = c.x + b[c.line];
this.appendQuad(m, t, p, g, C - n, u - r, E);
}
}
}
this._quadsUpdated(m);
return s;
};
i._determineRect = function(t) {
var e = M.isRotated(), i = M._originalSize, n = M._rect, r = M._offset, s = r.x + (i.width - n.width) / 2, o = r.y - (i.height - n.height) / 2;
if (e) {
var a = t.x;
t.x = n.x + n.height - t.y - t.height - o;
t.y = a + n.y - s;
t.y < 0 && (t.height = t.height + o);
} else {
t.x += n.x - s;
t.y += n.y + o;
}
return e;
};
i._computeAlignmentOffset = function() {
b.length = 0;
switch (P) {
case h.TextAlignment.LEFT:
for (var t = 0; t < x; ++t) b.push(0);
break;

case h.TextAlignment.CENTER:
for (var e = 0, i = g.length; e < i; e++) b.push((B.width - g[e]) / 2);
break;

case h.TextAlignment.RIGHT:
for (var n = 0, r = g.length; n < r; n++) b.push(B.width - g[n]);
}
S = B.height;
if (O !== h.VerticalTextAlignment.TOP) {
var s = B.height - A + V * this._getFontScale() - I * E;
O === h.VerticalTextAlignment.BOTTOM ? S -= s : S -= s / 2;
}
};
i._setupBMFontOverflowMetrics = function() {
var t = B.width, e = B.height;
N === f.RESIZE_HEIGHT && (e = 0);
if (N === f.NONE) {
t = 0;
e = 0;
}
z = t;
k = e;
G = t;
};
i.updateWorldVerts = function() {};
i.appendQuad = function(t, e, i, n, r, s, o) {};
i._quadsUpdated = function(t) {};
i._reserveQuads = function() {};
return e;
})(n.default);
i.default = U;
e.exports = i.default;
}), {
"../../../components/CCLabel": 122,
"../../../platform/CCMacro": 235,
"../../../utils/text-utils": 320,
"../../assembler-2d": 256,
"../utils": 270
} ],
267: [ (function(t, e, i) {
"use strict";
function n() {
this._rect = null;
this.uv = [];
this._texture = null;
this._original = null;
}
n.prototype = {
constructor: n,
getRect: function() {
return cc.rect(this._rect);
},
setRect: function(t) {
this._rect = t;
this._texture && this._calculateUV();
},
_setDynamicAtlasFrame: function(t) {
if (t) {
this._original = {
_texture: this._texture,
_x: this._rect.x,
_y: this._rect.y
};
this._texture = t.texture;
this._rect.x = t.x;
this._rect.y = t.y;
this._calculateUV();
}
},
_resetDynamicAtlasFrame: function() {
if (this._original) {
this._rect.x = this._original._x;
this._rect.y = this._original._y;
this._texture = this._original._texture;
this._original = null;
this._calculateUV();
}
},
_refreshTexture: function(t) {
this._texture = t;
this._rect = cc.rect(0, 0, t.width, t.height);
this._calculateUV();
},
_calculateUV: function() {
var t = this._rect, e = this._texture, i = this.uv, n = e.width, r = e.height, s = 0 === n ? 0 : t.x / n, o = 0 === n ? 0 : (t.x + t.width) / n, a = 0 === r ? 0 : (t.y + t.height) / r, c = 0 === r ? 0 : t.y / r;
i[0] = s;
i[1] = a;
i[2] = o;
i[3] = a;
i[4] = s;
i[5] = c;
i[6] = o;
i[7] = c;
}
};
e.exports = n;
}), {} ],
268: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../webgl/assemblers/label/2d/bmfont"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = t("../../../components/CCLabel"), h = t("../../../components/CCLabelOutline"), f = t("../../../utils/text-utils"), _ = t("../../../components/CCComponent"), d = t("../../../assets/CCRenderTexture"), p = cc.js.isChildClassOf(h, _), m = t("../utils").getFontFamily, y = t("../utils").shareLabelInfo, v = cc.BitmapFont.FontLetterDefinition, g = cc.BitmapFont.FontAtlas, b = cc.Color.WHITE, C = 0, x = (1 / 255).toFixed(3);
function A(t, e) {
this._texture = null;
this._labelInfo = e;
this._char = t;
this._hash = null;
this._data = null;
this._canvas = null;
this._context = null;
this._width = 0;
this._height = 0;
this._offsetY = 0;
this._hash = t.charCodeAt(0) + e.hash;
}
A.prototype = {
constructor: A,
updateRenderData: function() {
this._updateProperties();
this._updateTexture();
},
_updateProperties: function() {
this._texture = new cc.Texture2D();
this._data = u._canvasPool.get();
this._canvas = this._data.canvas;
this._context = this._data.context;
this._context.font = this._labelInfo.fontDesc;
var t = f.safeMeasureText(this._context, this._char, this._labelInfo.fontDesc), e = 2 * this._labelInfo.margin + 2;
this._width = parseFloat(t.toFixed(2)) + e;
this._height = (1 + f.BASELINE_RATIO) * this._labelInfo.fontSize + e;
this._offsetY = -this._labelInfo.fontSize * f.BASELINE_RATIO / 2;
this._canvas.width !== this._width && (this._canvas.width = this._width);
this._canvas.height !== this._height && (this._canvas.height = this._height);
this._texture.initWithElement(this._canvas);
},
_updateTexture: function() {
var t = this._context, e = this._labelInfo, i = this._canvas.width, n = this._canvas.height, r = i / 2, s = n / 2 + this._labelInfo.fontSize * f.MIDDLE_RATIO, o = e.color;
t.textAlign = "center";
t.textBaseline = "alphabetic";
t.clearRect(0, 0, i, n);
t.fillStyle = "rgba(" + o.r + ", " + o.g + ", " + o.b + ", " + x + ")";
t.fillRect(0, 0, i, n);
t.font = e.fontDesc;
t.lineJoin = "round";
t.fillStyle = "rgba(" + o.r + ", " + o.g + ", " + o.b + ", 1)";
if (e.isOutlined && e.margin > 0) {
var a = e.out || b;
t.strokeStyle = "rgba(" + a.r + ", " + a.g + ", " + a.b + ", " + a.a / 255 + ")";
t.lineWidth = 2 * e.margin;
t.strokeText(this._char, r, s);
}
t.fillText(this._char, r, s);
this._texture.handleLoadedTexture();
},
destroy: function() {
this._texture.destroy();
this._texture = null;
u._canvasPool.put(this._data);
}
};
function S(t, e) {
var i = new d();
i.initWithSize(t, e);
i.update();
this._fontDefDictionary = new g(i);
this._x = C;
this._y = C;
this._nexty = C;
this._width = t;
this._height = e;
cc.director.on(cc.Director.EVENT_BEFORE_SCENE_LAUNCH, this.beforeSceneLoad, this);
}
cc.js.mixin(S.prototype, {
insertLetterTexture: function(t) {
var e = t._texture, i = e.width, n = e.height;
if (this._x + i + C > this._width) {
this._x = C;
this._y = this._nexty;
}
this._y + n > this._nexty && (this._nexty = this._y + n + C);
if (this._nexty > this._height) return null;
this._fontDefDictionary._texture.drawTextureAt(e, this._x, this._y);
this._dirty = !0;
var r = new v();
r.u = this._x + 1;
r.v = this._y + 1;
r.texture = this._fontDefDictionary._texture;
r.valid = !0;
r.w = t._width - 2;
r.h = t._height - 2;
r.xAdvance = r.w;
r.offsetY = t._offsetY;
this._x += i + C;
this._fontDefDictionary.addLetterDefinitions(t._hash, r);
return r;
},
update: function() {
if (this._dirty) {
this._fontDefDictionary._texture.update();
this._dirty = !1;
}
},
reset: function() {
this._x = C;
this._y = C;
this._nexty = C;
for (var t = this._fontDefDictionary._letterDefinitions, e = 0, i = t.length; e < i; e++) {
var n = t[e];
n.isValid && n.destroy();
}
this._fontDefDictionary.clear();
},
destroy: function() {
this.reset();
this._fontDefDictionary._texture.destroy();
this._fontDefDictionary._texture = null;
},
beforeSceneLoad: function() {
this.clearAllCache();
},
clearAllCache: function() {
this.destroy();
var t = new d();
t.initWithSize(this._width, this._height);
t.update();
this._fontDefDictionary._texture = t;
},
getLetter: function(t) {
return this._fontDefDictionary._letterDefinitions[t];
},
getTexture: function() {
return this._fontDefDictionary.getTexture();
},
getLetterDefinitionForChar: function(t, e) {
var i = t.charCodeAt(0) + e.hash, n = this._fontDefDictionary._letterDefinitions[i];
if (!n) {
var r = new A(t, e);
r.updateRenderData();
n = this.insertLetterTexture(r);
r.destroy();
}
return n;
}
});
function w(t) {
var e = t.color.toHEX("#rrggbb"), i = "";
t.isOutlined && t.margin > 0 && (i = i + t.margin + t.out.toHEX("#rrggbb"));
return "" + t.fontSize + t.fontFamily + e + i;
}
var T = null, E = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i._getAssemblerData = function() {
if (!T) {
T = new S(2048, 2048);
cc.Label._shareAtlas = T;
}
return T.getTexture();
};
i._updateFontFamily = function(t) {
y.fontAtlas = T;
y.fontFamily = m(t);
var e = p && t.getComponent(h);
if (e && e.enabled) {
y.isOutlined = !0;
y.margin = e.width;
y.out = e.color.clone();
y.out.a = e.color.a * t.node.color.a / 255;
} else {
y.isOutlined = !1;
y.margin = 0;
}
};
i._updateLabelInfo = function(t) {
y.fontDesc = this._getFontDesc();
y.color = t.node.color;
y.hash = w(y);
};
i._getFontDesc = function() {
var t = y.fontSize.toString() + "px ";
0;
return t += y.fontFamily;
};
i._computeHorizontalKerningForText = function() {};
i._determineRect = function(t) {
return !1;
};
return e;
})(n.default);
i.default = E;
e.exports = i.default;
}), {
"../../../assets/CCRenderTexture": 85,
"../../../components/CCComponent": 120,
"../../../components/CCLabel": 122,
"../../../components/CCLabelOutline": 123,
"../../../utils/text-utils": 320,
"../../webgl/assemblers/label/2d/bmfont": 275,
"../utils": 270
} ],
269: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../assembler-2d"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u, h = t("../../../utils/text-utils"), f = t("../../../platform/CCMacro"), _ = t("../../../components/CCLabel"), d = t("../../../components/CCLabelOutline"), p = t("../../../components/CCLabelShadow"), m = _.Overflow, y = t("../utils").deleteFromDynamicAtlas, v = t("../utils").getFontFamily, g = (1 / 255).toFixed(3), b = null, C = null, x = null, A = "", S = "", w = 0, T = 0, E = [], M = cc.Size.ZERO, B = 0, D = 0, R = 0, I = null, P = "", O = m.NONE, L = !1, V = null, N = cc.Color.WHITE, F = null, z = cc.Color.BLACK, k = cc.rect(), G = cc.Size.ZERO, U = cc.Size.ZERO, j = !1, H = !1, W = !1, q = 0, X = cc.Vec2.ZERO, Y = 0, J = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i._getAssemblerData = function() {
(u = _._canvasPool.get()).canvas.width = u.canvas.height = 1;
return u;
};
i._resetAssemblerData = function(t) {
t && _._canvasPool.put(t);
};
i.updateRenderData = function(e) {
t.prototype.updateRenderData.call(this, e);
if (e._vertsDirty) {
this._updateFontFamily(e);
this._updateProperties(e);
this._calculateLabelFont();
this._calculateSplitedStrings();
this._updateLabelDimensions();
this._calculateTextBaseline();
this._updateTexture(e);
this._calDynamicAtlas(e);
e._actualFontSize = w;
e.node.setContentSize(U);
this.updateVerts(e);
e._vertsDirty = !1;
b = null;
C = null;
x = null;
}
};
i.updateVerts = function() {};
i._updatePaddingRect = function() {
var t = 0, e = 0, i = 0, n = 0, r = 0;
G.width = G.height = 0;
if (V) {
t = e = i = n = r = V.width;
G.width = G.height = 2 * r;
}
if (F) {
var s = F.blur + r;
i = Math.max(i, -F._offset.x + s);
n = Math.max(n, F._offset.x + s);
t = Math.max(t, F._offset.y + s);
e = Math.max(e, -F._offset.y + s);
}
if (H) {
var o = T * Math.tan(.20943951);
n += o;
G.width += o;
}
k.x = i;
k.y = t;
k.width = i + n;
k.height = t + e;
};
i._updateFontFamily = function(t) {
P = v(t);
};
i._updateProperties = function(t) {
var e = t._assemblerData;
b = e.context;
C = e.canvas;
x = t._frame._original ? t._frame._original._texture : t._frame._texture;
S = t.string.toString();
w = t._fontSize;
T = w;
q = t.underlineHeight || T / 8;
O = t.overflow;
M.width = t.node.width;
M.height = t.node.height;
U = t.node.getContentSize();
B = t._lineHeight;
D = t.horizontalAlign;
R = t.verticalAlign;
I = t.node.color;
j = t.enableBold;
H = t.enableItalic;
W = t.enableUnderline;
L = O !== m.NONE && (O === m.RESIZE_HEIGHT || t.enableWrapText);
(V = (V = d && t.getComponent(d)) && V.enabled && V.width > 0 ? V : null) && N.set(V.color);
if (F = (F = p && t.getComponent(p)) && F.enabled ? F : null) {
z.set(F.color);
z.a = z.a * t.node.color.a / 255;
}
this._updatePaddingRect();
};
i._calculateFillTextStartPosition = function() {
var t = 0;
D === f.TextAlignment.RIGHT ? t = M.width - k.width : D === f.TextAlignment.CENTER && (t = (M.width - k.width) / 2);
var e = this._getLineHeight() * (E.length - 1), i = w * (1 - h.BASELINE_RATIO / 2);
if (R !== f.VerticalTextAlignment.TOP) {
var n = e + k.height + w - M.height;
R === f.VerticalTextAlignment.BOTTOM ? i -= n += h.BASELINE_RATIO / 2 * w : i -= n / 2;
}
i += h.BASELINE_OFFSET * w;
return cc.v2(t + k.x, i + k.y);
};
i._setupOutline = function() {
b.strokeStyle = "rgba(" + N.r + ", " + N.g + ", " + N.b + ", " + N.a / 255 + ")";
b.lineWidth = 2 * V.width;
};
i._setupShadow = function() {
b.shadowColor = "rgba(" + z.r + ", " + z.g + ", " + z.b + ", " + z.a / 255 + ")";
b.shadowBlur = F.blur;
b.shadowOffsetX = F.offset.x;
b.shadowOffsetY = -F.offset.y;
};
i._drawUnderline = function(t) {
if (V) {
this._setupOutline();
b.strokeRect(X.x, X.y, t, q);
}
b.lineWidth = q;
b.fillStyle = "rgba(" + I.r + ", " + I.g + ", " + I.b + ", " + I.a / 255 + ")";
b.fillRect(X.x, X.y, t, q);
};
i._updateTexture = function() {
b.clearRect(0, 0, C.width, C.height);
var t = V ? N : I;
b.fillStyle = "rgba(" + t.r + ", " + t.g + ", " + t.b + ", " + g + ")";
b.fillRect(0, 0, C.width, C.height);
b.font = A;
var e = this._calculateFillTextStartPosition(), i = this._getLineHeight();
b.lineJoin = "round";
b.fillStyle = "rgba(" + I.r + ", " + I.g + ", " + I.b + ", 1)";
var n = E.length > 1, r = this._measureText(b, A), s = 0, o = 0;
F && this._setupShadow();
V && V.width > 0 && this._setupOutline();
for (var a = 0; a < E.length; ++a) {
s = e.x;
o = e.y + a * i;
if (F && n) {
V && V.width > 0 && b.strokeText(E[a], s, o);
b.fillText(E[a], s, o);
}
if (W) {
Y = r(E[a]);
D === f.TextAlignment.RIGHT ? X.x = e.x - Y : D === f.TextAlignment.CENTER ? X.x = e.x - Y / 2 : X.x = e.x;
X.y = o + T / 8;
this._drawUnderline(Y);
}
}
F && n && (b.shadowColor = "transparent");
for (var c = 0; c < E.length; ++c) {
s = e.x;
o = e.y + c * i;
V && V.width > 0 && b.strokeText(E[c], s, o);
b.fillText(E[c], s, o);
}
F && (b.shadowColor = "transparent");
x.handleLoadedTexture();
};
i._calDynamicAtlas = function(t) {
if (t.cacheMode === _.CacheMode.BITMAP) {
var e = t._frame;
y(t, e);
e._original || e.setRect(cc.rect(0, 0, C.width, C.height));
this.packToDynamicAtlas(t, e);
}
};
i._updateLabelDimensions = function() {
var t = S.split("\n");
if (O === m.RESIZE_HEIGHT) {
var e = (E.length + h.BASELINE_RATIO) * this._getLineHeight();
M.height = e + k.height;
U.height = e + G.height;
} else if (O === m.NONE) {
E = t;
for (var i = 0, n = 0, r = 0; r < t.length; ++r) {
var s = h.safeMeasureText(b, t[r], A);
i = i > s ? i : s;
}
n = (E.length + h.BASELINE_RATIO) * this._getLineHeight();
var o = parseFloat(i.toFixed(2)), a = parseFloat(n.toFixed(2));
M.width = o + k.width;
M.height = a + k.height;
U.width = o + G.width;
U.height = a + G.height;
}
M.width = Math.min(M.width, 2048);
M.height = Math.min(M.height, 2048);
C.width !== M.width && (C.width = M.width);
C.height !== M.height && (C.height = M.height);
};
i._calculateTextBaseline = function() {
var t;
t = D === f.TextAlignment.RIGHT ? "right" : D === f.TextAlignment.CENTER ? "center" : "left";
b.textAlign = t;
b.textBaseline = "alphabetic";
};
i._calculateSplitedStrings = function() {
var t = S.split("\n");
if (L) {
E = [];
for (var e = U.width, i = 0; i < t.length; ++i) {
var n = h.safeMeasureText(b, t[i], A), r = h.fragmentText(t[i], n, e, this._measureText(b, A));
E = E.concat(r);
}
} else E = t;
};
i._getFontDesc = function() {
var t = w.toString() + "px ";
t += P;
j && (t = "bold " + t);
H && (t = "italic " + t);
return t;
};
i._getLineHeight = function() {
var t = B;
return 0 | (t = 0 === t ? w : t * w / T);
};
i._calculateParagraphLength = function(t, e) {
for (var i = [], n = 0; n < t.length; ++n) {
var r = h.safeMeasureText(e, t[n], A);
i.push(r);
}
return i;
};
i._measureText = function(t, e) {
return function(i) {
return h.safeMeasureText(t, i, e);
};
};
i._calculateLabelFont = function() {
A = this._getFontDesc();
b.font = A;
if (O === m.SHRINK) {
var t = S.split("\n"), e = this._calculateParagraphLength(t, b), i = 0, n = 0, r = 0;
if (L) {
var s = U.width, o = U.height;
if (s < 0 || o < 0) {
A = this._getFontDesc();
b.font = A;
return;
}
n = o + 1;
r = s + 1;
for (var a = "", c = 0, l = 0 | w + 1, u = 0; c < l; ) {
if ((u = c + l + 1 >> 1) <= 0) {
cc.logID(4003);
break;
}
w = u;
A = this._getFontDesc();
b.font = A;
n = 0;
for (i = 0; i < t.length; ++i) {
var f = 0, _ = h.safeMeasureText(b, t[i], A);
a = h.fragmentText(t[i], _, s, this._measureText(b, A));
for (;f < a.length; ) {
r = h.safeMeasureText(b, a[f], A);
n += this._getLineHeight();
++f;
}
}
n > o ? l = u - 1 : c = u;
}
if (0 === c) cc.logID(4003); else {
w = c;
A = this._getFontDesc();
b.font = A;
}
} else {
n = t.length * this._getLineHeight();
for (i = 0; i < t.length; ++i) r < e[i] && (r = e[i]);
var d = (M.width - k.width) / r, p = M.height / n;
w = T * Math.min(1, d, p) | 0;
A = this._getFontDesc();
b.font = A;
}
}
};
return e;
})(n.default);
i.default = J;
e.exports = i.default;
}), {
"../../../components/CCLabel": 122,
"../../../components/CCLabelOutline": 123,
"../../../components/CCLabelShadow": 124,
"../../../platform/CCMacro": 235,
"../../../utils/text-utils": 320,
"../../assembler-2d": 256,
"../utils": 270
} ],
270: [ (function(t, e, i) {
"use strict";
var n = t("./dynamic-atlas/manager"), r = cc.Color.WHITE, s = {
fontAtlas: null,
fontSize: 0,
lineHeight: 0,
hAlign: 0,
vAlign: 0,
hash: "",
fontFamily: "",
fontDesc: "Arial",
color: r,
isOutlined: !1,
out: r,
margin: 0
};
e.exports = {
deleteFromDynamicAtlas: function(t, e) {
if (e && e._original && n) {
n.deleteAtlasSpriteFrame(e);
e._resetDynamicAtlasFrame();
}
},
getFontFamily: function(t) {
if (t.useSystemFont) return t.fontFamily || "Arial";
if (t.font) {
if (t.font._nativeAsset) return t.font._nativeAsset;
cc.loader.load(t.font.nativeUrl, (function(e, i) {
t.font._nativeAsset = i;
t.setVertsDirty();
}));
return "Arial";
}
return "Arial";
},
shareLabelInfo: s
};
}), {
"./dynamic-atlas/manager": 265
} ],
271: [ (function(t, e, i) {
"use strict";
cc.Graphics.earcut = e.exports = n;
function n(t, e, i) {
i = i || 2;
var n, s, a, c, l, u, f, _ = e && e.length, d = _ ? e[0] * i : t.length, p = r(t, 0, d, i, !0), m = [];
if (!p) return m;
_ && (p = h(t, e, p, i));
if (t.length > 80 * i) {
n = a = t[0];
s = c = t[1];
for (var y = i; y < d; y += i) {
l = t[y];
u = t[y + 1];
l < n && (n = l);
u < s && (s = u);
l > a && (a = l);
u > c && (c = u);
}
f = Math.max(a - n, c - s);
}
o(p, m, i, n, s, f);
return m;
}
function r(t, e, i, n, r) {
var s, o;
if (r === R(t, e, i, n) > 0) for (s = e; s < i; s += n) o = M(s, t[s], t[s + 1], o); else for (s = i - n; s >= e; s -= n) o = M(s, t[s], t[s + 1], o);
if (o && x(o, o.next)) {
B(o);
o = o.next;
}
return o;
}
function s(t, e) {
if (!t) return t;
e || (e = t);
var i, n = t;
do {
i = !1;
if (n.steiner || !x(n, n.next) && 0 !== C(n.prev, n, n.next)) n = n.next; else {
B(n);
if ((n = e = n.prev) === n.next) return null;
i = !0;
}
} while (i || n !== e);
return e;
}
function o(t, e, i, n, r, h, f) {
if (t) {
!f && h && p(t, n, r, h);
for (var _, d, m = t; t.prev !== t.next; ) {
_ = t.prev;
d = t.next;
if (h ? c(t, n, r, h) : a(t)) {
e.push(_.i / i);
e.push(t.i / i);
e.push(d.i / i);
B(t);
t = d.next;
m = d.next;
} else if ((t = d) === m) {
f ? 1 === f ? o(t = l(t, e, i), e, i, n, r, h, 2) : 2 === f && u(t, e, i, n, r, h) : o(s(t), e, i, n, r, h, 1);
break;
}
}
}
}
function a(t) {
var e = t.prev, i = t, n = t.next;
if (C(e, i, n) >= 0) return !1;
for (var r = t.next.next; r !== t.prev; ) {
if (g(e.x, e.y, i.x, i.y, n.x, n.y, r.x, r.y) && C(r.prev, r, r.next) >= 0) return !1;
r = r.next;
}
return !0;
}
function c(t, e, i, n) {
var r = t.prev, s = t, o = t.next;
if (C(r, s, o) >= 0) return !1;
for (var a = r.x < s.x ? r.x < o.x ? r.x : o.x : s.x < o.x ? s.x : o.x, c = r.y < s.y ? r.y < o.y ? r.y : o.y : s.y < o.y ? s.y : o.y, l = r.x > s.x ? r.x > o.x ? r.x : o.x : s.x > o.x ? s.x : o.x, u = r.y > s.y ? r.y > o.y ? r.y : o.y : s.y > o.y ? s.y : o.y, h = y(a, c, e, i, n), f = y(l, u, e, i, n), _ = t.nextZ; _ && _.z <= f; ) {
if (_ !== t.prev && _ !== t.next && g(r.x, r.y, s.x, s.y, o.x, o.y, _.x, _.y) && C(_.prev, _, _.next) >= 0) return !1;
_ = _.nextZ;
}
_ = t.prevZ;
for (;_ && _.z >= h; ) {
if (_ !== t.prev && _ !== t.next && g(r.x, r.y, s.x, s.y, o.x, o.y, _.x, _.y) && C(_.prev, _, _.next) >= 0) return !1;
_ = _.prevZ;
}
return !0;
}
function l(t, e, i) {
var n = t;
do {
var r = n.prev, s = n.next.next;
if (!x(r, s) && A(r, n, n.next, s) && w(r, s) && w(s, r)) {
e.push(r.i / i);
e.push(n.i / i);
e.push(s.i / i);
B(n);
B(n.next);
n = t = s;
}
n = n.next;
} while (n !== t);
return n;
}
function u(t, e, i, n, r, a) {
var c = t;
do {
for (var l = c.next.next; l !== c.prev; ) {
if (c.i !== l.i && b(c, l)) {
var u = E(c, l);
c = s(c, c.next);
u = s(u, u.next);
o(c, e, i, n, r, a);
o(u, e, i, n, r, a);
return;
}
l = l.next;
}
c = c.next;
} while (c !== t);
}
function h(t, e, i, n) {
var o, a, c, l = [];
for (o = 0, a = e.length; o < a; o++) {
(c = r(t, e[o] * n, o < a - 1 ? e[o + 1] * n : t.length, n, !1)) === c.next && (c.steiner = !0);
l.push(v(c));
}
l.sort(f);
for (o = 0; o < l.length; o++) {
_(l[o], i);
i = s(i, i.next);
}
return i;
}
function f(t, e) {
return t.x - e.x;
}
function _(t, e) {
if (e = d(t, e)) {
var i = E(e, t);
s(i, i.next);
}
}
function d(t, e) {
var i, n = e, r = t.x, s = t.y, o = -Infinity;
do {
if (s <= n.y && s >= n.next.y) {
var a = n.x + (s - n.y) * (n.next.x - n.x) / (n.next.y - n.y);
if (a <= r && a > o) {
o = a;
if (a === r) {
if (s === n.y) return n;
if (s === n.next.y) return n.next;
}
i = n.x < n.next.x ? n : n.next;
}
}
n = n.next;
} while (n !== e);
if (!i) return null;
if (r === o) return i.prev;
var c, l = i, u = i.x, h = i.y, f = Infinity;
n = i.next;
for (;n !== l; ) {
if (r >= n.x && n.x >= u && g(s < h ? r : o, s, u, h, s < h ? o : r, s, n.x, n.y) && ((c = Math.abs(s - n.y) / (r - n.x)) < f || c === f && n.x > i.x) && w(n, t)) {
i = n;
f = c;
}
n = n.next;
}
return i;
}
function p(t, e, i, n) {
var r = t;
do {
null === r.z && (r.z = y(r.x, r.y, e, i, n));
r.prevZ = r.prev;
r.nextZ = r.next;
r = r.next;
} while (r !== t);
r.prevZ.nextZ = null;
r.prevZ = null;
m(r);
}
function m(t) {
var e, i, n, r, s, o, a, c, l = 1;
do {
i = t;
t = null;
s = null;
o = 0;
for (;i; ) {
o++;
n = i;
a = 0;
for (e = 0; e < l; e++) {
a++;
if (!(n = n.nextZ)) break;
}
c = l;
for (;a > 0 || c > 0 && n; ) {
if (0 === a) {
r = n;
n = n.nextZ;
c--;
} else if (0 !== c && n) if (i.z <= n.z) {
r = i;
i = i.nextZ;
a--;
} else {
r = n;
n = n.nextZ;
c--;
} else {
r = i;
i = i.nextZ;
a--;
}
s ? s.nextZ = r : t = r;
r.prevZ = s;
s = r;
}
i = n;
}
s.nextZ = null;
l *= 2;
} while (o > 1);
return t;
}
function y(t, e, i, n, r) {
return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - i) / r) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) / r) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1;
}
function v(t) {
var e = t, i = t;
do {
e.x < i.x && (i = e);
e = e.next;
} while (e !== t);
return i;
}
function g(t, e, i, n, r, s, o, a) {
return (r - o) * (e - a) - (t - o) * (s - a) >= 0 && (t - o) * (n - a) - (i - o) * (e - a) >= 0 && (i - o) * (s - a) - (r - o) * (n - a) >= 0;
}
function b(t, e) {
return t.next.i !== e.i && t.prev.i !== e.i && !S(t, e) && w(t, e) && w(e, t) && T(t, e);
}
function C(t, e, i) {
return (e.y - t.y) * (i.x - e.x) - (e.x - t.x) * (i.y - e.y);
}
function x(t, e) {
return t.x === e.x && t.y === e.y;
}
function A(t, e, i, n) {
return !!(x(t, e) && x(i, n) || x(t, n) && x(i, e)) || C(t, e, i) > 0 != C(t, e, n) > 0 && C(i, n, t) > 0 != C(i, n, e) > 0;
}
function S(t, e) {
var i = t;
do {
if (i.i !== t.i && i.next.i !== t.i && i.i !== e.i && i.next.i !== e.i && A(i, i.next, t, e)) return !0;
i = i.next;
} while (i !== t);
return !1;
}
function w(t, e) {
return C(t.prev, t, t.next) < 0 ? C(t, e, t.next) >= 0 && C(t, t.prev, e) >= 0 : C(t, e, t.prev) < 0 || C(t, t.next, e) < 0;
}
function T(t, e) {
var i = t, n = !1, r = (t.x + e.x) / 2, s = (t.y + e.y) / 2;
do {
i.y > s != i.next.y > s && r < (i.next.x - i.x) * (s - i.y) / (i.next.y - i.y) + i.x && (n = !n);
i = i.next;
} while (i !== t);
return n;
}
function E(t, e) {
var i = new D(t.i, t.x, t.y), n = new D(e.i, e.x, e.y), r = t.next, s = e.prev;
t.next = e;
e.prev = t;
i.next = r;
r.prev = i;
n.next = i;
i.prev = n;
s.next = n;
n.prev = s;
return n;
}
function M(t, e, i, n) {
var r = new D(t, e, i);
if (n) {
r.next = n.next;
r.prev = n;
n.next.prev = r;
n.next = r;
} else {
r.prev = r;
r.next = r;
}
return r;
}
function B(t) {
t.next.prev = t.prev;
t.prev.next = t.next;
t.prevZ && (t.prevZ.nextZ = t.nextZ);
t.nextZ && (t.nextZ.prevZ = t.prevZ);
}
function D(t, e, i) {
this.i = t;
this.x = e;
this.y = i;
this.prev = null;
this.next = null;
this.z = null;
this.prevZ = null;
this.nextZ = null;
this.steiner = !1;
}
n.deviation = function(t, e, i, n) {
var r = e && e.length, s = r ? e[0] * i : t.length, o = Math.abs(R(t, 0, s, i));
if (r) for (var a = 0, c = e.length; a < c; a++) {
var l = e[a] * i, u = a < c - 1 ? e[a + 1] * i : t.length;
o -= Math.abs(R(t, l, u, i));
}
var h = 0;
for (a = 0; a < n.length; a += 3) {
var f = n[a] * i, _ = n[a + 1] * i, d = n[a + 2] * i;
h += Math.abs((t[f] - t[d]) * (t[_ + 1] - t[f + 1]) - (t[f] - t[_]) * (t[d + 1] - t[f + 1]));
}
return 0 === o && 0 === h ? 0 : Math.abs((h - o) / o);
};
function R(t, e, i, n) {
for (var r = 0, s = e, o = i - n; s < i; s += n) {
r += (t[o] - t[s]) * (t[s + 1] + t[o + 1]);
o = s;
}
return r;
}
n.flatten = function(t) {
for (var e = t[0][0].length, i = {
vertices: [],
holes: [],
dimensions: e
}, n = 0, r = 0; r < t.length; r++) {
for (var s = 0; s < t[r].length; s++) for (var o = 0; o < e; o++) i.vertices.push(t[r][s][o]);
if (r > 0) {
n += t[r - 1].length;
i.holes.push(n);
}
}
return i;
};
}), {} ],
272: [ (function(t, e, i) {
"use strict";
var n = t("../../../../graphics/helper"), r = t("../../../../graphics/types").PointFlags, s = cc.Graphics.Point = cc.Class({
name: "cc.GraphicsPoint",
extends: cc.Vec2,
ctor: function(t, e) {
this.reset();
},
reset: function() {
this.dx = 0;
this.dy = 0;
this.dmx = 0;
this.dmy = 0;
this.flags = 0;
this.len = 0;
}
});
function o() {
this.reset();
}
cc.js.mixin(o.prototype, {
reset: function() {
this.closed = !1;
this.nbevel = 0;
this.complex = !0;
this.points ? this.points.length = 0 : this.points = [];
}
});
function a(t) {
this._tessTol = .25;
this._distTol = .01;
this._updatePathOffset = !1;
this._paths = null;
this._pathLength = 0;
this._pathOffset = 0;
this._points = null;
this._pointsOffset = 0;
this._commandx = 0;
this._commandy = 0;
this._paths = [];
this._points = [];
}
cc.js.mixin(a.prototype, {
moveTo: function(t, e) {
if (this._updatePathOffset) {
this._pathOffset = this._pathLength;
this._updatePathOffset = !1;
}
this._addPath();
this._addPoint(t, e, r.PT_CORNER);
this._commandx = t;
this._commandy = e;
},
lineTo: function(t, e) {
this._addPoint(t, e, r.PT_CORNER);
this._commandx = t;
this._commandy = e;
},
bezierCurveTo: function(t, e, i, s, o, a) {
var c = this._curPath, l = c.points[c.points.length - 1];
if (l.x !== t || l.y !== e || i !== o || s !== a) {
n.tesselateBezier(this, l.x, l.y, t, e, i, s, o, a, 0, r.PT_CORNER);
this._commandx = o;
this._commandy = a;
} else this.lineTo(o, a);
},
quadraticCurveTo: function(t, e, i, n) {
var r = this._commandx, s = this._commandy;
this.bezierCurveTo(r + 2 / 3 * (t - r), s + 2 / 3 * (e - s), i + 2 / 3 * (t - i), n + 2 / 3 * (e - n), i, n);
},
arc: function(t, e, i, r, s, o) {
n.arc(this, t, e, i, r, s, o);
},
ellipse: function(t, e, i, r) {
n.ellipse(this, t, e, i, r);
this._curPath.complex = !1;
},
circle: function(t, e, i) {
n.ellipse(this, t, e, i, i);
this._curPath.complex = !1;
},
rect: function(t, e, i, n) {
this.moveTo(t, e);
this.lineTo(t, e + n);
this.lineTo(t + i, e + n);
this.lineTo(t + i, e);
this.close();
this._curPath.complex = !1;
},
roundRect: function(t, e, i, r, s) {
n.roundRect(this, t, e, i, r, s);
this._curPath.complex = !1;
},
clear: function(t) {
this._pathLength = 0;
this._pathOffset = 0;
this._pointsOffset = 0;
this._curPath = null;
if (t) {
this._paths.length = 0;
this._points.length = 0;
}
},
close: function() {
this._curPath.closed = !0;
},
_addPath: function() {
var t = this._pathLength, e = this._paths[t];
if (e) e.reset(); else {
e = new o();
this._paths.push(e);
}
this._pathLength++;
this._curPath = e;
return e;
},
_addPoint: function(t, e, i) {
var n = this._curPath;
if (n) {
var r, o = this._points, a = n.points;
if (r = o[this._pointsOffset++]) {
r.x = t;
r.y = e;
} else {
r = new s(t, e);
o.push(r);
}
r.flags = i;
a.push(r);
}
}
});
cc.Graphics._Impl = a;
e.exports = a;
}), {
"../../../../graphics/helper": 173,
"../../../../graphics/types": 175
} ],
273: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = s(t("../../../assembler")), r = s(t("../../../../../renderer/core/input-assembler"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
function o(t) {
return function() {
var e, i = u(t);
if (l()) {
var n = u(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return a(this, e);
};
}
function a(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? c(t) : e;
}
function c(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function l() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function u(t) {
return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function h(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var f = t("../../mesh-buffer"), _ = t("../../vertex-format").vfmtPosColor, d = t("../../../index"), p = t("../../../../graphics/graphics"), m = t("../../../../graphics/types").PointFlags, y = p.LineJoin, v = p.LineCap, g = t("./earcut"), b = (t("./impl"), 
Math.PI), C = Math.min, x = Math.max, A = Math.ceil, S = Math.acos, w = Math.cos, T = Math.sin, E = Math.atan2;
function M(t, e, i) {
var n = 2 * S(t / (t + i));
return x(2, A(e / n));
}
function B(t, e, i) {
return t < e ? e : t > i ? i : t;
}
var D = (function(t) {
h(e, t);
o(e);
function e(e) {
var i;
(i = t.call(this, e) || this)._buffer = null;
i._buffers = [];
i._bufferOffset = 0;
return i;
}
var i = e.prototype;
i.getVfmt = function() {
return _;
};
i.requestBuffer = function() {
var t = {
indiceStart: 0,
vertexStart: 0
}, e = new f(d._handle, _);
t.meshbuffer = e;
var i = new r.default(e._vb, e._ib);
t.ia = i;
this._buffers.push(t);
return t;
};
i.getBuffers = function() {
0 === this._buffers.length && this.requestBuffer();
return this._buffers;
};
i.clear = function(t) {
this._bufferOffset = 0;
var e = this._buffers;
if (t) {
for (var i = 0, n = e.length; i < n; i++) {
var r = e[i];
r.meshbuffer.destroy();
r.meshbuffer = null;
}
e.length = 0;
} else for (var s = 0, o = e.length; s < o; s++) {
var a = e[s];
a.indiceStart = 0;
a.vertexStart = 0;
a.meshbuffer.reset();
}
};
i.fillBuffers = function(t, e) {
e._flush();
e.node = t.node;
e.material = t._materials[0];
for (var i = this.getBuffers(), n = 0, r = i.length; n < r; n++) {
var s = i[n], o = s.meshbuffer;
s.ia._count = s.indiceStart;
e._flushIA(s.ia);
o.uploadData();
}
};
i.genBuffer = function(t, e) {
var i = this.getBuffers(), n = i[this._bufferOffset], r = n.meshbuffer, s = n.vertexStart + e;
if (s > 65535 || 3 * s > 131070) {
++this._bufferOffset;
s = e;
if (this._bufferOffset < i.length) n = i[this._bufferOffset]; else {
n = this.requestBuffer(t);
i[this._bufferOffset] = n;
}
r = n.meshbuffer;
}
s > r.vertexOffset && r.requestStatic(e, 3 * e);
this._buffer = n;
return n;
};
i.stroke = function(t) {
this._curColor = t._strokeColor._val;
this._flattenPaths(t._impl);
this._expandStroke(t);
t._impl._updatePathOffset = !0;
};
i.fill = function(t) {
this._curColor = t._fillColor._val;
this._expandFill(t);
t._impl._updatePathOffset = !0;
};
i._expandStroke = function(t) {
var e = .5 * t.lineWidth, i = t.lineCap, n = t.lineJoin, r = t.miterLimit, s = t._impl, o = M(e, b, s._tessTol);
this._calculateJoins(s, e, n, r);
for (var a = s._paths, c = 0, l = s._pathOffset, u = s._pathLength; l < u; l++) {
var h = a[l], f = h.points.length;
n === y.ROUND ? c += 2 * (f + h.nbevel * (o + 2) + 1) : c += 2 * (f + 5 * h.nbevel + 1);
h.closed || (i === v.ROUND ? c += 2 * (2 * o + 2) : c += 12);
}
for (var _ = this.genBuffer(t, c), d = _.meshbuffer, p = d._vData, g = d._iData, C = s._pathOffset, x = s._pathLength; C < x; C++) {
var A, S = a[C], w = S.points, T = w.length, E = _.vertexStart, B = void 0, D = void 0, R = void 0, I = void 0;
if (A = S.closed) {
B = w[T - 1];
D = w[0];
R = 0;
I = T;
} else {
B = w[0];
D = w[1];
R = 1;
I = T - 1;
}
D = D || B;
if (!A) {
var P = D.sub(B);
P.normalizeSelf();
var O = P.x, L = P.y;
i === v.BUTT ? this._buttCapStart(B, O, L, e, 0) : i === v.SQUARE ? this._buttCapStart(B, O, L, e, e) : i === v.ROUND && this._roundCapStart(B, O, L, e, o);
}
for (var V = R; V < I; ++V) {
if (n === y.ROUND) this._roundJoin(B, D, e, e, o); else if (0 != (D.flags & (m.PT_BEVEL | m.PT_INNERBEVEL))) this._bevelJoin(B, D, e, e); else {
this._vset(D.x + D.dmx * e, D.y + D.dmy * e);
this._vset(D.x - D.dmx * e, D.y - D.dmy * e);
}
B = D;
D = w[V + 1];
}
if (A) {
var N = 3 * E;
this._vset(p[N], p[N + 1]);
this._vset(p[N + 3], p[N + 4]);
} else {
var F = D.sub(B);
F.normalizeSelf();
var z = F.x, k = F.y;
i === v.BUTT ? this._buttCapEnd(D, z, k, e, 0) : i === v.SQUARE ? this._buttCapEnd(D, z, k, e, e) : i === v.ROUND && this._roundCapEnd(D, z, k, e, o);
}
for (var G = _.indiceStart, U = E + 2, j = _.vertexStart; U < j; U++) {
g[G++] = U - 2;
g[G++] = U - 1;
g[G++] = U;
}
_.indiceStart = G;
}
};
i._expandFill = function(t) {
for (var e = t._impl, i = e._paths, n = 0, r = e._pathOffset, s = e._pathLength; r < s; r++) {
n += i[r].points.length;
}
for (var o = this.genBuffer(t, n), a = o.meshbuffer, c = a._vData, l = a._iData, u = e._pathOffset, h = e._pathLength; u < h; u++) {
var f = i[u], _ = f.points, d = _.length;
if (0 !== d) {
for (var p = o.vertexStart, m = 0; m < d; ++m) this._vset(_[m].x, _[m].y);
var y = o.indiceStart;
if (f.complex) {
for (var v = [], b = p, C = o.vertexStart; b < C; b++) {
var x = 3 * b;
v.push(c[x]);
v.push(c[x + 1]);
}
var A = g(v, null, 2);
if (!A || 0 === A.length) continue;
for (var S = 0, w = A.length; S < w; S++) l[y++] = A[S] + p;
} else for (var T = p, E = p + 2, M = o.vertexStart; E < M; E++) {
l[y++] = T;
l[y++] = E - 1;
l[y++] = E;
}
o.indiceStart = y;
}
}
};
i._calculateJoins = function(t, e, i, n) {
var r = 0;
e > 0 && (r = 1 / e);
for (var s = t._paths, o = t._pathOffset, a = t._pathLength; o < a; o++) {
var c = s[o], l = c.points, u = l.length, h = l[u - 1], f = l[0];
c.nbevel = 0;
for (var _ = 0; _ < u; _++) {
var d, p, v = h.dy, g = -h.dx, b = f.dy, A = -f.dx;
f.dmx = .5 * (v + b);
f.dmy = .5 * (g + A);
if ((d = f.dmx * f.dmx + f.dmy * f.dmy) > 1e-6) {
var S = 1 / d;
S > 600 && (S = 600);
f.dmx *= S;
f.dmy *= S;
}
if (f.dx * h.dy - h.dx * f.dy > 0) {
0;
f.flags |= m.PT_LEFT;
}
d * (p = x(11, C(h.len, f.len) * r)) * p < 1 && (f.flags |= m.PT_INNERBEVEL);
f.flags & m.PT_CORNER && (d * n * n < 1 || i === y.BEVEL || i === y.ROUND) && (f.flags |= m.PT_BEVEL);
0 != (f.flags & (m.PT_BEVEL | m.PT_INNERBEVEL)) && c.nbevel++;
h = f;
f = l[_ + 1];
}
}
};
i._flattenPaths = function(t) {
for (var e = t._paths, i = t._pathOffset, n = t._pathLength; i < n; i++) {
var r = e[i], s = r.points, o = s[s.length - 1], a = s[0];
if (s.length > 2 && o.equals(a)) {
r.closed = !0;
s.pop();
o = s[s.length - 1];
}
for (var c = 0, l = s.length; c < l; c++) {
var u = a.sub(o);
o.len = u.mag();
(u.x || u.y) && u.normalizeSelf();
o.dx = u.x;
o.dy = u.y;
o = a;
a = s[c + 1];
}
}
};
i._chooseBevel = function(t, e, i, n) {
var r, s, o, a, c = i.x, l = i.y;
if (0 !== t) {
r = c + e.dy * n;
s = l - e.dx * n;
o = c + i.dy * n;
a = l - i.dx * n;
} else {
r = o = c + i.dmx * n;
s = a = l + i.dmy * n;
}
return [ r, s, o, a ];
};
i._buttCapStart = function(t, e, i, n, r) {
var s = t.x - e * r, o = t.y - i * r, a = i, c = -e;
this._vset(s + a * n, o + c * n);
this._vset(s - a * n, o - c * n);
};
i._buttCapEnd = function(t, e, i, n, r) {
var s = t.x + e * r, o = t.y + i * r, a = i, c = -e;
this._vset(s + a * n, o + c * n);
this._vset(s - a * n, o - c * n);
};
i._roundCapStart = function(t, e, i, n, r) {
for (var s = t.x, o = t.y, a = i, c = -e, l = 0; l < r; l++) {
var u = l / (r - 1) * b, h = w(u) * n, f = T(u) * n;
this._vset(s - a * h - e * f, o - c * h - i * f);
this._vset(s, o);
}
this._vset(s + a * n, o + c * n);
this._vset(s - a * n, o - c * n);
};
i._roundCapEnd = function(t, e, i, n, r) {
var s = t.x, o = t.y, a = i, c = -e;
this._vset(s + a * n, o + c * n);
this._vset(s - a * n, o - c * n);
for (var l = 0; l < r; l++) {
var u = l / (r - 1) * b, h = w(u) * n, f = T(u) * n;
this._vset(s, o);
this._vset(s - a * h + e * f, o - c * h + i * f);
}
};
i._roundJoin = function(t, e, i, n, r) {
var s = t.dy, o = -t.dx, a = e.dy, c = -e.dx, l = e.x, u = e.y;
if (0 != (e.flags & m.PT_LEFT)) {
var h = this._chooseBevel(e.flags & m.PT_INNERBEVEL, t, e, i), f = h[0], _ = h[1], d = h[2], p = h[3], y = E(-o, -s), v = E(-c, -a);
v > y && (v -= 2 * b);
this._vset(f, _);
this._vset(l - s * n, e.y - o * n);
for (var g = B(A((y - v) / b) * r, 2, r), C = 0; C < g; C++) {
var x = y + C / (g - 1) * (v - y), S = l + w(x) * n, M = u + T(x) * n;
this._vset(l, u);
this._vset(S, M);
}
this._vset(d, p);
this._vset(l - a * n, u - c * n);
} else {
var D = this._chooseBevel(e.flags & m.PT_INNERBEVEL, t, e, -n), R = D[0], I = D[1], P = D[2], O = D[3], L = E(o, s), V = E(c, a);
V < L && (V += 2 * b);
this._vset(l + s * n, u + o * n);
this._vset(R, I);
for (var N = B(A((V - L) / b) * r, 2, r), F = 0; F < N; F++) {
var z = L + F / (N - 1) * (V - L), k = l + w(z) * i, G = u + T(z) * i;
this._vset(k, G);
this._vset(l, u);
}
this._vset(l + a * n, u + c * n);
this._vset(P, O);
}
};
i._bevelJoin = function(t, e, i, n) {
var r, s, o, a, c, l, u, h, f = t.dy, _ = -t.dx, d = e.dy, p = -e.dx;
if (e.flags & m.PT_LEFT) {
var y = this._chooseBevel(e.flags & m.PT_INNERBEVEL, t, e, i);
c = y[0];
l = y[1];
u = y[2];
h = y[3];
this._vset(c, l);
this._vset(e.x - f * n, e.y - _ * n);
this._vset(u, h);
this._vset(e.x - d * n, e.y - p * n);
} else {
var v = this._chooseBevel(e.flags & m.PT_INNERBEVEL, t, e, -n);
r = v[0];
s = v[1];
o = v[2];
a = v[3];
this._vset(e.x + f * i, e.y + _ * i);
this._vset(r, s);
this._vset(e.x + d * i, e.y + p * i);
this._vset(o, a);
}
};
i._vset = function(t, e) {
var i = this._buffer, n = i.meshbuffer, r = 3 * i.vertexStart, s = n._vData, o = n._uintVData;
s[r] = t;
s[r + 1] = e;
o[r + 2] = this._curColor;
i.vertexStart++;
n._dirty = !0;
};
return e;
})(n.default);
i.default = D;
n.default.register(cc.Graphics, D);
e.exports = i.default;
}), {
"../../../../../renderer/core/input-assembler": 350,
"../../../../graphics/graphics": 172,
"../../../../graphics/types": 175,
"../../../assembler": 259,
"../../../index": 262,
"../../mesh-buffer": 298,
"../../vertex-format": 301,
"./earcut": 271,
"./impl": 272
} ],
274: [ (function(t, e, i) {
"use strict";
cc.assemblers = {};
t("./sprite");
t("./mask-assembler");
t("./graphics");
t("./label");
t("./motion-streak");
}), {
"./graphics": 273,
"./label": 281,
"./mask-assembler": 282,
"./motion-streak": 283,
"./sprite": 296
} ],
275: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var l = 0, u = (function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.initData = function() {
this._renderData.createFlexData(0, 4, 6, this.getVfmt());
};
i._reserveQuads = function(t, e) {
var i = 4 * e, n = 6 * e, r = this._renderData._flexBuffer;
r.reserve(i, n);
r.used(i, n);
for (var s = this._renderData.iDatas[0], o = 0, a = 0, c = n; o < c; o += 6, a += 4) {
s[o] = a;
s[o + 1] = a + 1;
s[o + 2] = a + 2;
s[o + 3] = a + 1;
s[o + 4] = a + 3;
s[o + 5] = a + 2;
}
l = 0;
};
i._quadsUpdated = function(t) {
l = 0;
this._renderData._flexBuffer.used(this.verticesCount, this.indicesCount);
};
i._getColor = function(t) {
return t.node._color._val;
};
i.appendQuad = function(t, e, i, n, r, s, o) {
var a = this._renderData, c = a.vDatas[0], u = a.uintVDatas[0];
this.verticesCount += 4;
this.indicesCount = this.verticesCount / 2 * 3;
var h, f, _, d, p = e.width, m = e.height, y = i.width, v = i.height, g = this._getColor(t), b = this.floatsPerVert, C = l + this.uvOffset;
if (n) {
h = i.x / p;
_ = (i.x + v) / p;
f = (i.y + y) / m;
d = i.y / m;
c[C] = h;
c[C + 1] = d;
c[C += b] = h;
c[C + 1] = f;
c[C += b] = _;
c[C + 1] = d;
c[C += b] = _;
c[C + 1] = f;
} else {
h = i.x / p;
_ = (i.x + y) / p;
f = (i.y + v) / m;
d = i.y / m;
c[C] = h;
c[C + 1] = f;
c[C += b] = _;
c[C + 1] = f;
c[C += b] = h;
c[C + 1] = d;
c[C += b] = _;
c[C + 1] = d;
}
h = r;
_ = r + y * o;
f = s - v * o;
d = s;
this.appendVerts(t, l, h, _, f, d);
for (var x = l + this.colorOffset, A = 0; A < 4; A++) {
u[x] = g;
x += b;
}
l += 4 * this.floatsPerVert;
};
i.appendVerts = function(t, e, i, n, r, s) {
var o = this._local, a = this.floatsPerVert;
o[e] = i;
o[e + 1] = r;
o[e += a] = n;
o[e + 1] = r;
o[e += a] = i;
o[e + 1] = s;
o[e += a] = n;
o[e + 1] = s;
};
i.updateWorldVerts = function(t) {
for (var e = t.node._worldMatrix.m, i = e[0], n = e[1], r = e[4], s = e[5], o = e[12], a = e[13], c = this._local, l = this._renderData.vDatas[0], u = this.floatsPerVert, h = 0; h < c.length; h += u) {
var f = c[h], _ = c[h + 1];
l[h] = f * i + _ * r + o;
l[h + 1] = f * n + _ * s + a;
}
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../../../../utils/label/bmfont")).default);
i.default = u;
e.exports = i.default;
}), {
"../../../../utils/label/bmfont": 266
} ],
276: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
t("../../../../../platform/js"), t("./bmfont");
var l = t("../../../../utils/label/letter-font"), u = cc.color(255, 255, 255, 255), h = (function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.createData = function(t) {
return t.requestRenderData();
};
i._getColor = function(t) {
u._fastSetA(t.node._color.a);
return u._val;
};
i.updateColor = function(e) {
var i = this._getColor(e);
t.prototype.updateColor.call(this, e, i);
};
return e;
})(l);
i.default = h;
e.exports = i.default;
}), {
"../../../../../platform/js": 250,
"../../../../utils/label/letter-font": 268,
"./bmfont": 275
} ],
277: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../utils/label/ttf"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = t("../../../../../components/CCLabelShadow"), h = cc.color(255, 255, 255, 255), f = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.updateUVs = function(t) {
for (var e = this._renderData.vDatas[0], i = t._frame.uv, n = this.uvOffset, r = this.floatsPerVert, s = 0; s < 4; s++) {
var o = 2 * s, a = r * s + n;
e[a] = i[o];
e[a + 1] = i[o + 1];
}
};
i.updateColor = function(e) {
h._fastSetA(e.node._color.a);
var i = h._val;
t.prototype.updateColor.call(this, e, i);
};
i.updateVerts = function(t) {
var e = t.node, i = t._ttfTexture.width, n = t._ttfTexture.height, r = e.anchorX * e.width, s = e.anchorY * e.height, o = u && t.getComponent(u);
if (o && o._enabled) {
var a = (i - e.width) / 2, c = (n - e.height) / 2, l = o.offset;
-l.x > a ? r += i - e.width : a > l.x && (r += a - l.x);
-l.y > c ? s += n - e.height : c > l.y && (s += c - l.y);
}
var h = this._local;
h[0] = -r;
h[1] = -s;
h[2] = i - r;
h[3] = n - s;
this.updateUVs(t);
this.updateWorldVerts(t);
};
return e;
})(n.default);
i.default = f;
e.exports = i.default;
}), {
"../../../../../components/CCLabelShadow": 124,
"../../../../utils/label/ttf": 269
} ],
278: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../../value-types/vec3"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = t("../../../../assembler-3d"), h = t("../2d/bmfont"), f = new n.default(), _ = new n.default(), d = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
return e;
})(h);
i.default = d;
cc.js.mixin(d.prototype, u, {
updateWorldVerts: function(t) {
for (var e = t.node._worldMatrix, i = this._local, r = this._renderData.vDatas[0], s = this.floatsPerVert, o = 0; o < r.length; o += s) {
n.default.set(f, i[o], i[o + 1], 0);
n.default.transformMat4(_, f, e);
r[o] = _.x;
r[o + 1] = _.y;
r[o + 2] = _.z;
}
}
});
e.exports = i.default;
}), {
"../../../../../value-types/vec3": 338,
"../../../../assembler-3d": 257,
"../2d/bmfont": 275
} ],
279: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var l = t("../../../../assembler-3d"), u = (function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
return e;
})(t("../2d/letter"));
i.default = u;
cc.js.mixin(u.prototype, l);
e.exports = i.default;
}), {
"../../../../assembler-3d": 257,
"../2d/letter": 276
} ],
280: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var l = t("../../../../assembler-3d"), u = (function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
return e;
})(t("../2d/ttf"));
i.default = u;
cc.js.mixin(u.prototype, l);
e.exports = i.default;
}), {
"../../../../assembler-3d": 257,
"../2d/ttf": 277
} ],
281: [ (function(t, e, i) {
"use strict";
var n = h(t("../../../assembler")), r = h(t("../../../../components/CCLabel")), s = h(t("./2d/ttf")), o = h(t("./2d/bmfont")), a = h(t("./2d/letter")), c = h(t("./3d/ttf")), l = h(t("./3d/bmfont")), u = h(t("./3d/letter"));
function h(t) {
return t && t.__esModule ? t : {
default: t
};
}
r.default._canvasPool = {
pool: [],
get: function() {
var t = this.pool.pop();
if (!t) {
var e = document.createElement("canvas");
t = {
canvas: e,
context: e.getContext("2d")
};
}
return t;
},
put: function(t) {
this.pool.length >= 32 || this.pool.push(t);
}
};
n.default.register(cc.Label, {
getConstructor: function(t) {
var e = t.node.is3DNode, i = e ? c.default : s.default;
t.font instanceof cc.BitmapFont ? i = e ? l.default : o.default : t.cacheMode === r.default.CacheMode.CHAR && (cc.sys.browserType === cc.sys.BROWSER_TYPE_WECHAT_GAME_SUB ? cc.warn("sorry, subdomain does not support CHAR mode currently!") : i = e ? u.default : a.default);
return i;
},
TTF: s.default,
Bmfont: o.default,
Letter: a.default,
TTF3D: c.default,
Bmfont3D: l.default,
Letter3D: u.default
});
}), {
"../../../../components/CCLabel": 122,
"../../../assembler": 259,
"./2d/bmfont": 275,
"./2d/letter": 276,
"./2d/ttf": 277,
"./3d/bmfont": 278,
"./3d/letter": 279,
"./3d/ttf": 280
} ],
282: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.MaskAssembler = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../assembler"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = t("../../../components/CCMask"), h = t("../../render-flow"), f = t("./sprite/2d/simple"), _ = t("./graphics"), d = t("../../../../renderer/gfx"), p = t("../vertex-format").vfmtPos, m = 8, y = [];
function v() {
return 1 << y.length - 1;
}
function g() {
for (var t = 0, e = 0; e < y.length; ++e) t += 1 << e;
return t;
}
function b(t, e, i, n, r, s) {
var o = t.effect, a = d.STENCIL_OP_KEEP, c = d.STENCIL_OP_KEEP;
o.setStencil(d.STENCIL_ENABLE, e, n, r, i, a, c, s);
}
function C(t) {
y.length + 1 > m && cc.errorID(9e3, m);
y.push(t);
}
function x(t, e) {
0 === y.length && cc.errorID(9001);
y.pop();
0 === y.length ? e._flushMaterial(t._exitMaterial) : w(e);
}
function A(t, e) {
var i = d.DS_FUNC_NEVER, n = v(), r = n, s = n, o = t.inverted ? d.STENCIL_OP_REPLACE : d.STENCIL_OP_ZERO;
b(t._clearMaterial, i, o, n, r, s);
var a = e.getBuffer("mesh", p), c = a.request(4, 6), l = c.indiceOffset, u = c.byteOffset >> 2, h = c.vertexOffset, f = a._vData, _ = a._iData;
f[u++] = -1;
f[u++] = -1;
f[u++] = -1;
f[u++] = 1;
f[u++] = 1;
f[u++] = 1;
f[u++] = 1;
f[u++] = -1;
_[l++] = h;
_[l++] = h + 3;
_[l++] = h + 1;
_[l++] = h + 1;
_[l++] = h + 3;
_[l++] = h + 2;
e.node = e._dummyNode;
e.material = t._clearMaterial;
e._flush();
}
function S(t, e) {
var i = d.DS_FUNC_NEVER, n = v(), r = n, s = n, o = t.inverted ? d.STENCIL_OP_ZERO : d.STENCIL_OP_REPLACE;
b(t._materials[0], i, o, n, r, s);
e.material = t._materials[0];
if (t._type === u.Type.IMAGE_STENCIL) {
e.node = e._dummyNode;
f.prototype.fillBuffers.call(t._assembler, t, e);
e._flush();
} else {
e.node = t.node;
_.prototype.fillBuffers.call(t._graphics._assembler, t._graphics, e);
}
}
function w(t) {
var e = d.DS_FUNC_EQUAL, i = d.STENCIL_OP_KEEP, n = g(), r = n, s = v(), o = y[y.length - 1];
b(o._enableMaterial, e, i, n, r, s);
t._flushMaterial(o._enableMaterial);
}
var T = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.updateRenderData = function(t) {
if (t._type === u.Type.IMAGE_STENCIL) t.spriteFrame ? f.prototype.updateRenderData.call(this, t) : t.setMaterial(0, null); else {
t._graphics.setMaterial(0, t._materials[0]);
_.prototype.updateRenderData.call(t._graphics._assembler, t._graphics, t._graphics);
}
};
i.fillBuffers = function(t, e) {
if (t._type !== u.Type.IMAGE_STENCIL || t.spriteFrame) {
C(t);
A(t, e);
S(t, e);
w(e);
}
t.node._renderFlag |= h.FLAG_UPDATE_RENDER_DATA;
};
i.postFillBuffers = function(t, e) {
(t._type !== u.Type.IMAGE_STENCIL || t.spriteFrame) && x(t, e);
t.node._renderFlag |= h.FLAG_UPDATE_RENDER_DATA;
};
return e;
})(f);
i.MaskAssembler = T;
n.default.register(u, T);
}), {
"../../../../renderer/gfx": 354,
"../../../components/CCMask": 126,
"../../assembler": 259,
"../../render-flow": 263,
"../vertex-format": 301,
"./graphics": 273,
"./sprite/2d/simple": 287
} ],
283: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../assembler-2d"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = t("../../../components/CCMotionStreak"), h = t("../../render-flow");
function f(t, e) {
this.point = t || cc.v2();
this.dir = e || cc.v2();
this.distance = 0;
this.time = 0;
}
f.prototype.setPoint = function(t, e) {
this.point.x = t;
this.point.y = e;
};
f.prototype.setDir = function(t, e) {
this.dir.x = t;
this.dir.y = e;
};
cc.v2(), cc.v2();
var _ = cc.v2(), d = cc.v2();
function p(t, e) {
t.x = -e.y;
t.y = e.x;
return t;
}
var m = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.initData = function() {
this._renderData.createFlexData(0, 16, 42);
};
i.update = function(t, e) {
0;
var i, n = t._stroke / 2, r = t.node._worldMatrix.m, s = r[12], o = r[13], a = t._points;
if (a.length > 1) {
var c = a[0].point.x - s, l = a[0].point.y - o;
c * c + l * l < t.minSeg && (i = a[0]);
}
if (!i) {
i = new f();
a.splice(0, 0, i);
}
i.setPoint(s, o);
i.time = t._fadeTime + e;
var u, h = 0;
if (!(a.length < 2)) {
var m = t._color, y = m.r, v = m.g, g = m.b, b = m.a, C = a[1];
C.distance = i.point.sub(C.point, d).mag();
d.normalizeSelf();
C.setDir(d.x, d.y);
i.setDir(d.x, d.y);
var x = this._renderData._flexBuffer;
x.reserve(2 * a.length, 6 * (a.length - 1));
for (var A = x.vData, S = x.uintVData, w = t._fadeTime, T = !1, E = a.length - 1; E >= 0; E--) {
var M = a[E], B = M.point, D = M.dir;
M.time -= e;
if (M.time < 0) a.splice(E, 1); else {
var R = M.time / w, I = a[E - 1];
if (!T) {
if (!I) {
a.splice(E, 1);
continue;
}
B.x = I.point.x - D.x * R;
B.y = I.point.y - D.y * R;
}
T = !0;
p(_, D);
var P = (R * b << 24 >>> 0) + (g << 16) + (v << 8) + y, O = 5 * h;
A[O] = B.x + _.x * n;
A[O + 1] = B.y + _.y * n;
A[O + 2] = 1;
A[O + 3] = R;
S[O + 4] = P;
A[O += 5] = B.x - _.x * n;
A[O + 1] = B.y - _.y * n;
A[O + 2] = 0;
A[O + 3] = R;
S[O + 4] = P;
h += 2;
}
}
u = h <= 2 ? 0 : 3 * (h - 2);
x.used(h, u);
}
};
i.fillBuffers = function(t, e) {
var i = this._renderData._flexBuffer, n = i.vData, r = i.usedVertices, s = i.usedIndices, o = i.usedVerticesFloats, a = e._meshBuffer, c = a.request(r, s), l = c.byteOffset >> 2, u = a._vData;
n.length + l > u.length ? u.set(n.subarray(0, o), l) : u.set(n, l);
for (var f = a._iData, _ = c.indiceOffset, d = c.vertexOffset, p = 0, m = r; p < m; p += 2) {
var y = d + p;
f[_++] = y;
f[_++] = y + 2;
f[_++] = y + 1;
f[_++] = y + 1;
f[_++] = y + 2;
f[_++] = y + 3;
}
t.node._renderFlag |= h.FLAG_UPDATE_RENDER_DATA;
};
return e;
})(n.default);
i.default = m;
m.register(u, m);
e.exports = i.default;
}), {
"../../../components/CCMotionStreak": 127,
"../../assembler-2d": 256,
"../../render-flow": 263
} ],
284: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../assembler-2d"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = t("../../../../../components/CCSprite").FillType, h = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.updateRenderData = function(t) {
var e = t._spriteFrame;
this.packToDynamicAtlas(t, e);
if (t._vertsDirty) {
var i = t._fillStart, n = t._fillRange;
if (n < 0) {
i += n;
n = -n;
}
n = i + n;
i = (i = i > 1 ? 1 : i) < 0 ? 0 : i;
n = (n = n > 1 ? 1 : n) < 0 ? 0 : n;
var r = i + (n = (n -= i) < 0 ? 0 : n);
r = r > 1 ? 1 : r;
this.updateUVs(t, i, r);
this.updateVerts(t, i, r);
t._vertsDirty = !1;
}
};
i.updateUVs = function(t, e, i) {
var n, r, s, o, a, c, l, h, f, _, d, p, m = t._spriteFrame, y = m._texture.width, v = m._texture.height, g = m._rect;
if (m._rotated) {
n = g.x / y;
r = (g.y + g.width) / v;
s = (g.x + g.height) / y;
o = g.y / v;
a = l = n;
f = d = s;
h = p = r;
c = _ = o;
} else {
n = g.x / y;
r = (g.y + g.height) / v;
s = (g.x + g.width) / y;
o = g.y / v;
a = f = n;
l = d = s;
c = h = r;
_ = p = o;
}
var b = this._renderData.vDatas[0], C = this.uvOffset, x = this.floatsPerVert;
switch (t._fillType) {
case u.HORIZONTAL:
b[C] = a + (l - a) * e;
b[C + 1] = c + (h - c) * e;
b[C + x] = a + (l - a) * i;
b[C + x + 1] = c + (h - c) * i;
b[C + 2 * x] = f + (d - f) * e;
b[C + 2 * x + 1] = _ + (p - _) * e;
b[C + 3 * x] = f + (d - f) * i;
b[C + 3 * x + 1] = _ + (p - _) * i;
break;

case u.VERTICAL:
b[C] = a + (f - a) * e;
b[C + 1] = c + (_ - c) * e;
b[C + x] = l + (d - l) * e;
b[C + x + 1] = h + (p - h) * e;
b[C + 2 * x] = a + (f - a) * i;
b[C + 2 * x + 1] = c + (_ - c) * i;
b[C + 3 * x] = l + (d - l) * i;
b[C + 3 * x + 1] = h + (p - h) * i;
break;

default:
cc.errorID(2626);
}
};
i.updateVerts = function(t, e, i) {
var n, r = t.node, s = r.width, o = r.height, a = r.anchorX * s, c = r.anchorY * o, l = -a, h = -c, f = s - a, _ = o - c;
switch (t._fillType) {
case u.HORIZONTAL:
n = l + (f - l) * i;
l = l + (f - l) * e;
f = n;
break;

case u.VERTICAL:
n = h + (_ - h) * i;
h = h + (_ - h) * e;
_ = n;
break;

default:
cc.errorID(2626);
}
var d = this._local;
d[0] = l;
d[1] = h;
d[2] = f;
d[3] = _;
this.updateWorldVerts(t);
};
return e;
})(n.default);
i.default = h;
e.exports = i.default;
}), {
"../../../../../components/CCSprite": 136,
"../../../../assembler-2d": 256
} ],
285: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var l = (function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.initData = function(t) {
this._renderData.createFlexData(0, 4, 6, this.getVfmt());
};
i.updateRenderData = function(t) {
this.packToDynamicAtlas(t, t._spriteFrame);
var e = t.spriteFrame;
if (e) {
var i = e.vertices;
if (i) {
this.verticesCount = i.x.length;
this.indicesCount = i.triangles.length;
var n = this._renderData._flexBuffer;
if (n.reserve(this.verticesCount, this.indicesCount)) {
this.updateColor(t);
t._vertsDirty = !0;
}
n.used(this.verticesCount, this.indicesCount);
this.updateIndices(i.triangles);
if (t._vertsDirty) {
this.updateUVs(t);
this.updateVerts(t);
this.updateWorldVerts(t);
t._vertsDirty = !1;
}
}
}
};
i.updateIndices = function(t) {
this._renderData.iDatas[0].set(t);
};
i.updateUVs = function(t) {
for (var e = t.spriteFrame.vertices, i = e.nu, n = e.nv, r = this.uvOffset, s = this.floatsPerVert, o = this._renderData.vDatas[0], a = 0; a < i.length; a++) {
var c = s * a + r;
o[c] = i[a];
o[c + 1] = n[a];
}
};
i.updateVerts = function(t) {
var e = t.node, i = Math.abs(e.width), n = Math.abs(e.height), r = e.anchorX * i, s = e.anchorY * n, o = t.spriteFrame, a = o.vertices, c = a.x, l = a.y, u = o._originalSize.width, h = o._originalSize.height, f = o._rect.width, _ = o._rect.height, d = o._offset.x + (u - f) / 2, p = o._offset.y + (h - _) / 2, m = i / (t.trim ? f : u), y = n / (t.trim ? _ : h), v = this._local;
if (t.trim) for (var g = 0, b = c.length; g < b; g++) {
var C = 2 * g;
v[C] = (c[g] - d) * m - r;
v[C + 1] = (h - l[g] - p) * y - s;
} else for (var x = 0, A = c.length; x < A; x++) {
var S = 2 * x;
v[S] = c[x] * m - r;
v[S + 1] = (h - l[x]) * y - s;
}
};
i.updateWorldVerts = function(t) {
for (var e = t.node._worldMatrix.m, i = e[0], n = e[1], r = e[4], s = e[5], o = e[12], a = e[13], c = this._local, l = this._renderData.vDatas[0], u = this.floatsPerVert, h = 0, f = this.verticesCount; h < f; h++) {
var _ = c[2 * h], d = c[2 * h + 1];
l[u * h] = _ * i + d * r + o;
l[u * h + 1] = _ * n + d * s + a;
}
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../../../../assembler-2d")).default);
i.default = l;
e.exports = i.default;
}), {
"../../../../assembler-2d": 256
} ],
286: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../assembler-2d"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = 2 * Math.PI, h = [ cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0) ], f = [ 0, 0, 0, 0 ], _ = [ 0, 0, 0, 0, 0, 0, 0, 0 ], d = [ cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0) ], p = [ cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0), cc.v2(0, 0) ], m = cc.v2(0, 0), y = [];
function v(t, e, i, n, r, s, o) {
var a, c, l = Math.sin(s), u = Math.cos(s);
if (0 !== Math.cos(s)) {
a = l / u;
if ((t - r.x) * u > 0) {
var h = r.y + a * (t - r.x);
o[0].x = t;
o[0].y = h;
}
if ((e - r.x) * u > 0) {
var f = r.y + a * (e - r.x);
o[2].x = e;
o[2].y = f;
}
}
if (0 !== Math.sin(s)) {
c = u / l;
if ((n - r.y) * l > 0) {
var _ = r.x + c * (n - r.y);
o[3].x = _;
o[3].y = n;
}
if ((i - r.y) * l > 0) {
var d = r.x + c * (i - r.y);
o[1].x = d;
o[1].y = i;
}
}
}
function g(t) {
var e = t.node, i = e.width, n = e.height, r = e.anchorX * i, s = e.anchorY * n, o = -r, a = -s, c = i - r, l = n - s, u = f;
u[0] = o;
u[1] = a;
u[2] = c;
u[3] = l;
var _ = t._fillCenter, d = m.x = Math.min(Math.max(0, _.x), 1) * (c - o) + o, p = m.y = Math.min(Math.max(0, _.y), 1) * (l - a) + a;
h[0].x = h[3].x = o;
h[1].x = h[2].x = c;
h[0].y = h[1].y = a;
h[2].y = h[3].y = l;
y.length = 0;
d !== u[0] && (y[0] = [ 3, 0 ]);
d !== u[2] && (y[2] = [ 1, 2 ]);
p !== u[1] && (y[1] = [ 0, 1 ]);
p !== u[3] && (y[3] = [ 2, 3 ]);
}
function b(t) {
var e, i, n, r, s = t._texture.width, o = t._texture.height, a = t._rect, c = _;
if (t._rotated) {
e = a.x / s;
i = (a.x + a.height) / s;
n = a.y / o;
r = (a.y + a.width) / o;
c[0] = c[2] = e;
c[4] = c[6] = i;
c[3] = c[7] = r;
c[1] = c[5] = n;
} else {
e = a.x / s;
i = (a.x + a.width) / s;
n = a.y / o;
r = (a.y + a.height) / o;
c[0] = c[4] = e;
c[2] = c[6] = i;
c[1] = c[3] = r;
c[5] = c[7] = n;
}
}
function C(t, e) {
var i, n;
i = e.x - t.x;
n = e.y - t.y;
if (0 !== i || 0 !== n) {
if (0 === i) return n > 0 ? .5 * Math.PI : 1.5 * Math.PI;
var r = Math.atan(n / i);
i < 0 && (r += Math.PI);
return r;
}
}
var x = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.initData = function(t) {
this._renderData.createFlexData(0, 4, 6, this.getVfmt());
this.updateIndices();
};
i.updateRenderData = function(e) {
t.prototype.updateRenderData.call(this, e);
var i = e.spriteFrame;
this.packToDynamicAtlas(e, i);
if (e._vertsDirty) {
var n = e._fillStart, r = e._fillRange;
if (r < 0) {
n += r;
r = -r;
}
for (;n >= 1; ) n -= 1;
for (;n < 0; ) n += 1;
n *= u;
r *= u;
g(e);
b(i);
v(f[0], f[2], f[1], f[3], m, n, d);
v(f[0], f[2], f[1], f[3], m, n + r, p);
this.updateVerts(e, n, r);
e._vertsDirty = !1;
}
};
i.updateVerts = function(t, e, i) {
var n = e + i, r = this._local;
r.length = 0;
for (var s = 0, o = 3 * this.floatsPerVert, a = 0; a < 4; ++a) {
var c = y[a];
if (c) if (i >= u) {
r.length = s + o;
this._generateTriangle(r, s, m, h[c[0]], h[c[1]]);
s += o;
} else {
var l = C(m, h[c[0]]), f = C(m, h[c[1]]);
f < l && (f += u);
l -= u;
f -= u;
for (var _ = 0; _ < 3; ++_) {
if (l >= n) ; else if (l >= e) {
r.length = s + o;
f >= n ? this._generateTriangle(r, s, m, h[c[0]], p[a]) : this._generateTriangle(r, s, m, h[c[0]], h[c[1]]);
s += o;
} else if (f <= e) ; else if (f <= n) {
r.length = s + o;
this._generateTriangle(r, s, m, d[a], h[c[1]]);
s += o;
} else {
r.length = s + o;
this._generateTriangle(r, s, m, d[a], p[a]);
s += o;
}
l += u;
f += u;
}
}
}
this.allocWorldVerts(t);
this.updateWorldVerts(t);
};
i.allocWorldVerts = function(t) {
var e = t.node._color._val, i = this._renderData, n = this.floatsPerVert, r = this._local, s = r.length / n;
this.verticesCount = this.indicesCount = s;
var o = i._flexBuffer;
o.reserve(s, s) && this.updateIndices();
o.used(this.verticesCount, this.indicesCount);
for (var a = i.vDatas[0], c = i.uintVDatas[0], l = this.uvOffset, u = 0; u < r.length; u += n) {
var h = u + l;
a[h] = r[h];
a[h + 1] = r[h + 1];
c[h + 2] = e;
}
};
i.updateIndices = function() {
for (var t = this._renderData.iDatas[0], e = 0; e < t.length; e++) t[e] = e;
};
i.updateWorldVerts = function(t) {
for (var e = t.node._worldMatrix.m, i = e[0], n = e[1], r = e[4], s = e[5], o = e[12], a = e[13], c = this._local, l = this._renderData.vDatas[0], u = this.floatsPerVert, h = 0; h < c.length; h += u) {
var f = c[h], _ = c[h + 1];
l[h] = f * i + _ * r + o;
l[h + 1] = f * n + _ * s + a;
}
};
i._generateTriangle = function(t, e, i, n, r) {
var s = f, o = s[0], a = s[1], c = s[2], l = s[3], u = this.floatsPerVert;
t[e] = i.x;
t[e + 1] = i.y;
t[e + u] = n.x;
t[e + u + 1] = n.y;
t[e + 2 * u] = r.x;
t[e + 2 * u + 1] = r.y;
var h, _, d = this.uvOffset;
h = (i.x - o) / (c - o);
_ = (i.y - a) / (l - a);
this._generateUV(h, _, t, e + d);
h = (n.x - o) / (c - o);
_ = (n.y - a) / (l - a);
this._generateUV(h, _, t, e + u + d);
h = (r.x - o) / (c - o);
_ = (r.y - a) / (l - a);
this._generateUV(h, _, t, e + 2 * u + d);
};
i._generateUV = function(t, e, i, n) {
var r = _, s = r[0] + (r[2] - r[0]) * t, o = r[4] + (r[6] - r[4]) * t, a = r[1] + (r[3] - r[1]) * t, c = r[5] + (r[7] - r[5]) * t;
i[n] = s + (o - s) * e;
i[n + 1] = a + (c - a) * e;
};
return e;
})(n.default);
i.default = x;
e.exports = i.default;
}), {
"../../../../assembler-2d": 256
} ],
287: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var l = (function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.updateRenderData = function(t) {
this.packToDynamicAtlas(t, t._spriteFrame);
if (t._vertsDirty) {
this.updateUVs(t);
this.updateVerts(t);
t._vertsDirty = !1;
}
};
i.updateUVs = function(t) {
for (var e = t._spriteFrame.uv, i = this.uvOffset, n = this.floatsPerVert, r = this._renderData.vDatas[0], s = 0; s < 4; s++) {
var o = 2 * s, a = n * s + i;
r[a] = e[o];
r[a + 1] = e[o + 1];
}
};
i.updateVerts = function(t) {
var e, i, n, r, s = t.node, o = s.width, a = s.height, c = s.anchorX * o, l = s.anchorY * a;
if (t.trim) {
e = -c;
i = -l;
n = o - c;
r = a - l;
} else {
var u = t.spriteFrame, h = u._originalSize.width, f = u._originalSize.height, _ = u._rect.width, d = u._rect.height, p = u._offset, m = o / h, y = a / f, v = p.x + (h - _) / 2, g = p.x - (h - _) / 2, b = p.y + (f - d) / 2, C = p.y - (f - d) / 2;
e = v * m - c;
i = b * y - l;
n = o + g * m - c;
r = a + C * y - l;
}
var x = this._local;
x[0] = e;
x[1] = i;
x[2] = n;
x[3] = r;
this.updateWorldVerts(t);
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../../../../assembler-2d")).default);
i.default = l;
e.exports = i.default;
}), {
"../../../../assembler-2d": 256
} ],
288: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var l = (function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.initData = function(t) {
if (!(this._renderData.meshCount > 0)) {
this._renderData.createData(0, this.verticesFloats, this.indicesCount);
for (var e = this._renderData.iDatas[0], i = 0, n = 0; n < 3; ++n) for (var r = 0; r < 3; ++r) {
var s = 4 * n + r;
e[i++] = s;
e[i++] = s + 1;
e[i++] = s + 4;
e[i++] = s + 1;
e[i++] = s + 5;
e[i++] = s + 4;
}
}
};
i.initLocal = function() {
this._local = [];
this._local.length = 8;
};
i.updateRenderData = function(t) {
var e = t._spriteFrame;
this.packToDynamicAtlas(t, e);
if (t._vertsDirty) {
this.updateUVs(t);
this.updateVerts(t);
t._vertsDirty = !1;
}
};
i.updateVerts = function(t) {
var e = t.node, i = e.width, n = e.height, r = e.anchorX * i, s = e.anchorY * n, o = t.spriteFrame, a = o.insetLeft, c = o.insetRight, l = o.insetTop, u = o.insetBottom, h = i - a - c, f = n - l - u, _ = i / (a + c), d = n / (l + u);
_ = isNaN(_) || _ > 1 ? 1 : _;
d = isNaN(d) || d > 1 ? 1 : d;
h = h < 0 ? 0 : h;
f = f < 0 ? 0 : f;
var p = this._local;
p[0] = -r;
p[1] = -s;
p[2] = a * _ - r;
p[3] = u * d - s;
p[4] = p[2] + h;
p[5] = p[3] + f;
p[6] = i - r;
p[7] = n - s;
this.updateWorldVerts(t);
};
i.updateUVs = function(t) {
for (var e = this._renderData.vDatas[0], i = t.spriteFrame.uvSliced, n = this.uvOffset, r = this.floatsPerVert, s = 0; s < 4; ++s) for (var o = 0; o < 4; ++o) {
var a = 4 * s + o, c = i[a], l = a * r;
e[l + n] = c.u;
e[l + n + 1] = c.v;
}
};
i.updateWorldVerts = function(t) {
for (var e = t.node._worldMatrix.m, i = e[0], n = e[1], r = e[4], s = e[5], o = e[12], a = e[13], c = this._local, l = this._renderData.vDatas[0], u = this.floatsPerVert, h = 0; h < 4; ++h) for (var f = c[2 * h + 1], _ = 0; _ < 4; ++_) {
var d = c[2 * _], p = (4 * h + _) * u;
l[p] = d * i + f * r + o;
l[p + 1] = d * n + f * s + a;
}
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../../../../assembler-2d")).default);
i.default = l;
Object.assign(l.prototype, {
verticesCount: 16,
indicesCount: 54
});
e.exports = i.default;
}), {
"../../../../assembler-2d": 256
} ],
289: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var l = (function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.initData = function(t) {
this.verticesCount = 0;
this.contentWidth = 0;
this.contentHeight = 0;
this.rectWidth = 0;
this.rectHeight = 0;
this.hRepeat = 0;
this.vRepeat = 0;
this.row = 0;
this.col = 0;
this._renderData.createFlexData(0, 4, 6, this.getVfmt());
this._updateIndices();
};
i.initLocal = function() {
this._local = {
x: [],
y: []
};
};
i._updateIndices = function() {
for (var t = this._renderData.iDatas[0], e = 0, i = 0, n = t.length; e < n; e += 6, 
i += 4) {
t[e] = i;
t[e + 1] = i + 1;
t[e + 2] = i + 2;
t[e + 3] = i + 1;
t[e + 4] = i + 3;
t[e + 5] = i + 2;
}
};
i.updateRenderData = function(t) {
var e = t._spriteFrame;
this.packToDynamicAtlas(t, e);
var i = t.node, n = this.contentWidth = Math.abs(i.width), r = this.contentHeight = Math.abs(i.height), s = e._rect, o = e.insetLeft, a = e.insetRight, c = s.width - o - a, l = e.insetTop, u = e.insetBottom, h = s.height - l - u;
this.sizableWidth = n - o - a;
this.sizableHeight = r - l - u;
this.sizableWidth = this.sizableWidth > 0 ? this.sizableWidth : 0;
this.sizableHeight = this.sizableHeight > 0 ? this.sizableHeight : 0;
var f = this.hRepeat = 0 === c ? this.sizableWidth : this.sizableWidth / c, _ = this.vRepeat = 0 === h ? this.sizableHeight : this.sizableHeight / h, d = (this.row = Math.ceil(_ + 2)) * (this.col = Math.ceil(f + 2));
this.verticesCount = 4 * d;
this.indicesCount = 6 * d;
var p = this._renderData._flexBuffer;
if (p.reserve(this.verticesCount, this.indicesCount)) {
this._updateIndices();
this.updateColor(t);
}
p.used(this.verticesCount, this.indicesCount);
if (t._vertsDirty) {
this.updateUVs(t);
this.updateVerts(t);
t._vertsDirty = !1;
}
};
i.updateVerts = function(t) {
var e = t._spriteFrame, i = e._rect, n = t.node, r = n.anchorX * n.width, s = n.anchorY * n.height, o = this.row, a = this.col, c = this.contentWidth, l = this.contentHeight, u = this._local, h = u.x, f = u.y;
h.length = f.length = 0;
var _ = e.insetLeft, d = e.insetRight, p = i.width - _ - d, m = e.insetTop, y = e.insetBottom, v = i.height - m - y, g = n.width / (_ + d) > 1 ? 1 : n.width / (_ + d), b = n.height / (m + y) > 1 ? 1 : n.height / (m + y), C = 0, x = 0;
C = p > 0 ? Math.floor(1e3 * this.sizableWidth) / 1e3 % p == 0 ? p : this.sizableWidth % p : this.sizableWidth;
x = v > 0 ? Math.floor(1e3 * this.sizableHeight) / 1e3 % v == 0 ? v : this.sizableHeight % v : this.sizableHeight;
for (var A = 0; A <= a; A++) 0 === A ? h[A] = -r : A > 0 && A < a ? h[A] = 1 === A ? _ * g + Math.min(p, this.sizableWidth) - r : p > 0 ? A === a - 1 ? _ + C + p * (A - 2) - r : _ + Math.min(p, this.sizableWidth) + p * (A - 2) - r : _ + this.sizableWidth - r : A === a && (h[A] = Math.min(_ + this.sizableWidth + d, c) - r);
for (var S = 0; S <= o; S++) 0 === S ? f[S] = -s : S > 0 && S < o ? f[S] = 1 === S ? y * b + Math.min(v, this.sizableHeight) - s : v > 0 ? S === o - 1 ? y + x + (S - 2) * v - s : y + Math.min(v, this.sizableHeight) + (S - 2) * v - s : y + this.sizableHeight - s : S === o && (f[S] = Math.min(y + this.sizableHeight + m, l) - s);
this.updateWorldVerts(t);
};
i.updateWorldVerts = function(t) {
for (var e, i, n, r, s = this._renderData, o = this._local, a = o.x, c = o.y, l = s.vDatas[0], u = this.row, h = this.col, f = t.node._worldMatrix.m, _ = f[0], d = f[1], p = f[4], m = f[5], y = f[12], v = f[13], g = this.floatsPerVert, b = 0, C = 0, x = u; C < x; ++C) {
n = c[C];
r = c[C + 1];
for (var A = 0, S = h; A < S; ++A) {
e = a[A];
i = a[A + 1];
l[b] = e * _ + n * p + y;
l[b + 1] = e * d + n * m + v;
l[b += g] = i * _ + n * p + y;
l[b + 1] = i * d + n * m + v;
l[b += g] = e * _ + r * p + y;
l[b + 1] = e * d + r * m + v;
l[b += g] = i * _ + r * p + y;
l[b + 1] = i * d + r * m + v;
b += g;
}
}
};
i.updateUVs = function(t) {
var e = this._renderData.vDatas[0];
if (e) for (var i = t._spriteFrame, n = i._rect, r = i.insetLeft, s = i.insetRight, o = n.width - r - s, a = i.insetTop, c = i.insetBottom, l = n.height - a - c, u = this.row, h = this.col, f = this.hRepeat, _ = this.vRepeat, d = 0, p = 0, m = t.spriteFrame.uv, y = t.spriteFrame.uvSliced, v = t.spriteFrame._rotated, g = this.floatsPerVert, b = this.uvOffset, C = 0, x = u; C < x; ++C) {
p = this.sizableHeight > l ? this.sizableHeight >= C * l ? 1 : _ % 1 : _;
for (var A = 0, S = h; A < S; ++A) {
d = this.sizableWidth > o ? this.sizableWidth >= A * o ? 1 : f % 1 : f;
if (v) {
e[b] = m[0];
e[b + 1] = m[1];
e[b += g] = m[0];
e[b + 1] = m[1] + (m[7] - m[1]) * d;
e[b += g] = m[0] + (m[6] - m[0]) * p;
e[b + 1] = m[1];
e[b += g] = e[b - g];
e[b + 1] = e[b + 1 - 2 * g];
b += g;
} else {
0 === A ? e[b] = m[0] : A > 0 && A < h - 1 ? e[b] = y[1].u : A === h - 1 && (e[b] = y[2].u);
0 === C ? e[b + 1] = y[0].v : C > 0 && C < u - 1 ? e[b + 1] = y[4].v : C === u - 1 && (e[b + 1] = y[8].v);
b += g;
0 === A ? e[b] = y[1].u + (y[2].u - y[1].u) * d : A > 0 && A < h - 1 ? e[b] = y[1].u + (y[2].u - y[1].u) * d : A === h - 1 && (e[b] = y[3].u);
0 === C ? e[b + 1] = y[0].v : C > 0 && C < u - 1 ? e[b + 1] = y[4].v : C === u - 1 && (e[b + 1] = y[8].v);
b += g;
0 === A ? e[b] = m[0] : A > 0 && A < h - 1 ? e[b] = y[1].u : A === h - 1 && (e[b] = y[2].u);
0 === C ? e[b + 1] = y[4].v + (y[8].v - y[4].v) * p : C > 0 && C < u - 1 ? e[b + 1] = y[4].v + (y[8].v - y[4].v) * p : C === u - 1 && (e[b + 1] = y[12].v);
e[b += g] = e[b - 2 * g];
e[b + 1] = e[b + 1 - g];
b += g;
}
}
}
};
return e;
})(function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../../../../assembler-2d")).default);
i.default = l;
e.exports = i.default;
}), {
"../../../../assembler-2d": 256
} ],
290: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var l = t("../../../../assembler-3d"), u = (function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
return e;
})(t("../2d/bar-filled"));
i.default = u;
cc.js.mixin(u.prototype, l);
e.exports = i.default;
}), {
"../../../../assembler-3d": 257,
"../2d/bar-filled": 284
} ],
291: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../../value-types/vec3"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = t("../../../../assembler-3d"), h = t("../2d/mesh"), f = new n.default(), _ = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
return e;
})(h);
i.default = _;
cc.js.mixin(_.prototype, u, {
updateWorldVerts: function(t) {
for (var e = t.node._worldMatrix, i = this._local, r = this._renderData.vDatas[0], s = this.floatsPerVert, o = 0, a = i.length / 2; o < a; o++) {
n.default.set(f, i[2 * o], i[2 * o + 1], 0);
n.default.transformMat4(f, f, e);
var c = s * o;
r[c] = f.x;
r[c + 1] = f.y;
r[c + 2] = f.z;
}
}
});
e.exports = i.default;
}), {
"../../../../../value-types/vec3": 338,
"../../../../assembler-3d": 257,
"../2d/mesh": 285
} ],
292: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../../value-types/vec3"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = t("../../../../assembler-3d"), h = t("../2d/radial-filled"), f = new n.default(), _ = new n.default(), d = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
return e;
})(h);
i.default = d;
cc.js.mixin(d.prototype, u, {
updateWorldVerts: function(t) {
for (var e = t.node._worldMatrix, i = this._local, r = this._renderData.vDatas[0], s = this.floatsPerVert, o = 0; o < r.length; o += s) {
n.default.set(f, i[o], i[o + 1], 0);
n.default.transformMat4(_, f, e);
r[o] = _.x;
r[o + 1] = _.y;
r[o + 2] = _.z;
}
}
});
e.exports = i.default;
}), {
"../../../../../value-types/vec3": 338,
"../../../../assembler-3d": 257,
"../2d/radial-filled": 286
} ],
293: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t) {
return function() {
var e, i = a(t);
if (o()) {
var n = a(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return r(this, e);
};
}
function r(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? s(t) : e;
}
function s(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function o() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function a(t) {
return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function c(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var l = t("../../../../assembler-3d"), u = (function(t) {
c(e, t);
n(e);
function e() {
return t.apply(this, arguments) || this;
}
return e;
})(t("../2d/simple"));
i.default = u;
cc.js.mixin(u.prototype, l);
e.exports = i.default;
}), {
"../../../../assembler-3d": 257,
"../2d/simple": 287
} ],
294: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../../value-types/vec3"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u = t("../../../../assembler-3d"), h = t("../2d/sliced"), f = new n.default(), _ = new n.default(), d = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
return e;
})(h);
i.default = d;
cc.js.mixin(d.prototype, u, {
updateWorldVerts: function(t) {
for (var e = t.node._worldMatrix, i = this._local, r = this._renderData.vDatas[0], s = this.floatsPerVert, o = 0; o < 4; ++o) for (var a = i[2 * o + 1], c = 0; c < 4; ++c) {
var l = i[2 * c];
n.default.set(f, l, a, 0);
n.default.transformMat4(_, f, e);
var u = (4 * o + c) * s;
r[u] = _.x;
r[u + 1] = _.y;
r[u + 2] = _.z;
}
}
});
e.exports = i.default;
}), {
"../../../../../value-types/vec3": 338,
"../../../../assembler-3d": 257,
"../2d/sliced": 288
} ],
295: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../../../value-types/vec3"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
for (var u = t("../../../../assembler-3d"), h = t("../2d/tiled"), f = [], _ = 0; _ < 4; _++) f.push(new n.default());
var d = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
return e;
})(h);
i.default = d;
cc.js.mixin(d.prototype, u, {
updateWorldVerts: function(t) {
for (var e, i, r, s, o = this._local, a = o.x, c = o.y, l = this._renderData.vDatas[0], u = this.row, h = this.col, _ = t.node._worldMatrix, d = 0, p = 0, m = u; p < m; ++p) {
r = c[p];
s = c[p + 1];
for (var y = 0, v = h; y < v; ++y) {
e = a[y];
i = a[y + 1];
n.default.set(f[0], e, r, 0);
n.default.set(f[1], i, r, 0);
n.default.set(f[2], e, s, 0);
n.default.set(f[3], i, s, 0);
for (var g = 0; g < 4; g++) {
var b = f[g];
n.default.transformMat4(b, b, _);
var C = 6 * g;
l[d + C] = b.x;
l[d + C + 1] = b.y;
l[d + C + 2] = b.z;
}
d += 24;
}
}
}
});
e.exports = i.default;
}), {
"../../../../../value-types/vec3": 338,
"../../../../assembler-3d": 257,
"../2d/tiled": 289
} ],
296: [ (function(t, e, i) {
"use strict";
var n = y(t("../../../assembler")), r = t("../../../../components/CCSprite"), s = y(t("./2d/simple")), o = y(t("./2d/sliced")), a = y(t("./2d/tiled")), c = y(t("./2d/radial-filled")), l = y(t("./2d/bar-filled")), u = y(t("./2d/mesh")), h = y(t("./3d/simple")), f = y(t("./3d/sliced")), _ = y(t("./3d/tiled")), d = y(t("./3d/radial-filled")), p = y(t("./3d/bar-filled")), m = y(t("./3d/mesh"));
function y(t) {
return t && t.__esModule ? t : {
default: t
};
}
var v = {
getConstructor: function(t) {
var e = t.node.is3DNode, i = e ? h.default : s.default;
switch (t.type) {
case r.Type.SLICED:
i = e ? f.default : o.default;
break;

case r.Type.TILED:
i = e ? _.default : a.default;
break;

case r.Type.FILLED:
i = t._fillType === r.FillType.RADIAL ? e ? d.default : c.default : e ? p.default : l.default;
break;

case r.Type.MESH:
i = e ? m.default : u.default;
}
return i;
},
Simple: s.default,
Sliced: o.default,
Tiled: a.default,
RadialFilled: c.default,
BarFilled: l.default,
Mesh: u.default,
Simple3D: h.default,
Sliced3D: f.default,
Tiled3D: _.default,
RadialFilled3D: d.default,
BarFilled3D: p.default,
Mesh3D: m.default
};
n.default.register(cc.Sprite, v);
}), {
"../../../../components/CCSprite": 136,
"../../../assembler": 259,
"./2d/bar-filled": 284,
"./2d/mesh": 285,
"./2d/radial-filled": 286,
"./2d/simple": 287,
"./2d/sliced": 288,
"./2d/tiled": 289,
"./3d/bar-filled": 290,
"./3d/mesh": 291,
"./3d/radial-filled": 292,
"./3d/simple": 293,
"./3d/sliced": 294,
"./3d/tiled": 295
} ],
297: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function() {
function t(t, e, i, n, r) {
this._handler = t;
this._index = e;
this._vfmt = r;
this._verticesBytes = r._bytes;
this._initVerticesCount = i;
this._initIndicesCount = n;
this.reset();
}
var e = t.prototype;
e._reallocVData = function(t, e) {
this.vData = new Float32Array(t);
this.uintVData = new Uint32Array(this.vData.buffer);
e && this.vData.set(e);
this._handler.updateMesh(this._index, this.vData, this.iData);
};
e._reallocIData = function(t, e) {
this.iData = new Uint16Array(t);
e && this.iData.set(e);
this._handler.updateMesh(this._index, this.vData, this.iData);
};
e.reserve = function(t, e) {
var i = t * this._verticesBytes >> 2, n = this.vData.length, r = !1;
if (i > n) {
for (;n < i; ) n *= 2;
this._reallocVData(n, this.vData);
r = !0;
}
var s = this.iData.length;
if (e > s) {
for (;s < e; ) s *= 2;
this._reallocIData(e, this.iData);
r = !0;
}
return r;
};
e.used = function(t, e) {
this.usedVertices = t;
this.usedIndices = e;
this.usedVerticesFloats = t * this._verticesBytes >> 2;
this._handler.updateMeshRange(t, e);
};
e.reset = function() {
var t = this._initVerticesCount * this._verticesBytes >> 2;
this._reallocVData(t);
this._reallocIData(this._initIndicesCount);
this.usedVertices = 0;
this.usedVerticesFloats = 0;
this.usedIndices = 0;
};
return t;
})();
i.default = n;
cc.FlexBuffer = n;
e.exports = i.default;
}), {} ],
298: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../renderer/gfx"));
var r = cc.Class({
name: "cc.MeshBuffer",
ctor: function(t, e) {
this.init(t, e);
},
init: function(t, e) {
this.byteOffset = 0;
this.indiceOffset = 0;
this.vertexOffset = 0;
this.indiceStart = 0;
this._dirty = !1;
this._vertexFormat = e;
this._vertexBytes = this._vertexFormat._bytes;
this._arrOffset = 0;
this._vbArr = [];
this._vb = new n.default.VertexBuffer(t._device, e, n.default.USAGE_DYNAMIC, new ArrayBuffer(), 0);
this._vbArr[0] = this._vb;
this._ibArr = [];
this._ib = new n.default.IndexBuffer(t._device, n.default.INDEX_FMT_UINT16, n.default.USAGE_STATIC, new ArrayBuffer(), 0);
this._ibArr[0] = this._ib;
this._vData = null;
this._uintVData = null;
this._iData = null;
this._batcher = t;
this._initVDataCount = 256 * e._bytes;
this._initIDataCount = 1536;
this._offsetInfo = {
byteOffset: 0,
vertexOffset: 0,
indiceOffset: 0
};
this._reallocBuffer();
},
uploadData: function() {
if (0 !== this.byteOffset && this._dirty) {
var t = new Float32Array(this._vData.buffer, 0, this.byteOffset >> 2), e = new Uint16Array(this._iData.buffer, 0, this.indiceOffset);
this._vb.update(0, t);
this._ib.update(0, e);
this._dirty = !1;
}
},
switchBuffer: function() {
var t = ++this._arrOffset;
this.byteOffset = 0;
this.vertexOffset = 0;
this.indiceOffset = 0;
this.indiceStart = 0;
if (t < this._vbArr.length) {
this._vb = this._vbArr[t];
this._ib = this._ibArr[t];
} else {
this._vb = new n.default.VertexBuffer(this._batcher._device, this._vertexFormat, n.default.USAGE_DYNAMIC, new ArrayBuffer(), 0);
this._vbArr[t] = this._vb;
this._ib = new n.default.IndexBuffer(this._batcher._device, n.default.INDEX_FMT_UINT16, n.default.USAGE_STATIC, new ArrayBuffer(), 0);
this._ibArr[t] = this._ib;
}
},
checkAndSwitchBuffer: function(t) {
if (this.vertexOffset + t > 65535) {
this.uploadData();
this._batcher._flush();
this.switchBuffer();
}
},
requestStatic: function(t, e) {
this.checkAndSwitchBuffer(t);
var i = this.byteOffset + t * this._vertexBytes, n = this.indiceOffset + e, r = this._vData.byteLength, s = this._iData.length;
if (i > r || n > s) {
for (;r < i || s < n; ) {
this._initVDataCount *= 2;
this._initIDataCount *= 2;
r = 4 * this._initVDataCount;
s = this._initIDataCount;
}
this._reallocBuffer();
}
this._updateOffset(t, e, i);
},
_updateOffset: function(t, e, i) {
var n = this._offsetInfo;
n.vertexOffset = this.vertexOffset;
this.vertexOffset += t;
n.indiceOffset = this.indiceOffset;
this.indiceOffset += e;
n.byteOffset = this.byteOffset;
this.byteOffset = i;
this._dirty = !0;
},
request: function(t, e) {
if (this._batcher._buffer !== this) {
this._batcher._flush();
this._batcher._buffer = this;
}
this.requestStatic(t, e);
return this._offsetInfo;
},
_reallocBuffer: function() {
this._reallocVData(!0);
this._reallocIData(!0);
},
_reallocVData: function(t) {
var e;
this._vData && (e = new Uint8Array(this._vData.buffer));
this._vData = new Float32Array(this._initVDataCount);
this._uintVData = new Uint32Array(this._vData.buffer);
var i = new Uint8Array(this._uintVData.buffer);
if (e && t) for (var n = 0, r = e.length; n < r; n++) i[n] = e[n];
},
_reallocIData: function(t) {
var e = this._iData;
this._iData = new Uint16Array(this._initIDataCount);
if (e && t) for (var i = this._iData, n = 0, r = e.length; n < r; n++) i[n] = e[n];
},
reset: function() {
this._arrOffset = 0;
this._vb = this._vbArr[0];
this._ib = this._ibArr[0];
this.byteOffset = 0;
this.indiceOffset = 0;
this.vertexOffset = 0;
this.indiceStart = 0;
this._dirty = !1;
},
destroy: function() {
this.reset();
for (var t = 0; t < this._vbArr.length; t++) {
this._vbArr[t].destroy();
}
this._vbArr = null;
for (var e = 0; e < this._ibArr.length; e++) {
this._ibArr[e].destroy();
}
this._ibArr = null;
this._ib = null;
this._vb = null;
},
forwardIndiceStartToOffset: function() {
this.indiceStart = this.indiceOffset;
}
});
cc.MeshBuffer = e.exports = r;
}), {
"../../../renderer/gfx": 354
} ],
299: [ (function(t, e, i) {
"use strict";
var n = t("./mesh-buffer"), r = cc.Class({
name: "cc.QuadBuffer",
extends: n,
_fillQuadBuffer: function() {
for (var t = this._initIDataCount / 6, e = this._iData, i = 0, n = 0; i < t; i++) {
var r = 4 * i;
e[n++] = r;
e[n++] = r + 1;
e[n++] = r + 2;
e[n++] = r + 1;
e[n++] = r + 3;
e[n++] = r + 2;
}
var s = new Uint16Array(this._iData.buffer, 0, 6 * t);
this._ib.update(0, s);
},
uploadData: function() {
if (0 !== this.byteOffset && this._dirty) {
var t = new Float32Array(this._vData.buffer, 0, this.byteOffset >> 2);
this._vb.update(0, t);
this._dirty = !1;
}
},
switchBuffer: function() {
this._super();
var t = new Uint16Array(this._iData.buffer, 0, this._initIDataCount);
this._ib.update(0, t);
},
_reallocBuffer: function() {
this._reallocVData(!0);
this._reallocIData();
this._fillQuadBuffer();
}
});
cc.QuadBuffer = e.exports = r;
}), {
"./mesh-buffer": 298
} ],
300: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = s;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./flex-buffer")), r = t("./vertex-format");
function s() {
this.vDatas = [];
this.uintVDatas = [];
this.iDatas = [];
this.meshCount = 0;
this._infos = null;
this._flexBuffer = null;
}
cc.js.mixin(s.prototype, {
init: function(t) {},
clear: function() {
this.vDatas.length = 0;
this.iDatas.length = 0;
this.uintVDatas.length = 0;
this.meshCount = 0;
this._infos = null;
this._flexBuffer && this._flexBuffer.reset();
},
updateMesh: function(t, e, i) {
this.vDatas[t] = e;
this.uintVDatas[t] = new Uint32Array(e.buffer, 0, e.length);
this.iDatas[t] = i;
this.meshCount = this.vDatas.length;
},
updateMeshRange: function(t, e) {},
createData: function(t, e, i) {
var n = new Float32Array(e), r = new Uint16Array(i);
this.updateMesh(t, n, r);
},
createQuadData: function(t, e, i) {
this.createData(t, e, i);
this.initQuadIndices(this.iDatas[t]);
},
createFlexData: function(t, e, i, s) {
s = s || r.vfmtPosUvColor;
this._flexBuffer = new n.default(this, t, e, i, s);
},
initQuadIndices: function(t) {
for (var e = t.length / 6, i = 0, n = 0; i < e; i++) {
var r = 4 * i;
t[n++] = r;
t[n++] = r + 1;
t[n++] = r + 2;
t[n++] = r + 1;
t[n++] = r + 3;
t[n++] = r + 2;
}
}
});
cc.RenderData = s;
e.exports = i.default;
}), {
"./flex-buffer": 297,
"./vertex-format": 301
} ],
301: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../../renderer/gfx"));
var r = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 3
}, {
name: n.default.ATTR_UV0,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_COLOR,
type: n.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
r.name = "vfmt3D";
n.default.VertexFormat.XYZ_UV_Color = r;
var s = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_UV0,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_COLOR,
type: n.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
s.name = "vfmtPosUvColor";
n.default.VertexFormat.XY_UV_Color = s;
var o = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_UV0,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_COLOR,
type: n.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
}, {
name: n.default.ATTR_COLOR0,
type: n.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
o.name = "vfmtPosUvTwoColor";
n.default.VertexFormat.XY_UV_Two_Color = o;
var a = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_UV0,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
} ]);
a.name = "vfmtPosUv";
n.default.VertexFormat.XY_UV = a;
var c = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
}, {
name: n.default.ATTR_COLOR,
type: n.default.ATTR_TYPE_UINT8,
num: 4,
normalize: !0
} ]);
c.name = "vfmtPosColor";
n.default.VertexFormat.XY_Color = c;
var l = new n.default.VertexFormat([ {
name: n.default.ATTR_POSITION,
type: n.default.ATTR_TYPE_FLOAT32,
num: 2
} ]);
l.name = "vfmtPos";
n.default.VertexFormat.XY = l;
e.exports = {
vfmt3D: r,
vfmtPosUvColor: s,
vfmtPosUvTwoColor: o,
vfmtPosUv: a,
vfmtPosColor: c,
vfmtPos: l
};
}), {
"../../../renderer/gfx": 354
} ],
302: [ (function(t, e, i) {
"use strict";
t("../platform/CCSys");
var n = /(\.[^\.\/\?\\]*)(\?.*)?$/, r = /((.*)(\/|\\|\\\\))?(.*?\..*$)?/, s = /[^\.\/]+\/\.\.\//;
cc.path = {
join: function() {
for (var t = arguments.length, e = "", i = 0; i < t; i++) e = (e + ("" === e ? "" : "/") + arguments[i]).replace(/(\/|\\\\)$/, "");
return e;
},
extname: function(t) {
var e = n.exec(t);
return e ? e[1] : "";
},
mainFileName: function(t) {
if (t) {
var e = t.lastIndexOf(".");
if (-1 !== e) return t.substring(0, e);
}
return t;
},
basename: function(t, e) {
var i = t.indexOf("?");
i > 0 && (t = t.substring(0, i));
var n = /(\/|\\)([^\/\\]+)$/g.exec(t.replace(/(\/|\\)$/, ""));
if (!n) return null;
var r = n[2];
return e && t.substring(t.length - e.length).toLowerCase() === e.toLowerCase() ? r.substring(0, r.length - e.length) : r;
},
dirname: function(t) {
var e = r.exec(t);
return e ? e[2] : "";
},
changeExtname: function(t, e) {
e = e || "";
var i = t.indexOf("?"), n = "";
if (i > 0) {
n = t.substring(i);
t = t.substring(0, i);
}
return (i = t.lastIndexOf(".")) < 0 ? t + e + n : t.substring(0, i) + e + n;
},
changeBasename: function(t, e, i) {
if (0 === e.indexOf(".")) return this.changeExtname(t, e);
var n = t.indexOf("?"), r = "", s = i ? this.extname(t) : "";
if (n > 0) {
r = t.substring(n);
t = t.substring(0, n);
}
n = (n = t.lastIndexOf("/")) <= 0 ? 0 : n + 1;
return t.substring(0, n) + e + s + r;
},
_normalize: function(t) {
var e = t = String(t);
do {
e = t;
t = t.replace(s, "");
} while (e.length !== t.length);
return t;
},
sep: cc.sys.os === cc.sys.OS_WINDOWS ? "\\" : "/",
stripSep: function(t) {
return t.replace(/[\/\\]$/, "");
}
};
e.exports = cc.path;
}), {
"../platform/CCSys": 239
} ],
303: [ (function(t, e, i) {
"use strict";
var n = function(t, e, i, n, r, s) {
this.a = t;
this.b = e;
this.c = i;
this.d = n;
this.tx = r;
this.ty = s;
};
n.create = function(t, e, i, n, r, s) {
return {
a: t,
b: e,
c: i,
d: n,
tx: r,
ty: s
};
};
n.identity = function() {
return {
a: 1,
b: 0,
c: 0,
d: 1,
tx: 0,
ty: 0
};
};
n.clone = function(t) {
return {
a: t.a,
b: t.b,
c: t.c,
d: t.d,
tx: t.tx,
ty: t.ty
};
};
n.concat = function(t, e, i) {
var n = e.a, r = e.b, s = e.c, o = e.d, a = e.tx, c = e.ty;
t.a = n * i.a + r * i.c;
t.b = n * i.b + r * i.d;
t.c = s * i.a + o * i.c;
t.d = s * i.b + o * i.d;
t.tx = a * i.a + c * i.c + i.tx;
t.ty = a * i.b + c * i.d + i.ty;
return t;
};
n.invert = function(t, e) {
var i = e.a, n = e.b, r = e.c, s = e.d, o = 1 / (i * s - n * r), a = e.tx, c = e.ty;
t.a = o * s;
t.b = -o * n;
t.c = -o * r;
t.d = o * i;
t.tx = o * (r * c - s * a);
t.ty = o * (n * a - i * c);
return t;
};
n.fromMat4 = function(t, e) {
var i = e.m;
t.a = i[0];
t.b = i[1];
t.c = i[4];
t.d = i[5];
t.tx = i[12];
t.ty = i[13];
return t;
};
n.transformVec2 = function(t, e, i, n) {
var r, s;
if (void 0 === n) {
n = i;
r = e.x;
s = e.y;
} else {
r = e;
s = i;
}
t.x = n.a * r + n.c * s + n.tx;
t.y = n.b * r + n.d * s + n.ty;
return t;
};
n.transformSize = function(t, e, i) {
t.width = i.a * e.width + i.c * e.height;
t.height = i.b * e.width + i.d * e.height;
return t;
};
n.transformRect = function(t, e, i) {
var n = e.x, r = e.y, s = n + e.width, o = r + e.height, a = i.a * n + i.c * r + i.tx, c = i.b * n + i.d * r + i.ty, l = i.a * s + i.c * r + i.tx, u = i.b * s + i.d * r + i.ty, h = i.a * n + i.c * o + i.tx, f = i.b * n + i.d * o + i.ty, _ = i.a * s + i.c * o + i.tx, d = i.b * s + i.d * o + i.ty, p = Math.min(a, l, h, _), m = Math.max(a, l, h, _), y = Math.min(c, u, f, d), v = Math.max(c, u, f, d);
t.x = p;
t.y = y;
t.width = m - p;
t.height = v - y;
return t;
};
n.transformObb = function(t, e, i, n, r, s) {
var o = r.x, a = r.y, c = r.width, l = r.height, u = s.a * o + s.c * a + s.tx, h = s.b * o + s.d * a + s.ty, f = s.a * c, _ = s.b * c, d = s.c * l, p = s.d * l;
e.x = u;
e.y = h;
i.x = f + u;
i.y = _ + h;
t.x = d + u;
t.y = p + h;
n.x = f + d + u;
n.y = _ + p + h;
};
cc.AffineTransform = e.exports = n;
}), {} ],
304: [ (function(t, e, i) {
"use strict";
var n = t("../platform/CCObject").Flags, r = t("./misc"), s = t("../platform/js"), o = t("../platform/id-generater"), a = t("../event-manager"), c = t("../renderer/render-flow"), l = n.Destroying, u = n.DontDestroy, h = n.Deactivating, f = new o("Node");
function _(t) {
if (!t) {
cc.errorID(3804);
return null;
}
return "string" == typeof t ? s.getClassByName(t) : t;
}
function d(t, e) {
if (e._sealed) for (var i = 0; i < t._components.length; ++i) {
var n = t._components[i];
if (n.constructor === e) return n;
} else for (var r = 0; r < t._components.length; ++r) {
var s = t._components[r];
if (s instanceof e) return s;
}
return null;
}
function p(t, e, i) {
if (e._sealed) for (var n = 0; n < t._components.length; ++n) {
var r = t._components[n];
r.constructor === e && i.push(r);
} else for (var s = 0; s < t._components.length; ++s) {
var o = t._components[s];
o instanceof e && i.push(o);
}
}
function m(t, e) {
for (var i = 0; i < t.length; ++i) {
var n = t[i], r = d(n, e);
if (r) return r;
if (n._children.length > 0 && (r = m(n._children, e))) return r;
}
return null;
}
function y(t, e, i) {
for (var n = 0; n < t.length; ++n) {
var r = t[n];
p(r, e, i);
r._children.length > 0 && y(r._children, e, i);
}
}
var v = cc.Class({
name: "cc._BaseNode",
extends: cc.Object,
properties: {
_parent: null,
_children: [],
_active: !0,
_components: [],
_prefab: null,
_persistNode: {
get: function() {
return (this._objFlags & u) > 0;
},
set: function(t) {
t ? this._objFlags |= u : this._objFlags &= ~u;
}
},
name: {
get: function() {
return this._name;
},
set: function(t) {
0;
this._name = t;
this._proxy.setName(this._name);
}
},
uuid: {
get: function() {
return this._id;
}
},
children: {
get: function() {
return this._children;
}
},
childrenCount: {
get: function() {
return this._children.length;
}
},
active: {
get: function() {
return this._active;
},
set: function(t) {
t = !!t;
if (this._active !== t) {
this._active = t;
var e = this._parent;
if (e) {
e._activeInHierarchy && cc.director._nodeActivator.activateNode(this, t);
}
}
}
},
activeInHierarchy: {
get: function() {
return this._activeInHierarchy;
}
}
},
ctor: function(t) {
this._name = void 0 !== t ? t : "New Node";
this._activeInHierarchy = !1;
this._id = f.getNewId();
cc.director._scheduler && cc.director._scheduler.enableForTarget(this);
this.__eventTargets = [];
},
getParent: function() {
return this._parent;
},
setParent: function(t) {
if (this._parent !== t) {
0;
var e = this._parent;
0;
this._parent = t || null;
this._onSetParent(t);
if (t) {
0;
a._setDirtyForNode(this);
t._children.push(this);
t.emit && t.emit("child-added", this);
t._renderFlag |= c.FLAG_CHILDREN;
}
if (e) {
if (!(e._objFlags & l)) {
var i = e._children.indexOf(this);
0;
e._children.splice(i, 1);
e.emit && e.emit("child-removed", this);
this._onHierarchyChanged(e);
0 === e._children.length && (e._renderFlag &= ~c.FLAG_CHILDREN);
}
} else t && this._onHierarchyChanged(null);
}
},
attr: function(t) {
s.mixin(this, t);
},
getChildByUuid: function(t) {
if (!t) {
cc.log("Invalid uuid");
return null;
}
for (var e = this._children, i = 0, n = e.length; i < n; i++) if (e[i]._id === t) return e[i];
return null;
},
getChildByName: function(t) {
if (!t) {
cc.log("Invalid name");
return null;
}
for (var e = this._children, i = 0, n = e.length; i < n; i++) if (e[i]._name === t) return e[i];
return null;
},
addChild: function(t) {
0;
cc.assertID(t, 1606);
cc.assertID(null === t._parent, 1605);
t.setParent(this);
},
insertChild: function(t, e) {
t.parent = this;
t.setSiblingIndex(e);
},
getSiblingIndex: function() {
return this._parent ? this._parent._children.indexOf(this) : 0;
},
setSiblingIndex: function(t) {
if (this._parent) if (this._parent._objFlags & h) cc.errorID(3821); else {
var e = this._parent._children;
t = -1 !== t ? t : e.length - 1;
var i = e.indexOf(this);
if (t !== i) {
e.splice(i, 1);
t < e.length ? e.splice(t, 0, this) : e.push(this);
this._onSiblingIndexChanged && this._onSiblingIndexChanged(t);
}
}
},
walk: function(t, e) {
var i, n, r, s, o = cc._BaseNode, a = 1, c = o._stacks[o._stackId];
if (!c) {
c = [];
o._stacks.push(c);
}
o._stackId++;
c.length = 0;
c[0] = this;
var l = null;
s = !1;
for (;a; ) if (n = c[--a]) {
!s && t ? t(n) : s && e && e(n);
c[a] = null;
if (s) {
s = !1;
if (i) if (i[++r]) {
c[a] = i[r];
a++;
} else if (l) {
c[a] = l;
a++;
s = !0;
if (l._parent) {
r = (i = l._parent._children).indexOf(l);
l = l._parent;
} else {
l = null;
i = null;
}
if (r < 0) break;
}
} else if (n._children.length > 0) {
l = n;
i = n._children;
r = 0;
c[a] = i[r];
a++;
} else {
c[a] = n;
a++;
s = !0;
}
}
c.length = 0;
o._stackId--;
},
cleanup: function() {},
removeFromParent: function(t) {
if (this._parent) {
void 0 === t && (t = !0);
this._parent.removeChild(this, t);
}
},
removeChild: function(t, e) {
if (this._children.indexOf(t) > -1) {
(e || void 0 === e) && t.cleanup();
t.parent = null;
}
},
removeAllChildren: function(t) {
var e = this._children;
void 0 === t && (t = !0);
for (var i = e.length - 1; i >= 0; i--) {
var n = e[i];
if (n) {
t && n.cleanup();
n.parent = null;
}
}
this._children.length = 0;
},
isChildOf: function(t) {
var e = this;
do {
if (e === t) return !0;
e = e._parent;
} while (e);
return !1;
},
getComponent: function(t) {
var e = _(t);
return e ? d(this, e) : null;
},
getComponents: function(t) {
var e = _(t), i = [];
e && p(this, e, i);
return i;
},
getComponentInChildren: function(t) {
var e = _(t);
return e ? m(this._children, e) : null;
},
getComponentsInChildren: function(t) {
var e = _(t), i = [];
if (e) {
p(this, e, i);
y(this._children, e, i);
}
return i;
},
_checkMultipleComp: !1,
addComponent: function(t) {
0;
var e;
if ("string" == typeof t) {
if (!(e = s.getClassByName(t))) {
cc.errorID(3807, t);
cc._RFpeek() && cc.errorID(3808, t);
return null;
}
} else {
if (!t) {
cc.errorID(3804);
return null;
}
e = t;
}
if ("function" != typeof e) {
cc.errorID(3809);
return null;
}
if (!s.isChildClassOf(e, cc.Component)) {
cc.errorID(3810);
return null;
}
0;
var i = e._requireComponent;
if (i && !this.getComponent(i)) {
if (!this.addComponent(i)) return null;
}
var n = new e();
n.node = this;
this._components.push(n);
0;
this._activeInHierarchy && cc.director._nodeActivator.activateComp(n);
return n;
},
_addComponentAt: !1,
removeComponent: function(t) {
if (t) {
t instanceof cc.Component || (t = this.getComponent(t));
t && t.destroy();
} else cc.errorID(3813);
},
_getDependComponent: !1,
_removeComponent: function(t) {
if (t) {
if (!(this._objFlags & l)) {
var e = this._components.indexOf(t);
if (-1 !== e) {
this._components.splice(e, 1);
0;
} else t.node !== this && cc.errorID(3815);
}
} else cc.errorID(3814);
},
destroy: function() {
cc.Object.prototype.destroy.call(this) && (this.active = !1);
},
destroyAllChildren: function() {
for (var t = this._children, e = 0; e < t.length; ++e) t[e].destroy();
},
_onSetParent: function(t) {},
_onPostActivated: function() {},
_onBatchRestored: function() {},
_onBatchCreated: function() {},
_onHierarchyChanged: function(t) {
var e = this._parent;
if (this._persistNode && !(e instanceof cc.Scene)) {
cc.game.removePersistRootNode(this);
0;
}
var i = this._active && !(!e || !e._activeInHierarchy);
this._activeInHierarchy !== i && cc.director._nodeActivator.activateNode(this, i);
},
_instantiate: function(t) {
t || (t = cc.instantiate._clone(this, this));
var e = this._prefab;
e && this === e.root && e.sync;
t._parent = null;
t._onBatchRestored();
return t;
},
_registerIfAttached: !1,
_onPreDestroy: function() {
var t, e;
this._objFlags |= l;
var i = this._parent, n = i && i._objFlags & l;
0;
var r = this._children;
for (t = 0, e = r.length; t < e; ++t) r[t]._destroyImmediate();
for (t = 0, e = this._components.length; t < e; ++t) {
this._components[t]._destroyImmediate();
}
var s = this.__eventTargets;
for (t = 0, e = s.length; t < e; ++t) {
var o = s[t];
o && o.targetOff(this);
}
s.length = 0;
this._persistNode && cc.game.removePersistRootNode(this);
if (!n && i) {
var a = i._children.indexOf(this);
i._children.splice(a, 1);
i.emit && i.emit("child-removed", this);
}
return n;
},
onRestore: !1
});
v.idGenerater = f;
v._stacks = [ [] ];
v._stackId = 0;
v.prototype._onPreDestroyBase = v.prototype._onPreDestroy;
0;
v.prototype._onHierarchyChangedBase = v.prototype._onHierarchyChanged;
0;
r.propertyDefine(v, [ "parent", "name", "children", "childrenCount" ], {});
0;
cc._BaseNode = e.exports = v;
}), {
"../event-manager": 154,
"../platform/CCObject": 236,
"../platform/id-generater": 246,
"../platform/js": 250,
"../renderer/render-flow": 263,
"./misc": 313
} ],
305: [ (function(t, e, i) {
"use strict";
var n = 1e-6;
e.exports = {
binarySearchEpsilon: function(t, e) {
for (var i = 0, r = t.length - 1, s = r >>> 1; i <= r; s = i + r >>> 1) {
var o = t[s];
if (o > e + n) r = s - 1; else {
if (!(o < e - n)) return s;
i = s + 1;
}
}
return ~i;
}
};
}), {} ],
306: [ (function(t, e, i) {
"use strict";
var n = t("../components/CCRenderComponent"), r = t("../platform/CCMacro").BlendFactor, s = t("../../renderer/gfx"), o = cc.Class({
properties: {
_srcBlendFactor: r.SRC_ALPHA,
_dstBlendFactor: r.ONE_MINUS_SRC_ALPHA,
srcBlendFactor: {
get: function() {
return this._srcBlendFactor;
},
set: function(t) {
if (this._srcBlendFactor !== t) {
this._srcBlendFactor = t;
this._updateBlendFunc();
}
},
animatable: !1,
type: r,
tooltip: !1,
visible: !0
},
dstBlendFactor: {
get: function() {
return this._dstBlendFactor;
},
set: function(t) {
if (this._dstBlendFactor !== t) {
this._dstBlendFactor = t;
this._updateBlendFunc();
}
},
animatable: !1,
type: r,
tooltip: !1,
visible: !0
}
},
setMaterial: function(t, e) {
var i = n.prototype.setMaterial.call(this, t, e);
this._srcBlendFactor === r.SRC_ALPHA && this._dstBlendFactor === r.ONE_MINUS_SRC_ALPHA || this._updateMaterialBlendFunc(i);
return i;
},
_updateMaterial: function() {
this._updateBlendFunc();
},
_updateBlendFunc: function() {
if (this._srcBlendFactor !== r.SRC_ALPHA || this._dstBlendFactor !== r.ONE_MINUS_SRC_ALPHA) for (var t = this.getMaterials(), e = 0; e < t.length; e++) {
var i = t[e];
this._updateMaterialBlendFunc(i);
}
},
_updateMaterialBlendFunc: function(t) {
t.setBlend(!0, s.BLEND_FUNC_ADD, this._srcBlendFactor, this._dstBlendFactor, s.BLEND_FUNC_ADD, this._srcBlendFactor, this._dstBlendFactor);
}
});
e.exports = cc.BlendFunc = o;
}), {
"../../renderer/gfx": 354,
"../components/CCRenderComponent": 131,
"../platform/CCMacro": 235
} ],
307: [ (function(t, e, i) {
"use strict";
var n = t("./misc").BASE64_VALUES, r = "0123456789abcdef".split(""), s = [ "", "", "", "" ], o = s.concat(s, "-", s, "-", s, "-", s, "-", s, s, s), a = o.map((function(t, e) {
return "-" === t ? NaN : e;
})).filter(isFinite);
e.exports = function(t) {
if (22 !== t.length) return t;
o[0] = t[0];
o[1] = t[1];
for (var e = 2, i = 2; e < 22; e += 2) {
var s = n[t.charCodeAt(e)], c = n[t.charCodeAt(e + 1)];
o[a[i++]] = r[s >> 2];
o[a[i++]] = r[(3 & s) << 2 | c >> 4];
o[a[i++]] = r[15 & c];
}
return o.join("");
};
0;
}), {
"./misc": 313
} ],
308: [ (function(t, e, i) {
"use strict";
cc.find = e.exports = function(t, e) {
if (null == t) {
cc.errorID(3814);
return null;
}
if (e) 0; else {
var i = cc.director.getScene();
if (!i) {
0;
return null;
}
0;
e = i;
}
for (var n = e, r = "/" !== t[0] ? 0 : 1, s = t.split("/"), o = r; o < s.length; o++) {
var a = s[o], c = n._children;
n = null;
for (var l = 0, u = c.length; l < u; ++l) {
var h = c[l];
if (h.name === a) {
n = h;
break;
}
}
if (!n) return null;
}
return n;
};
}), {} ],
309: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../assets/material/material-variant"));
var r = t("../assets/material/CCMaterial"), s = cc.Class({
properties: {
_normalMaterial: null,
normalMaterial: {
get: function() {
return this._normalMaterial;
},
set: function(t) {
this._normalMaterial = t;
this._updateDisabledState && this._updateDisabledState();
},
type: r,
tooltip: !1,
animatable: !1
},
_grayMaterial: null,
grayMaterial: {
get: function() {
return this._grayMaterial;
},
set: function(t) {
this._grayMaterial = t;
this._updateDisabledState && this._updateDisabledState();
},
type: r,
tooltip: !1,
animatable: !1
}
},
_switchGrayMaterial: function(t, e) {
var i;
if (t) {
(i = this._grayMaterial) || (i = r.getBuiltinMaterial("2d-gray-sprite"));
i = this._grayMaterial = n.default.create(i, e);
} else {
(i = this._normalMaterial) || (i = r.getBuiltinMaterial("2d-sprite", e));
i = this._normalMaterial = n.default.create(i, e);
}
e.setMaterial(0, i);
}
});
e.exports = s;
}), {
"../assets/material/CCMaterial": 95,
"../assets/material/material-variant": 102
} ],
310: [ (function(t, e, i) {
"use strict";
var n = /^(click)(\s)*=|(param)(\s)*=/, r = /(\s)*src(\s)*=|(\s)*height(\s)*=|(\s)*width(\s)*=|(\s)*align(\s)*=|(\s)*offset(\s)*=|(\s)*click(\s)*=|(\s)*param(\s)*=/, s = function() {
this._parsedObject = {};
this._specialSymbolArray = [];
this._specialSymbolArray.push([ /&lt;/g, "<" ]);
this._specialSymbolArray.push([ /&gt;/g, ">" ]);
this._specialSymbolArray.push([ /&amp;/g, "&" ]);
this._specialSymbolArray.push([ /&quot;/g, '"' ]);
this._specialSymbolArray.push([ /&apos;/g, "'" ]);
this._specialSymbolArray.push([ /&nbsp;/g, " " ]);
};
s.prototype = {
constructor: s,
parse: function(t) {
this._resultObjectArray = [];
this._stack = [];
for (var e = 0, i = t.length; e < i; ) {
var n = t.indexOf(">", e), r = -1;
if (n >= 0) {
if ((r = t.lastIndexOf("<", n)) < e - 1) {
r = t.indexOf("<", n + 1);
n = t.indexOf(">", r + 1);
}
}
if (r < 0) {
this._stack.pop();
this._processResult(t.substring(e));
e = i;
} else {
var s = t.substring(e, r), o = t.substring(r + 1, n);
"" === o && (s = t.substring(e, n + 1));
this._processResult(s);
-1 === n ? n = r : "/" === t.charAt(r + 1) ? this._stack.pop() : this._addToStack(o);
e = n + 1;
}
}
return this._resultObjectArray;
},
_attributeToObject: function(t) {
var e, i, n, s, o = {}, a = (t = t.trim()).match(/^(color|size)(\s)*=/);
if (a) {
e = a[0];
if ("" === (t = t.substring(e.length).trim())) return o;
i = t.indexOf(" ");
switch (e[0]) {
case "c":
o.color = i > -1 ? t.substring(0, i).trim() : t;
break;

case "s":
o.size = parseInt(t);
}
if (i > -1) {
s = t.substring(i + 1).trim();
n = this._processEventHandler(s);
o.event = n;
}
return o;
}
if ((a = t.match(/^(br(\s)*\/)/)) && a[0].length > 0 && (e = a[0].trim()).startsWith("br") && "/" === e[e.length - 1]) {
o.isNewLine = !0;
this._resultObjectArray.push({
text: "",
style: {
newline: !0
}
});
return o;
}
if ((a = t.match(/^(img(\s)*src(\s)*=[^>]+\/)/)) && a[0].length > 0 && (e = a[0].trim()).startsWith("img") && "/" === e[e.length - 1]) {
a = t.match(r);
for (var c, l = !1; a; ) {
e = (t = t.substring(t.indexOf(a[0]))).substr(0, a[0].length);
h = (i = (c = t.substring(e.length).trim()).indexOf(" ")) > -1 ? c.substr(0, i) : c;
e = (e = e.replace(/[^a-zA-Z]/g, "").trim()).toLocaleLowerCase();
t = c.substring(i).trim();
h.endsWith("/") && (h = h.slice(0, -1));
if ("src" === e) {
switch (h.charCodeAt(0)) {
case 34:
case 39:
l = !0;
h = h.slice(1, -1);
}
o.isImage = !0;
o.src = h;
} else if ("height" === e) o.imageHeight = parseInt(h); else if ("width" === e) o.imageWidth = parseInt(h); else if ("align" === e) {
switch (h.charCodeAt(0)) {
case 34:
case 39:
h = h.slice(1, -1);
}
o.imageAlign = h.toLocaleLowerCase();
} else "offset" === e ? o.imageOffset = h : "click" === e && (o.event = this._processEventHandler(e + "=" + h));
o.event && "param" === e && (o.event.param = h.replace(/^\"|\"$/g, ""));
a = t.match(r);
}
l && o.isImage && this._resultObjectArray.push({
text: "",
style: o
});
return {};
}
if (a = t.match(/^(outline(\s)*[^>]*)/)) {
var u = {
color: "#ffffff",
width: 1
};
if (t = a[0].substring("outline".length).trim()) {
var h, f = /(\s)*color(\s)*=|(\s)*width(\s)*=|(\s)*click(\s)*=|(\s)*param(\s)*=/;
a = t.match(f);
for (;a; ) {
e = (t = t.substring(t.indexOf(a[0]))).substr(0, a[0].length);
h = (i = (c = t.substring(e.length).trim()).indexOf(" ")) > -1 ? c.substr(0, i) : c;
e = (e = e.replace(/[^a-zA-Z]/g, "").trim()).toLocaleLowerCase();
t = c.substring(i).trim();
"click" === e ? o.event = this._processEventHandler(e + "=" + h) : "color" === e ? u.color = h : "width" === e && (u.width = parseInt(h));
o.event && "param" === e && (o.event.param = h.replace(/^\"|\"$/g, ""));
a = t.match(f);
}
}
o.outline = u;
}
if ((a = t.match(/^(on|u|b|i)(\s)*/)) && a[0].length > 0) {
e = a[0];
t = t.substring(e.length).trim();
switch (e[0]) {
case "u":
o.underline = !0;
break;

case "i":
o.italic = !0;
break;

case "b":
o.bold = !0;
}
if ("" === t) return o;
n = this._processEventHandler(t);
o.event = n;
}
return o;
},
_processEventHandler: function(t) {
for (var e = 0, i = {}, r = t.match(n), s = !1; r; ) {
var o = r[0], a = "";
s = !1;
if ('"' === (t = t.substring(o.length).trim()).charAt(0)) {
if ((e = t.indexOf('"', 1)) > -1) {
a = t.substring(1, e).trim();
s = !0;
}
e++;
} else if ("'" === t.charAt(0)) {
if ((e = t.indexOf("'", 1)) > -1) {
a = t.substring(1, e).trim();
s = !0;
}
e++;
} else {
var c = t.match(/(\S)+/);
e = (a = c ? c[0] : "").length;
}
s && (i[o = o.substring(0, o.length - 1).trim()] = a);
r = (t = t.substring(e).trim()).match(n);
}
return i;
},
_addToStack: function(t) {
var e = this._attributeToObject(t);
if (0 === this._stack.length) this._stack.push(e); else {
if (e.isNewLine || e.isImage) return;
var i = this._stack[this._stack.length - 1];
for (var n in i) e[n] || (e[n] = i[n]);
this._stack.push(e);
}
},
_processResult: function(t) {
if ("" !== t) {
t = this._escapeSpecialSymbol(t);
this._stack.length > 0 ? this._resultObjectArray.push({
text: t,
style: this._stack[this._stack.length - 1]
}) : this._resultObjectArray.push({
text: t
});
}
},
_escapeSpecialSymbol: function(t) {
for (var e = 0; e < this._specialSymbolArray.length; ++e) {
var i = this._specialSymbolArray[e][0], n = this._specialSymbolArray[e][1];
t = t.replace(i, n);
}
return t;
}
};
0;
e.exports = s;
}), {} ],
311: [ (function(t, e, i) {
"use strict";
t("./CCPath");
t("./profiler/CCProfiler");
t("./find");
t("./mutable-forward-iterator");
}), {
"./CCPath": 302,
"./find": 308,
"./mutable-forward-iterator": 314,
"./profiler/CCProfiler": 317
} ],
312: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.postLoadMesh = function(t, e) {
if (t.loaded || !t.nativeUrl) {
e && e();
return;
}
cc.loader.load(t.nativeUrl, (function(i, n) {
n && (t._nativeAsset = n);
e && e(i);
}));
};
}), {} ],
313: [ (function(t, e, i) {
"use strict";
var n = t("../platform/js"), r = {
propertyDefine: function(t, e, i) {
function r(t, e, i, r) {
var s = Object.getOwnPropertyDescriptor(t, e);
if (s) {
s.get && (t[i] = s.get);
s.set && r && (t[r] = s.set);
} else {
var o = t[i];
n.getset(t, e, o, t[r]);
}
}
for (var s, o = t.prototype, a = 0; a < e.length; a++) {
var c = (s = e[a])[0].toUpperCase() + s.slice(1);
r(o, s, "get" + c, "set" + c);
}
for (s in i) {
var l = i[s];
r(o, s, l[0], l[1]);
}
},
NextPOT: function(t) {
t -= 1;
t |= t >> 1;
t |= t >> 2;
t |= t >> 4;
t |= t >> 8;
return (t |= t >> 16) + 1;
}
};
0;
r.BUILTIN_CLASSID_RE = /^(?:cc|dragonBones|sp|ccsg)\..+/;
for (var s = new Array(123), o = 0; o < 123; ++o) s[o] = 64;
for (var a = 0; a < 64; ++a) s["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charCodeAt(a)] = a;
r.BASE64_VALUES = s;
r.pushToMap = function(t, e, i, n) {
var r = t[e];
if (r) if (Array.isArray(r)) if (n) {
r.push(r[0]);
r[0] = i;
} else r.push(i); else t[e] = n ? [ i, r ] : [ r, i ]; else t[e] = i;
};
r.clampf = function(t, e, i) {
if (e > i) {
var n = e;
e = i;
i = n;
}
return t < e ? e : t < i ? t : i;
};
r.clamp01 = function(t) {
return t < 0 ? 0 : t < 1 ? t : 1;
};
r.lerp = function(t, e, i) {
return t + (e - t) * i;
};
r.degreesToRadians = function(t) {
return t * cc.macro.RAD;
};
r.radiansToDegrees = function(t) {
return t * cc.macro.DEG;
};
cc.misc = e.exports = r;
}), {
"../platform/js": 250
} ],
314: [ (function(t, e, i) {
"use strict";
function n(t) {
this.i = 0;
this.array = t;
}
var r = n.prototype;
r.remove = function(t) {
var e = this.array.indexOf(t);
e >= 0 && this.removeAt(e);
};
r.removeAt = function(t) {
this.array.splice(t, 1);
t <= this.i && --this.i;
};
r.fastRemove = function(t) {
var e = this.array.indexOf(t);
e >= 0 && this.fastRemoveAt(e);
};
r.fastRemoveAt = function(t) {
var e = this.array;
e[t] = e[e.length - 1];
--e.length;
t <= this.i && --this.i;
};
r.push = function(t) {
this.array.push(t);
};
e.exports = n;
}), {} ],
315: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function() {
function t() {
this.enabled = !1;
this.count = 0;
this.maxSize = 1024;
}
var e = t.prototype;
e.get = function() {};
e.put = function() {};
e.clear = function() {};
return t;
})();
i.default = n;
cc.pool = {};
n.register = function(t, e) {
cc.pool[t] = e;
};
e.exports = i.default;
}), {} ],
316: [ (function(t, e, i) {
"use strict";
cc._PrefabInfo = cc.Class({
name: "cc.PrefabInfo",
properties: {
root: null,
asset: null,
fileId: "",
sync: !1,
_synced: {
default: !1,
serializable: !1
}
}
});
e.exports = {
syncWithPrefab: function(t) {
var e = t._prefab;
e._synced = !0;
if (e.asset) {
var i = t._objFlags, n = t._parent, r = t._id, s = t._name, o = t._active, a = t._eulerAngles.x, c = t._eulerAngles.y, l = t._eulerAngles.z, u = t._localZOrder, h = t._globalZOrder, f = t._trs, _ = f[0], d = f[1], p = f[2];
cc.game._isCloning = !0;
e.asset._doInstantiate(t);
cc.game._isCloning = !1;
t._objFlags = i;
t._parent = n;
t._id = r;
t._prefab = e;
t._name = s;
t._active = o;
t._localZOrder = u;
t._globalZOrder = h;
(f = t._trs)[0] = _;
f[1] = d;
f[2] = p;
t._eulerAngles.x = a;
t._eulerAngles.y = c;
t._eulerAngles.z = l;
} else {
cc.errorID(3701, t.name);
t._prefab = null;
}
}
};
}), {} ],
317: [ (function(t, e, i) {
"use strict";
var n = t("../../platform/CCMacro"), r = t("./perf-counter"), s = !1, o = 15, a = null, c = null, l = null;
function u() {
if (!a) {
a = {
frame: {
desc: "Frame time (ms)",
min: 0,
max: 50,
average: 500
},
fps: {
desc: "Framerate (FPS)",
below: 30,
average: 500
},
draws: {
desc: "Draw call"
},
logic: {
desc: "Game Logic (ms)",
min: 0,
max: 50,
average: 500,
color: "#080"
},
render: {
desc: "Renderer (ms)",
min: 0,
max: 50,
average: 500,
color: "#f90"
},
mode: {
desc: cc.game.renderType === cc.game.RENDER_TYPE_WEBGL ? "WebGL" : "Canvas",
min: 1
}
};
var t = performance.now();
for (var e in a) a[e]._counter = new r(e, a[e], t);
}
}
function h() {
if (!c || !c.isValid) {
(c = new cc.Node("PROFILER-NODE")).x = c.y = 10;
c.groupIndex = cc.Node.BuiltinGroupIndex.DEBUG;
cc.Camera._setupDebugCamera();
c.zIndex = n.MAX_ZINDEX;
cc.game.addPersistRootNode(c);
var t = new cc.Node("LEFT-PANEL");
t.anchorX = t.anchorY = 0;
var e = t.addComponent(cc.Label);
e.fontSize = o;
e.lineHeight = o;
t.parent = c;
var i = new cc.Node("RIGHT-PANEL");
i.anchorX = 1;
i.anchorY = 0;
i.x = 200;
var r = i.addComponent(cc.Label);
r.horizontalAlign = cc.Label.HorizontalAlign.RIGHT;
r.fontSize = o;
r.lineHeight = o;
i.parent = c;
if (cc.sys.browserType !== cc.sys.BROWSER_TYPE_BAIDU_GAME_SUB && cc.sys.browserType !== cc.sys.BROWSER_TYPE_WECHAT_GAME_SUB) {
e.cacheMode = cc.Label.CacheMode.CHAR;
r.cacheMode = cc.Label.CacheMode.CHAR;
}
l = {
left: e,
right: r
};
}
}
function f() {
h();
var t = cc.director._lastUpdate;
a.frame._counter.start(t);
a.logic._counter.start(t);
}
function _() {
var t = performance.now();
cc.director.isPaused() ? a.frame._counter.start(t) : a.logic._counter.end(t);
a.render._counter.start(t);
}
function d() {
var t = performance.now();
a.render._counter.end(t);
a.draws._counter.value = cc.renderer.drawCalls;
a.frame._counter.end(t);
a.fps._counter.frame(t);
var e = "", i = "";
for (var n in a) {
var r = a[n];
r._counter.sample(t);
e += r.desc + "\n";
i += r._counter.human() + "\n";
}
if (l) {
l.left.string = e;
l.right.string = i;
}
}
cc.profiler = e.exports = {
isShowingStats: function() {
return s;
},
hideStats: function() {
if (s) {
c && (c.active = !1);
cc.director.off(cc.Director.EVENT_BEFORE_UPDATE, f);
cc.director.off(cc.Director.EVENT_AFTER_UPDATE, _);
cc.director.off(cc.Director.EVENT_AFTER_DRAW, d);
s = !1;
}
},
showStats: function() {
if (!s) {
u();
c && (c.active = !0);
cc.director.on(cc.Director.EVENT_BEFORE_UPDATE, f);
cc.director.on(cc.Director.EVENT_AFTER_UPDATE, _);
cc.director.on(cc.Director.EVENT_AFTER_DRAW, d);
s = !0;
}
}
};
}), {
"../../platform/CCMacro": 235,
"./perf-counter": 319
} ],
318: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.Counter",
ctor: function(t, e, i) {
this._id = t;
this._opts = e || {};
this._value = 0;
this._total = 0;
this._averageValue = 0;
this._accumValue = 0;
this._accumSamples = 0;
this._accumStart = i;
},
properties: {
value: {
get: function() {
return this._value;
},
set: function(t) {
this._value = t;
}
}
},
_average: function(t, e) {
if (this._opts.average) {
this._accumValue += t;
++this._accumSamples;
var i = e;
if (i - this._accumStart >= this._opts.average) {
this._averageValue = this._accumValue / this._accumSamples;
this._accumValue = 0;
this._accumStart = i;
this._accumSamples = 0;
}
}
},
sample: function(t) {
this._average(this._value, t);
},
human: function() {
var t = this._opts.average ? this._averageValue : this._value;
return Math.round(100 * t) / 100;
},
alarm: function() {
return this._opts.below && this._value < this._opts.below || this._opts.over && this._value > this._opts.over;
}
});
e.exports = n;
}), {} ],
319: [ (function(t, e, i) {
"use strict";
var n = t("./counter"), r = cc.Class({
name: "cc.PerfCounter",
extends: n,
ctor: function(t, e, i) {
this._time = i;
},
start: function(t) {
this._time = t;
},
end: function(t) {
this._value = t - this._time;
this._average(this._value);
},
tick: function() {
this.end();
this.start();
},
frame: function(t) {
var e = t, i = e - this._time;
this._total++;
if (i > (this._opts.average || 1e3)) {
this._value = 1e3 * this._total / i;
this._total = 0;
this._time = e;
this._average(this._value);
}
}
});
e.exports = r;
}), {
"./counter": 318
} ],
320: [ (function(t, e, i) {
"use strict";
var n = 0;
0;
var r = new (function(t) {
return t && t.__esModule ? t : {
default: t
};
}(t("../platform/js")).default.Pool)(2);
r.get = function() {
return this._get() || {
key: null,
value: null,
prev: null,
next: null
};
};
function s(t) {
this.count = 0;
this.limit = t;
this.datas = {};
this.head = null;
this.tail = null;
}
s.prototype.moveToHead = function(t) {
t.next = this.head;
t.prev = null;
null !== this.head && (this.head.prev = t);
this.head = t;
null === this.tail && (this.tail = t);
this.count++;
this.datas[t.key] = t;
};
s.prototype.put = function(t, e) {
var i = r.get();
i.key = t;
i.value = e;
if (this.count >= this.limit) {
var n = this.tail;
delete this.datas[n.key];
this.count--;
this.tail = n.prev;
this.tail.next = null;
n.prev = null;
n.next = null;
r.put(n);
}
this.moveToHead(i);
};
s.prototype.remove = function(t) {
null !== t.prev ? t.prev.next = t.next : this.head = t.next;
null !== t.next ? t.next.prev = t.prev : this.tail = t.prev;
delete this.datas[t.key];
this.count--;
};
s.prototype.get = function(t) {
var e = this.datas[t];
if (e) {
this.remove(e);
this.moveToHead(e);
return e.value;
}
return null;
};
s.prototype.clear = function() {
this.count = 0;
this.datas = {};
this.head = null;
this.tail = null;
};
s.prototype.has = function(t) {
return !!this.datas[t];
};
s.prototype.delete = function(t) {
var e = this.datas[t];
this.remove(e);
};
var o = new s(100), a = {
BASELINE_RATIO: .26,
MIDDLE_RATIO: .37,
BASELINE_OFFSET: n,
label_wordRex: /([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûа-яА-ЯЁё]+|\S)/,
label_symbolRex: /^[!,.:;'}\]%\?>、‘“》？。，！]/,
label_lastWordRex: /([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]+|\S)$/,
label_lastEnglish: /[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]+$/,
label_firstEnglish: /^[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁё]/,
highSurrogateRex: /[\uD800-\uDBFF]/,
lowSurrogateRex: /[\uDC00-\uDFFF]/,
label_wrapinspection: !0,
__CHINESE_REG: /^[\u4E00-\u9FFF\u3400-\u4DFF]+$/,
__JAPANESE_REG: /[\u3000-\u303F]|[\u3040-\u309F]|[\u30A0-\u30FF]|[\uFF00-\uFFEF]|[\u4E00-\u9FAF]|[\u2605-\u2606]|[\u2190-\u2195]|\u203B/g,
__KOREAN_REG: /^[\u1100-\u11FF]|[\u3130-\u318F]|[\uA960-\uA97F]|[\uAC00-\uD7AF]|[\uD7B0-\uD7FF]+$/,
isUnicodeCJK: function(t) {
return this.__CHINESE_REG.test(t) || this.__JAPANESE_REG.test(t) || this.__KOREAN_REG.test(t);
},
isUnicodeSpace: function(t) {
return (t = t.charCodeAt(0)) >= 9 && t <= 13 || 32 === t || 133 === t || 160 === t || 5760 === t || t >= 8192 && t <= 8202 || 8232 === t || 8233 === t || 8239 === t || 8287 === t || 12288 === t;
},
safeMeasureText: function(t, e, i) {
var n = (i || t.font) + "🎮" + e, r = o.get(n);
if (null !== r) return r;
var s = t.measureText(e), a = s && s.width || 0;
o.put(n, a);
return a;
},
_safeSubstring: function(t, e, i) {
var n = e, r = i, s = t[e];
this.lowSurrogateRex.test(s) && n--;
if (void 0 !== i) if (i - 1 !== e) {
var o = t[i - 1];
this.highSurrogateRex.test(o) && r--;
} else this.highSurrogateRex.test(s) && r++;
return t.substring(n, r);
},
fragmentText: function(t, e, i, n) {
var r = [];
if (0 === t.length || i < 0) {
r.push("");
return r;
}
for (var s = t; e > i && s.length > 1; ) {
for (var o = s.length * (i / e) | 0, a = this._safeSubstring(s, o), c = e - n(a), l = a, u = 0, h = 0; c > i && h++ < 10; ) {
o *= i / c;
o |= 0;
c = e - n(a = this._safeSubstring(s, o));
}
h = 0;
for (;c <= i && h++ < 10; ) {
if (a) {
var f = this.label_wordRex.exec(a);
u = f ? f[0].length : 1;
l = a;
}
o += u;
c = e - n(a = this._safeSubstring(s, o));
}
if (0 === (o -= u)) {
o = 1;
l = this._safeSubstring(s, 1);
} else if (1 === o && this.highSurrogateRex.test(s[0])) {
o = 2;
l = this._safeSubstring(s, 2);
}
var _, d = this._safeSubstring(s, 0, o);
if (this.label_wrapinspection && this.label_symbolRex.test(l || a)) {
0 === (o -= (_ = this.label_lastWordRex.exec(d)) ? _[0].length : 0) && (o = 1);
l = this._safeSubstring(s, o);
d = this._safeSubstring(s, 0, o);
}
if (this.label_firstEnglish.test(l) && (_ = this.label_lastEnglish.exec(d)) && d !== _[0]) {
o -= _[0].length;
l = this._safeSubstring(s, o);
d = this._safeSubstring(s, 0, o);
}
0 === r.length ? r.push(d) : (d = d.trimLeft()).length > 0 && r.push(d);
e = n(s = l || a);
}
0 === r.length ? r.push(s) : (s = s.trimLeft()).length > 0 && r.push(s);
return r;
}
};
cc.textUtils = e.exports = a;
}), {
"../platform/js": 250
} ],
321: [ (function(t, e, i) {
"use strict";
var n = t("../assets/CCTexture2D"), r = {
loadImage: function(t, e, i) {
cc.assertID(t, 3103);
var r = cc.loader.getRes(t);
if (r) {
if (r.loaded) {
e && e.call(i, null, r);
return r;
}
r.once("load", (function() {
e && e.call(i, null, r);
}), i);
return r;
}
(r = new n()).url = t;
cc.loader.load({
url: t,
texture: r
}, (function(t, n) {
if (t) return e && e.call(i, t || new Error("Unknown error"));
n.handleLoadedTexture();
e && e.call(i, null, n);
}));
return r;
},
cacheImage: function(t, e) {
if (t && e) {
var i = new n();
i.initWithElement(e);
var r = {
id: t,
url: t,
error: null,
content: i,
complete: !1
};
cc.loader.flowOut(r);
return i;
}
},
postLoadTexture: function(t, e) {
t.loaded ? e && e() : t.url ? cc.loader.load({
url: t.url,
skips: t._isCompressed() ? void 0 : [ "Loader" ]
}, (function(i, n) {
if (n) {
0;
t.loaded || (t._nativeAsset = n);
}
e && e(i);
})) : e && e();
}
};
cc.textureUtil = e.exports = r;
}), {
"../assets/CCTexture2D": 92
} ],
322: [ (function(t, e, i) {
"use strict";
var n = t("./node-unit"), r = t("./node-mem-pool");
e.exports = {
NodeMemPool: new r(n)
};
}), {
"./node-mem-pool": 324,
"./node-unit": 325
} ],
323: [ (function(t, e, i) {
"use strict";
var n = function(t) {
this._unitClass = t;
this._pool = [];
this._findOrder = [];
this._initNative();
}, r = n.prototype;
r._initNative = function() {
this._nativeMemPool = new renderer.MemPool();
};
r._buildUnit = function(t) {
var e = new this._unitClass(t, this);
this._nativeMemPool.updateCommonData(t, e._data, e._signData);
return e;
};
r._destroyUnit = function(t) {
this._pool[t] = null;
for (var e = 0, i = this._findOrder.length; e < i; e++) {
var n = this._findOrder[e];
if (n && n.unitID == t) {
this._findOrder.splice(e, 1);
break;
}
}
this._nativeMemPool.removeCommonData(t);
};
r._findUnitID = function() {
for (var t = 0, e = this._pool; e[t]; ) t++;
return t;
};
r.pop = function() {
for (var t = null, e = 0, i = this._findOrder, n = this._pool, r = i.length; e < r; e++) {
var s = i[e];
if (s && s.hasSpace()) {
t = s;
break;
}
}
if (!t) {
var o = this._findUnitID();
t = this._buildUnit(o);
n[o] = t;
i.push(t);
e = i.length - 1;
}
var a = i[0];
if (a !== t) {
i[0] = t;
i[e] = a;
}
return t.pop();
};
r.push = function(t) {
var e = this._pool[t.unitID];
e.push(t.index);
this._findOrder.length > 1 && e.isAllFree() && this._destroyUnit(t.unitID);
return e;
};
e.exports = n;
}), {} ],
324: [ (function(t, e, i) {
"use strict";
var n = t("./mem-pool"), r = function(t) {
n.call(this, t);
};
(function() {
var t = function() {};
t.prototype = n.prototype;
r.prototype = new t();
})();
var s = r.prototype;
s._initNative = function() {
this._nativeMemPool = new renderer.NodeMemPool();
};
s._destroyUnit = function(t) {
n.prototype._destroyUnit.call(this, t);
this._nativeMemPool.removeNodeData(t);
};
e.exports = r;
}), {
"./mem-pool": 323
} ],
325: [ (function(t, e, i) {
"use strict";
var n = t("../../value-types/utils"), r = Uint32Array, s = 10 * n.FLOAT_BYTES, o = 16 * n.FLOAT_BYTES, a = 16 * n.FLOAT_BYTES, c = Uint32Array, l = Uint32Array, u = Int32Array, h = Uint8Array, f = Uint8Array, _ = Uint32Array, d = 2 * n.FLOAT_BYTES, p = t("./unit-base"), m = function(t, e) {
p.call(this, t, e);
var i = this._contentNum;
this.trsList = new n.FLOAT_ARRAY_TYPE(10 * i);
this.localMatList = new n.FLOAT_ARRAY_TYPE(16 * i);
this.worldMatList = new n.FLOAT_ARRAY_TYPE(16 * i);
this.dirtyList = new r(1 * i);
this.parentList = new c(2 * i);
this.zOrderList = new l(1 * i);
this.cullingMaskList = new u(1 * i);
this.opacityList = new h(1 * i);
this.is3DList = new f(1 * i);
this.nodeList = new _(2 * i);
this.skewList = new n.FLOAT_ARRAY_TYPE(2 * i);
this._memPool._nativeMemPool.updateNodeData(t, this.dirtyList, this.trsList, this.localMatList, this.worldMatList, this.parentList, this.zOrderList, this.cullingMaskList, this.opacityList, this.is3DList, this.nodeList, this.skewList);
for (var m = 0; m < i; m++) {
var y = this._spacesData[m];
y.trs = new n.FLOAT_ARRAY_TYPE(this.trsList.buffer, m * s, 10);
y.localMat = new n.FLOAT_ARRAY_TYPE(this.localMatList.buffer, m * o, 16);
y.worldMat = new n.FLOAT_ARRAY_TYPE(this.worldMatList.buffer, m * a, 16);
y.dirty = new r(this.dirtyList.buffer, 4 * m, 1);
y.parent = new c(this.parentList.buffer, 8 * m, 2);
y.zOrder = new l(this.zOrderList.buffer, 4 * m, 1);
y.cullingMask = new u(this.cullingMaskList.buffer, 4 * m, 1);
y.opacity = new h(this.opacityList.buffer, 1 * m, 1);
y.is3D = new f(this.is3DList.buffer, 1 * m, 1);
y.skew = new n.FLOAT_ARRAY_TYPE(this.skewList.buffer, m * d, 2);
}
};
(function() {
var t = function() {};
t.prototype = p.prototype;
m.prototype = new t();
})();
e.exports = m;
}), {
"../../value-types/utils": 335,
"./unit-base": 326
} ],
326: [ (function(t, e, i) {
"use strict";
var n = function(t, e, i) {
i = i || 128;
this.unitID = t;
this._memPool = e;
this._data = new Uint16Array(2);
this._data[0] = 0;
this._data[1] = 0;
this._contentNum = i;
this._signData = new Uint16Array(2 * this._contentNum);
this._spacesData = [];
for (var n = 0; n < i; n++) {
var r = 2 * n;
this._signData[r + 0] = n + 1;
this._signData[r + 1] = 0;
this._spacesData[n] = {
index: n,
unitID: t
};
}
this._signData[2 * (i - 1)] = 65535;
}, r = n.prototype;
r.hasSpace = function() {
return 65535 !== this._data[0];
};
r.isAllFree = function() {
return 0 == this._data[1];
};
r.pop = function() {
var t = this._data[0];
if (65535 === t) return null;
var e = t, i = 2 * e, n = this._spacesData[e];
this._signData[i + 1] = 1;
this._data[0] = this._signData[i + 0];
this._data[1]++;
return n;
};
r.push = function(t) {
var e = 2 * t;
this._signData[e + 1] = 0;
this._signData[e + 0] = this._data[0];
this._data[0] = t;
this._data[1]--;
};
r.dump = function() {
for (var t = 0, e = this._data[0], i = ""; 65535 != e; ) {
t++;
i += e + "->";
e = this._signData[2 * e + 0];
}
for (var n = 0, r = "", s = this._contentNum, o = 0; o < s; o++) {
if (1 == this._signData[2 * o + 1]) {
n++;
r += o + "->";
}
}
var a = t + n;
console.log("unitID:", this.unitID, "spaceNum:", t, "calc using num:", n, "store using num:", this._data[1], "calc total num:", a, "actually total num:", this._contentNum);
console.log("free info:", i);
console.log("using info:", r);
n != this._data[1] && cc.error("using num error", "calc using num:", n, "store using num:", this._data[1]);
t + n != this._contentNum && cc.error("total num error", "calc total num:", a, "actually total num:", this._contentNum);
};
e.exports = n;
}), {} ],
327: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = o(t("./value-type")), r = o(t("../platform/CCClass")), s = o(t("../utils/misc"));
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
function a(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function c(t, e, i) {
e && a(t.prototype, e);
i && a(t, i);
return t;
}
function l(t) {
return function() {
var e, i = _(t);
if (f()) {
var n = _(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return u(this, e);
};
}
function u(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? h(t) : e;
}
function h(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function f() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function _(t) {
return (_ = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function d(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var p = (function(t) {
d(e, t);
l(e);
e.copy = function(t, e) {
t.r = e.r;
t.g = e.g;
t.b = e.b;
t.a = e.a;
return t;
};
e.clone = function(t) {
return new e(t.r, t.g, t.b, t.a);
};
e.set = function(t, e, i, n, r) {
void 0 === e && (e = 255);
void 0 === i && (i = 255);
void 0 === n && (n = 255);
void 0 === r && (r = 255);
t.r = e;
t.g = i;
t.b = n;
t.a = r;
return t;
};
e.fromHex = function(t, e) {
var i = (e >> 24) / 255, n = (e >> 16 & 255) / 255, r = (e >> 8 & 255) / 255, s = (255 & e) / 255;
t.r = i;
t.g = n;
t.b = r;
t.a = s;
return t;
};
e.add = function(t, e, i) {
t.r = e.r + i.r;
t.g = e.g + i.g;
t.b = e.b + i.b;
t.a = e.a + i.a;
return t;
};
e.subtract = function(t, e, i) {
t.r = e.r - i.r;
t.g = e.g - i.g;
t.b = e.b - i.b;
t.a = e.a - i.a;
return t;
};
e.multiply = function(t, e, i) {
t.r = e.r * i.r;
t.g = e.g * i.g;
t.b = e.b * i.b;
t.a = e.a * i.a;
return t;
};
e.divide = function(t, e, i) {
t.r = e.r / i.r;
t.g = e.g / i.g;
t.b = e.b / i.b;
t.a = e.a / i.a;
return t;
};
e.scale = function(t, e, i) {
t.r = e.r * i;
t.g = e.g * i;
t.b = e.b * i;
t.a = e.a * i;
return t;
};
e.lerp = function(t, e, i, n) {
var r = e.r, s = e.g, o = e.b, a = e.a;
t.r = r + n * (i.r - r);
t.g = s + n * (i.g - s);
t.b = o + n * (i.b - o);
t.a = a + n * (i.a - a);
return t;
};
e.toArray = function(t, i, n) {
void 0 === n && (n = 0);
var r = i instanceof e || i.a > 1 ? 1 / 255 : 1;
t[n + 0] = i.r * r;
t[n + 1] = i.g * r;
t[n + 2] = i.b * r;
t[n + 3] = i.a * r;
return t;
};
e.fromArray = function(t, e, i) {
void 0 === i && (i = 0);
e.r = 255 * t[i + 0];
e.g = 255 * t[i + 1];
e.b = 255 * t[i + 2];
e.a = 255 * t[i + 3];
return e;
};
c(e, null, [ {
key: "WHITE",
get: function() {
return new e(255, 255, 255, 255);
}
}, {
key: "BLACK",
get: function() {
return new e(0, 0, 0, 255);
}
}, {
key: "TRANSPARENT",
get: function() {
return new e(0, 0, 0, 0);
}
}, {
key: "GRAY",
get: function() {
return new e(127.5, 127.5, 127.5);
}
}, {
key: "RED",
get: function() {
return new e(255, 0, 0);
}
}, {
key: "GREEN",
get: function() {
return new e(0, 255, 0);
}
}, {
key: "BLUE",
get: function() {
return new e(0, 0, 255);
}
}, {
key: "YELLOW",
get: function() {
return new e(255, 235, 4);
}
}, {
key: "ORANGE",
get: function() {
return new e(255, 127, 0);
}
}, {
key: "CYAN",
get: function() {
return new e(0, 255, 255);
}
}, {
key: "MAGENTA",
get: function() {
return new e(255, 0, 255);
}
} ]);
function e(e, i, n, r) {
var s;
void 0 === e && (e = 0);
void 0 === i && (i = 0);
void 0 === n && (n = 0);
void 0 === r && (r = 255);
(s = t.call(this) || this)._val = 0;
if ("object" == typeof e) {
i = e.g;
n = e.b;
r = e.a;
e = e.r;
}
s._val = (r << 24 >>> 0) + (n << 16) + (i << 8) + e;
return s;
}
var i = e.prototype;
i.clone = function() {
var t = new e();
t._val = this._val;
return t;
};
i.equals = function(t) {
return t && this._val === t._val;
};
i.lerp = function(t, i, n) {
n = n || new e();
var r = this.r, s = this.g, o = this.b, a = this.a;
n.r = r + (t.r - r) * i;
n.g = s + (t.g - s) * i;
n.b = o + (t.b - o) * i;
n.a = a + (t.a - a) * i;
return n;
};
i.toString = function() {
return "rgba(" + this.r.toFixed() + ", " + this.g.toFixed() + ", " + this.b.toFixed() + ", " + this.a.toFixed() + ")";
};
i.getR = function() {
return 255 & this._val;
};
i.setR = function(t) {
t = ~~s.default.clampf(t, 0, 255);
this._val = (4294967040 & this._val | t) >>> 0;
return this;
};
i.getG = function() {
return (65280 & this._val) >> 8;
};
i.setG = function(t) {
t = ~~s.default.clampf(t, 0, 255);
this._val = (4294902015 & this._val | t << 8) >>> 0;
return this;
};
i.getB = function() {
return (16711680 & this._val) >> 16;
};
i.setB = function(t) {
t = ~~s.default.clampf(t, 0, 255);
this._val = (4278255615 & this._val | t << 16) >>> 0;
return this;
};
i.getA = function() {
return (4278190080 & this._val) >>> 24;
};
i.setA = function(t) {
t = ~~s.default.clampf(t, 0, 255);
this._val = (16777215 & this._val | t << 24) >>> 0;
return this;
};
i.toCSS = function(t) {
return t && "rgba" !== t ? "rgb" === t ? "rgb(" + (0 | this.r) + "," + (0 | this.g) + "," + (0 | this.b) + ")" : "#" + this.toHEX(t) : "rgba(" + (0 | this.r) + "," + (0 | this.g) + "," + (0 | this.b) + "," + (this.a / 255).toFixed(2) + ")";
};
i.fromHEX = function(t) {
t = 0 === t.indexOf("#") ? t.substring(1) : t;
var e = parseInt(t.substr(0, 2), 16) || 0, i = parseInt(t.substr(2, 2), 16) || 0, n = parseInt(t.substr(4, 2), 16) || 0, r = parseInt(t.substr(6, 2), 16) || 255;
this._val = (r << 24 >>> 0) + (n << 16) + (i << 8) + e;
return this;
};
i.toHEX = function(t) {
var e = [ (this.r < 16 ? "0" : "") + (0 | this.r).toString(16), (this.g < 16 ? "0" : "") + (0 | this.g).toString(16), (this.b < 16 ? "0" : "") + (0 | this.b).toString(16) ], i = -1;
if ("#rgb" === t) for (i = 0; i < e.length; ++i) e[i].length > 1 && (e[i] = e[i][0]); else if ("#rrggbb" === t) for (i = 0; i < e.length; ++i) 1 === e[i].length && (e[i] = "0" + e[i]); else "#rrggbbaa" === t && e.push((this.a < 16 ? "0" : "") + (0 | this.a).toString(16));
return e.join("");
};
i.toRGBValue = function() {
return 16777215 & this._val;
};
i.fromHSV = function(t, e, i) {
var n, r, s;
if (0 === e) n = r = s = i; else if (0 === i) n = r = s = 0; else {
1 === t && (t = 0);
t *= 6;
e = e;
i = i;
var o = Math.floor(t), a = t - o, c = i * (1 - e), l = i * (1 - e * a), u = i * (1 - e * (1 - a));
switch (o) {
case 0:
n = i;
r = u;
s = c;
break;

case 1:
n = l;
r = i;
s = c;
break;

case 2:
n = c;
r = i;
s = u;
break;

case 3:
n = c;
r = l;
s = i;
break;

case 4:
n = u;
r = c;
s = i;
break;

case 5:
n = i;
r = c;
s = l;
}
}
n *= 255;
r *= 255;
s *= 255;
this._val = (this.a << 24 >>> 0) + (s << 16) + (r << 8) + n;
return this;
};
i.toHSV = function() {
var t = this.r / 255, e = this.g / 255, i = this.b / 255, n = {
h: 0,
s: 0,
v: 0
}, r = Math.max(t, e, i), s = Math.min(t, e, i), o = 0;
n.v = r;
n.s = r ? (r - s) / r : 0;
if (n.s) {
o = r - s;
n.h = t === r ? (e - i) / o : e === r ? 2 + (i - t) / o : 4 + (t - e) / o;
n.h /= 6;
n.h < 0 && (n.h += 1);
} else n.h = 0;
return n;
};
i.set = function(t) {
if (t._val) this._val = t._val; else {
this.r = t.r;
this.g = t.g;
this.b = t.b;
this.a = t.a;
}
return this;
};
i._fastSetA = function(t) {
this._val = (16777215 & this._val | t << 24) >>> 0;
};
i.multiply = function(t) {
var e = (255 & this._val) * t.r >> 8, i = (65280 & this._val) * t.g >> 8, n = (16711680 & this._val) * t.b >> 8, r = ((4278190080 & this._val) >>> 8) * t.a;
this._val = 4278190080 & r | 16711680 & n | 65280 & i | 255 & e;
return this;
};
c(e, [ {
key: "r",
get: function() {
return this.getR();
},
set: function(t) {
this.setR(t);
}
}, {
key: "g",
get: function() {
return this.getG();
},
set: function(t) {
this.setG(t);
}
}, {
key: "b",
get: function() {
return this.getB();
},
set: function(t) {
this.setB(t);
}
}, {
key: "a",
get: function() {
return this.getA();
},
set: function(t) {
this.setA(t);
}
} ]);
return e;
})(n.default);
i.default = p;
p.div = p.divide;
p.sub = p.subtract;
p.mul = p.multiply;
p.WHITE_R = p.WHITE;
p.BLACK_R = p.BLACK;
p.TRANSPARENT_R = p.TRANSPARENT;
p.GRAY_R = p.GRAY;
p.RED_R = p.RED;
p.GREEN_R = p.GREEN;
p.BLUE_R = p.BLUE;
p.YELLOW_R = p.YELLOW;
p.ORANGE_R = p.ORANGE;
p.CYAN_R = p.CYAN;
p.MAGENTA_R = p.MAGENTA;
r.default.fastDefine("cc.Color", p, {
r: 0,
g: 0,
b: 0,
a: 255
});
cc.Color = p;
cc.color = function(t, e, i, n) {
if ("string" == typeof t) {
return new p().fromHEX(t);
}
return "object" == typeof t ? new p(t.r, t.g, t.b, t.a) : new p(t, e, i, n);
};
e.exports = i.default;
}), {
"../platform/CCClass": 230,
"../utils/misc": 313,
"./value-type": 336
} ],
328: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
var n = {
Vec2: !0,
Vec3: !0,
Vec4: !0,
Mat4: !0,
Mat3: !0,
Rect: !0,
Size: !0,
Color: !0,
Quat: !0,
Trs: !0
};
i.Trs = i.Quat = i.Color = i.Size = i.Rect = i.Mat3 = i.Mat4 = i.Vec4 = i.Vec3 = i.Vec2 = void 0;
var r = p(t("./vec2"));
i.Vec2 = r.default;
var s = p(t("./vec3"));
i.Vec3 = s.default;
var o = p(t("./vec4"));
i.Vec4 = o.default;
var a = p(t("./mat4"));
i.Mat4 = a.default;
var c = p(t("./mat3"));
i.Mat3 = c.default;
var l = p(t("./rect"));
i.Rect = l.default;
var u = p(t("./size"));
i.Size = u.default;
var h = p(t("./color"));
i.Color = h.default;
var f = p(t("./quat"));
i.Quat = f.default;
var _ = p(t("./trs"));
i.Trs = _.default;
var d = t("./utils");
Object.keys(d).forEach((function(t) {
"default" !== t && "__esModule" !== t && (Object.prototype.hasOwnProperty.call(n, t) || (i[t] = d[t]));
}));
function p(t) {
return t && t.__esModule ? t : {
default: t
};
}
cc.math = e.exports;
}), {
"./color": 327,
"./mat3": 329,
"./mat4": 330,
"./quat": 331,
"./rect": 332,
"./size": 333,
"./trs": 334,
"./utils": 335,
"./vec2": 337,
"./vec3": 338,
"./vec4": 339
} ],
329: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("../value-types/utils"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./vec3"));
var s = (function() {
t.create = function(e, i, n, r, s, o, a, c, l) {
void 0 === e && (e = 1);
void 0 === i && (i = 0);
void 0 === n && (n = 0);
void 0 === r && (r = 0);
void 0 === s && (s = 1);
void 0 === o && (o = 0);
void 0 === a && (a = 0);
void 0 === c && (c = 0);
void 0 === l && (l = 1);
return new t(e, i, n, r, s, o, a, c, l);
};
t.clone = function(e) {
var i = e.m;
return new t(i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8]);
};
t.copy = function(t, e) {
t.m.set(e.m);
return t;
};
t.set = function(t, e, i, n, r, s, o, a, c, l) {
var u = t.m;
u[0] = e;
u[1] = i;
u[2] = n;
u[3] = r;
u[4] = s;
u[5] = o;
u[6] = a;
u[7] = c;
u[8] = l;
return t;
};
t.identity = function(t) {
var e = t.m;
e[0] = 1;
e[1] = 0;
e[2] = 0;
e[3] = 0;
e[4] = 1;
e[5] = 0;
e[6] = 0;
e[7] = 0;
e[8] = 1;
return t;
};
t.transpose = function(t, e) {
var i = e.m, n = t.m;
if (t === e) {
var r = i[1], s = i[2], o = i[5];
n[1] = i[3];
n[2] = i[6];
n[3] = r;
n[5] = i[7];
n[6] = s;
n[7] = o;
} else {
n[0] = i[0];
n[1] = i[3];
n[2] = i[6];
n[3] = i[1];
n[4] = i[4];
n[5] = i[7];
n[6] = i[2];
n[7] = i[5];
n[8] = i[8];
}
return t;
};
t.invert = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = i[4], l = i[5], u = i[6], h = i[7], f = i[8], _ = f * c - l * h, d = -f * a + l * u, p = h * a - c * u, m = r * _ + s * d + o * p;
if (!m) return t;
m = 1 / m;
n[0] = _ * m;
n[1] = (-f * s + o * h) * m;
n[2] = (l * s - o * c) * m;
n[3] = d * m;
n[4] = (f * r - o * u) * m;
n[5] = (-l * r + o * a) * m;
n[6] = p * m;
n[7] = (-h * r + s * u) * m;
n[8] = (c * r - s * a) * m;
return t;
};
t.adjoint = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = i[4], l = i[5], u = i[6], h = i[7], f = i[8];
n[0] = c * f - l * h;
n[1] = o * h - s * f;
n[2] = s * l - o * c;
n[3] = l * u - a * f;
n[4] = r * f - o * u;
n[5] = o * a - r * l;
n[6] = a * h - c * u;
n[7] = s * u - r * h;
n[8] = r * c - s * a;
return t;
};
t.determinant = function(t) {
var e = t.m, i = e[0], n = e[1], r = e[2], s = e[3], o = e[4], a = e[5], c = e[6], l = e[7], u = e[8];
return i * (u * o - a * l) + n * (-u * s + a * c) + r * (l * s - o * c);
};
t.multiply = function(t, e, i) {
var n = e.m, r = i.m, s = t.m, o = n[0], a = n[1], c = n[2], l = n[3], u = n[4], h = n[5], f = n[6], _ = n[7], d = n[8], p = r[0], m = r[1], y = r[2], v = r[3], g = r[4], b = r[5], C = r[6], x = r[7], A = r[8];
s[0] = p * o + m * l + y * f;
s[1] = p * a + m * u + y * _;
s[2] = p * c + m * h + y * d;
s[3] = v * o + g * l + b * f;
s[4] = v * a + g * u + b * _;
s[5] = v * c + g * h + b * d;
s[6] = C * o + x * l + A * f;
s[7] = C * a + x * u + A * _;
s[8] = C * c + x * h + A * d;
return t;
};
t.multiplyMat4 = function(t, e, i) {
var n = e.m, r = i.m, s = t.m, o = n[0], a = n[1], c = n[2], l = n[3], u = n[4], h = n[5], f = n[6], _ = n[7], d = n[8], p = r[0], m = r[1], y = r[2], v = r[4], g = r[5], b = r[6], C = r[8], x = r[9], A = r[10];
s[0] = p * o + m * l + y * f;
s[1] = p * a + m * u + y * _;
s[2] = p * c + m * h + y * d;
s[3] = v * o + g * l + b * f;
s[4] = v * a + g * u + b * _;
s[5] = v * c + g * h + b * d;
s[6] = C * o + x * l + A * f;
s[7] = C * a + x * u + A * _;
s[8] = C * c + x * h + A * d;
return t;
};
t.translate = function(t, e, i) {
var n = e.m, r = t.m, s = n[0], o = n[1], a = n[2], c = n[3], l = n[4], u = n[5], h = n[6], f = n[7], _ = n[8], d = i.x, p = i.y;
r[0] = s;
r[1] = o;
r[2] = a;
r[3] = c;
r[4] = l;
r[5] = u;
r[6] = d * s + p * c + h;
r[7] = d * o + p * l + f;
r[8] = d * a + p * u + _;
return t;
};
t.rotate = function(t, e, i) {
var n = e.m, r = t.m, s = n[0], o = n[1], a = n[2], c = n[3], l = n[4], u = n[5], h = n[6], f = n[7], _ = n[8], d = Math.sin(i), p = Math.cos(i);
r[0] = p * s + d * c;
r[1] = p * o + d * l;
r[2] = p * a + d * u;
r[3] = p * c - d * s;
r[4] = p * l - d * o;
r[5] = p * u - d * a;
r[6] = h;
r[7] = f;
r[8] = _;
return t;
};
t.scale = function(t, e, i) {
var n = i.x, r = i.y, s = e.m, o = t.m;
o[0] = n * s[0];
o[1] = n * s[1];
o[2] = n * s[2];
o[3] = r * s[3];
o[4] = r * s[4];
o[5] = r * s[5];
o[6] = s[6];
o[7] = s[7];
o[8] = s[8];
return t;
};
t.fromMat4 = function(t, e) {
var i = e.m, n = t.m;
n[0] = i[0];
n[1] = i[1];
n[2] = i[2];
n[3] = i[4];
n[4] = i[5];
n[5] = i[6];
n[6] = i[8];
n[7] = i[9];
n[8] = i[10];
return t;
};
t.fromTranslation = function(t, e) {
var i = t.m;
i[0] = 1;
i[1] = 0;
i[2] = 0;
i[3] = 0;
i[4] = 1;
i[5] = 0;
i[6] = e.x;
i[7] = e.y;
i[8] = 1;
return t;
};
t.fromRotation = function(t, e) {
var i = Math.sin(e), n = Math.cos(e), r = t.m;
r[0] = n;
r[1] = i;
r[2] = 0;
r[3] = -i;
r[4] = n;
r[5] = 0;
r[6] = 0;
r[7] = 0;
r[8] = 1;
return t;
};
t.fromScaling = function(t, e) {
var i = t.m;
i[0] = e.x;
i[1] = 0;
i[2] = 0;
i[3] = 0;
i[4] = e.y;
i[5] = 0;
i[6] = 0;
i[7] = 0;
i[8] = 1;
return t;
};
t.fromQuat = function(t, e) {
var i = t.m, n = e.x, r = e.y, s = e.z, o = e.w, a = n + n, c = r + r, l = s + s, u = n * a, h = r * a, f = r * c, _ = s * a, d = s * c, p = s * l, m = o * a, y = o * c, v = o * l;
i[0] = 1 - f - p;
i[3] = h - v;
i[6] = _ + y;
i[1] = h + v;
i[4] = 1 - u - p;
i[7] = d - m;
i[2] = _ - y;
i[5] = d + m;
i[8] = 1 - u - f;
return t;
};
t.fromViewUp = function(e, i, s) {
return (function() {
var e = new r.default(0, 1, 0), i = new r.default(), s = new r.default();
return function(o, a, c) {
if (r.default.lengthSqr(a) < n.EPSILON * n.EPSILON) {
t.identity(o);
return o;
}
c = c || e;
r.default.normalize(i, r.default.cross(i, c, a));
if (r.default.lengthSqr(i) < n.EPSILON * n.EPSILON) {
t.identity(o);
return o;
}
r.default.cross(s, a, i);
t.set(o, i.x, i.y, i.z, s.x, s.y, s.z, a.x, a.y, a.z);
return o;
};
})()(e, i, s);
};
t.normalFromMat4 = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = i[4], l = i[5], u = i[6], h = i[7], f = i[8], _ = i[9], d = i[10], p = i[11], m = i[12], y = i[13], v = i[14], g = i[15], b = r * l - s * c, C = r * u - o * c, x = r * h - a * c, A = s * u - o * l, S = s * h - a * l, w = o * h - a * u, T = f * y - _ * m, E = f * v - d * m, M = f * g - p * m, B = _ * v - d * y, D = _ * g - p * y, R = d * g - p * v, I = b * R - C * D + x * B + A * M - S * E + w * T;
if (!I) return t;
I = 1 / I;
n[0] = (l * R - u * D + h * B) * I;
n[1] = (u * M - c * R - h * E) * I;
n[2] = (c * D - l * M + h * T) * I;
n[3] = (o * D - s * R - a * B) * I;
n[4] = (r * R - o * M + a * E) * I;
n[5] = (s * M - r * D - a * T) * I;
n[6] = (y * w - v * S + g * A) * I;
n[7] = (v * x - m * w - g * C) * I;
n[8] = (m * S - y * x + g * b) * I;
return t;
};
t.frob = function(t) {
var e = t.m;
return Math.sqrt(Math.pow(e[0], 2) + Math.pow(e[1], 2) + Math.pow(e[2], 2) + Math.pow(e[3], 2) + Math.pow(e[4], 2) + Math.pow(e[5], 2) + Math.pow(e[6], 2) + Math.pow(e[7], 2) + Math.pow(e[8], 2));
};
t.add = function(t, e, i) {
var n = e.m, r = i.m, s = t.m;
s[0] = n[0] + r[0];
s[1] = n[1] + r[1];
s[2] = n[2] + r[2];
s[3] = n[3] + r[3];
s[4] = n[4] + r[4];
s[5] = n[5] + r[5];
s[6] = n[6] + r[6];
s[7] = n[7] + r[7];
s[8] = n[8] + r[8];
return t;
};
t.subtract = function(t, e, i) {
var n = e.m, r = i.m, s = t.m;
s[0] = n[0] - r[0];
s[1] = n[1] - r[1];
s[2] = n[2] - r[2];
s[3] = n[3] - r[3];
s[4] = n[4] - r[4];
s[5] = n[5] - r[5];
s[6] = n[6] - r[6];
s[7] = n[7] - r[7];
s[8] = n[8] - r[8];
return t;
};
t.multiplyScalar = function(t, e, i) {
var n = e.m, r = t.m;
r[0] = n[0] * i;
r[1] = n[1] * i;
r[2] = n[2] * i;
r[3] = n[3] * i;
r[4] = n[4] * i;
r[5] = n[5] * i;
r[6] = n[6] * i;
r[7] = n[7] * i;
r[8] = n[8] * i;
return t;
};
t.multiplyScalarAndAdd = function(t, e, i, n) {
var r = e.m, s = i.m, o = t.m;
o[0] = r[0] + s[0] * n;
o[1] = r[1] + s[1] * n;
o[2] = r[2] + s[2] * n;
o[3] = r[3] + s[3] * n;
o[4] = r[4] + s[4] * n;
o[5] = r[5] + s[5] * n;
o[6] = r[6] + s[6] * n;
o[7] = r[7] + s[7] * n;
o[8] = r[8] + s[8] * n;
return t;
};
t.exactEquals = function(t, e) {
var i = t.m, n = e.m;
return i[0] === n[0] && i[1] === n[1] && i[2] === n[2] && i[3] === n[3] && i[4] === n[4] && i[5] === n[5] && i[6] === n[6] && i[7] === n[7] && i[8] === n[8];
};
t.equals = function(t, e) {
var i = t.m, r = e.m, s = i[0], o = i[1], a = i[2], c = i[3], l = i[4], u = i[5], h = i[6], f = i[7], _ = i[8], d = r[0], p = r[1], m = r[2], y = r[3], v = r[4], g = r[5], b = r[6], C = r[7], x = r[8];
return Math.abs(s - d) <= n.EPSILON * Math.max(1, Math.abs(s), Math.abs(d)) && Math.abs(o - p) <= n.EPSILON * Math.max(1, Math.abs(o), Math.abs(p)) && Math.abs(a - m) <= n.EPSILON * Math.max(1, Math.abs(a), Math.abs(m)) && Math.abs(c - y) <= n.EPSILON * Math.max(1, Math.abs(c), Math.abs(y)) && Math.abs(l - v) <= n.EPSILON * Math.max(1, Math.abs(l), Math.abs(v)) && Math.abs(u - g) <= n.EPSILON * Math.max(1, Math.abs(u), Math.abs(g)) && Math.abs(h - b) <= n.EPSILON * Math.max(1, Math.abs(h), Math.abs(b)) && Math.abs(f - C) <= n.EPSILON * Math.max(1, Math.abs(f), Math.abs(C)) && Math.abs(_ - x) <= n.EPSILON * Math.max(1, Math.abs(_), Math.abs(x));
};
t.toArray = function(t, e, i) {
void 0 === i && (i = 0);
for (var n = e.m, r = 0; r < 9; r++) t[i + r] = n[r];
return t;
};
t.fromArray = function(t, e, i) {
void 0 === i && (i = 0);
for (var n = t.m, r = 0; r < 9; r++) n[r] = e[i + r];
return t;
};
function t(t, e, i, r, s, o, a, c, l) {
void 0 === t && (t = 1);
void 0 === e && (e = 0);
void 0 === i && (i = 0);
void 0 === r && (r = 0);
void 0 === s && (s = 1);
void 0 === o && (o = 0);
void 0 === a && (a = 0);
void 0 === c && (c = 0);
void 0 === l && (l = 1);
this.m = void 0;
if (t instanceof n.FLOAT_ARRAY_TYPE) this.m = t; else {
this.m = new n.FLOAT_ARRAY_TYPE(9);
var u = this.m;
u[0] = t;
u[1] = e;
u[2] = i;
u[3] = r;
u[4] = s;
u[5] = o;
u[6] = a;
u[7] = c;
u[8] = l;
}
}
t.prototype.toString = function() {
var t = this.m;
return "mat3(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ")";
};
return t;
})();
i.default = s;
s.sub = s.subtract;
s.mul = s.multiply;
s.IDENTITY = Object.freeze(new s());
cc.Mat3 = s;
e.exports = i.default;
}), {
"../value-types/utils": 335,
"./vec3": 338
} ],
330: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = l(t("./value-type")), r = l(t("../platform/CCClass")), s = l(t("./vec3")), o = l(t("./quat")), a = t("./utils"), c = l(t("./mat3"));
function l(t) {
return t && t.__esModule ? t : {
default: t
};
}
function u(t) {
return function() {
var e, i = d(t);
if (_()) {
var n = d(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return h(this, e);
};
}
function h(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? f(t) : e;
}
function f(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function _() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function d(t) {
return (d = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function p(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var m = 0, y = 0, v = 0, g = 0, b = 0, C = 0, x = 0, A = 0, S = 0, w = 0, T = 0, E = 0, M = 0, B = 0, D = 0, R = 0, I = (function(t) {
p(i, t);
u(i);
var e = i.prototype;
e.mul = function(t, e) {
return i.multiply(e || new i(), this, t);
};
e.mulScalar = function(t, e) {
i.multiplyScalar(e || new i(), this, t);
};
e.sub = function(t, e) {
i.subtract(e || new i(), this, t);
};
i.clone = function(t) {
var e = t.m;
return new i(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]);
};
i.copy = function(t, e) {
var i = t.m, n = e.m;
i[0] = n[0];
i[1] = n[1];
i[2] = n[2];
i[3] = n[3];
i[4] = n[4];
i[5] = n[5];
i[6] = n[6];
i[7] = n[7];
i[8] = n[8];
i[9] = n[9];
i[10] = n[10];
i[11] = n[11];
i[12] = n[12];
i[13] = n[13];
i[14] = n[14];
i[15] = n[15];
return t;
};
i.set = function(t, e, i, n, r, s, o, a, c, l, u, h, f, _, d, p, m) {
var y = t.m;
y[0] = e;
y[1] = i;
y[2] = n;
y[3] = r;
y[4] = s;
y[5] = o;
y[6] = a;
y[7] = c;
y[8] = l;
y[9] = u;
y[10] = h;
y[11] = f;
y[12] = _;
y[13] = d;
y[14] = p;
y[15] = m;
return t;
};
i.identity = function(t) {
var e = t.m;
e[0] = 1;
e[1] = 0;
e[2] = 0;
e[3] = 0;
e[4] = 0;
e[5] = 1;
e[6] = 0;
e[7] = 0;
e[8] = 0;
e[9] = 0;
e[10] = 1;
e[11] = 0;
e[12] = 0;
e[13] = 0;
e[14] = 0;
e[15] = 1;
return t;
};
i.transpose = function(t, e) {
var i = t.m, n = e.m;
if (t === e) {
var r = n[1], s = n[2], o = n[3], a = n[6], c = n[7], l = n[11];
i[1] = n[4];
i[2] = n[8];
i[3] = n[12];
i[4] = r;
i[6] = n[9];
i[7] = n[13];
i[8] = s;
i[9] = a;
i[11] = n[14];
i[12] = o;
i[13] = c;
i[14] = l;
} else {
i[0] = n[0];
i[1] = n[4];
i[2] = n[8];
i[3] = n[12];
i[4] = n[1];
i[5] = n[5];
i[6] = n[9];
i[7] = n[13];
i[8] = n[2];
i[9] = n[6];
i[10] = n[10];
i[11] = n[14];
i[12] = n[3];
i[13] = n[7];
i[14] = n[11];
i[15] = n[15];
}
return t;
};
i.invert = function(t, e) {
var i = e.m;
m = i[0];
y = i[1];
v = i[2];
g = i[3];
b = i[4];
C = i[5];
x = i[6];
A = i[7];
S = i[8];
w = i[9];
T = i[10];
E = i[11];
M = i[12];
B = i[13];
D = i[14];
R = i[15];
var n = m * C - y * b, r = m * x - v * b, s = m * A - g * b, o = y * x - v * C, a = y * A - g * C, c = v * A - g * x, l = S * B - w * M, u = S * D - T * M, h = S * R - E * M, f = w * D - T * B, _ = w * R - E * B, d = T * R - E * D, p = n * d - r * _ + s * f + o * h - a * u + c * l;
if (0 === p) return null;
p = 1 / p;
var I = t.m;
I[0] = (C * d - x * _ + A * f) * p;
I[1] = (v * _ - y * d - g * f) * p;
I[2] = (B * c - D * a + R * o) * p;
I[3] = (T * a - w * c - E * o) * p;
I[4] = (x * h - b * d - A * u) * p;
I[5] = (m * d - v * h + g * u) * p;
I[6] = (D * s - M * c - R * r) * p;
I[7] = (S * c - T * s + E * r) * p;
I[8] = (b * _ - C * h + A * l) * p;
I[9] = (y * h - m * _ - g * l) * p;
I[10] = (M * a - B * s + R * n) * p;
I[11] = (w * s - S * a - E * n) * p;
I[12] = (C * u - b * f - x * l) * p;
I[13] = (m * f - y * u + v * l) * p;
I[14] = (B * r - M * o - D * n) * p;
I[15] = (S * o - w * r + T * n) * p;
return t;
};
i.determinant = function(t) {
var e = t.m;
m = e[0];
y = e[1];
v = e[2];
g = e[3];
b = e[4];
C = e[5];
x = e[6];
A = e[7];
S = e[8];
w = e[9];
T = e[10];
E = e[11];
M = e[12];
B = e[13];
D = e[14];
R = e[15];
return (m * C - y * b) * (T * R - E * D) - (m * x - v * b) * (w * R - E * B) + (m * A - g * b) * (w * D - T * B) + (y * x - v * C) * (S * R - E * M) - (y * A - g * C) * (S * D - T * M) + (v * A - g * x) * (S * B - w * M);
};
i.multiply = function(t, e, i) {
var n = t.m, r = e.m, s = i.m;
m = r[0];
y = r[1];
v = r[2];
g = r[3];
b = r[4];
C = r[5];
x = r[6];
A = r[7];
S = r[8];
w = r[9];
T = r[10];
E = r[11];
M = r[12];
B = r[13];
D = r[14];
R = r[15];
var o = s[0], a = s[1], c = s[2], l = s[3];
n[0] = o * m + a * b + c * S + l * M;
n[1] = o * y + a * C + c * w + l * B;
n[2] = o * v + a * x + c * T + l * D;
n[3] = o * g + a * A + c * E + l * R;
o = s[4];
a = s[5];
c = s[6];
l = s[7];
n[4] = o * m + a * b + c * S + l * M;
n[5] = o * y + a * C + c * w + l * B;
n[6] = o * v + a * x + c * T + l * D;
n[7] = o * g + a * A + c * E + l * R;
o = s[8];
a = s[9];
c = s[10];
l = s[11];
n[8] = o * m + a * b + c * S + l * M;
n[9] = o * y + a * C + c * w + l * B;
n[10] = o * v + a * x + c * T + l * D;
n[11] = o * g + a * A + c * E + l * R;
o = s[12];
a = s[13];
c = s[14];
l = s[15];
n[12] = o * m + a * b + c * S + l * M;
n[13] = o * y + a * C + c * w + l * B;
n[14] = o * v + a * x + c * T + l * D;
n[15] = o * g + a * A + c * E + l * R;
return t;
};
i.transform = function(t, e, i) {
var n = i.x, r = i.y, s = i.z, o = t.m, a = e.m;
if (e === t) {
o[12] = a[0] * n + a[4] * r + a[8] * s + a[12];
o[13] = a[1] * n + a[5] * r + a[9] * s + a[13];
o[14] = a[2] * n + a[6] * r + a[10] * s + a[14];
o[15] = a[3] * n + a[7] * r + a[11] * s + a[15];
} else {
m = a[0];
y = a[1];
v = a[2];
g = a[3];
b = a[4];
C = a[5];
x = a[6];
A = a[7];
S = a[8];
w = a[9];
T = a[10];
E = a[11];
M = a[12];
B = a[13];
D = a[14];
R = a[15];
o[0] = m;
o[1] = y;
o[2] = v;
o[3] = g;
o[4] = b;
o[5] = C;
o[6] = x;
o[7] = A;
o[8] = S;
o[9] = w;
o[10] = T;
o[11] = E;
o[12] = m * n + b * r + S * s + a[12];
o[13] = y * n + C * r + w * s + a[13];
o[14] = v * n + x * r + T * s + a[14];
o[15] = g * n + A * r + E * s + a[15];
}
return t;
};
i.translate = function(t, e, i) {
var n = t.m, r = e.m;
if (e === t) {
n[12] += i.x;
n[13] += i.y;
n[14] += i.z;
} else {
n[0] = r[0];
n[1] = r[1];
n[2] = r[2];
n[3] = r[3];
n[4] = r[4];
n[5] = r[5];
n[6] = r[6];
n[7] = r[7];
n[8] = r[8];
n[9] = r[9];
n[10] = r[10];
n[11] = r[11];
n[12] += i.x;
n[13] += i.y;
n[14] += i.z;
n[15] = r[15];
}
return t;
};
i.scale = function(t, e, i) {
var n = i.x, r = i.y, s = i.z, o = t.m, a = e.m;
o[0] = a[0] * n;
o[1] = a[1] * n;
o[2] = a[2] * n;
o[3] = a[3] * n;
o[4] = a[4] * r;
o[5] = a[5] * r;
o[6] = a[6] * r;
o[7] = a[7] * r;
o[8] = a[8] * s;
o[9] = a[9] * s;
o[10] = a[10] * s;
o[11] = a[11] * s;
o[12] = a[12];
o[13] = a[13];
o[14] = a[14];
o[15] = a[15];
return t;
};
i.rotate = function(t, e, i, n) {
var r = n.x, s = n.y, o = n.z, c = Math.sqrt(r * r + s * s + o * o);
if (Math.abs(c) < a.EPSILON) return null;
r *= c = 1 / c;
s *= c;
o *= c;
var l = Math.sin(i), u = Math.cos(i), h = 1 - u, f = e.m;
m = f[0];
y = f[1];
v = f[2];
g = f[3];
b = f[4];
C = f[5];
x = f[6];
A = f[7];
S = f[8];
w = f[9];
T = f[10];
E = f[11];
var _ = r * r * h + u, d = s * r * h + o * l, p = o * r * h - s * l, M = r * s * h - o * l, B = s * s * h + u, D = o * s * h + r * l, R = r * o * h + s * l, I = s * o * h - r * l, P = o * o * h + u, O = t.m;
O[0] = m * _ + b * d + S * p;
O[1] = y * _ + C * d + w * p;
O[2] = v * _ + x * d + T * p;
O[3] = g * _ + A * d + E * p;
O[4] = m * M + b * B + S * D;
O[5] = y * M + C * B + w * D;
O[6] = v * M + x * B + T * D;
O[7] = g * M + A * B + E * D;
O[8] = m * R + b * I + S * P;
O[9] = y * R + C * I + w * P;
O[10] = v * R + x * I + T * P;
O[11] = g * R + A * I + E * P;
if (e !== t) {
O[12] = f[12];
O[13] = f[13];
O[14] = f[14];
O[15] = f[15];
}
return t;
};
i.rotateX = function(t, e, i) {
var n = t.m, r = e.m, s = Math.sin(i), o = Math.cos(i), a = r[4], c = r[5], l = r[6], u = r[7], h = r[8], f = r[9], _ = r[10], d = r[11];
if (e !== t) {
n[0] = r[0];
n[1] = r[1];
n[2] = r[2];
n[3] = r[3];
n[12] = r[12];
n[13] = r[13];
n[14] = r[14];
n[15] = r[15];
}
n[4] = a * o + h * s;
n[5] = c * o + f * s;
n[6] = l * o + _ * s;
n[7] = u * o + d * s;
n[8] = h * o - a * s;
n[9] = f * o - c * s;
n[10] = _ * o - l * s;
n[11] = d * o - u * s;
return t;
};
i.rotateY = function(t, e, i) {
var n = t.m, r = e.m, s = Math.sin(i), o = Math.cos(i), a = r[0], c = r[1], l = r[2], u = r[3], h = r[8], f = r[9], _ = r[10], d = r[11];
if (e !== t) {
n[4] = r[4];
n[5] = r[5];
n[6] = r[6];
n[7] = r[7];
n[12] = r[12];
n[13] = r[13];
n[14] = r[14];
n[15] = r[15];
}
n[0] = a * o - h * s;
n[1] = c * o - f * s;
n[2] = l * o - _ * s;
n[3] = u * o - d * s;
n[8] = a * s + h * o;
n[9] = c * s + f * o;
n[10] = l * s + _ * o;
n[11] = u * s + d * o;
return t;
};
i.rotateZ = function(t, e, i) {
var n = e.m, r = t.m, s = Math.sin(i), o = Math.cos(i), a = e.m[0], c = e.m[1], l = e.m[2], u = e.m[3], h = e.m[4], f = e.m[5], _ = e.m[6], d = e.m[7];
if (e !== t) {
r[8] = n[8];
r[9] = n[9];
r[10] = n[10];
r[11] = n[11];
r[12] = n[12];
r[13] = n[13];
r[14] = n[14];
r[15] = n[15];
}
r[0] = a * o + h * s;
r[1] = c * o + f * s;
r[2] = l * o + _ * s;
r[3] = u * o + d * s;
r[4] = h * o - a * s;
r[5] = f * o - c * s;
r[6] = _ * o - l * s;
r[7] = d * o - u * s;
return t;
};
i.fromTranslation = function(t, e) {
var i = t.m;
i[0] = 1;
i[1] = 0;
i[2] = 0;
i[3] = 0;
i[4] = 0;
i[5] = 1;
i[6] = 0;
i[7] = 0;
i[8] = 0;
i[9] = 0;
i[10] = 1;
i[11] = 0;
i[12] = e.x;
i[13] = e.y;
i[14] = e.z;
i[15] = 1;
return t;
};
i.fromScaling = function(t, e) {
var i = t.m;
i[0] = e.x;
i[1] = 0;
i[2] = 0;
i[3] = 0;
i[4] = 0;
i[5] = e.y;
i[6] = 0;
i[7] = 0;
i[8] = 0;
i[9] = 0;
i[10] = e.z;
i[11] = 0;
i[12] = 0;
i[13] = 0;
i[14] = 0;
i[15] = 1;
return t;
};
i.fromRotation = function(t, e, i) {
var n = i.x, r = i.y, s = i.z, o = Math.sqrt(n * n + r * r + s * s);
if (Math.abs(o) < a.EPSILON) return null;
n *= o = 1 / o;
r *= o;
s *= o;
var c = Math.sin(e), l = Math.cos(e), u = 1 - l, h = t.m;
h[0] = n * n * u + l;
h[1] = r * n * u + s * c;
h[2] = s * n * u - r * c;
h[3] = 0;
h[4] = n * r * u - s * c;
h[5] = r * r * u + l;
h[6] = s * r * u + n * c;
h[7] = 0;
h[8] = n * s * u + r * c;
h[9] = r * s * u - n * c;
h[10] = s * s * u + l;
h[11] = 0;
h[12] = 0;
h[13] = 0;
h[14] = 0;
h[15] = 1;
return t;
};
i.fromXRotation = function(t, e) {
var i = Math.sin(e), n = Math.cos(e), r = t.m;
r[0] = 1;
r[1] = 0;
r[2] = 0;
r[3] = 0;
r[4] = 0;
r[5] = n;
r[6] = i;
r[7] = 0;
r[8] = 0;
r[9] = -i;
r[10] = n;
r[11] = 0;
r[12] = 0;
r[13] = 0;
r[14] = 0;
r[15] = 1;
return t;
};
i.fromYRotation = function(t, e) {
var i = Math.sin(e), n = Math.cos(e), r = t.m;
r[0] = n;
r[1] = 0;
r[2] = -i;
r[3] = 0;
r[4] = 0;
r[5] = 1;
r[6] = 0;
r[7] = 0;
r[8] = i;
r[9] = 0;
r[10] = n;
r[11] = 0;
r[12] = 0;
r[13] = 0;
r[14] = 0;
r[15] = 1;
return t;
};
i.fromZRotation = function(t, e) {
var i = Math.sin(e), n = Math.cos(e), r = t.m;
r[0] = n;
r[1] = i;
r[2] = 0;
r[3] = 0;
r[4] = -i;
r[5] = n;
r[6] = 0;
r[7] = 0;
r[8] = 0;
r[9] = 0;
r[10] = 1;
r[11] = 0;
r[12] = 0;
r[13] = 0;
r[14] = 0;
r[15] = 1;
return t;
};
i.fromRT = function(t, e, i) {
var n = e.x, r = e.y, s = e.z, o = e.w, a = n + n, c = r + r, l = s + s, u = n * a, h = n * c, f = n * l, _ = r * c, d = r * l, p = s * l, m = o * a, y = o * c, v = o * l, g = t.m;
g[0] = 1 - (_ + p);
g[1] = h + v;
g[2] = f - y;
g[3] = 0;
g[4] = h - v;
g[5] = 1 - (u + p);
g[6] = d + m;
g[7] = 0;
g[8] = f + y;
g[9] = d - m;
g[10] = 1 - (u + _);
g[11] = 0;
g[12] = i.x;
g[13] = i.y;
g[14] = i.z;
g[15] = 1;
return t;
};
i.getTranslation = function(t, e) {
var i = e.m;
t.x = i[12];
t.y = i[13];
t.z = i[14];
return t;
};
i.getScaling = function(t, e) {
var i = e.m, n = O.m, r = n[0] = i[0], s = n[1] = i[1], o = n[2] = i[2], a = n[3] = i[4], l = n[4] = i[5], u = n[5] = i[6], h = n[6] = i[8], f = n[7] = i[9], _ = n[8] = i[10];
t.x = Math.sqrt(r * r + s * s + o * o);
t.y = Math.sqrt(a * a + l * l + u * u);
t.z = Math.sqrt(h * h + f * f + _ * _);
c.default.determinant(O) < 0 && (t.x *= -1);
return t;
};
i.getRotation = function(t, e) {
var i = e.m, n = i[0] + i[5] + i[10], r = 0;
if (n > 0) {
r = 2 * Math.sqrt(n + 1);
t.w = .25 * r;
t.x = (i[6] - i[9]) / r;
t.y = (i[8] - i[2]) / r;
t.z = (i[1] - i[4]) / r;
} else if (i[0] > i[5] && i[0] > i[10]) {
r = 2 * Math.sqrt(1 + i[0] - i[5] - i[10]);
t.w = (i[6] - i[9]) / r;
t.x = .25 * r;
t.y = (i[1] + i[4]) / r;
t.z = (i[8] + i[2]) / r;
} else if (i[5] > i[10]) {
r = 2 * Math.sqrt(1 + i[5] - i[0] - i[10]);
t.w = (i[8] - i[2]) / r;
t.x = (i[1] + i[4]) / r;
t.y = .25 * r;
t.z = (i[6] + i[9]) / r;
} else {
r = 2 * Math.sqrt(1 + i[10] - i[0] - i[5]);
t.w = (i[1] - i[4]) / r;
t.x = (i[8] + i[2]) / r;
t.y = (i[6] + i[9]) / r;
t.z = .25 * r;
}
return t;
};
i.toRTS = function(t, e, i, n) {
var r = t.m, a = O.m;
n.x = s.default.set(P, r[0], r[1], r[2]).mag();
a[0] = r[0] / n.x;
a[1] = r[1] / n.x;
a[2] = r[2] / n.x;
n.y = s.default.set(P, r[4], r[5], r[6]).mag();
a[3] = r[4] / n.y;
a[4] = r[5] / n.y;
a[5] = r[6] / n.y;
n.z = s.default.set(P, r[8], r[9], r[10]).mag();
a[6] = r[8] / n.z;
a[7] = r[9] / n.z;
a[8] = r[10] / n.z;
if (c.default.determinant(O) < 0) {
n.x *= -1;
a[0] *= -1;
a[1] *= -1;
a[2] *= -1;
}
o.default.fromMat3(e, O);
s.default.set(i, r[12], r[13], r[14]);
};
i.fromRTS = function(t, e, i, n) {
var r = e.x, s = e.y, o = e.z, a = e.w, c = r + r, l = s + s, u = o + o, h = r * c, f = r * l, _ = r * u, d = s * l, p = s * u, m = o * u, y = a * c, v = a * l, g = a * u, b = n.x, C = n.y, x = n.z, A = t.m;
A[0] = (1 - (d + m)) * b;
A[1] = (f + g) * b;
A[2] = (_ - v) * b;
A[3] = 0;
A[4] = (f - g) * C;
A[5] = (1 - (h + m)) * C;
A[6] = (p + y) * C;
A[7] = 0;
A[8] = (_ + v) * x;
A[9] = (p - y) * x;
A[10] = (1 - (h + d)) * x;
A[11] = 0;
A[12] = i.x;
A[13] = i.y;
A[14] = i.z;
A[15] = 1;
return t;
};
i.fromRTSOrigin = function(t, e, i, n, r) {
var s = e.x, o = e.y, a = e.z, c = e.w, l = s + s, u = o + o, h = a + a, f = s * l, _ = s * u, d = s * h, p = o * u, m = o * h, y = a * h, v = c * l, g = c * u, b = c * h, C = n.x, x = n.y, A = n.z, S = r.x, w = r.y, T = r.z, E = t.m;
E[0] = (1 - (p + y)) * C;
E[1] = (_ + b) * C;
E[2] = (d - g) * C;
E[3] = 0;
E[4] = (_ - b) * x;
E[5] = (1 - (f + y)) * x;
E[6] = (m + v) * x;
E[7] = 0;
E[8] = (d + g) * A;
E[9] = (m - v) * A;
E[10] = (1 - (f + p)) * A;
E[11] = 0;
E[12] = i.x + S - (E[0] * S + E[4] * w + E[8] * T);
E[13] = i.y + w - (E[1] * S + E[5] * w + E[9] * T);
E[14] = i.z + T - (E[2] * S + E[6] * w + E[10] * T);
E[15] = 1;
return t;
};
i.fromQuat = function(t, e) {
var i = e.x, n = e.y, r = e.z, s = e.w, o = i + i, a = n + n, c = r + r, l = i * o, u = n * o, h = n * a, f = r * o, _ = r * a, d = r * c, p = s * o, m = s * a, y = s * c, v = t.m;
v[0] = 1 - h - d;
v[1] = u + y;
v[2] = f - m;
v[3] = 0;
v[4] = u - y;
v[5] = 1 - l - d;
v[6] = _ + p;
v[7] = 0;
v[8] = f + m;
v[9] = _ - p;
v[10] = 1 - l - h;
v[11] = 0;
v[12] = 0;
v[13] = 0;
v[14] = 0;
v[15] = 1;
return t;
};
i.frustum = function(t, e, i, n, r, s, o) {
var a = 1 / (i - e), c = 1 / (r - n), l = 1 / (s - o), u = t.m;
u[0] = 2 * s * a;
u[1] = 0;
u[2] = 0;
u[3] = 0;
u[4] = 0;
u[5] = 2 * s * c;
u[6] = 0;
u[7] = 0;
u[8] = (i + e) * a;
u[9] = (r + n) * c;
u[10] = (o + s) * l;
u[11] = -1;
u[12] = 0;
u[13] = 0;
u[14] = o * s * 2 * l;
u[15] = 0;
return t;
};
i.perspective = function(t, e, i, n, r) {
var s = 1 / Math.tan(e / 2), o = 1 / (n - r), a = t.m;
a[0] = s / i;
a[1] = 0;
a[2] = 0;
a[3] = 0;
a[4] = 0;
a[5] = s;
a[6] = 0;
a[7] = 0;
a[8] = 0;
a[9] = 0;
a[10] = (r + n) * o;
a[11] = -1;
a[12] = 0;
a[13] = 0;
a[14] = 2 * r * n * o;
a[15] = 0;
return t;
};
i.ortho = function(t, e, i, n, r, s, o) {
var a = 1 / (e - i), c = 1 / (n - r), l = 1 / (s - o), u = t.m;
u[0] = -2 * a;
u[1] = 0;
u[2] = 0;
u[3] = 0;
u[4] = 0;
u[5] = -2 * c;
u[6] = 0;
u[7] = 0;
u[8] = 0;
u[9] = 0;
u[10] = 2 * l;
u[11] = 0;
u[12] = (e + i) * a;
u[13] = (r + n) * c;
u[14] = (o + s) * l;
u[15] = 1;
return t;
};
i.lookAt = function(t, e, i, n) {
var r = e.x, s = e.y, o = e.z, a = n.x, c = n.y, l = n.z, u = r - i.x, h = s - i.y, f = o - i.z, _ = 1 / Math.sqrt(u * u + h * h + f * f), d = c * (f *= _) - l * (h *= _), p = l * (u *= _) - a * f, m = a * h - c * u, y = h * (m *= _ = 1 / Math.sqrt(d * d + p * p + m * m)) - f * (p *= _), v = f * (d *= _) - u * m, g = u * p - h * d, b = t.m;
b[0] = d;
b[1] = y;
b[2] = u;
b[3] = 0;
b[4] = p;
b[5] = v;
b[6] = h;
b[7] = 0;
b[8] = m;
b[9] = g;
b[10] = f;
b[11] = 0;
b[12] = -(d * r + p * s + m * o);
b[13] = -(y * r + v * s + g * o);
b[14] = -(u * r + h * s + f * o);
b[15] = 1;
return t;
};
i.inverseTranspose = function(t, e) {
var i = e.m;
m = i[0];
y = i[1];
v = i[2];
g = i[3];
b = i[4];
C = i[5];
x = i[6];
A = i[7];
S = i[8];
w = i[9];
T = i[10];
E = i[11];
M = i[12];
B = i[13];
D = i[14];
R = i[15];
var n = m * C - y * b, r = m * x - v * b, s = m * A - g * b, o = y * x - v * C, a = y * A - g * C, c = v * A - g * x, l = S * B - w * M, u = S * D - T * M, h = S * R - E * M, f = w * D - T * B, _ = w * R - E * B, d = T * R - E * D, p = n * d - r * _ + s * f + o * h - a * u + c * l;
if (!p) return null;
p = 1 / p;
(i = t.m)[0] = (C * d - x * _ + A * f) * p;
i[1] = (x * h - b * d - A * u) * p;
i[2] = (b * _ - C * h + A * l) * p;
i[3] = 0;
i[4] = (v * _ - y * d - g * f) * p;
i[5] = (m * d - v * h + g * u) * p;
i[6] = (y * h - m * _ - g * l) * p;
i[7] = 0;
i[8] = (B * c - D * a + R * o) * p;
i[9] = (D * s - M * c - R * r) * p;
i[10] = (M * a - B * s + R * n) * p;
i[11] = 0;
i[12] = 0;
i[13] = 0;
i[14] = 0;
i[15] = 1;
return t;
};
i.add = function(t, e, i) {
var n = t.m, r = e.m, s = i.m;
n[0] = r[0] + s[0];
n[1] = r[1] + s[1];
n[2] = r[2] + s[2];
n[3] = r[3] + s[3];
n[4] = r[4] + s[4];
n[5] = r[5] + s[5];
n[6] = r[6] + s[6];
n[7] = r[7] + s[7];
n[8] = r[8] + s[8];
n[9] = r[9] + s[9];
n[10] = r[10] + s[10];
n[11] = r[11] + s[11];
n[12] = r[12] + s[12];
n[13] = r[13] + s[13];
n[14] = r[14] + s[14];
n[15] = r[15] + s[15];
return t;
};
i.subtract = function(t, e, i) {
var n = t.m, r = e.m, s = i.m;
n[0] = r[0] - s[0];
n[1] = r[1] - s[1];
n[2] = r[2] - s[2];
n[3] = r[3] - s[3];
n[4] = r[4] - s[4];
n[5] = r[5] - s[5];
n[6] = r[6] - s[6];
n[7] = r[7] - s[7];
n[8] = r[8] - s[8];
n[9] = r[9] - s[9];
n[10] = r[10] - s[10];
n[11] = r[11] - s[11];
n[12] = r[12] - s[12];
n[13] = r[13] - s[13];
n[14] = r[14] - s[14];
n[15] = r[15] - s[15];
return t;
};
i.multiplyScalar = function(t, e, i) {
var n = t.m, r = e.m;
n[0] = r[0] * i;
n[1] = r[1] * i;
n[2] = r[2] * i;
n[3] = r[3] * i;
n[4] = r[4] * i;
n[5] = r[5] * i;
n[6] = r[6] * i;
n[7] = r[7] * i;
n[8] = r[8] * i;
n[9] = r[9] * i;
n[10] = r[10] * i;
n[11] = r[11] * i;
n[12] = r[12] * i;
n[13] = r[13] * i;
n[14] = r[14] * i;
n[15] = r[15] * i;
return t;
};
i.multiplyScalarAndAdd = function(t, e, i, n) {
var r = t.m, s = e.m, o = i.m;
r[0] = s[0] + o[0] * n;
r[1] = s[1] + o[1] * n;
r[2] = s[2] + o[2] * n;
r[3] = s[3] + o[3] * n;
r[4] = s[4] + o[4] * n;
r[5] = s[5] + o[5] * n;
r[6] = s[6] + o[6] * n;
r[7] = s[7] + o[7] * n;
r[8] = s[8] + o[8] * n;
r[9] = s[9] + o[9] * n;
r[10] = s[10] + o[10] * n;
r[11] = s[11] + o[11] * n;
r[12] = s[12] + o[12] * n;
r[13] = s[13] + o[13] * n;
r[14] = s[14] + o[14] * n;
r[15] = s[15] + o[15] * n;
return t;
};
i.strictEquals = function(t, e) {
var i = t.m, n = e.m;
return i[0] === n[0] && i[1] === n[1] && i[2] === n[2] && i[3] === n[3] && i[4] === n[4] && i[5] === n[5] && i[6] === n[6] && i[7] === n[7] && i[8] === n[8] && i[9] === n[9] && i[10] === n[10] && i[11] === n[11] && i[12] === n[12] && i[13] === n[13] && i[14] === n[14] && i[15] === n[15];
};
i.equals = function(t, e, i) {
void 0 === i && (i = a.EPSILON);
var n = t.m, r = e.m;
return Math.abs(n[0] - r[0]) <= i * Math.max(1, Math.abs(n[0]), Math.abs(r[0])) && Math.abs(n[1] - r[1]) <= i * Math.max(1, Math.abs(n[1]), Math.abs(r[1])) && Math.abs(n[2] - r[2]) <= i * Math.max(1, Math.abs(n[2]), Math.abs(r[2])) && Math.abs(n[3] - r[3]) <= i * Math.max(1, Math.abs(n[3]), Math.abs(r[3])) && Math.abs(n[4] - r[4]) <= i * Math.max(1, Math.abs(n[4]), Math.abs(r[4])) && Math.abs(n[5] - r[5]) <= i * Math.max(1, Math.abs(n[5]), Math.abs(r[5])) && Math.abs(n[6] - r[6]) <= i * Math.max(1, Math.abs(n[6]), Math.abs(r[6])) && Math.abs(n[7] - r[7]) <= i * Math.max(1, Math.abs(n[7]), Math.abs(r[7])) && Math.abs(n[8] - r[8]) <= i * Math.max(1, Math.abs(n[8]), Math.abs(r[8])) && Math.abs(n[9] - r[9]) <= i * Math.max(1, Math.abs(n[9]), Math.abs(r[9])) && Math.abs(n[10] - r[10]) <= i * Math.max(1, Math.abs(n[10]), Math.abs(r[10])) && Math.abs(n[11] - r[11]) <= i * Math.max(1, Math.abs(n[11]), Math.abs(r[11])) && Math.abs(n[12] - r[12]) <= i * Math.max(1, Math.abs(n[12]), Math.abs(r[12])) && Math.abs(n[13] - r[13]) <= i * Math.max(1, Math.abs(n[13]), Math.abs(r[13])) && Math.abs(n[14] - r[14]) <= i * Math.max(1, Math.abs(n[14]), Math.abs(r[14])) && Math.abs(n[15] - r[15]) <= i * Math.max(1, Math.abs(n[15]), Math.abs(r[15]));
};
i.adjoint = function(t, e) {
var i = e.m, n = t.m, r = i[0], s = i[1], o = i[2], a = i[3], c = i[4], l = i[5], u = i[6], h = i[7], f = i[8], _ = i[9], d = i[10], p = i[11], m = i[12], y = i[13], v = i[14], g = i[15];
n[0] = l * (d * g - p * v) - _ * (u * g - h * v) + y * (u * p - h * d);
n[1] = -(s * (d * g - p * v) - _ * (o * g - a * v) + y * (o * p - a * d));
n[2] = s * (u * g - h * v) - l * (o * g - a * v) + y * (o * h - a * u);
n[3] = -(s * (u * p - h * d) - l * (o * p - a * d) + _ * (o * h - a * u));
n[4] = -(c * (d * g - p * v) - f * (u * g - h * v) + m * (u * p - h * d));
n[5] = r * (d * g - p * v) - f * (o * g - a * v) + m * (o * p - a * d);
n[6] = -(r * (u * g - h * v) - c * (o * g - a * v) + m * (o * h - a * u));
n[7] = r * (u * p - h * d) - c * (o * p - a * d) + f * (o * h - a * u);
n[8] = c * (_ * g - p * y) - f * (l * g - h * y) + m * (l * p - h * _);
n[9] = -(r * (_ * g - p * y) - f * (s * g - a * y) + m * (s * p - a * _));
n[10] = r * (l * g - h * y) - c * (s * g - a * y) + m * (s * h - a * l);
n[11] = -(r * (l * p - h * _) - c * (s * p - a * _) + f * (s * h - a * l));
n[12] = -(c * (_ * v - d * y) - f * (l * v - u * y) + m * (l * d - u * _));
n[13] = r * (_ * v - d * y) - f * (s * v - o * y) + m * (s * d - o * _);
n[14] = -(r * (l * v - u * y) - c * (s * v - o * y) + m * (s * u - o * l));
n[15] = r * (l * d - u * _) - c * (s * d - o * _) + f * (s * u - o * l);
return t;
};
i.toArray = function(t, e, i) {
void 0 === i && (i = 0);
for (var n = e.m, r = 0; r < 16; r++) t[i + r] = n[r];
return t;
};
i.fromArray = function(t, e, i) {
void 0 === i && (i = 0);
for (var n = t.m, r = 0; r < 16; r++) n[r] = e[i + r];
return t;
};
function i(e, i, n, r, s, o, c, l, u, h, f, _, d, p, m, y) {
var v;
void 0 === e && (e = 1);
void 0 === i && (i = 0);
void 0 === n && (n = 0);
void 0 === r && (r = 0);
void 0 === s && (s = 0);
void 0 === o && (o = 1);
void 0 === c && (c = 0);
void 0 === l && (l = 0);
void 0 === u && (u = 0);
void 0 === h && (h = 0);
void 0 === f && (f = 1);
void 0 === _ && (_ = 0);
void 0 === d && (d = 0);
void 0 === p && (p = 0);
void 0 === m && (m = 0);
void 0 === y && (y = 1);
(v = t.call(this) || this).m = void 0;
if (e instanceof a.FLOAT_ARRAY_TYPE) v.m = e; else {
v.m = new a.FLOAT_ARRAY_TYPE(16);
var g = v.m;
g[0] = e;
g[1] = i;
g[2] = n;
g[3] = r;
g[4] = s;
g[5] = o;
g[6] = c;
g[7] = l;
g[8] = u;
g[9] = h;
g[10] = f;
g[11] = _;
g[12] = d;
g[13] = p;
g[14] = m;
g[15] = y;
}
return v;
}
e.clone = function() {
var t = this.m;
return new i(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]);
};
e.set = function(t) {
var e = this.m, i = t.m;
e[0] = i[0];
e[1] = i[1];
e[2] = i[2];
e[3] = i[3];
e[4] = i[4];
e[5] = i[5];
e[6] = i[6];
e[7] = i[7];
e[8] = i[8];
e[9] = i[9];
e[10] = i[10];
e[11] = i[11];
e[12] = i[12];
e[13] = i[13];
e[14] = i[14];
e[15] = i[15];
return this;
};
e.equals = function(t) {
return i.strictEquals(this, t);
};
e.fuzzyEquals = function(t) {
return i.equals(this, t);
};
e.toString = function() {
var t = this.m;
return t ? "[\n" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ",\n" + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ",\n" + t[8] + ", " + t[9] + ", " + t[10] + ", " + t[11] + ",\n" + t[12] + ", " + t[13] + ", " + t[14] + ", " + t[15] + "\n]" : "[\n1, 0, 0, 0\n0, 1, 0, 0\n0, 0, 1, 0\n0, 0, 0, 1\n]";
};
e.identity = function() {
return i.identity(this);
};
e.transpose = function(t) {
t = t || new i();
return i.transpose(t, this);
};
e.invert = function(t) {
t = t || new i();
return i.invert(t, this);
};
e.adjoint = function(t) {
t = t || new i();
return i.adjoint(t, this);
};
e.determinant = function() {
return i.determinant(this);
};
e.add = function(t, e) {
e = e || new i();
return i.add(e, this, t);
};
e.subtract = function(t) {
return i.subtract(this, this, t);
};
e.multiply = function(t) {
return i.multiply(this, this, t);
};
e.multiplyScalar = function(t) {
return i.multiplyScalar(this, this, t);
};
e.translate = function(t, e) {
e = e || new i();
return i.translate(e, this, t);
};
e.scale = function(t, e) {
e = e || new i();
return i.scale(e, this, t);
};
e.rotate = function(t, e, n) {
n = n || new i();
return i.rotate(n, this, t, e);
};
e.getTranslation = function(t) {
t = t || new s.default();
return i.getTranslation(t, this);
};
e.getScale = function(t) {
t = t || new s.default();
return i.getScaling(t, this);
};
e.getRotation = function(t) {
t = t || new o.default();
return i.getRotation(t, this);
};
e.fromRTS = function(t, e, n) {
return i.fromRTS(this, t, e, n);
};
e.fromQuat = function(t) {
return i.fromQuat(this, t);
};
return i;
})(n.default);
i.default = I;
I.mul = I.multiply;
I.sub = I.subtract;
I.IDENTITY = Object.freeze(new I());
var P = new s.default(), O = new c.default();
r.default.fastDefine("cc.Mat4", I, {
m00: 1,
m01: 0,
m02: 0,
m03: 0,
m04: 0,
m05: 1,
m06: 0,
m07: 0,
m08: 0,
m09: 0,
m10: 1,
m11: 0,
m12: 0,
m13: 0,
m14: 0,
m15: 1
});
for (var L = function(t) {
Object.defineProperty(I.prototype, "m" + t, {
get: function() {
return this.m[t];
},
set: function(e) {
this.m[t] = e;
}
});
}, V = 0; V < 16; V++) L(V);
cc.mat4 = function(t, e, i, n, r, s, o, a, c, l, u, h, f, _, d, p) {
var m = new I(t, e, i, n, r, s, o, a, c, l, u, h, f, _, d, p);
void 0 === t && I.identity(m);
return m;
};
cc.Mat4 = I;
e.exports = i.default;
}), {
"../platform/CCClass": 230,
"./mat3": 329,
"./quat": 331,
"./utils": 335,
"./value-type": 336,
"./vec3": 338
} ],
331: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = c(t("./value-type")), r = c(t("../platform/CCClass")), s = c(t("./vec3")), o = c(t("./mat3")), a = t("./utils");
function c(t) {
return t && t.__esModule ? t : {
default: t
};
}
function l(t) {
return function() {
var e, i = _(t);
if (f()) {
var n = _(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return u(this, e);
};
}
function u(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? h(t) : e;
}
function h(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function f() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function _(t) {
return (_ = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function d(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var p = 0, m = 0, y = 0, v = 0, g = (function(t) {
d(i, t);
l(i);
var e = i.prototype;
e.mul = function(t, e) {
return i.multiply(e || new i(), this, t);
};
i.clone = function(t) {
return new i(t.x, t.y, t.z, t.w);
};
i.copy = function(t, e) {
t.x = e.x;
t.y = e.y;
t.z = e.z;
t.w = e.w;
return t;
};
i.set = function(t, e, i, n, r) {
t.x = e;
t.y = i;
t.z = n;
t.w = r;
return t;
};
i.identity = function(t) {
t.x = 0;
t.y = 0;
t.z = 0;
t.w = 1;
return t;
};
i.rotationTo = function(t, e, n) {
var r = s.default.dot(e, n);
if (r < -.999999) {
s.default.cross(x, s.default.RIGHT, e);
x.mag() < 1e-6 && s.default.cross(x, s.default.UP, e);
s.default.normalize(x, x);
i.fromAxisAngle(t, x, Math.PI);
return t;
}
if (r > .999999) {
t.x = 0;
t.y = 0;
t.z = 0;
t.w = 1;
return t;
}
s.default.cross(x, e, n);
t.x = x.x;
t.y = x.y;
t.z = x.z;
t.w = 1 + r;
return i.normalize(t, t);
};
i.getAxisAngle = function(t, e) {
var i = 2 * Math.acos(e.w), n = Math.sin(i / 2);
if (0 !== n) {
t.x = e.x / n;
t.y = e.y / n;
t.z = e.z / n;
} else {
t.x = 1;
t.y = 0;
t.z = 0;
}
return i;
};
i.multiply = function(t, e, i) {
p = e.x * i.w + e.w * i.x + e.y * i.z - e.z * i.y;
m = e.y * i.w + e.w * i.y + e.z * i.x - e.x * i.z;
y = e.z * i.w + e.w * i.z + e.x * i.y - e.y * i.x;
v = e.w * i.w - e.x * i.x - e.y * i.y - e.z * i.z;
t.x = p;
t.y = m;
t.z = y;
t.w = v;
return t;
};
i.multiplyScalar = function(t, e, i) {
t.x = e.x * i;
t.y = e.y * i;
t.z = e.z * i;
t.w = e.w * i;
return t;
};
i.scaleAndAdd = function(t, e, i, n) {
t.x = e.x + i.x * n;
t.y = e.y + i.y * n;
t.z = e.z + i.z * n;
t.w = e.w + i.w * n;
return t;
};
i.rotateX = function(t, e, i) {
i *= .5;
var n = Math.sin(i), r = Math.cos(i);
t.x = e.x * r + e.w * n;
t.y = e.y * r + e.z * n;
t.z = e.z * r - e.y * n;
t.w = e.w * r - e.x * n;
return t;
};
i.rotateY = function(t, e, i) {
i *= .5;
var n = Math.sin(i), r = Math.cos(i);
t.x = e.x * r - e.z * n;
t.y = e.y * r + e.w * n;
t.z = e.z * r + e.x * n;
t.w = e.w * r - e.y * n;
return t;
};
i.rotateZ = function(t, e, i) {
i *= .5;
var n = Math.sin(i), r = Math.cos(i);
t.x = e.x * r + e.y * n;
t.y = e.y * r - e.x * n;
t.z = e.z * r + e.w * n;
t.w = e.w * r - e.z * n;
return t;
};
i.rotateAround = function(t, e, n, r) {
i.invert(b, e);
s.default.transformQuat(x, n, b);
i.fromAxisAngle(b, x, r);
i.multiply(t, e, b);
return t;
};
i.rotateAroundLocal = function(t, e, n, r) {
i.fromAxisAngle(b, n, r);
i.multiply(t, e, b);
return t;
};
i.calculateW = function(t, e) {
t.x = e.x;
t.y = e.y;
t.z = e.z;
t.w = Math.sqrt(Math.abs(1 - e.x * e.x - e.y * e.y - e.z * e.z));
return t;
};
i.dot = function(t, e) {
return t.x * e.x + t.y * e.y + t.z * e.z + t.w * e.w;
};
i.lerp = function(t, e, i, n) {
t.x = e.x + n * (i.x - e.x);
t.y = e.y + n * (i.y - e.y);
t.z = e.z + n * (i.z - e.z);
t.w = e.w + n * (i.w - e.w);
return t;
};
i.slerp = function(t, e, i, n) {
var r = 0, s = 0, o = e.x * i.x + e.y * i.y + e.z * i.z + e.w * i.w;
if (o < 0) {
o = -o;
i.x = -i.x;
i.y = -i.y;
i.z = -i.z;
i.w = -i.w;
}
if (1 - o > 1e-6) {
var a = Math.acos(o), c = Math.sin(a);
r = Math.sin((1 - n) * a) / c;
s = Math.sin(n * a) / c;
} else {
r = 1 - n;
s = n;
}
t.x = r * e.x + s * i.x;
t.y = r * e.y + s * i.y;
t.z = r * e.z + s * i.z;
t.w = r * e.w + s * i.w;
return t;
};
i.sqlerp = function(t, e, n, r, s, o) {
i.slerp(b, e, s, o);
i.slerp(C, n, r, o);
i.slerp(t, b, C, 2 * o * (1 - o));
return t;
};
i.invert = function(t, e) {
var i = e.x * e.x + e.y * e.y + e.z * e.z + e.w * e.w, n = i ? 1 / i : 0;
t.x = -e.x * n;
t.y = -e.y * n;
t.z = -e.z * n;
t.w = e.w * n;
return t;
};
i.conjugate = function(t, e) {
t.x = -e.x;
t.y = -e.y;
t.z = -e.z;
t.w = e.w;
return t;
};
i.len = function(t) {
return Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z + t.w * t.w);
};
i.lengthSqr = function(t) {
return t.x * t.x + t.y * t.y + t.z * t.z + t.w * t.w;
};
i.normalize = function(t, e) {
var i = e.x * e.x + e.y * e.y + e.z * e.z + e.w * e.w;
if (i > 0) {
i = 1 / Math.sqrt(i);
t.x = e.x * i;
t.y = e.y * i;
t.z = e.z * i;
t.w = e.w * i;
}
return t;
};
i.fromAxes = function(t, e, n, r) {
o.default.set(A, e.x, e.y, e.z, n.x, n.y, n.z, r.x, r.y, r.z);
return i.normalize(t, i.fromMat3(t, A));
};
i.fromViewUp = function(t, e, n) {
o.default.fromViewUp(A, e, n);
return i.normalize(t, i.fromMat3(t, A));
};
i.fromAxisAngle = function(t, e, i) {
i *= .5;
var n = Math.sin(i);
t.x = n * e.x;
t.y = n * e.y;
t.z = n * e.z;
t.w = Math.cos(i);
return t;
};
i.fromAngleZ = function(t, e) {
e *= S;
t.x = t.y = 0;
t.z = Math.sin(e);
t.w = Math.cos(e);
return t;
};
i.fromMat3 = function(t, e) {
var i = e.m, n = i[0], r = i[1], s = i[2], o = i[3], a = i[4], c = i[5], l = i[6], u = i[7], h = i[8], f = n + a + h;
if (f > 0) {
var _ = .5 / Math.sqrt(f + 1);
t.w = .25 / _;
t.x = (c - u) * _;
t.y = (l - s) * _;
t.z = (r - o) * _;
} else if (n > a && n > h) {
var d = 2 * Math.sqrt(1 + n - a - h);
t.w = (c - u) / d;
t.x = .25 * d;
t.y = (o + r) / d;
t.z = (l + s) / d;
} else if (a > h) {
var p = 2 * Math.sqrt(1 + a - n - h);
t.w = (l - s) / p;
t.x = (o + r) / p;
t.y = .25 * p;
t.z = (u + c) / p;
} else {
var m = 2 * Math.sqrt(1 + h - n - a);
t.w = (r - o) / m;
t.x = (l + s) / m;
t.y = (u + c) / m;
t.z = .25 * m;
}
return t;
};
i.fromEuler = function(t, e, i, n) {
e *= S;
i *= S;
n *= S;
var r = Math.sin(e), s = Math.cos(e), o = Math.sin(i), a = Math.cos(i), c = Math.sin(n), l = Math.cos(n);
t.x = r * a * l + s * o * c;
t.y = s * o * l + r * a * c;
t.z = s * a * c - r * o * l;
t.w = s * a * l - r * o * c;
return t;
};
i.toAxisX = function(t, e) {
var i = 2 * e.y, n = 2 * e.z;
t.x = 1 - i * e.y - n * e.z;
t.y = i * e.x + n * e.w;
t.z = n * e.x + i * e.w;
return t;
};
i.toAxisY = function(t, e) {
var i = 2 * e.x, n = 2 * e.y, r = 2 * e.z;
t.x = n * e.x - r * e.w;
t.y = 1 - i * e.x - r * e.z;
t.z = r * e.y + i * e.w;
return t;
};
i.toAxisZ = function(t, e) {
var i = 2 * e.x, n = 2 * e.y, r = 2 * e.z;
t.x = r * e.x - n * e.w;
t.y = r * e.y - i * e.w;
t.z = 1 - i * e.x - n * e.y;
return t;
};
i.toEuler = function(t, e, i) {
var n = e.x, r = e.y, s = e.z, o = e.w, c = 0, l = 0, u = 0, h = n * r + s * o;
if (h > .499999) {
c = 0;
l = (0, a.toDegree)(2 * Math.atan2(n, o));
u = 90;
} else if (h < -.499999) {
c = 0;
l = -(0, a.toDegree)(2 * Math.atan2(n, o));
u = -90;
} else {
var f = n * n, _ = r * r, d = s * s;
c = (0, a.toDegree)(Math.atan2(2 * n * o - 2 * r * s, 1 - 2 * f - 2 * d));
l = (0, a.toDegree)(Math.atan2(2 * r * o - 2 * n * s, 1 - 2 * _ - 2 * d));
u = (0, a.toDegree)(Math.asin(2 * h));
if (i) {
c = -180 * Math.sign(c + 1e-6) + c;
l = -180 * Math.sign(l + 1e-6) + l;
u = 180 * Math.sign(u + 1e-6) - u;
}
}
t.x = c;
t.y = l;
t.z = u;
return t;
};
i.strictEquals = function(t, e) {
return t.x === e.x && t.y === e.y && t.z === e.z && t.w === e.w;
};
i.equals = function(t, e, i) {
void 0 === i && (i = a.EPSILON);
return Math.abs(t.x - e.x) <= i * Math.max(1, Math.abs(t.x), Math.abs(e.x)) && Math.abs(t.y - e.y) <= i * Math.max(1, Math.abs(t.y), Math.abs(e.y)) && Math.abs(t.z - e.z) <= i * Math.max(1, Math.abs(t.z), Math.abs(e.z)) && Math.abs(t.w - e.w) <= i * Math.max(1, Math.abs(t.w), Math.abs(e.w));
};
i.toArray = function(t, e, i) {
void 0 === i && (i = 0);
t[i + 0] = e.x;
t[i + 1] = e.y;
t[i + 2] = e.z;
t[i + 3] = e.w;
return t;
};
i.fromArray = function(t, e, i) {
void 0 === i && (i = 0);
t.x = e[i + 0];
t.y = e[i + 1];
t.z = e[i + 2];
t.w = e[i + 3];
return t;
};
function i(e, i, n, r) {
var s;
void 0 === e && (e = 0);
void 0 === i && (i = 0);
void 0 === n && (n = 0);
void 0 === r && (r = 1);
(s = t.call(this) || this).x = void 0;
s.y = void 0;
s.z = void 0;
s.w = void 0;
if (e && "object" == typeof e) {
s.z = e.z;
s.y = e.y;
s.w = e.w;
s.x = e.x;
} else {
s.x = e;
s.y = i;
s.z = n;
s.w = r;
}
return s;
}
e.clone = function() {
return new i(this.x, this.y, this.z, this.w);
};
e.set = function(t) {
this.x = t.x;
this.y = t.y;
this.z = t.z;
this.w = t.w;
return this;
};
e.equals = function(t) {
return t && this.x === t.x && this.y === t.y && this.z === t.z && this.w === t.w;
};
e.toEuler = function(t) {
return i.toEuler(t, this);
};
e.fromEuler = function(t) {
return i.fromEuler(this, t.x, t.y, t.z);
};
e.lerp = function(t, e, n) {
n = n || new i();
i.slerp(n, this, t, e);
return n;
};
e.multiply = function(t) {
return i.multiply(this, this, t);
};
e.rotateAround = function(t, e, n, r) {
r = r || new i();
return i.rotateAround(r, t, e, n);
};
return i;
})(n.default);
i.default = g;
g.mul = g.multiply;
g.scale = g.multiplyScalar;
g.mag = g.len;
g.IDENTITY = Object.freeze(new g());
var b = new g(), C = new g(), x = new s.default(), A = new o.default(), S = .5 * Math.PI / 180;
r.default.fastDefine("cc.Quat", g, {
x: 0,
y: 0,
z: 0,
w: 1
});
cc.quat = function(t, e, i, n) {
return new g(t, e, i, n);
};
cc.Quat = g;
e.exports = i.default;
}), {
"../platform/CCClass": 230,
"./mat3": 329,
"./utils": 335,
"./value-type": 336,
"./vec3": 338
} ],
332: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = a(t("./value-type")), r = a(t("../platform/CCClass")), s = a(t("./vec2")), o = a(t("./size"));
function a(t) {
return t && t.__esModule ? t : {
default: t
};
}
function c(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function l(t, e, i) {
e && c(t.prototype, e);
i && c(t, i);
return t;
}
function u(t) {
return function() {
var e, i = d(t);
if (_()) {
var n = d(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return h(this, e);
};
}
function h(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? f(t) : e;
}
function f(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function _() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function d(t) {
return (d = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function p(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var m = (function(t) {
p(e, t);
u(e);
e.fromMinMax = function(t, i) {
var n = Math.min(t.x, i.x), r = Math.min(t.y, i.y);
return new e(n, r, Math.max(t.x, i.x) - n, Math.max(t.y, i.y) - r);
};
function e(e, i, n, r) {
var s;
void 0 === e && (e = 0);
void 0 === i && (i = 0);
void 0 === n && (n = 0);
void 0 === r && (r = 0);
(s = t.call(this) || this).x = void 0;
s.y = void 0;
s.width = void 0;
s.height = void 0;
if (e && "object" == typeof e) {
i = e.y;
n = e.width;
r = e.height;
e = e.x;
}
s.x = e || 0;
s.y = i || 0;
s.width = n || 0;
s.height = r || 0;
return s;
}
var i = e.prototype;
i.clone = function() {
return new e(this.x, this.y, this.width, this.height);
};
i.equals = function(t) {
return t && this.x === t.x && this.y === t.y && this.width === t.width && this.height === t.height;
};
i.lerp = function(t, i, n) {
n = n || new e();
var r = this.x, s = this.y, o = this.width, a = this.height;
n.x = r + (t.x - r) * i;
n.y = s + (t.y - s) * i;
n.width = o + (t.width - o) * i;
n.height = a + (t.height - a) * i;
return n;
};
i.set = function(t) {
this.x = t.x;
this.y = t.y;
this.width = t.width;
this.height = t.height;
return this;
};
i.intersects = function(t) {
var e = this.x + this.width, i = this.y + this.height, n = t.x + t.width, r = t.y + t.height;
return !(e < t.x || n < this.x || i < t.y || r < this.y);
};
i.intersection = function(t, e) {
var i = this.x, n = this.y, r = this.x + this.width, s = this.y + this.height, o = e.x, a = e.y, c = e.x + e.width, l = e.y + e.height;
t.x = Math.max(i, o);
t.y = Math.max(n, a);
t.width = Math.min(r, c) - t.x;
t.height = Math.min(s, l) - t.y;
return t;
};
i.contains = function(t) {
return this.x <= t.x && this.x + this.width >= t.x && this.y <= t.y && this.y + this.height >= t.y;
};
i.containsRect = function(t) {
return this.x <= t.x && this.x + this.width >= t.x + t.width && this.y <= t.y && this.y + this.height >= t.y + t.height;
};
i.union = function(t, e) {
var i = this.x, n = this.y, r = this.width, s = this.height, o = e.x, a = e.y, c = e.width, l = e.height;
t.x = Math.min(i, o);
t.y = Math.min(n, a);
t.width = Math.max(i + r, o + c) - t.x;
t.height = Math.max(n + s, a + l) - t.y;
return t;
};
i.transformMat4 = function(t, e) {
var i = this.x, n = this.y, r = i + this.width, s = n + this.height, o = e.m, a = o[0] * i + o[4] * n + o[12], c = o[1] * i + o[5] * n + o[13], l = o[0] * r + o[4] * n + o[12], u = o[1] * r + o[5] * n + o[13], h = o[0] * i + o[4] * s + o[12], f = o[1] * i + o[5] * s + o[13], _ = o[0] * r + o[4] * s + o[12], d = o[1] * r + o[5] * s + o[13], p = Math.min(a, l, h, _), m = Math.max(a, l, h, _), y = Math.min(c, u, f, d), v = Math.max(c, u, f, d);
t.x = p;
t.y = y;
t.width = m - p;
t.height = v - y;
return t;
};
i.toString = function() {
return "(" + this.x.toFixed(2) + ", " + this.y.toFixed(2) + ", " + this.width.toFixed(2) + ", " + this.height.toFixed(2) + ")";
};
l(e, [ {
key: "xMin",
get: function() {
return this.x;
},
set: function(t) {
this.width += this.x - t;
this.x = t;
}
}, {
key: "yMin",
get: function() {
return this.y;
},
set: function(t) {
this.height += this.y - t;
this.y = t;
}
}, {
key: "xMax",
get: function() {
return this.x + this.width;
},
set: function(t) {
this.width = t - this.x;
}
}, {
key: "yMax",
get: function() {
return this.y + this.height;
},
set: function(t) {
this.height = t - this.y;
}
}, {
key: "center",
get: function() {
return new s.default(this.x + .5 * this.width, this.y + .5 * this.height);
},
set: function(t) {
this.x = t.x - .5 * this.width;
this.y = t.y - .5 * this.height;
}
}, {
key: "origin",
get: function() {
return new s.default(this.x, this.y);
},
set: function(t) {
this.x = t.x;
this.y = t.y;
}
}, {
key: "size",
get: function() {
return new o.default(this.width, this.height);
},
set: function(t) {
this.width = t.width;
this.height = t.height;
}
} ]);
return e;
})(n.default);
i.default = m;
r.default.fastDefine("cc.Rect", m, {
x: 0,
y: 0,
width: 0,
height: 0
});
cc.Rect = m;
cc.rect = function(t, e, i, n) {
return new m(t, e, i, n);
};
e.exports = i.default;
}), {
"../platform/CCClass": 230,
"./size": 333,
"./value-type": 336,
"./vec2": 337
} ],
333: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = s(t("./value-type")), r = s(t("../platform/CCClass"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
function o(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function a(t, e, i) {
e && o(t.prototype, e);
i && o(t, i);
return t;
}
function c(t) {
return function() {
var e, i = f(t);
if (h()) {
var n = f(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return l(this, e);
};
}
function l(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? u(t) : e;
}
function u(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function h() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function f(t) {
return (f = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function _(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var d = (function(t) {
_(e, t);
c(e);
a(e, null, [ {
key: "ZERO",
get: function() {
return new e();
}
} ]);
function e(e, i) {
var n;
void 0 === e && (e = 0);
void 0 === i && (i = 0);
(n = t.call(this) || this).width = void 0;
n.height = void 0;
if (e && "object" == typeof e) {
n.height = e.height;
n.width = e.width;
} else {
n.width = e || 0;
n.height = i || 0;
}
return n;
}
var i = e.prototype;
i.clone = function() {
return new e(this.width, this.height);
};
i.equals = function(t) {
return t && this.width === t.width && this.height === t.height;
};
i.lerp = function(t, i, n) {
n = n || new e();
var r = this.width, s = this.height;
n.width = r + (t.width - r) * i;
n.height = s + (t.height - s) * i;
return n;
};
i.set = function(t) {
this.width = t.width;
this.height = t.height;
return this;
};
i.toString = function() {
return "(" + this.width.toFixed(2) + ", " + this.height.toFixed(2) + ")";
};
return e;
})(n.default);
i.default = d;
d.ZERO_R = d.ZERO;
r.default.fastDefine("cc.Size", d, {
width: 0,
height: 0
});
cc.size = function(t, e) {
return new d(t, e);
};
cc.Size = d;
e.exports = i.default;
}), {
"../platform/CCClass": 230,
"./value-type": 336
} ],
334: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./quat"));
var r = new n.default(), s = (function() {
function t() {}
t.toRotation = function(t, e) {
t.x = e[3];
t.y = e[4];
t.z = e[5];
t.w = e[6];
return t;
};
t.fromRotation = function(t, e) {
t[3] = e.x;
t[4] = e.y;
t[5] = e.z;
t[6] = e.w;
return t;
};
t.toEuler = function(e, i) {
t.toRotation(r, i);
n.default.toEuler(e, r);
return e;
};
t.fromEuler = function(e, i) {
n.default.fromEuler(r, i.x, i.y, i.z);
t.fromRotation(e, r);
return e;
};
t.fromEulerNumber = function(e, i, s, o) {
n.default.fromEuler(r, i, s, o);
t.fromRotation(e, r);
return e;
};
t.toScale = function(t, e) {
t.x = e[7];
t.y = e[8];
t.z = e[9];
return t;
};
t.fromScale = function(t, e) {
t[7] = e.x;
t[8] = e.y;
t[9] = e.z;
return t;
};
t.toPosition = function(t, e) {
t.x = e[0];
t.y = e[1];
t.z = e[2];
return t;
};
t.fromPosition = function(t, e) {
t[0] = e.x;
t[1] = e.y;
t[2] = e.z;
return t;
};
t.fromAngleZ = function(e, i) {
n.default.fromAngleZ(r, i);
t.fromRotation(e, r);
return e;
};
t.toMat4 = function(t, e) {
var i = e[3], n = e[4], r = e[5], s = e[6], o = i + i, a = n + n, c = r + r, l = i * o, u = i * a, h = i * c, f = n * a, _ = n * c, d = r * c, p = s * o, m = s * a, y = s * c, v = e[7], g = e[8], b = e[9], C = t.m;
C[0] = (1 - (f + d)) * v;
C[1] = (u + y) * v;
C[2] = (h - m) * v;
C[3] = 0;
C[4] = (u - y) * g;
C[5] = (1 - (l + d)) * g;
C[6] = (_ + p) * g;
C[7] = 0;
C[8] = (h + m) * b;
C[9] = (_ - p) * b;
C[10] = (1 - (l + f)) * b;
C[11] = 0;
C[12] = e[0];
C[13] = e[1];
C[14] = e[2];
C[15] = 1;
return t;
};
return t;
})();
i.default = s;
cc.Trs = s;
e.exports = i.default;
}), {
"./quat": 331
} ],
335: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.equals = function(t, e) {
return Math.abs(t - e) <= s * Math.max(1, Math.abs(t), Math.abs(e));
};
i.approx = function(t, e, i) {
i = i || s;
return Math.abs(t - e) <= i;
};
i.clamp = function(t, e, i) {
return t < e ? e : t > i ? i : t;
};
i.clamp01 = function(t) {
return t < 0 ? 0 : t > 1 ? 1 : t;
};
i.lerp = function(t, e, i) {
return t + (e - t) * i;
};
i.toRadian = function(t) {
return t * n;
};
i.toDegree = function(t) {
return t * r;
};
i.randomRange = c;
i.randomRangeInt = function(t, e) {
return Math.floor(c(t, e));
};
i.pseudoRandom = l;
i.pseudoRandomRange = u;
i.pseudoRandomRangeInt = function(t, e, i) {
return Math.floor(u(t, e, i));
};
i.nextPow2 = function(t) {
t = (t = (t = (t = (t = --t >> 1 | t) >> 2 | t) >> 4 | t) >> 8 | t) >> 16 | t;
return ++t;
};
i.repeat = h;
i.pingPong = function(t, e) {
t = h(t, 2 * e);
return t = e - Math.abs(t - e);
};
i.inverseLerp = function(t, e, i) {
return (i - t) / (e - t);
};
i.sign = function(t) {
return (t > 0) - (t < 0);
};
i.random = i.FLOAT_BYTES = i.FLOAT_ARRAY_TYPE = i.INT_MIN = i.INT_MAX = i.INT_BITS = i.EPSILON = void 0;
var n = Math.PI / 180, r = 180 / Math.PI, s = 1e-6;
i.EPSILON = s;
i.INT_BITS = 32;
i.INT_MAX = 2147483647;
i.INT_MIN = -1 << 31;
var o = Float32Array;
i.FLOAT_ARRAY_TYPE = o;
i.FLOAT_BYTES = 4;
var a = Math.random;
i.random = a;
function c(t, e) {
return Math.random() * (e - t) + t;
}
function l(t) {
return (t = (9301 * t + 49297) % 233280) / 233280;
}
function u(t, e, i) {
return l(t) * (i - e) + e;
}
function h(t, e) {
return t - Math.floor(t / e) * e;
}
}), {} ],
336: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../platform/js"));
var r = (function() {
function t() {}
var e = t.prototype;
e.clone = function() {
cc.errorID("0100", n.default.getClassName(this) + ".clone");
return null;
};
e.equals = function(t) {
cc.errorID("0100", n.default.getClassName(this) + ".equals");
return !1;
};
e.lerp = function(t, e) {
cc.errorID("0100", n.default.getClassName(this) + ".lerp");
return this.clone();
};
e.set = function(t) {
cc.errorID("0100", n.default.getClassName(this) + ".set");
};
e.toString = function() {
return "" + {};
};
return t;
})();
i.default = r;
n.default.setClassName("cc.ValueType", r);
cc.ValueType = r;
e.exports = i.default;
}), {
"../platform/js": 250
} ],
337: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = a(t("./value-type")), r = a(t("../platform/CCClass")), s = a(t("../utils/misc")), o = t("./utils");
function a(t) {
return t && t.__esModule ? t : {
default: t
};
}
function c(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function l(t, e, i) {
e && c(t.prototype, e);
i && c(t, i);
return t;
}
function u(t) {
return function() {
var e, i = d(t);
if (_()) {
var n = d(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return h(this, e);
};
}
function h(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? f(t) : e;
}
function f(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function _() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function d(t) {
return (d = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function p(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var m = 0, y = 0, v = (function(t) {
p(i, t);
u(i);
var e = i.prototype;
e.sub = function(t, e) {
return i.subtract(e || new i(), this, t);
};
e.mul = function(t, e) {
return i.multiplyScalar(e || new i(), this, t);
};
e.div = function(t, e) {
return i.multiplyScalar(e || new i(), this, 1 / t);
};
e.scale = function(t, e) {
return i.multiply(e || new i(), this, t);
};
e.neg = function(t) {
return i.negate(t || new i(), this);
};
i.clone = function(t) {
return new i(t.x, t.y);
};
i.copy = function(t, e) {
t.x = e.x;
t.y = e.y;
return t;
};
i.set = function(t, e, i) {
t.x = e;
t.y = i;
return t;
};
i.add = function(t, e, i) {
t.x = e.x + i.x;
t.y = e.y + i.y;
return t;
};
i.subtract = function(t, e, i) {
t.x = e.x - i.x;
t.y = e.y - i.y;
return t;
};
i.multiply = function(t, e, i) {
t.x = e.x * i.x;
t.y = e.y * i.y;
return t;
};
i.divide = function(t, e, i) {
t.x = e.x / i.x;
t.y = e.y / i.y;
return t;
};
i.ceil = function(t, e) {
t.x = Math.ceil(e.x);
t.y = Math.ceil(e.y);
return t;
};
i.floor = function(t, e) {
t.x = Math.floor(e.x);
t.y = Math.floor(e.y);
return t;
};
i.min = function(t, e, i) {
t.x = Math.min(e.x, i.x);
t.y = Math.min(e.y, i.y);
return t;
};
i.max = function(t, e, i) {
t.x = Math.max(e.x, i.x);
t.y = Math.max(e.y, i.y);
return t;
};
i.round = function(t, e) {
t.x = Math.round(e.x);
t.y = Math.round(e.y);
return t;
};
i.multiplyScalar = function(t, e, i) {
t.x = e.x * i;
t.y = e.y * i;
return t;
};
i.scaleAndAdd = function(t, e, i, n) {
t.x = e.x + i.x * n;
t.y = e.y + i.y * n;
return t;
};
i.distance = function(t, e) {
m = e.x - t.x;
y = e.y - t.y;
return Math.sqrt(m * m + y * y);
};
i.squaredDistance = function(t, e) {
m = e.x - t.x;
y = e.y - t.y;
return m * m + y * y;
};
i.len = function(t) {
m = t.x;
y = t.y;
return Math.sqrt(m * m + y * y);
};
i.lengthSqr = function(t) {
m = t.x;
y = t.y;
return m * m + y * y;
};
i.negate = function(t, e) {
t.x = -e.x;
t.y = -e.y;
return t;
};
i.inverse = function(t, e) {
t.x = 1 / e.x;
t.y = 1 / e.y;
return t;
};
i.inverseSafe = function(t, e) {
m = e.x;
y = e.y;
Math.abs(m) < o.EPSILON ? t.x = 0 : t.x = 1 / m;
Math.abs(y) < o.EPSILON ? t.y = 0 : t.y = 1 / y;
return t;
};
i.normalize = function(t, e) {
m = e.x;
y = e.y;
var i = m * m + y * y;
if (i > 0) {
i = 1 / Math.sqrt(i);
t.x = m * i;
t.y = y * i;
}
return t;
};
i.dot = function(t, e) {
return t.x * e.x + t.y * e.y;
};
i.cross = function(t, e, i) {
t.x = t.y = 0;
t.z = e.x * i.y - e.y * i.x;
return t;
};
i.lerp = function(t, e, i, n) {
m = e.x;
y = e.y;
t.x = m + n * (i.x - m);
t.y = y + n * (i.y - y);
return t;
};
i.random = function(t, e) {
e = e || 1;
var i = 2 * (0, o.random)() * Math.PI;
t.x = Math.cos(i) * e;
t.y = Math.sin(i) * e;
return t;
};
i.transformMat3 = function(t, e, i) {
m = e.x;
y = e.y;
var n = i.m;
t.x = n[0] * m + n[3] * y + n[6];
t.y = n[1] * m + n[4] * y + n[7];
return t;
};
i.transformMat4 = function(t, e, i) {
m = e.x;
y = e.y;
var n = i.m;
t.x = n[0] * m + n[4] * y + n[12];
t.y = n[1] * m + n[5] * y + n[13];
return t;
};
i.strictEquals = function(t, e) {
return t.x === e.x && t.y === e.y;
};
i.equals = function(t, e, i) {
void 0 === i && (i = o.EPSILON);
return Math.abs(t.x - e.x) <= i * Math.max(1, Math.abs(t.x), Math.abs(e.x)) && Math.abs(t.y - e.y) <= i * Math.max(1, Math.abs(t.y), Math.abs(e.y));
};
i.angle = function(t, e) {
i.normalize(g, t);
i.normalize(b, e);
var n = i.dot(g, b);
return n > 1 ? 0 : n < -1 ? Math.PI : Math.acos(n);
};
i.toArray = function(t, e, i) {
void 0 === i && (i = 0);
t[i + 0] = e.x;
t[i + 1] = e.y;
return t;
};
i.fromArray = function(t, e, i) {
void 0 === i && (i = 0);
t.x = e[i + 0];
t.y = e[i + 1];
return t;
};
l(i, null, [ {
key: "ONE",
get: function() {
return new i(1, 1);
}
}, {
key: "ZERO",
get: function() {
return new i(0, 0);
}
}, {
key: "UP",
get: function() {
return new i(0, 1);
}
}, {
key: "RIGHT",
get: function() {
return new i(1, 0);
}
} ]);
function i(e, n) {
var r;
void 0 === e && (e = 0);
void 0 === n && (n = 0);
(r = t.call(this) || this).mag = i.prototype.len;
r.magSqr = i.prototype.lengthSqr;
r.subSelf = i.prototype.subtract;
r.mulSelf = i.prototype.multiplyScalar;
r.divSelf = i.prototype.divide;
r.scaleSelf = i.prototype.multiply;
r.negSelf = i.prototype.negate;
r.x = void 0;
r.y = void 0;
r.z = 0;
if (e && "object" == typeof e) {
r.y = e.y || 0;
r.x = e.x || 0;
} else {
r.x = e || 0;
r.y = n || 0;
}
return r;
}
e.clone = function() {
return new i(this.x, this.y);
};
e.set = function(t) {
this.x = t.x;
this.y = t.y;
return this;
};
e.equals = function(t) {
return t && this.x === t.x && this.y === t.y;
};
e.fuzzyEquals = function(t, e) {
return this.x - e <= t.x && t.x <= this.x + e && this.y - e <= t.y && t.y <= this.y + e;
};
e.toString = function() {
return "(" + this.x.toFixed(2) + ", " + this.y.toFixed(2) + ")";
};
e.lerp = function(t, e, n) {
n = n || new i();
var r = this.x, s = this.y;
n.x = r + (t.x - r) * e;
n.y = s + (t.y - s) * e;
return n;
};
e.clampf = function(t, e) {
this.x = s.default.clampf(this.x, t.x, e.x);
this.y = s.default.clampf(this.y, t.y, e.y);
return this;
};
e.add = function(t, e) {
(e = e || new i()).x = this.x + t.x;
e.y = this.y + t.y;
return e;
};
e.addSelf = function(t) {
this.x += t.x;
this.y += t.y;
return this;
};
e.subtract = function(t) {
this.x -= t.x;
this.y -= t.y;
return this;
};
e.multiplyScalar = function(t) {
this.x *= t;
this.y *= t;
return this;
};
e.multiply = function(t) {
this.x *= t.x;
this.y *= t.y;
return this;
};
e.divide = function(t) {
this.x /= t;
this.y /= t;
return this;
};
e.negate = function() {
this.x = -this.x;
this.y = -this.y;
return this;
};
e.dot = function(t) {
return this.x * t.x + this.y * t.y;
};
e.cross = function(t) {
return this.x * t.y - this.y * t.x;
};
e.len = function() {
return Math.sqrt(this.x * this.x + this.y * this.y);
};
e.lengthSqr = function() {
return this.x * this.x + this.y * this.y;
};
e.normalizeSelf = function() {
var t = this.x * this.x + this.y * this.y;
if (1 === t) return this;
if (0 === t) return this;
var e = 1 / Math.sqrt(t);
this.x *= e;
this.y *= e;
return this;
};
e.normalize = function(t) {
(t = t || new i()).x = this.x;
t.y = this.y;
t.normalizeSelf();
return t;
};
e.angle = function(t) {
var e = this.magSqr(), i = t.magSqr();
if (0 === e || 0 === i) {
console.warn("Can't get angle between zero vector");
return 0;
}
var n = this.dot(t) / Math.sqrt(e * i);
n = s.default.clampf(n, -1, 1);
return Math.acos(n);
};
e.signAngle = function(t) {
var e = this.angle(t);
return this.cross(t) < 0 ? -e : e;
};
e.rotate = function(t, e) {
(e = e || new i()).x = this.x;
e.y = this.y;
return e.rotateSelf(t);
};
e.rotateSelf = function(t) {
var e = Math.sin(t), i = Math.cos(t), n = this.x;
this.x = i * n - e * this.y;
this.y = e * n + i * this.y;
return this;
};
e.project = function(t) {
return t.multiplyScalar(this.dot(t) / t.dot(t));
};
e.transformMat4 = function(t, e) {
e = e || new i();
i.transformMat4(e, this, t);
return e;
};
e.maxAxis = function() {
return Math.max(this.x, this.y);
};
return i;
})(n.default);
i.default = v;
v.sub = v.subtract;
v.mul = v.multiply;
v.scale = v.multiplyScalar;
v.mag = v.len;
v.squaredMagnitude = v.lengthSqr;
v.div = v.divide;
v.ONE_R = v.ONE;
v.ZERO_R = v.ZERO;
v.UP_R = v.UP;
v.RIGHT_R = v.RIGHT;
var g = new v(), b = new v();
r.default.fastDefine("cc.Vec2", v, {
x: 0,
y: 0
});
cc.v2 = function(t, e) {
return new v(t, e);
};
cc.Vec2 = v;
e.exports = i.default;
}), {
"../platform/CCClass": 230,
"../utils/misc": 313,
"./utils": 335,
"./value-type": 336
} ],
338: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = c(t("./value-type")), r = c(t("../platform/CCClass")), s = c(t("../utils/misc")), o = c(t("./vec2")), a = t("./utils");
function c(t) {
return t && t.__esModule ? t : {
default: t
};
}
function l(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function u(t, e, i) {
e && l(t.prototype, e);
i && l(t, i);
return t;
}
function h(t) {
return function() {
var e, i = p(t);
if (d()) {
var n = p(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return f(this, e);
};
}
function f(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? _(t) : e;
}
function _(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function d() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function p(t) {
return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function m(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var y = 0, v = 0, g = 0, b = (function(t) {
m(i, t);
h(i);
var e = i.prototype;
e.sub = function(t, e) {
return i.subtract(e || new i(), this, t);
};
e.mul = function(t, e) {
return i.multiplyScalar(e || new i(), this, t);
};
e.div = function(t, e) {
return i.multiplyScalar(e || new i(), this, 1 / t);
};
e.scale = function(t, e) {
return i.multiply(e || new i(), this, t);
};
e.neg = function(t) {
return i.negate(t || new i(), this);
};
i.zero = function(t) {
t.x = 0;
t.y = 0;
t.z = 0;
return t;
};
i.clone = function(t) {
return new i(t.x, t.y, t.z);
};
i.copy = function(t, e) {
t.x = e.x;
t.y = e.y;
t.z = e.z;
return t;
};
i.set = function(t, e, i, n) {
t.x = e;
t.y = i;
t.z = n;
return t;
};
i.add = function(t, e, i) {
t.x = e.x + i.x;
t.y = e.y + i.y;
t.z = e.z + i.z;
return t;
};
i.subtract = function(t, e, i) {
t.x = e.x - i.x;
t.y = e.y - i.y;
t.z = e.z - i.z;
return t;
};
i.multiply = function(t, e, i) {
t.x = e.x * i.x;
t.y = e.y * i.y;
t.z = e.z * i.z;
return t;
};
i.divide = function(t, e, i) {
t.x = e.x / i.x;
t.y = e.y / i.y;
t.z = e.z / i.z;
return t;
};
i.ceil = function(t, e) {
t.x = Math.ceil(e.x);
t.y = Math.ceil(e.y);
t.z = Math.ceil(e.z);
return t;
};
i.floor = function(t, e) {
t.x = Math.floor(e.x);
t.y = Math.floor(e.y);
t.z = Math.floor(e.z);
return t;
};
i.min = function(t, e, i) {
t.x = Math.min(e.x, i.x);
t.y = Math.min(e.y, i.y);
t.z = Math.min(e.z, i.z);
return t;
};
i.max = function(t, e, i) {
t.x = Math.max(e.x, i.x);
t.y = Math.max(e.y, i.y);
t.z = Math.max(e.z, i.z);
return t;
};
i.round = function(t, e) {
t.x = Math.round(e.x);
t.y = Math.round(e.y);
t.z = Math.round(e.z);
return t;
};
i.multiplyScalar = function(t, e, i) {
t.x = e.x * i;
t.y = e.y * i;
t.z = e.z * i;
return t;
};
i.scaleAndAdd = function(t, e, i, n) {
t.x = e.x + i.x * n;
t.y = e.y + i.y * n;
t.z = e.z + i.z * n;
return t;
};
i.distance = function(t, e) {
y = e.x - t.x;
v = e.y - t.y;
g = e.z - t.z;
return Math.sqrt(y * y + v * v + g * g);
};
i.squaredDistance = function(t, e) {
y = e.x - t.x;
v = e.y - t.y;
g = e.z - t.z;
return y * y + v * v + g * g;
};
i.len = function(t) {
y = t.x;
v = t.y;
g = t.z;
return Math.sqrt(y * y + v * v + g * g);
};
i.lengthSqr = function(t) {
y = t.x;
v = t.y;
g = t.z;
return y * y + v * v + g * g;
};
i.negate = function(t, e) {
t.x = -e.x;
t.y = -e.y;
t.z = -e.z;
return t;
};
i.inverse = function(t, e) {
t.x = 1 / e.x;
t.y = 1 / e.y;
t.z = 1 / e.z;
return t;
};
i.inverseSafe = function(t, e) {
y = e.x;
v = e.y;
g = e.z;
Math.abs(y) < a.EPSILON ? t.x = 0 : t.x = 1 / y;
Math.abs(v) < a.EPSILON ? t.y = 0 : t.y = 1 / v;
Math.abs(g) < a.EPSILON ? t.z = 0 : t.z = 1 / g;
return t;
};
i.normalize = function(t, e) {
y = e.x;
v = e.y;
g = e.z;
var i = y * y + v * v + g * g;
if (i > 0) {
i = 1 / Math.sqrt(i);
t.x = y * i;
t.y = v * i;
t.z = g * i;
}
return t;
};
i.dot = function(t, e) {
return t.x * e.x + t.y * e.y + t.z * e.z;
};
i.cross = function(t, e, i) {
var n = e.x, r = e.y, s = e.z, o = i.x, a = i.y, c = i.z;
t.x = r * c - s * a;
t.y = s * o - n * c;
t.z = n * a - r * o;
return t;
};
i.lerp = function(t, e, i, n) {
t.x = e.x + n * (i.x - e.x);
t.y = e.y + n * (i.y - e.y);
t.z = e.z + n * (i.z - e.z);
return t;
};
i.random = function(t, e) {
e = e || 1;
var i = 2 * (0, a.random)() * Math.PI, n = 2 * (0, a.random)() - 1, r = Math.sqrt(1 - n * n);
t.x = r * Math.cos(i) * e;
t.y = r * Math.sin(i) * e;
t.z = n * e;
return t;
};
i.transformMat4 = function(t, e, i) {
y = e.x;
v = e.y;
g = e.z;
var n = i.m, r = n[3] * y + n[7] * v + n[11] * g + n[15];
r = r ? 1 / r : 1;
t.x = (n[0] * y + n[4] * v + n[8] * g + n[12]) * r;
t.y = (n[1] * y + n[5] * v + n[9] * g + n[13]) * r;
t.z = (n[2] * y + n[6] * v + n[10] * g + n[14]) * r;
return t;
};
i.transformMat4Normal = function(t, e, i) {
y = e.x;
v = e.y;
g = e.z;
var n = i.m, r = n[3] * y + n[7] * v + n[11] * g;
r = r ? 1 / r : 1;
t.x = (n[0] * y + n[4] * v + n[8] * g) * r;
t.y = (n[1] * y + n[5] * v + n[9] * g) * r;
t.z = (n[2] * y + n[6] * v + n[10] * g) * r;
return t;
};
i.transformMat3 = function(t, e, i) {
y = e.x;
v = e.y;
g = e.z;
var n = i.m;
t.x = y * n[0] + v * n[3] + g * n[6];
t.y = y * n[1] + v * n[4] + g * n[7];
t.z = y * n[2] + v * n[5] + g * n[8];
return t;
};
i.transformAffine = function(t, e, i) {
y = e.x;
v = e.y;
g = e.z;
var n = i.m;
t.x = n[0] * y + n[1] * v + n[2] * g + n[3];
t.y = n[4] * y + n[5] * v + n[6] * g + n[7];
t.x = n[8] * y + n[9] * v + n[10] * g + n[11];
return t;
};
i.transformQuat = function(t, e, i) {
var n = i.w * e.x + i.y * e.z - i.z * e.y, r = i.w * e.y + i.z * e.x - i.x * e.z, s = i.w * e.z + i.x * e.y - i.y * e.x, o = -i.x * e.x - i.y * e.y - i.z * e.z;
t.x = n * i.w + o * -i.x + r * -i.z - s * -i.y;
t.y = r * i.w + o * -i.y + s * -i.x - n * -i.z;
t.z = s * i.w + o * -i.z + n * -i.y - r * -i.x;
return t;
};
i.transformRTS = function(t, e, i, n, r) {
var s = e.x * r.x, o = e.y * r.y, a = e.z * r.z, c = i.w * s + i.y * a - i.z * o, l = i.w * o + i.z * s - i.x * a, u = i.w * a + i.x * o - i.y * s, h = -i.x * s - i.y * o - i.z * a;
t.x = c * i.w + h * -i.x + l * -i.z - u * -i.y + n.x;
t.y = l * i.w + h * -i.y + u * -i.x - c * -i.z + n.y;
t.z = u * i.w + h * -i.z + c * -i.y - l * -i.x + n.z;
return t;
};
i.transformInverseRTS = function(t, e, i, n, r) {
var s = e.x - n.x, o = e.y - n.y, a = e.z - n.z, c = i.w * s - i.y * a + i.z * o, l = i.w * o - i.z * s + i.x * a, u = i.w * a - i.x * o + i.y * s, h = i.x * s + i.y * o + i.z * a;
t.x = (c * i.w + h * i.x + l * i.z - u * i.y) / r.x;
t.y = (l * i.w + h * i.y + u * i.x - c * i.z) / r.y;
t.z = (u * i.w + h * i.z + c * i.y - l * i.x) / r.z;
return t;
};
i.rotateX = function(t, e, i, n) {
y = e.x - i.x;
v = e.y - i.y;
g = e.z - i.z;
var r = Math.cos(n), s = Math.sin(n), o = y, a = v * r - g * s, c = v * s + g * r;
t.x = o + i.x;
t.y = a + i.y;
t.z = c + i.z;
return t;
};
i.rotateY = function(t, e, i, n) {
y = e.x - i.x;
v = e.y - i.y;
g = e.z - i.z;
var r = Math.cos(n), s = Math.sin(n), o = g * s + y * r, a = v, c = g * r - y * s;
t.x = o + i.x;
t.y = a + i.y;
t.z = c + i.z;
return t;
};
i.rotateZ = function(t, e, i, n) {
y = e.x - i.x;
v = e.y - i.y;
g = e.z - i.z;
var r = Math.cos(n), s = Math.sin(n), o = y * r - v * s, a = y * s + v * r, c = g;
t.x = o + i.x;
t.y = a + i.y;
t.z = c + i.z;
return t;
};
i.strictEquals = function(t, e) {
return t.x === e.x && t.y === e.y && t.z === e.z;
};
i.equals = function(t, e, i) {
void 0 === i && (i = a.EPSILON);
var n = t.x, r = t.y, s = t.z, o = e.x, c = e.y, l = e.z;
return Math.abs(n - o) <= i * Math.max(1, Math.abs(n), Math.abs(o)) && Math.abs(r - c) <= i * Math.max(1, Math.abs(r), Math.abs(c)) && Math.abs(s - l) <= i * Math.max(1, Math.abs(s), Math.abs(l));
};
i.angle = function(t, e) {
i.normalize(C, t);
i.normalize(x, e);
var n = i.dot(C, x);
return n > 1 ? 0 : n < -1 ? Math.PI : Math.acos(n);
};
i.projectOnPlane = function(t, e, n) {
return i.subtract(t, e, i.project(t, e, n));
};
i.project = function(t, e, n) {
var r = i.lengthSqr(n);
return r < 1e-6 ? i.set(t, 0, 0, 0) : i.multiplyScalar(t, n, i.dot(e, n) / r);
};
i.toArray = function(t, e, i) {
void 0 === i && (i = 0);
t[i + 0] = e.x;
t[i + 1] = e.y;
t[i + 2] = e.z;
return t;
};
i.fromArray = function(t, e, i) {
void 0 === i && (i = 0);
t.x = e[i + 0];
t.y = e[i + 1];
t.z = e[i + 2];
return t;
};
u(i, null, [ {
key: "ONE",
get: function() {
return new i(1, 1, 1);
}
}, {
key: "ZERO",
get: function() {
return new i();
}
}, {
key: "UP",
get: function() {
return new i(0, 1, 0);
}
}, {
key: "RIGHT",
get: function() {
return new i(1, 0, 0);
}
}, {
key: "FORWARD",
get: function() {
return new i(0, 0, 1);
}
} ]);
function i(e, n, r) {
var s;
void 0 === e && (e = 0);
void 0 === n && (n = 0);
void 0 === r && (r = 0);
(s = t.call(this) || this).mag = i.prototype.len;
s.magSqr = i.prototype.lengthSqr;
s.subSelf = i.prototype.subtract;
s.mulSelf = i.prototype.multiplyScalar;
s.divSelf = i.prototype.divide;
s.scaleSelf = i.prototype.multiply;
s.negSelf = i.prototype.negate;
s.x = void 0;
s.y = void 0;
s.z = void 0;
s.angle = o.default.prototype.angle;
s.project = o.default.prototype.project;
if (e && "object" == typeof e) {
s.z = e.z;
s.y = e.y;
s.x = e.x;
} else {
s.x = e;
s.y = n;
s.z = r;
}
return s;
}
e.clone = function() {
return new i(this.x, this.y, this.z);
};
e.set = function(t) {
this.x = t.x;
this.y = t.y;
this.z = t.z;
return this;
};
e.equals = function(t) {
return t && this.x === t.x && this.y === t.y && this.z === t.z;
};
e.fuzzyEquals = function(t, e) {
return this.x - e <= t.x && t.x <= this.x + e && this.y - e <= t.y && t.y <= this.y + e && this.z - e <= t.z && t.z <= this.z + e;
};
e.toString = function() {
return "(" + this.x.toFixed(2) + ", " + this.y.toFixed(2) + ", " + this.z.toFixed(2) + ")";
};
e.lerp = function(t, e, n) {
n = n || new i();
i.lerp(n, this, t, e);
return n;
};
e.clampf = function(t, e) {
this.x = s.default.clampf(this.x, t.x, e.x);
this.y = s.default.clampf(this.y, t.y, e.y);
this.z = s.default.clampf(this.z, t.z, e.z);
return this;
};
e.addSelf = function(t) {
this.x += t.x;
this.y += t.y;
this.z += t.z;
return this;
};
e.add = function(t, e) {
(e = e || new i()).x = this.x + t.x;
e.y = this.y + t.y;
e.z = this.z + t.z;
return e;
};
e.subtract = function(t) {
this.x -= t.x;
this.y -= t.y;
this.z -= t.z;
return this;
};
e.multiplyScalar = function(t) {
this.x *= t;
this.y *= t;
this.z *= t;
return this;
};
e.multiply = function(t) {
this.x *= t.x;
this.y *= t.y;
this.z *= t.z;
return this;
};
e.divide = function(t) {
this.x /= t;
this.y /= t;
this.z /= t;
return this;
};
e.negate = function() {
this.x = -this.x;
this.y = -this.y;
this.z = -this.z;
return this;
};
e.dot = function(t) {
return this.x * t.x + this.y * t.y + this.z * t.z;
};
e.cross = function(t, e) {
e = e || new i();
i.cross(e, this, t);
return e;
};
e.len = function() {
return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
};
e.lengthSqr = function() {
return this.x * this.x + this.y * this.y + this.z * this.z;
};
e.normalizeSelf = function() {
i.normalize(this, this);
return this;
};
e.normalize = function(t) {
t = t || new i();
i.normalize(t, this);
return t;
};
e.transformMat4 = function(t, e) {
e = e || new i();
i.transformMat4(e, this, t);
return e;
};
e.maxAxis = function() {
return Math.max(this.x, this.y, this.z);
};
e.signAngle = function(t) {
cc.warnID(1408, "vec3.signAngle", "v2.1", "cc.v2(selfVector).signAngle(vector)");
var e = new o.default(this.x, this.y), i = new o.default(t.x, t.y);
return e.signAngle(i);
};
e.rotate = function(t, e) {
cc.warnID(1408, "vec3.rotate", "v2.1", "cc.v2(selfVector).rotate(radians, out)");
return o.default.prototype.rotate.call(this, t, e);
};
e.rotateSelf = function(t) {
cc.warnID(1408, "vec3.rotateSelf", "v2.1", "cc.v2(selfVector).rotateSelf(radians)");
return o.default.prototype.rotateSelf.call(this, t);
};
return i;
})(n.default);
i.default = b;
b.sub = b.subtract;
b.mul = b.multiply;
b.scale = b.multiplyScalar;
b.mag = b.len;
b.squaredMagnitude = b.lengthSqr;
b.div = b.divide;
b.ONE_R = b.ONE;
b.ZERO_R = b.ZERO;
b.UP_R = b.UP;
b.RIGHT_R = b.RIGHT;
b.FRONT_R = b.FORWARD;
var C = new b(), x = new b();
r.default.fastDefine("cc.Vec3", b, {
x: 0,
y: 0,
z: 0
});
cc.v3 = function(t, e, i) {
return new b(t, e, i);
};
cc.Vec3 = b;
e.exports = i.default;
}), {
"../platform/CCClass": 230,
"../utils/misc": 313,
"./utils": 335,
"./value-type": 336,
"./vec2": 337
} ],
339: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.v4 = b;
i.default = void 0;
var n = o(t("../platform/CCClass")), r = o(t("./value-type")), s = t("./utils");
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
function a(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function c(t, e, i) {
e && a(t.prototype, e);
i && a(t, i);
return t;
}
function l(t) {
return function() {
var e, i = _(t);
if (f()) {
var n = _(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return u(this, e);
};
}
function u(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? h(t) : e;
}
function h(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function f() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function _(t) {
return (_ = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function d(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var p = 0, m = 0, y = 0, v = 0, g = (function(t) {
d(i, t);
l(i);
var e = i.prototype;
e.sub = function(t, e) {
return i.subtract(e || new i(), this, t);
};
e.mul = function(t, e) {
return i.multiplyScalar(e || new i(), this, t);
};
e.div = function(t, e) {
return i.multiplyScalar(e || new i(), this, 1 / t);
};
e.scale = function(t, e) {
return i.multiply(e || new i(), this, t);
};
e.neg = function(t) {
return i.negate(t || new i(), this);
};
i.clone = function(t) {
return new i(t.x, t.y, t.z, t.w);
};
i.copy = function(t, e) {
t.x = e.x;
t.y = e.y;
t.z = e.z;
t.w = e.w;
return t;
};
i.set = function(t, e, i, n, r) {
t.x = e;
t.y = i;
t.z = n;
t.w = r;
return t;
};
i.add = function(t, e, i) {
t.x = e.x + i.x;
t.y = e.y + i.y;
t.z = e.z + i.z;
t.w = e.w + i.w;
return t;
};
i.subtract = function(t, e, i) {
t.x = e.x - i.x;
t.y = e.y - i.y;
t.z = e.z - i.z;
t.w = e.w - i.w;
return t;
};
i.multiply = function(t, e, i) {
t.x = e.x * i.x;
t.y = e.y * i.y;
t.z = e.z * i.z;
t.w = e.w * i.w;
return t;
};
i.divide = function(t, e, i) {
t.x = e.x / i.x;
t.y = e.y / i.y;
t.z = e.z / i.z;
t.w = e.w / i.w;
return t;
};
i.ceil = function(t, e) {
t.x = Math.ceil(e.x);
t.y = Math.ceil(e.y);
t.z = Math.ceil(e.z);
t.w = Math.ceil(e.w);
return t;
};
i.floor = function(t, e) {
t.x = Math.floor(e.x);
t.y = Math.floor(e.y);
t.z = Math.floor(e.z);
t.w = Math.floor(e.w);
return t;
};
i.min = function(t, e, i) {
t.x = Math.min(e.x, i.x);
t.y = Math.min(e.y, i.y);
t.z = Math.min(e.z, i.z);
t.w = Math.min(e.w, i.w);
return t;
};
i.max = function(t, e, i) {
t.x = Math.max(e.x, i.x);
t.y = Math.max(e.y, i.y);
t.z = Math.max(e.z, i.z);
t.w = Math.max(e.w, i.w);
return t;
};
i.round = function(t, e) {
t.x = Math.round(e.x);
t.y = Math.round(e.y);
t.z = Math.round(e.z);
t.w = Math.round(e.w);
return t;
};
i.multiplyScalar = function(t, e, i) {
t.x = e.x * i;
t.y = e.y * i;
t.z = e.z * i;
t.w = e.w * i;
return t;
};
i.scaleAndAdd = function(t, e, i, n) {
t.x = e.x + i.x * n;
t.y = e.y + i.y * n;
t.z = e.z + i.z * n;
t.w = e.w + i.w * n;
return t;
};
i.distance = function(t, e) {
var i = e.x - t.x, n = e.y - t.y, r = e.z - t.z, s = e.w - t.w;
return Math.sqrt(i * i + n * n + r * r + s * s);
};
i.squaredDistance = function(t, e) {
var i = e.x - t.x, n = e.y - t.y, r = e.z - t.z, s = e.w - t.w;
return i * i + n * n + r * r + s * s;
};
i.len = function(t) {
p = t.x;
m = t.y;
y = t.z;
v = t.w;
return Math.sqrt(p * p + m * m + y * y + v * v);
};
i.lengthSqr = function(t) {
p = t.x;
m = t.y;
y = t.z;
v = t.w;
return p * p + m * m + y * y + v * v;
};
i.negate = function(t, e) {
t.x = -e.x;
t.y = -e.y;
t.z = -e.z;
t.w = -e.w;
return t;
};
i.inverse = function(t, e) {
t.x = 1 / e.x;
t.y = 1 / e.y;
t.z = 1 / e.z;
t.w = 1 / e.w;
return t;
};
i.inverseSafe = function(t, e) {
p = e.x;
m = e.y;
y = e.z;
v = e.w;
Math.abs(p) < s.EPSILON ? t.x = 0 : t.x = 1 / p;
Math.abs(m) < s.EPSILON ? t.y = 0 : t.y = 1 / m;
Math.abs(y) < s.EPSILON ? t.z = 0 : t.z = 1 / y;
Math.abs(v) < s.EPSILON ? t.w = 0 : t.w = 1 / v;
return t;
};
i.normalize = function(t, e) {
p = e.x;
m = e.y;
y = e.z;
v = e.w;
var i = p * p + m * m + y * y + v * v;
if (i > 0) {
i = 1 / Math.sqrt(i);
t.x = p * i;
t.y = m * i;
t.z = y * i;
t.w = v * i;
}
return t;
};
i.dot = function(t, e) {
return t.x * e.x + t.y * e.y + t.z * e.z + t.w * e.w;
};
i.lerp = function(t, e, i, n) {
t.x = e.x + n * (i.x - e.x);
t.y = e.y + n * (i.y - e.y);
t.z = e.z + n * (i.z - e.z);
t.w = e.w + n * (i.w - e.w);
return t;
};
i.random = function(t, e) {
e = e || 1;
var i = 2 * (0, s.random)() * Math.PI, n = 2 * (0, s.random)() - 1, r = Math.sqrt(1 - n * n);
t.x = r * Math.cos(i) * e;
t.y = r * Math.sin(i) * e;
t.z = n * e;
t.w = 0;
return t;
};
i.transformMat4 = function(t, e, i) {
p = e.x;
m = e.y;
y = e.z;
v = e.w;
var n = i.m;
t.x = n[0] * p + n[4] * m + n[8] * y + n[12] * v;
t.y = n[1] * p + n[5] * m + n[9] * y + n[13] * v;
t.z = n[2] * p + n[6] * m + n[10] * y + n[14] * v;
t.w = n[3] * p + n[7] * m + n[11] * y + n[15] * v;
return t;
};
i.transformAffine = function(t, e, i) {
p = e.x;
m = e.y;
y = e.z;
v = e.w;
var n = i.m;
t.x = n[0] * p + n[1] * m + n[2] * y + n[3] * v;
t.y = n[4] * p + n[5] * m + n[6] * y + n[7] * v;
t.x = n[8] * p + n[9] * m + n[10] * y + n[11] * v;
t.w = e.w;
return t;
};
i.transformQuat = function(t, e, i) {
var n = e.x, r = e.y, s = e.z;
p = i.x;
m = i.y;
y = i.z;
var o = (v = i.w) * n + m * s - y * r, a = v * r + y * n - p * s, c = v * s + p * r - m * n, l = -p * n - m * r - y * s;
t.x = o * v + l * -p + a * -y - c * -m;
t.y = a * v + l * -m + c * -p - o * -y;
t.z = c * v + l * -y + o * -m - a * -p;
t.w = e.w;
return t;
};
i.strictEquals = function(t, e) {
return t.x === e.x && t.y === e.y && t.z === e.z && t.w === e.w;
};
i.equals = function(t, e, i) {
void 0 === i && (i = s.EPSILON);
return Math.abs(t.x - e.x) <= i * Math.max(1, Math.abs(t.x), Math.abs(e.x)) && Math.abs(t.y - e.y) <= i * Math.max(1, Math.abs(t.y), Math.abs(e.y)) && Math.abs(t.z - e.z) <= i * Math.max(1, Math.abs(t.z), Math.abs(e.z)) && Math.abs(t.w - e.w) <= i * Math.max(1, Math.abs(t.w), Math.abs(e.w));
};
i.toArray = function(t, e, i) {
void 0 === i && (i = 0);
t[i + 0] = e.x;
t[i + 1] = e.y;
t[i + 2] = e.z;
t[i + 3] = e.w;
return t;
};
i.fromArray = function(t, e, i) {
void 0 === i && (i = 0);
t.x = e[i + 0];
t.y = e[i + 1];
t.z = e[i + 2];
t.w = e[i + 3];
return t;
};
c(i, null, [ {
key: "ZERO",
get: function() {
return new i(0, 0, 0, 0);
}
}, {
key: "ONE",
get: function() {
return new i(1, 1, 1, 1);
}
}, {
key: "NEG_ONE",
get: function() {
return new i(-1, -1, -1, -1);
}
} ]);
function i(e, n, r, s) {
var o;
void 0 === e && (e = 0);
void 0 === n && (n = 0);
void 0 === r && (r = 0);
void 0 === s && (s = 0);
(o = t.call(this) || this).mag = i.prototype.len;
o.magSqr = i.prototype.lengthSqr;
o.subSelf = i.prototype.subtract;
o.mulSelf = i.prototype.multiplyScalar;
o.divSelf = i.prototype.divide;
o.scaleSelf = i.prototype.multiply;
o.negSelf = i.prototype.negate;
o.x = void 0;
o.y = void 0;
o.z = void 0;
o.w = void 0;
if (e && "object" == typeof e) {
o.w = e.w;
o.z = e.z;
o.y = e.y;
o.x = e.x;
} else {
o.x = e;
o.y = n;
o.z = r;
o.w = s;
}
return o;
}
e.clone = function() {
return new i(this.x, this.y, this.z, this.w);
};
e.set = function(t, e, i, n) {
if (t && "object" == typeof t) {
this.x = t.x;
this.y = t.y;
this.z = t.z;
this.w = t.w;
} else {
this.x = t || 0;
this.y = e || 0;
this.z = i || 0;
this.w = n || 0;
}
return this;
};
e.equals = function(t, e) {
void 0 === e && (e = s.EPSILON);
return Math.abs(this.x - t.x) <= e * Math.max(1, Math.abs(this.x), Math.abs(t.x)) && Math.abs(this.y - t.y) <= e * Math.max(1, Math.abs(this.y), Math.abs(t.y)) && Math.abs(this.z - t.z) <= e * Math.max(1, Math.abs(this.z), Math.abs(t.z)) && Math.abs(this.w - t.w) <= e * Math.max(1, Math.abs(this.w), Math.abs(t.w));
};
e.equals4f = function(t, e, i, n, r) {
void 0 === r && (r = s.EPSILON);
return Math.abs(this.x - t) <= r * Math.max(1, Math.abs(this.x), Math.abs(t)) && Math.abs(this.y - e) <= r * Math.max(1, Math.abs(this.y), Math.abs(e)) && Math.abs(this.z - i) <= r * Math.max(1, Math.abs(this.z), Math.abs(i)) && Math.abs(this.w - n) <= r * Math.max(1, Math.abs(this.w), Math.abs(n));
};
e.strictEquals = function(t) {
return this.x === t.x && this.y === t.y && this.z === t.z && this.w === t.w;
};
e.strictEquals4f = function(t, e, i, n) {
return this.x === t && this.y === e && this.z === i && this.w === n;
};
e.lerp = function(t, e) {
p = this.x;
m = this.y;
y = this.z;
v = this.w;
this.x = p + e * (t.x - p);
this.y = m + e * (t.y - m);
this.z = y + e * (t.z - y);
this.w = v + e * (t.w - v);
return this;
};
e.toString = function() {
return "(" + this.x.toFixed(2) + ", " + this.y.toFixed(2) + ", " + this.z.toFixed(2) + ", " + this.w.toFixed(2) + ")";
};
e.clampf = function(t, e) {
this.x = (0, s.clamp)(this.x, t.x, e.x);
this.y = (0, s.clamp)(this.y, t.y, e.y);
this.z = (0, s.clamp)(this.z, t.z, e.z);
this.w = (0, s.clamp)(this.w, t.w, e.w);
return this;
};
e.addSelf = function(t) {
this.x += t.x;
this.y += t.y;
this.z += t.z;
this.w += t.w;
return this;
};
e.add = function(t, e) {
(e = e || new i()).x = this.x + t.x;
e.y = this.y + t.y;
e.z = this.z + t.z;
e.w = this.w + t.w;
return e;
};
e.subtract = function(t, e) {
(e = e || new i()).x = this.x - t.x;
e.y = this.y - t.y;
e.z = this.z - t.z;
e.w = this.w - t.w;
return e;
};
e.multiplyScalar = function(t) {
this.x *= t;
this.y *= t;
this.z *= t;
this.w *= t;
return this;
};
e.multiply = function(t) {
this.x *= t.x;
this.y *= t.y;
this.z *= t.z;
this.w *= t.w;
return this;
};
e.divide = function(t) {
this.x /= t;
this.y /= t;
this.z /= t;
this.w /= t;
return this;
};
e.negate = function() {
this.x = -this.x;
this.y = -this.y;
this.z = -this.z;
this.w = -this.w;
return this;
};
e.dot = function(t) {
return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w;
};
e.cross = function(t, e) {
e = e || new i();
var n = this.x, r = this.y, s = this.z, o = t.x, a = t.y, c = t.z;
e.x = r * c - s * a;
e.y = s * o - n * c;
e.z = n * a - r * o;
return e;
};
e.len = function() {
var t = this.x, e = this.y, i = this.z, n = this.w;
return Math.sqrt(t * t + e * e + i * i + n * n);
};
e.lengthSqr = function() {
var t = this.x, e = this.y, i = this.z, n = this.w;
return t * t + e * e + i * i + n * n;
};
e.normalizeSelf = function() {
this.normalize(this);
return this;
};
e.normalize = function(t) {
t = t || new i();
p = this.x;
m = this.y;
y = this.z;
v = this.w;
var e = p * p + m * m + y * y + v * v;
if (e > 0) {
e = 1 / Math.sqrt(e);
t.x = p * e;
t.y = m * e;
t.z = y * e;
t.w = v * e;
}
return t;
};
e.transformMat4 = function(t, e) {
e = e || new i();
p = this.x;
m = this.y;
y = this.z;
v = this.w;
var n = t.m;
e.x = n[0] * p + n[4] * m + n[8] * y + n[12] * v;
e.y = n[1] * p + n[5] * m + n[9] * y + n[13] * v;
e.z = n[2] * p + n[6] * m + n[10] * y + n[14] * v;
e.w = n[3] * p + n[7] * m + n[11] * y + n[15] * v;
return e;
};
e.maxAxis = function() {
return Math.max(this.x, this.y, this.z, this.w);
};
return i;
})(r.default);
i.default = g;
g.sub = g.subtract;
g.mul = g.multiply;
g.div = g.divide;
g.scale = g.multiplyScalar;
g.mag = g.len;
g.squaredMagnitude = g.lengthSqr;
g.ZERO_R = g.ZERO;
g.ONE_R = g.ONE;
g.NEG_ONE_R = g.NEG_ONE;
n.default.fastDefine("cc.Vec4", g, {
x: 0,
y: 0,
z: 0,
w: 0
});
function b(t, e, i, n) {
return new g(t, e, i, n);
}
cc.v4 = b;
cc.Vec4 = g;
}), {
"../platform/CCClass": 230,
"./utils": 335,
"./value-type": 336
} ],
340: [ (function(t, e, i) {
"use strict";
cc.js;
}), {} ],
341: [ (function(t, e, i) {
"use strict";
t("./core/CCGame");
t("./actions");
}), {
"./actions": 7,
"./core/CCGame": 71
} ],
342: [ (function(t, e, i) {
"use strict";
var n = t("../compression/zlib.min"), r = t("../core/CCDebug"), s = function(t) {
var e, i, n, s, o, a, c, l, u, h, f, _, d;
this.data = t;
this.pos = 8;
this.palette = [];
this.imgData = [];
this.transparency = {};
this.animation = null;
this.text = {};
o = null;
for (;;) {
e = this.readUInt32();
switch (l = function() {
var t, e;
e = [];
for (t = 0; t < 4; ++t) e.push(String.fromCharCode(this.data[this.pos++]));
return e;
}.call(this).join("")) {
case "IHDR":
this.width = this.readUInt32();
this.height = this.readUInt32();
this.bits = this.data[this.pos++];
this.colorType = this.data[this.pos++];
this.compressionMethod = this.data[this.pos++];
this.filterMethod = this.data[this.pos++];
this.interlaceMethod = this.data[this.pos++];
break;

case "acTL":
this.animation = {
numFrames: this.readUInt32(),
numPlays: this.readUInt32() || Infinity,
frames: []
};
break;

case "PLTE":
this.palette = this.read(e);
break;

case "fcTL":
o && this.animation.frames.push(o);
this.pos += 4;
o = {
width: this.readUInt32(),
height: this.readUInt32(),
xOffset: this.readUInt32(),
yOffset: this.readUInt32()
};
s = this.readUInt16();
n = this.readUInt16() || 100;
o.delay = 1e3 * s / n;
o.disposeOp = this.data[this.pos++];
o.blendOp = this.data[this.pos++];
o.data = [];
break;

case "IDAT":
case "fdAT":
if ("fdAT" === l) {
this.pos += 4;
e -= 4;
}
t = (null != o ? o.data : void 0) || this.imgData;
for (f = 0; 0 <= e ? f < e : f > e; 0 <= e ? ++f : --f) t.push(this.data[this.pos++]);
break;

case "tRNS":
this.transparency = {};
switch (this.colorType) {
case 3:
this.transparency.indexed = this.read(e);
if ((u = 255 - this.transparency.indexed.length) > 0) for (_ = 0; 0 <= u ? _ < u : _ > u; 0 <= u ? ++_ : --_) this.transparency.indexed.push(255);
break;

case 0:
this.transparency.grayscale = this.read(e)[0];
break;

case 2:
this.transparency.rgb = this.read(e);
}
break;

case "tEXt":
a = (h = this.read(e)).indexOf(0);
c = String.fromCharCode.apply(String, h.slice(0, a));
this.text[c] = String.fromCharCode.apply(String, h.slice(a + 1));
break;

case "IEND":
o && this.animation.frames.push(o);
this.colors = function() {
switch (this.colorType) {
case 0:
case 3:
case 4:
return 1;

case 2:
case 6:
return 3;
}
}.call(this);
this.hasAlphaChannel = 4 === (d = this.colorType) || 6 === d;
i = this.colors + (this.hasAlphaChannel ? 1 : 0);
this.pixelBitlength = this.bits * i;
this.colorSpace = function() {
switch (this.colors) {
case 1:
return "DeviceGray";

case 3:
return "DeviceRGB";
}
}.call(this);
Uint8Array != Array && (this.imgData = new Uint8Array(this.imgData));
return;

default:
this.pos += e;
}
this.pos += 4;
if (this.pos > this.data.length) throw new Error(r.getError(6017));
}
};
s.prototype = {
constructor: s,
read: function(t) {
var e, i;
i = [];
for (e = 0; 0 <= t ? e < t : e > t; 0 <= t ? ++e : --e) i.push(this.data[this.pos++]);
return i;
},
readUInt32: function() {
return this.data[this.pos++] << 24 | this.data[this.pos++] << 16 | this.data[this.pos++] << 8 | this.data[this.pos++];
},
readUInt16: function() {
return this.data[this.pos++] << 8 | this.data[this.pos++];
},
decodePixels: function(t) {
var e, i, s, o, a, c, l, u, h, f, _, d, p, m, y, v, g, b, C, x, A, S, w;
null == t && (t = this.imgData);
if (0 === t.length) return new Uint8Array(0);
t = new n.Inflate(t, {
index: 0,
verify: !1
}).decompress();
v = (d = this.pixelBitlength / 8) * this.width;
p = new Uint8Array(v * this.height);
c = t.length;
y = 0;
m = 0;
i = 0;
for (;m < c; ) {
switch (t[m++]) {
case 0:
for (o = C = 0; C < v; o = C += 1) p[i++] = t[m++];
break;

case 1:
for (o = x = 0; x < v; o = x += 1) {
e = t[m++];
a = o < d ? 0 : p[i - d];
p[i++] = (e + a) % 256;
}
break;

case 2:
for (o = A = 0; A < v; o = A += 1) {
e = t[m++];
s = (o - o % d) / d;
g = y && p[(y - 1) * v + s * d + o % d];
p[i++] = (g + e) % 256;
}
break;

case 3:
for (o = S = 0; S < v; o = S += 1) {
e = t[m++];
s = (o - o % d) / d;
a = o < d ? 0 : p[i - d];
g = y && p[(y - 1) * v + s * d + o % d];
p[i++] = (e + Math.floor((a + g) / 2)) % 256;
}
break;

case 4:
for (o = w = 0; w < v; o = w += 1) {
e = t[m++];
s = (o - o % d) / d;
a = o < d ? 0 : p[i - d];
if (0 === y) g = b = 0; else {
g = p[(y - 1) * v + s * d + o % d];
b = s && p[(y - 1) * v + (s - 1) * d + o % d];
}
l = a + g - b;
u = Math.abs(l - a);
f = Math.abs(l - g);
_ = Math.abs(l - b);
h = u <= f && u <= _ ? a : f <= _ ? g : b;
p[i++] = (e + h) % 256;
}
break;

default:
throw new Error(r.getError(6018, t[m - 1]));
}
y++;
}
return p;
},
copyToImageData: function(t, e) {
var i, n, r, s, o, a, c, l, u, h, f;
n = this.colors;
u = null;
i = this.hasAlphaChannel;
if (this.palette.length) {
u = null != (f = this._decodedPalette) ? f : this._decodedPalette = this.decodePalette();
n = 4;
i = !0;
}
l = (r = t.data || t).length;
o = u || e;
s = a = 0;
if (1 === n) for (;s < l; ) {
c = u ? 4 * e[s / 4] : a;
h = o[c++];
r[s++] = h;
r[s++] = h;
r[s++] = h;
r[s++] = i ? o[c++] : 255;
a = c;
} else for (;s < l; ) {
c = u ? 4 * e[s / 4] : a;
r[s++] = o[c++];
r[s++] = o[c++];
r[s++] = o[c++];
r[s++] = i ? o[c++] : 255;
a = c;
}
},
decodePalette: function() {
var t, e, i, n, r, s, o, a, c;
i = this.palette;
s = this.transparency.indexed || [];
r = new Uint8Array((s.length || 0) + i.length);
n = 0;
t = 0;
for (e = o = 0, a = i.length; o < a; e = o += 3) {
r[n++] = i[e];
r[n++] = i[e + 1];
r[n++] = i[e + 2];
r[n++] = null != (c = s[t++]) ? c : 255;
}
return r;
},
render: function(t) {
var e, i;
t.width = this.width;
t.height = this.height;
i = (e = t.getContext("2d")).createImageData(this.width, this.height);
this.copyToImageData(i, this.decodePixels());
return e.putImageData(i, 0, 0);
}
};
e.exports = s;
}), {
"../compression/zlib.min": 25,
"../core/CCDebug": 69
} ],
343: [ (function(t, e, i) {
"use strict";
var n = t("../core/assets/CCAsset"), r = t("../core/assets/CCSpriteFrame"), s = cc.Class({
name: "cc.ParticleAsset",
extends: n,
properties: {
spriteFrame: {
default: null,
type: r
}
}
});
cc.ParticleAsset = e.exports = s;
}), {
"../core/assets/CCAsset": 76,
"../core/assets/CCSpriteFrame": 89
} ],
344: [ (function(t, e, i) {
"use strict";
var n = t("../core/platform/CCMacro"), r = t("./CCParticleAsset"), s = t("../core/components/CCRenderComponent"), o = t("../compression/ZipUtils"), a = t("./CCPNGReader"), c = t("./CCTIFFReader"), l = t("../core/utils/texture-util"), u = (t("../core/renderer/render-flow"), 
t("./particle-simulator")), h = (t("../core/assets/material/CCMaterial"), t("../core/utils/blend-func"));
function f(t) {
return t.length > 8 && 137 === t[0] && 80 === t[1] && 78 === t[2] && 71 === t[3] && 13 === t[4] && 10 === t[5] && 26 === t[6] && 10 === t[7] ? n.ImageFormat.PNG : t.length > 2 && (73 === t[0] && 73 === t[1] || 77 === t[0] && 77 === t[1] || 255 === t[0] && 216 === t[1]) ? n.ImageFormat.TIFF : n.ImageFormat.UNKNOWN;
}
var _ = cc.Enum({
GRAVITY: 0,
RADIUS: 1
}), d = cc.Enum({
FREE: 0,
RELATIVE: 1,
GROUPED: 2
}), p = {
preview: {
default: !0,
editorOnly: !0,
notify: !1,
animatable: !1,
tooltip: !1
},
_custom: !1,
custom: {
get: function() {
return this._custom;
},
set: function(t) {
0;
if (this._custom !== t) {
this._custom = t;
this._applyFile();
0;
}
},
animatable: !1,
tooltip: !1
},
_file: {
default: null,
type: r
},
file: {
get: function() {
return this._file;
},
set: function(t, e) {
if (this._file !== t) {
this._file = t;
if (t) {
this._applyFile();
0;
} else this.custom = !0;
}
},
animatable: !1,
type: r,
tooltip: !1
},
_spriteFrame: {
default: null,
type: cc.SpriteFrame
},
spriteFrame: {
get: function() {
return this._spriteFrame;
},
set: function(t, e) {
var i = this._renderSpriteFrame;
if (i !== t) {
this._renderSpriteFrame = t;
t && !t._uuid || (this._spriteFrame = t);
(i && i.getTexture()) !== (t && t.getTexture()) && this._applySpriteFrame(i);
0;
}
},
type: cc.SpriteFrame,
tooltip: !1
},
_texture: {
default: null,
type: cc.Texture2D,
editorOnly: !0
},
texture: {
get: function() {
return this._getTexture();
},
set: function(t) {
t && cc.warnID(6017);
},
type: cc.Texture2D,
tooltip: !1,
readonly: !0,
visible: !1,
animatable: !1
},
particleCount: {
visible: !1,
get: function() {
return this._simulator.particles.length;
},
readonly: !0
},
_stopped: !0,
stopped: {
get: function() {
return this._stopped;
},
animatable: !1,
visible: !1
},
playOnLoad: !0,
autoRemoveOnFinish: {
default: !1,
animatable: !1,
tooltip: !1
},
active: {
get: function() {
return this._simulator.active;
},
visible: !1
},
totalParticles: 150,
duration: -1,
emissionRate: 10,
life: 1,
lifeVar: 0,
_startColor: null,
startColor: {
type: cc.Color,
get: function() {
return this._startColor;
},
set: function(t) {
this._startColor.r = t.r;
this._startColor.g = t.g;
this._startColor.b = t.b;
this._startColor.a = t.a;
}
},
_startColorVar: null,
startColorVar: {
type: cc.Color,
get: function() {
return this._startColorVar;
},
set: function(t) {
this._startColorVar.r = t.r;
this._startColorVar.g = t.g;
this._startColorVar.b = t.b;
this._startColorVar.a = t.a;
}
},
_endColor: null,
endColor: {
type: cc.Color,
get: function() {
return this._endColor;
},
set: function(t) {
this._endColor.r = t.r;
this._endColor.g = t.g;
this._endColor.b = t.b;
this._endColor.a = t.a;
}
},
_endColorVar: null,
endColorVar: {
type: cc.Color,
get: function() {
return this._endColorVar;
},
set: function(t) {
this._endColorVar.r = t.r;
this._endColorVar.g = t.g;
this._endColorVar.b = t.b;
this._endColorVar.a = t.a;
}
},
angle: 90,
angleVar: 20,
startSize: 50,
startSizeVar: 0,
endSize: 0,
endSizeVar: 0,
startSpin: 0,
startSpinVar: 0,
endSpin: 0,
endSpinVar: 0,
sourcePos: cc.Vec2.ZERO,
posVar: cc.Vec2.ZERO,
_positionType: {
default: d.FREE,
formerlySerializedAs: "positionType"
},
positionType: {
type: d,
get: function() {
return this._positionType;
},
set: function(t) {
this._positionType = t;
this._updateMaterial();
}
},
emitterMode: {
default: _.GRAVITY,
type: _
},
gravity: cc.Vec2.ZERO,
speed: 180,
speedVar: 50,
tangentialAccel: 80,
tangentialAccelVar: 0,
radialAccel: 0,
radialAccelVar: 0,
rotationIsDir: !1,
startRadius: 0,
startRadiusVar: 0,
endRadius: 0,
endRadiusVar: 0,
rotatePerS: 0,
rotatePerSVar: 0
}, m = cc.Class({
name: "cc.ParticleSystem",
extends: s,
mixins: [ h ],
editor: !1,
ctor: function() {
this.initProperties();
},
initProperties: function() {
this._previewTimer = null;
this._focused = !1;
this._aspectRatio = 1;
this._simulator = new u(this);
this._startColor = cc.color(255, 255, 255, 255);
this._startColorVar = cc.color(0, 0, 0, 0);
this._endColor = cc.color(255, 255, 255, 0);
this._endColorVar = cc.color(0, 0, 0, 0);
this._renderSpriteFrame = null;
},
properties: p,
statics: {
DURATION_INFINITY: -1,
START_SIZE_EQUAL_TO_END_SIZE: -1,
START_RADIUS_EQUAL_TO_END_RADIUS: -1,
EmitterMode: _,
PositionType: d,
_PNGReader: a,
_TIFFReader: c
},
onFocusInEditor: !1,
onLostFocusInEditor: !1,
_startPreview: !1,
_stopPreview: !1,
_convertTextureToSpriteFrame: !1,
__preload: function() {
this._super();
0;
if (this._custom && this.spriteFrame && !this._renderSpriteFrame) this._applySpriteFrame(this.spriteFrame); else if (this._file) if (this._custom) {
!this._getTexture() && this._applyFile();
} else this._applyFile();
this.playOnLoad && this.resetSystem();
0;
},
onDestroy: function() {
this.autoRemoveOnFinish && (this.autoRemoveOnFinish = !1);
if (this._buffer) {
this._buffer.destroy();
this._buffer = null;
}
this._simulator._uvFilled = 0;
this._super();
},
lateUpdate: function(t) {
this._simulator.finished || this._simulator.step(t);
},
addParticle: function() {},
stopSystem: function() {
this._stopped = !0;
this._simulator.stop();
},
resetSystem: function() {
this._stopped = !1;
this._simulator.reset();
this.markForRender(!0);
},
isFull: function() {
return this.particleCount >= this.totalParticles;
},
setTextureWithRect: function(t, e) {
t instanceof cc.Texture2D && (this.spriteFrame = new cc.SpriteFrame(t, e));
},
_applyFile: function() {
var t = this._file;
if (t) {
var e = this;
cc.loader.load(t.nativeUrl, (function(i, n) {
if (!i && n) {
if (e.isValid) {
e._plistFile = t.nativeUrl;
e._custom || e._initWithDictionary(n);
e._spriteFrame ? !e._renderSpriteFrame && e._spriteFrame && e._applySpriteFrame(e.spriteFrame) : t.spriteFrame ? e.spriteFrame = t.spriteFrame : e._custom && e._initTextureWithDictionary(n);
}
} else cc.errorID(6029);
}));
}
},
_initTextureWithDictionary: function(t) {
var e = cc.path.changeBasename(this._plistFile, t.textureFileName || "");
if (t.textureFileName) l.loadImage(e, (function(e, i) {
if (e) {
t.textureFileName = void 0;
this._initTextureWithDictionary(t);
} else this.spriteFrame = new cc.SpriteFrame(i);
}), this); else if (t.textureImageData) {
var i = t.textureImageData;
if (!(i && i.length > 0)) return !1;
var r = cc.loader.getRes(e);
if (!r) {
var s = o.unzipBase64AsArray(i, 1);
if (!s) {
cc.logID(6030);
return !1;
}
var u = f(s);
if (u !== n.ImageFormat.TIFF && u !== n.ImageFormat.PNG) {
cc.logID(6031);
return !1;
}
var h = document.createElement("canvas");
if (u === n.ImageFormat.PNG) {
new a(s).render(h);
} else c.parseTIFF(s, h);
r = l.cacheImage(e, h);
}
r || cc.logID(6032);
this.spriteFrame = new cc.SpriteFrame(r);
}
return !0;
},
_initWithDictionary: function(t) {
this.totalParticles = parseInt(t.maxParticles || 0);
this.life = parseFloat(t.particleLifespan || 0);
this.lifeVar = parseFloat(t.particleLifespanVariance || 0);
var e = t.emissionRate;
this.emissionRate = e || Math.min(this.totalParticles / this.life, Number.MAX_VALUE);
this.duration = parseFloat(t.duration || 0);
this.srcBlendFactor = parseInt(t.blendFuncSource || n.SRC_ALPHA);
this.dstBlendFactor = parseInt(t.blendFuncDestination || n.ONE_MINUS_SRC_ALPHA);
var i = this._startColor;
i.r = 255 * parseFloat(t.startColorRed || 0);
i.g = 255 * parseFloat(t.startColorGreen || 0);
i.b = 255 * parseFloat(t.startColorBlue || 0);
i.a = 255 * parseFloat(t.startColorAlpha || 0);
var r = this._startColorVar;
r.r = 255 * parseFloat(t.startColorVarianceRed || 0);
r.g = 255 * parseFloat(t.startColorVarianceGreen || 0);
r.b = 255 * parseFloat(t.startColorVarianceBlue || 0);
r.a = 255 * parseFloat(t.startColorVarianceAlpha || 0);
var s = this._endColor;
s.r = 255 * parseFloat(t.finishColorRed || 0);
s.g = 255 * parseFloat(t.finishColorGreen || 0);
s.b = 255 * parseFloat(t.finishColorBlue || 0);
s.a = 255 * parseFloat(t.finishColorAlpha || 0);
var o = this._endColorVar;
o.r = 255 * parseFloat(t.finishColorVarianceRed || 0);
o.g = 255 * parseFloat(t.finishColorVarianceGreen || 0);
o.b = 255 * parseFloat(t.finishColorVarianceBlue || 0);
o.a = 255 * parseFloat(t.finishColorVarianceAlpha || 0);
this.startSize = parseFloat(t.startParticleSize || 0);
this.startSizeVar = parseFloat(t.startParticleSizeVariance || 0);
this.endSize = parseFloat(t.finishParticleSize || 0);
this.endSizeVar = parseFloat(t.finishParticleSizeVariance || 0);
this.positionType = parseFloat(void 0 !== t.positionType ? t.positionType : d.RELATIVE);
this.sourcePos.x = 0;
this.sourcePos.y = 0;
this.posVar.x = parseFloat(t.sourcePositionVariancex || 0);
this.posVar.y = parseFloat(t.sourcePositionVariancey || 0);
this.angle = parseFloat(t.angle || 0);
this.angleVar = parseFloat(t.angleVariance || 0);
this.startSpin = parseFloat(t.rotationStart || 0);
this.startSpinVar = parseFloat(t.rotationStartVariance || 0);
this.endSpin = parseFloat(t.rotationEnd || 0);
this.endSpinVar = parseFloat(t.rotationEndVariance || 0);
this.emitterMode = parseInt(t.emitterType || _.GRAVITY);
if (this.emitterMode === _.GRAVITY) {
this.gravity.x = parseFloat(t.gravityx || 0);
this.gravity.y = parseFloat(t.gravityy || 0);
this.speed = parseFloat(t.speed || 0);
this.speedVar = parseFloat(t.speedVariance || 0);
this.radialAccel = parseFloat(t.radialAcceleration || 0);
this.radialAccelVar = parseFloat(t.radialAccelVariance || 0);
this.tangentialAccel = parseFloat(t.tangentialAcceleration || 0);
this.tangentialAccelVar = parseFloat(t.tangentialAccelVariance || 0);
var a = t.rotationIsDir || "";
if (null !== a) {
a = a.toString().toLowerCase();
this.rotationIsDir = "true" === a || "1" === a;
} else this.rotationIsDir = !1;
} else {
if (this.emitterMode !== _.RADIUS) {
cc.warnID(6009);
return !1;
}
this.startRadius = parseFloat(t.maxRadius || 0);
this.startRadiusVar = parseFloat(t.maxRadiusVariance || 0);
this.endRadius = parseFloat(t.minRadius || 0);
this.endRadiusVar = parseFloat(t.minRadiusVariance || 0);
this.rotatePerS = parseFloat(t.rotatePerSecond || 0);
this.rotatePerSVar = parseFloat(t.rotatePerSecondVariance || 0);
}
this._initTextureWithDictionary(t);
return !0;
},
_validateRender: function() {
var t = this._getTexture();
t && t.loaded ? this._super() : this.disableRender();
},
_onTextureLoaded: function() {
this._simulator.updateUVs(!0);
this._syncAspect();
this._updateMaterial();
this.markForRender(!0);
},
_syncAspect: function() {
var t = this._renderSpriteFrame._rect;
this._aspectRatio = t.width / t.height;
},
_applySpriteFrame: function() {
this._renderSpriteFrame = this._renderSpriteFrame || this._spriteFrame;
this._renderSpriteFrame && (this._renderSpriteFrame.textureLoaded() ? this._onTextureLoaded() : this._renderSpriteFrame.onTextureLoaded(this._onTextureLoaded, this));
},
_getTexture: function() {
return this._renderSpriteFrame && this._renderSpriteFrame.getTexture() || this._texture;
},
_updateMaterial: function() {
var t = this.getMaterial(0);
if (t) {
t.define("CC_USE_MODEL", this._positionType !== d.FREE);
t.setProperty("texture", this._getTexture());
h.prototype._updateMaterial.call(this);
}
},
_finishedSimulation: function() {
0;
this.resetSystem();
this.stopSystem();
this.disableRender();
this.autoRemoveOnFinish && this._stopped && this.node.destroy();
}
});
cc.ParticleSystem = e.exports = m;
}), {
"../compression/ZipUtils": 22,
"../core/assets/material/CCMaterial": 95,
"../core/components/CCRenderComponent": 131,
"../core/platform/CCMacro": 235,
"../core/renderer/render-flow": 263,
"../core/utils/blend-func": 306,
"../core/utils/texture-util": 321,
"./CCPNGReader": 342,
"./CCParticleAsset": 343,
"./CCTIFFReader": 345,
"./particle-simulator": 347,
"fire-url": void 0
} ],
345: [ (function(t, e, i) {
"use strict";
var n = t("../core/CCDebug"), r = {
_littleEndian: !1,
_tiffData: null,
_fileDirectories: [],
getUint8: function(t) {
return this._tiffData[t];
},
getUint16: function(t) {
return this._littleEndian ? this._tiffData[t + 1] << 8 | this._tiffData[t] : this._tiffData[t] << 8 | this._tiffData[t + 1];
},
getUint32: function(t) {
var e = this._tiffData;
return this._littleEndian ? e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t] : e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3];
},
checkLittleEndian: function() {
var t = this.getUint16(0);
if (18761 === t) this.littleEndian = !0; else {
if (19789 !== t) {
console.log(t);
throw TypeError(n.getError(6019));
}
this.littleEndian = !1;
}
return this.littleEndian;
},
hasTowel: function() {
if (42 !== this.getUint16(2)) throw RangeError(n.getError(6020));
return !0;
},
getFieldTypeName: function(t) {
var e = this.fieldTypeNames;
return t in e ? e[t] : null;
},
getFieldTagName: function(t) {
var e = this.fieldTagNames;
if (t in e) return e[t];
cc.logID(6021, t);
return "Tag" + t;
},
getFieldTypeLength: function(t) {
return -1 !== [ "BYTE", "ASCII", "SBYTE", "UNDEFINED" ].indexOf(t) ? 1 : -1 !== [ "SHORT", "SSHORT" ].indexOf(t) ? 2 : -1 !== [ "LONG", "SLONG", "FLOAT" ].indexOf(t) ? 4 : -1 !== [ "RATIONAL", "SRATIONAL", "DOUBLE" ].indexOf(t) ? 8 : null;
},
getFieldValues: function(t, e, i, n) {
var r = [], s = this.getFieldTypeLength(e);
if (s * i <= 4) !1 === this.littleEndian ? r.push(n >>> 8 * (4 - s)) : r.push(n); else for (var o = 0; o < i; o++) {
var a = s * o;
if (s >= 8) if (-1 !== [ "RATIONAL", "SRATIONAL" ].indexOf(e)) {
r.push(this.getUint32(n + a));
r.push(this.getUint32(n + a + 4));
} else cc.logID(8e3); else r.push(this.getBytes(s, n + a));
}
"ASCII" === e && r.forEach((function(t, e, i) {
i[e] = String.fromCharCode(t);
}));
return r;
},
getBytes: function(t, e) {
if (t <= 0) cc.logID(8001); else {
if (t <= 1) return this.getUint8(e);
if (t <= 2) return this.getUint16(e);
if (t <= 3) return this.getUint32(e) >>> 8;
if (t <= 4) return this.getUint32(e);
cc.logID(8002);
}
},
getBits: function(t, e, i) {
i = i || 0;
var n, r, s = e + Math.floor(i / 8), o = i + t, a = 32 - t;
if (o <= 0) cc.logID(6023); else if (o <= 8) {
n = 24 + i;
r = this.getUint8(s);
} else if (o <= 16) {
n = 16 + i;
r = this.getUint16(s);
} else if (o <= 32) {
n = i;
r = this.getUint32(s);
} else cc.logID(6022);
return {
bits: r << n >>> a,
byteOffset: s + Math.floor(o / 8),
bitOffset: o % 8
};
},
parseFileDirectory: function(t) {
for (var e = this.getUint16(t), i = [], n = t + 2, r = 0; r < e; n += 12, r++) {
var s = this.getUint16(n), o = this.getUint16(n + 2), a = this.getUint32(n + 4), c = this.getUint32(n + 8), l = this.getFieldTagName(s), u = this.getFieldTypeName(o), h = this.getFieldValues(l, u, a, c);
i[l] = {
type: u,
values: h
};
}
this._fileDirectories.push(i);
var f = this.getUint32(n);
0 !== f && this.parseFileDirectory(f);
},
clampColorSample: function(t, e) {
var i = Math.pow(2, 8 - e);
return Math.floor(t * i + (i - 1));
},
parseTIFF: function(t, e) {
e = e || document.createElement("canvas");
this._tiffData = t;
this.canvas = e;
this.checkLittleEndian();
if (this.hasTowel()) {
var i = this.getUint32(4);
this._fileDirectories.length = 0;
this.parseFileDirectory(i);
var r = this._fileDirectories[0], s = r.ImageWidth.values[0], o = r.ImageLength.values[0];
this.canvas.width = s;
this.canvas.height = o;
var a = [], c = r.Compression ? r.Compression.values[0] : 1, l = r.SamplesPerPixel.values[0], u = [], h = 0, f = !1;
r.BitsPerSample.values.forEach((function(t, e, i) {
u[e] = {
bitsPerSample: t,
hasBytesPerSample: !1,
bytesPerSample: void 0
};
if (t % 8 == 0) {
u[e].hasBytesPerSample = !0;
u[e].bytesPerSample = t / 8;
}
h += t;
}), this);
if (h % 8 == 0) {
f = !0;
var _ = h / 8;
}
var d = r.StripOffsets.values, p = d.length;
if (r.StripByteCounts) var m = r.StripByteCounts.values; else {
cc.logID(8003);
if (1 !== p) throw Error(n.getError(6024));
m = [ Math.ceil(s * o * h / 8) ];
}
for (var y = 0; y < p; y++) {
var v = d[y];
a[y] = [];
for (var g = m[y], b = 0, C = 0, x = 1, A = !0, S = [], w = 0, T = 0, E = 0; b < g; b += x) switch (c) {
case 1:
var M = 0;
for (S = []; M < l; M++) {
if (!u[M].hasBytesPerSample) {
var B = this.getBits(u[M].bitsPerSample, v + b, C);
S.push(B.bits);
b = B.byteOffset - v;
C = B.bitOffset;
throw RangeError(n.getError(6025));
}
var D = u[M].bytesPerSample * M;
S.push(this.getBytes(u[M].bytesPerSample, v + b + D));
}
a[y].push(S);
if (!f) {
x = 0;
throw RangeError(n.getError(6026));
}
x = _;
break;

case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
break;

case 32773:
if (A) {
A = !1;
var R = 1, I = 1, P = this.getInt8(v + b);
P >= 0 && P <= 127 ? R = P + 1 : P >= -127 && P <= -1 ? I = 1 - P : A = !0;
} else {
var O = this.getUint8(v + b);
for (M = 0; M < I; M++) {
if (!u[T].hasBytesPerSample) throw RangeError(n.getError(6025));
E = E << 8 * w | O;
if (++w === u[T].bytesPerSample) {
S.push(E);
E = w = 0;
T++;
}
if (T === l) {
a[y].push(S);
S = [];
T = 0;
}
}
0 === --R && (A = !0);
}
x = 1;
}
}
if (e.getContext) {
var L = this.canvas.getContext("2d");
L.fillStyle = "rgba(255, 255, 255, 0)";
var V = r.RowsPerStrip ? r.RowsPerStrip.values[0] : o, N = a.length, F = o % V, z = 0 === F ? V : F, k = V, G = 0, U = r.PhotometricInterpretation.values[0], j = [], H = 0;
r.ExtraSamples && (H = (j = r.ExtraSamples.values).length);
if (r.ColorMap) var W = r.ColorMap.values, q = Math.pow(2, u[0].bitsPerSample);
for (y = 0; y < N; y++) {
y + 1 === N && (k = z);
for (var X = a[y].length, Y = G * y, J = 0, Z = 0; Z < X; J++) for (var K = 0; K < s; K++, 
Z++) {
var Q = a[y][Z], $ = 0, tt = 0, et = 0, it = 1;
if (H > 0) for (var nt = 0; nt < H; nt++) if (1 === j[nt] || 2 === j[nt]) {
it = Q[3 + nt] / 256;
break;
}
switch (U) {
case 0:
if (u[0].hasBytesPerSample) var rt = Math.pow(16, 2 * u[0].bytesPerSample);
Q.forEach((function(t, e, i) {
i[e] = rt - t;
}));

case 1:
$ = tt = et = this.clampColorSample(Q[0], u[0].bitsPerSample);
break;

case 2:
$ = this.clampColorSample(Q[0], u[0].bitsPerSample);
tt = this.clampColorSample(Q[1], u[1].bitsPerSample);
et = this.clampColorSample(Q[2], u[2].bitsPerSample);
break;

case 3:
if (void 0 === W) throw Error(n.getError(6027));
var st = Q[0];
$ = this.clampColorSample(W[st], 16);
tt = this.clampColorSample(W[q + st], 16);
et = this.clampColorSample(W[2 * q + st], 16);
break;

default:
throw RangeError(n.getError(6028, U));
}
L.fillStyle = "rgba(" + $ + ", " + tt + ", " + et + ", " + it + ")";
L.fillRect(K, Y + J, 1, 1);
}
G = k;
}
}
return this.canvas;
}
},
fieldTagNames: {
315: "Artist",
258: "BitsPerSample",
265: "CellLength",
264: "CellWidth",
320: "ColorMap",
259: "Compression",
33432: "Copyright",
306: "DateTime",
338: "ExtraSamples",
266: "FillOrder",
289: "FreeByteCounts",
288: "FreeOffsets",
291: "GrayResponseCurve",
290: "GrayResponseUnit",
316: "HostComputer",
270: "ImageDescription",
257: "ImageLength",
256: "ImageWidth",
271: "Make",
281: "MaxSampleValue",
280: "MinSampleValue",
272: "Model",
254: "NewSubfileType",
274: "Orientation",
262: "PhotometricInterpretation",
284: "PlanarConfiguration",
296: "ResolutionUnit",
278: "RowsPerStrip",
277: "SamplesPerPixel",
305: "Software",
279: "StripByteCounts",
273: "StripOffsets",
255: "SubfileType",
263: "Threshholding",
282: "XResolution",
283: "YResolution",
326: "BadFaxLines",
327: "CleanFaxData",
343: "ClipPath",
328: "ConsecutiveBadFaxLines",
433: "Decode",
434: "DefaultImageColor",
269: "DocumentName",
336: "DotRange",
321: "HalftoneHints",
346: "Indexed",
347: "JPEGTables",
285: "PageName",
297: "PageNumber",
317: "Predictor",
319: "PrimaryChromaticities",
532: "ReferenceBlackWhite",
339: "SampleFormat",
559: "StripRowCounts",
330: "SubIFDs",
292: "T4Options",
293: "T6Options",
325: "TileByteCounts",
323: "TileLength",
324: "TileOffsets",
322: "TileWidth",
301: "TransferFunction",
318: "WhitePoint",
344: "XClipPathUnits",
286: "XPosition",
529: "YCbCrCoefficients",
531: "YCbCrPositioning",
530: "YCbCrSubSampling",
345: "YClipPathUnits",
287: "YPosition",
37378: "ApertureValue",
40961: "ColorSpace",
36868: "DateTimeDigitized",
36867: "DateTimeOriginal",
34665: "Exif IFD",
36864: "ExifVersion",
33434: "ExposureTime",
41728: "FileSource",
37385: "Flash",
40960: "FlashpixVersion",
33437: "FNumber",
42016: "ImageUniqueID",
37384: "LightSource",
37500: "MakerNote",
37377: "ShutterSpeedValue",
37510: "UserComment",
33723: "IPTC",
34675: "ICC Profile",
700: "XMP",
42112: "GDAL_METADATA",
42113: "GDAL_NODATA",
34377: "Photoshop"
},
fieldTypeNames: {
1: "BYTE",
2: "ASCII",
3: "SHORT",
4: "LONG",
5: "RATIONAL",
6: "SBYTE",
7: "UNDEFINED",
8: "SSHORT",
9: "SLONG",
10: "SRATIONAL",
11: "FLOAT",
12: "DOUBLE"
}
};
e.exports = r;
}), {
"../core/CCDebug": 69
} ],
346: [ (function(t, e, i) {
"use strict";
t("./CCParticleAsset");
t("./CCParticleSystem");
t("./particle-simulator");
t("./particle-system-assembler");
}), {
"./CCParticleAsset": 343,
"./CCParticleSystem": 344,
"./particle-simulator": 347,
"./particle-system-assembler": 348
} ],
347: [ (function(t, e, i) {
"use strict";
var n = t("../core/utils/affine-transform"), r = t("../core/platform/js"), s = t("../core/utils/misc"), o = cc.v2(0, 0), a = n.create(), c = cc.v2(), l = cc.v2(), u = cc.v2(), h = cc.v2(), f = function() {
this.pos = cc.v2(0, 0);
this.startPos = cc.v2(0, 0);
this.color = cc.color(0, 0, 0, 255);
this.deltaColor = {
r: 0,
g: 0,
b: 0,
a: 255
};
this.size = 0;
this.deltaSize = 0;
this.rotation = 0;
this.deltaRotation = 0;
this.timeToLive = 0;
this.drawPos = cc.v2(0, 0);
this.aspectRatio = 1;
this.dir = cc.v2(0, 0);
this.radialAccel = 0;
this.tangentialAccel = 0;
this.angle = 0;
this.degreesPerSecond = 0;
this.radius = 0;
this.deltaRadius = 0;
}, _ = new r.Pool(function(t) {
t.pos.set(o);
t.startPos.set(o);
t.color._val = 4278190080;
t.deltaColor.r = t.deltaColor.g = t.deltaColor.b = 0;
t.deltaColor.a = 255;
t.size = 0;
t.deltaSize = 0;
t.rotation = 0;
t.deltaRotation = 0;
t.timeToLive = 0;
t.drawPos.set(o);
t.aspectRatio = 1;
t.dir.set(o);
t.radialAccel = 0;
t.tangentialAccel = 0;
t.angle = 0;
t.degreesPerSecond = 0;
t.radius = 0;
t.deltaRadius = 0;
}, 1024);
_.get = function() {
return this._get() || new f();
};
var d = function(t) {
this.sys = t;
this.particles = [];
this.active = !1;
this.readyToPlay = !0;
this.finished = !1;
this.elapsed = 0;
this.emitCounter = 0;
this._uvFilled = 0;
};
d.prototype.stop = function() {
this.active = !1;
this.readyToPlay = !1;
this.elapsed = this.sys.duration;
this.emitCounter = 0;
};
d.prototype.reset = function() {
this.active = !0;
this.readyToPlay = !0;
this.elapsed = 0;
this.emitCounter = 0;
this.finished = !1;
for (var t = this.particles, e = 0; e < t.length; ++e) _.put(t[e]);
t.length = 0;
};
d.prototype.emitParticle = function(t) {
var e = this.sys, i = s.clampf, n = _.get();
this.particles.push(n);
n.timeToLive = e.life + e.lifeVar * (Math.random() - .5) * 2;
var r, o, a, c, l = n.timeToLive = Math.max(0, n.timeToLive);
n.pos.x = e.sourcePos.x + e.posVar.x * (Math.random() - .5) * 2;
n.pos.y = e.sourcePos.y + e.posVar.y * (Math.random() - .5) * 2;
var u = e._startColor, h = e._startColorVar, f = e._endColor, d = e._endColorVar;
n.color.r = r = i(u.r + h.r * (Math.random() - .5) * 2, 0, 255);
n.color.g = o = i(u.g + h.g * (Math.random() - .5) * 2, 0, 255);
n.color.b = a = i(u.b + h.b * (Math.random() - .5) * 2, 0, 255);
n.color.a = c = i(u.a + h.a * (Math.random() - .5) * 2, 0, 255);
n.deltaColor.r = (i(f.r + d.r * (Math.random() - .5) * 2, 0, 255) - r) / l;
n.deltaColor.g = (i(f.g + d.g * (Math.random() - .5) * 2, 0, 255) - o) / l;
n.deltaColor.b = (i(f.b + d.b * (Math.random() - .5) * 2, 0, 255) - a) / l;
n.deltaColor.a = (i(f.a + d.a * (Math.random() - .5) * 2, 0, 255) - c) / l;
var m = e.startSize + e.startSizeVar * (Math.random() - .5) * 2;
m = Math.max(0, m);
n.size = m;
if (e.endSize === cc.ParticleSystem.START_SIZE_EQUAL_TO_END_SIZE) n.deltaSize = 0; else {
var y = e.endSize + e.endSizeVar * (Math.random() - .5) * 2;
y = Math.max(0, y);
n.deltaSize = (y - m) / l;
}
var v = e.startSpin + e.startSpinVar * (Math.random() - .5) * 2, g = e.endSpin + e.endSpinVar * (Math.random() - .5) * 2;
n.rotation = v;
n.deltaRotation = (g - v) / l;
n.startPos.x = t.x;
n.startPos.y = t.y;
n.aspectRatio = e._aspectRatio || 1;
var b = p(e.node), C = e.positionType === cc.ParticleSystem.PositionType.FREE ? e.angle + b : e.angle, x = s.degreesToRadians(C + e.angleVar * (Math.random() - .5) * 2);
if (e.emitterMode === cc.ParticleSystem.EmitterMode.GRAVITY) {
var A = e.speed + e.speedVar * (Math.random() - .5) * 2;
n.dir.x = Math.cos(x);
n.dir.y = Math.sin(x);
n.dir.mulSelf(A);
n.radialAccel = e.radialAccel + e.radialAccelVar * (Math.random() - .5) * 2;
n.tangentialAccel = e.tangentialAccel + e.tangentialAccelVar * (Math.random() - .5) * 2;
e.rotationIsDir && (n.rotation = -s.radiansToDegrees(Math.atan2(n.dir.y, n.dir.x)));
} else {
var S = e.startRadius + e.startRadiusVar * (Math.random() - .5) * 2, w = e.endRadius + e.endRadiusVar * (Math.random() - .5) * 2;
n.radius = S;
n.deltaRadius = e.endRadius === cc.ParticleSystem.START_RADIUS_EQUAL_TO_END_RADIUS ? 0 : (w - S) / l;
n.angle = x;
n.degreesPerSecond = s.degreesToRadians(e.rotatePerS + e.rotatePerSVar * (Math.random() - .5) * 2);
}
};
function p(t) {
for (var e = 0, i = t; i; ) {
e += i.angle;
i = i.parent;
}
return e;
}
d.prototype.updateUVs = function(t) {
var e = this.sys._assembler;
if (e) {
var i = e.getBuffer();
if (i && this.sys._renderSpriteFrame) {
for (var n = 4 * e._vfmt._bytes / 4, r = i._vData, s = this.sys._renderSpriteFrame.uv, o = t ? 0 : this._uvFilled, a = this.particles.length, c = o; c < a; c++) {
var l = c * n;
r[l + 2] = s[0];
r[l + 3] = s[1];
r[l + 7] = s[2];
r[l + 8] = s[3];
r[l + 12] = s[4];
r[l + 13] = s[5];
r[l + 17] = s[6];
r[l + 18] = s[7];
}
this._uvFilled = a;
}
}
};
d.prototype.updateParticleBuffer = function(t, e, i, n) {
var r = i._vData, o = i._uintVData, a = e.x, c = e.y, l = t.size, u = l, h = t.aspectRatio;
h > 1 ? u = l / h : l = u * h;
var f = l / 2, _ = u / 2;
if (t.rotation) {
var d = -f, p = -_, m = f, y = _, v = -s.degreesToRadians(t.rotation), g = Math.cos(v), b = Math.sin(v);
r[n] = d * g - p * b + a;
r[n + 1] = d * b + p * g + c;
r[n + 5] = m * g - p * b + a;
r[n + 6] = m * b + p * g + c;
r[n + 10] = d * g - y * b + a;
r[n + 11] = d * b + y * g + c;
r[n + 15] = m * g - y * b + a;
r[n + 16] = m * b + y * g + c;
} else {
r[n] = a - f;
r[n + 1] = c - _;
r[n + 5] = a + f;
r[n + 6] = c - _;
r[n + 10] = a - f;
r[n + 11] = c + _;
r[n + 15] = a + f;
r[n + 16] = c + _;
}
o[n + 4] = t.color._val;
o[n + 9] = t.color._val;
o[n + 14] = t.color._val;
o[n + 19] = t.color._val;
};
d.prototype.step = function(t) {
t = t > cc.director._maxParticleDeltaTime ? cc.director._maxParticleDeltaTime : t;
var e = this.sys, i = e.node, r = this.particles, f = 4 * this.sys._assembler._vfmt._bytes / 4;
i._updateWorldMatrix();
a = n.identity();
if (e.positionType === cc.ParticleSystem.PositionType.FREE) {
var d = i._worldMatrix.m;
a.tx = d[12];
a.ty = d[13];
n.transformVec2(c, o, a);
} else if (e.positionType === cc.ParticleSystem.PositionType.RELATIVE) {
var p = s.degreesToRadians(-i.angle), m = Math.cos(p), y = Math.sin(p);
a = n.create(m, -y, y, m, 0, 0);
c.x = i.x;
c.y = i.y;
}
n.invert(a, a);
var v = a;
if (this.active && e.emissionRate) {
var g = 1 / e.emissionRate;
r.length < e.totalParticles && (this.emitCounter += t);
for (;r.length < e.totalParticles && this.emitCounter > g; ) {
this.emitParticle(c);
this.emitCounter -= g;
}
this.elapsed += t;
-1 !== e.duration && e.duration < this.elapsed && e.stopSystem();
}
var b = e._assembler.getBuffer(), C = r.length;
b.reset();
b.request(4 * C, 6 * C);
C > this._uvFilled && this.updateUVs();
for (var x = 0; x < r.length; ) {
l.x = l.y = u.x = u.y = h.x = h.y = 0;
var A = r[x];
A.timeToLive -= t;
if (A.timeToLive > 0) {
if (e.emitterMode === cc.ParticleSystem.EmitterMode.GRAVITY) {
var S = h, w = l, T = u;
if (A.pos.x || A.pos.y) {
w.set(A.pos);
w.normalizeSelf();
}
T.set(w);
w.mulSelf(A.radialAccel);
var E = T.x;
T.x = -T.y;
T.y = E;
T.mulSelf(A.tangentialAccel);
S.set(w);
S.addSelf(T);
S.addSelf(e.gravity);
S.mulSelf(t);
A.dir.addSelf(S);
S.set(A.dir);
S.mulSelf(t);
A.pos.addSelf(S);
} else {
A.angle += A.degreesPerSecond * t;
A.radius += A.deltaRadius * t;
A.pos.x = -Math.cos(A.angle) * A.radius;
A.pos.y = -Math.sin(A.angle) * A.radius;
}
A.color.r += A.deltaColor.r * t;
A.color.g += A.deltaColor.g * t;
A.color.b += A.deltaColor.b * t;
A.color.a += A.deltaColor.a * t;
A.size += A.deltaSize * t;
A.size < 0 && (A.size = 0);
A.rotation += A.deltaRotation * t;
var M = l, B = u;
if (e.positionType === cc.ParticleSystem.PositionType.FREE) {
B.set(A.startPos);
B.negSelf();
M.set(A.pos);
M.subSelf(B);
} else if (e.positionType === cc.ParticleSystem.PositionType.RELATIVE) {
var D = h;
n.transformVec2(B, c, v);
n.transformVec2(D, A.startPos, v);
B.subSelf(D);
M.set(A.pos);
M.subSelf(B);
} else M.set(A.pos);
var R = f * x;
this.updateParticleBuffer(A, M, b, R);
++x;
} else {
var I = r[x];
x !== r.length - 1 && (r[x] = r[r.length - 1]);
_.put(I);
r.length--;
}
}
if (r.length > 0) {
b.uploadData();
e._assembler._ia._count = 6 * r.length;
} else if (!this.active && !this.readyToPlay) {
this.finished = !0;
e._finishedSimulation();
}
};
e.exports = d;
}), {
"../core/platform/js": 250,
"../core/utils/affine-transform": 303,
"../core/utils/misc": 313
} ],
348: [ (function(t, e, i) {
"use strict";
var n = s(t("../core/renderer/assembler")), r = s(t("../renderer/core/input-assembler"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
function o(t) {
return function() {
var e, i = u(t);
if (l()) {
var n = u(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return a(this, e);
};
}
function a(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? c(t) : e;
}
function c(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function l() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function u(t) {
return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function h(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var f = t("./CCParticleSystem"), _ = t("../core/renderer/"), d = t("../core/renderer/webgl/quad-buffer"), p = t("../core/renderer/webgl/vertex-format").vfmtPosUvColor, m = (function(t) {
h(e, t);
o(e);
function e(e) {
var i;
(i = t.call(this, e) || this)._buffer = null;
i._ia = null;
i._vfmt = p;
return i;
}
var i = e.prototype;
i.getBuffer = function() {
if (!this._buffer) {
this._buffer = new d(_._handle, p);
this._ia = new r.default();
this._ia._vertexBuffer = this._buffer._vb;
this._ia._indexBuffer = this._buffer._ib;
this._ia._start = 0;
this._ia._count = 0;
}
return this._buffer;
};
i.fillBuffers = function(t, e) {
if (this._ia) {
e.node = t.node;
e.material = t._materials[0];
e._flushIA(this._ia);
}
};
return e;
})(n.default);
n.default.register(f, m);
e.exports = m;
}), {
"../core/renderer/": 262,
"../core/renderer/assembler": 259,
"../core/renderer/webgl/quad-buffer": 299,
"../core/renderer/webgl/vertex-format": 301,
"../renderer/core/input-assembler": 350,
"./CCParticleSystem": 344
} ],
349: [ (function(t, e, i) {
"use strict";
var n, r, s, o = 512, a = 513, c = 514, l = 515, u = 516, h = 517, f = 518, _ = 519, d = 32774, p = 32778, m = 32779, y = 0, v = 1, g = 768, b = 769, C = 774, x = 775, A = 770, S = 771, w = 772, T = 773, E = 32769, M = 32770, B = 32771, D = 32772, R = 776, I = 7680, P = 7681, O = 7682, L = 34055, V = 7683, N = 34056, F = 5386, z = 0, k = 1028, G = 1029;
(function(t) {
t[t.COMPRESSED_RGB_S3TC_DXT1_EXT = 33776] = "COMPRESSED_RGB_S3TC_DXT1_EXT";
t[t.COMPRESSED_RGBA_S3TC_DXT1_EXT = 33777] = "COMPRESSED_RGBA_S3TC_DXT1_EXT";
t[t.COMPRESSED_RGBA_S3TC_DXT3_EXT = 33778] = "COMPRESSED_RGBA_S3TC_DXT3_EXT";
t[t.COMPRESSED_RGBA_S3TC_DXT5_EXT = 33779] = "COMPRESSED_RGBA_S3TC_DXT5_EXT";
t[t.COMPRESSED_SRGB_S3TC_DXT1_EXT = 35916] = "COMPRESSED_SRGB_S3TC_DXT1_EXT";
t[t.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 35917] = "COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT";
t[t.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 35918] = "COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT";
t[t.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 35919] = "COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT";
t[t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 35840] = "COMPRESSED_RGB_PVRTC_4BPPV1_IMG";
t[t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 35841] = "COMPRESSED_RGB_PVRTC_2BPPV1_IMG";
t[t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 35842] = "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG";
t[t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 35843] = "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG";
t[t.COMPRESSED_RGB_ETC1_WEBGL = 36196] = "COMPRESSED_RGB_ETC1_WEBGL";
})(n || (n = {}));
(function(t) {
t[t.UNKNOWN = 0] = "UNKNOWN";
t[t.BUFFER = 1] = "BUFFER";
t[t.TEXTURE = 2] = "TEXTURE";
t[t.TEXTURE_VIEW = 3] = "TEXTURE_VIEW";
t[t.RENDER_PASS = 4] = "RENDER_PASS";
t[t.FRAMEBUFFER = 5] = "FRAMEBUFFER";
t[t.SAMPLER = 6] = "SAMPLER";
t[t.SHADER = 7] = "SHADER";
t[t.PIPELINE_LAYOUT = 8] = "PIPELINE_LAYOUT";
t[t.PIPELINE_STATE = 9] = "PIPELINE_STATE";
t[t.BINDING_LAYOUT = 10] = "BINDING_LAYOUT";
t[t.INPUT_ASSEMBLER = 11] = "INPUT_ASSEMBLER";
t[t.COMMAND_ALLOCATOR = 12] = "COMMAND_ALLOCATOR";
t[t.COMMAND_BUFFER = 13] = "COMMAND_BUFFER";
t[t.QUEUE = 14] = "QUEUE";
t[t.WINDOW = 15] = "WINDOW";
})(r || (r = {}));
(function(t) {
t[t.UNREADY = 0] = "UNREADY";
t[t.FAILED = 1] = "FAILED";
t[t.SUCCESS = 2] = "SUCCESS";
})(s || (s = {}));
var U, j, H, W, q, X, Y, J, Z, K, Q, $, tt, et, it, nt, rt, st, ot, at, ct, lt, ut, ht, ft, _t, dt, pt, mt, yt, vt, gt, bt, Ct, xt;
(function() {
function t(t) {
this._gfxType = r.UNKNOWN;
this._status = s.UNREADY;
this._gfxType = t;
}
Object.defineProperty(t.prototype, "gfxType", {
get: function() {
return this._gfxType;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "status", {
get: function() {
return this._status;
},
enumerable: !0,
configurable: !0
});
})();
(function(t) {
t.ATTR_POSITION = "a_position";
t.ATTR_NORMAL = "a_normal";
t.ATTR_TANGENT = "a_tangent";
t.ATTR_BITANGENT = "a_bitangent";
t.ATTR_WEIGHTS = "a_weights";
t.ATTR_JOINTS = "a_joints";
t.ATTR_COLOR = "a_color";
t.ATTR_COLOR1 = "a_color1";
t.ATTR_COLOR2 = "a_color2";
t.ATTR_TEX_COORD = "a_texCoord";
t.ATTR_TEX_COORD1 = "a_texCoord1";
t.ATTR_TEX_COORD2 = "a_texCoord2";
t.ATTR_TEX_COORD3 = "a_texCoord3";
t.ATTR_TEX_COORD4 = "a_texCoord4";
t.ATTR_TEX_COORD5 = "a_texCoord5";
t.ATTR_TEX_COORD6 = "a_texCoord6";
t.ATTR_TEX_COORD7 = "a_texCoord7";
t.ATTR_TEX_COORD8 = "a_texCoord8";
})(U || (U = {}));
(function(t) {
t[t.UNKNOWN = 0] = "UNKNOWN";
t[t.BOOL = 1] = "BOOL";
t[t.BOOL2 = 2] = "BOOL2";
t[t.BOOL3 = 3] = "BOOL3";
t[t.BOOL4 = 4] = "BOOL4";
t[t.INT = 5] = "INT";
t[t.INT2 = 6] = "INT2";
t[t.INT3 = 7] = "INT3";
t[t.INT4 = 8] = "INT4";
t[t.UINT = 9] = "UINT";
t[t.UINT2 = 10] = "UINT2";
t[t.UINT3 = 11] = "UINT3";
t[t.UINT4 = 12] = "UINT4";
t[t.FLOAT = 13] = "FLOAT";
t[t.FLOAT2 = 14] = "FLOAT2";
t[t.FLOAT3 = 15] = "FLOAT3";
t[t.FLOAT4 = 16] = "FLOAT4";
t[t.COLOR4 = 17] = "COLOR4";
t[t.MAT2 = 18] = "MAT2";
t[t.MAT2X3 = 19] = "MAT2X3";
t[t.MAT2X4 = 20] = "MAT2X4";
t[t.MAT3X2 = 21] = "MAT3X2";
t[t.MAT3 = 22] = "MAT3";
t[t.MAT3X4 = 23] = "MAT3X4";
t[t.MAT4X2 = 24] = "MAT4X2";
t[t.MAT4X3 = 25] = "MAT4X3";
t[t.MAT4 = 26] = "MAT4";
t[t.SAMPLER1D = 27] = "SAMPLER1D";
t[t.SAMPLER1D_ARRAY = 28] = "SAMPLER1D_ARRAY";
t[t.SAMPLER2D = 29] = "SAMPLER2D";
t[t.SAMPLER2D_ARRAY = 30] = "SAMPLER2D_ARRAY";
t[t.SAMPLER3D = 31] = "SAMPLER3D";
t[t.SAMPLER_CUBE = 32] = "SAMPLER_CUBE";
t[t.COUNT = 33] = "COUNT";
})(j || (j = {}));
(function(t) {
t[t.UNKNOWN = 0] = "UNKNOWN";
t[t.A8 = 1] = "A8";
t[t.L8 = 2] = "L8";
t[t.LA8 = 3] = "LA8";
t[t.R8 = 4] = "R8";
t[t.R8SN = 5] = "R8SN";
t[t.R8UI = 6] = "R8UI";
t[t.R8I = 7] = "R8I";
t[t.R16F = 8] = "R16F";
t[t.R16UI = 9] = "R16UI";
t[t.R16I = 10] = "R16I";
t[t.R32F = 11] = "R32F";
t[t.R32UI = 12] = "R32UI";
t[t.R32I = 13] = "R32I";
t[t.RG8 = 14] = "RG8";
t[t.RG8SN = 15] = "RG8SN";
t[t.RG8UI = 16] = "RG8UI";
t[t.RG8I = 17] = "RG8I";
t[t.RG16F = 18] = "RG16F";
t[t.RG16UI = 19] = "RG16UI";
t[t.RG16I = 20] = "RG16I";
t[t.RG32F = 21] = "RG32F";
t[t.RG32UI = 22] = "RG32UI";
t[t.RG32I = 23] = "RG32I";
t[t.RGB8 = 24] = "RGB8";
t[t.SRGB8 = 25] = "SRGB8";
t[t.RGB8SN = 26] = "RGB8SN";
t[t.RGB8UI = 27] = "RGB8UI";
t[t.RGB8I = 28] = "RGB8I";
t[t.RGB16F = 29] = "RGB16F";
t[t.RGB16UI = 30] = "RGB16UI";
t[t.RGB16I = 31] = "RGB16I";
t[t.RGB32F = 32] = "RGB32F";
t[t.RGB32UI = 33] = "RGB32UI";
t[t.RGB32I = 34] = "RGB32I";
t[t.RGBA8 = 35] = "RGBA8";
t[t.SRGB8_A8 = 36] = "SRGB8_A8";
t[t.RGBA8SN = 37] = "RGBA8SN";
t[t.RGBA8UI = 38] = "RGBA8UI";
t[t.RGBA8I = 39] = "RGBA8I";
t[t.RGBA16F = 40] = "RGBA16F";
t[t.RGBA16UI = 41] = "RGBA16UI";
t[t.RGBA16I = 42] = "RGBA16I";
t[t.RGBA32F = 43] = "RGBA32F";
t[t.RGBA32UI = 44] = "RGBA32UI";
t[t.RGBA32I = 45] = "RGBA32I";
t[t.R5G6B5 = 46] = "R5G6B5";
t[t.R11G11B10F = 47] = "R11G11B10F";
t[t.RGB5A1 = 48] = "RGB5A1";
t[t.RGBA4 = 49] = "RGBA4";
t[t.RGB10A2 = 50] = "RGB10A2";
t[t.RGB10A2UI = 51] = "RGB10A2UI";
t[t.RGB9E5 = 52] = "RGB9E5";
t[t.D16 = 53] = "D16";
t[t.D16S8 = 54] = "D16S8";
t[t.D24 = 55] = "D24";
t[t.D24S8 = 56] = "D24S8";
t[t.D32F = 57] = "D32F";
t[t.D32F_S8 = 58] = "D32F_S8";
t[t.BC1 = 59] = "BC1";
t[t.BC1_ALPHA = 60] = "BC1_ALPHA";
t[t.BC1_SRGB = 61] = "BC1_SRGB";
t[t.BC1_SRGB_ALPHA = 62] = "BC1_SRGB_ALPHA";
t[t.BC2 = 63] = "BC2";
t[t.BC2_SRGB = 64] = "BC2_SRGB";
t[t.BC3 = 65] = "BC3";
t[t.BC3_SRGB = 66] = "BC3_SRGB";
t[t.BC4 = 67] = "BC4";
t[t.BC4_SNORM = 68] = "BC4_SNORM";
t[t.BC5 = 69] = "BC5";
t[t.BC5_SNORM = 70] = "BC5_SNORM";
t[t.BC6H_UF16 = 71] = "BC6H_UF16";
t[t.BC6H_SF16 = 72] = "BC6H_SF16";
t[t.BC7 = 73] = "BC7";
t[t.BC7_SRGB = 74] = "BC7_SRGB";
t[t.ETC_RGB8 = 75] = "ETC_RGB8";
t[t.ETC2_RGB8 = 76] = "ETC2_RGB8";
t[t.ETC2_SRGB8 = 77] = "ETC2_SRGB8";
t[t.ETC2_RGB8_A1 = 78] = "ETC2_RGB8_A1";
t[t.ETC2_SRGB8_A1 = 79] = "ETC2_SRGB8_A1";
t[t.ETC2_RGBA8 = 80] = "ETC2_RGBA8";
t[t.ETC2_SRGB8_A8 = 81] = "ETC2_SRGB8_A8";
t[t.EAC_R11 = 82] = "EAC_R11";
t[t.EAC_R11SN = 83] = "EAC_R11SN";
t[t.EAC_RG11 = 84] = "EAC_RG11";
t[t.EAC_RG11SN = 85] = "EAC_RG11SN";
t[t.PVRTC_RGB2 = 86] = "PVRTC_RGB2";
t[t.PVRTC_RGBA2 = 87] = "PVRTC_RGBA2";
t[t.PVRTC_RGB4 = 88] = "PVRTC_RGB4";
t[t.PVRTC_RGBA4 = 89] = "PVRTC_RGBA4";
t[t.PVRTC2_2BPP = 90] = "PVRTC2_2BPP";
t[t.PVRTC2_4BPP = 91] = "PVRTC2_4BPP";
})(H || (H = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.TRANSFER_SRC = 1] = "TRANSFER_SRC";
t[t.TRANSFER_DST = 2] = "TRANSFER_DST";
t[t.INDEX = 4] = "INDEX";
t[t.VERTEX = 8] = "VERTEX";
t[t.UNIFORM = 16] = "UNIFORM";
t[t.STORAGE = 32] = "STORAGE";
t[t.INDIRECT = 64] = "INDIRECT";
})(W || (W = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.DEVICE = 1] = "DEVICE";
t[t.HOST = 2] = "HOST";
})(q || (q = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.READ = 1] = "READ";
t[t.WRITE = 2] = "WRITE";
})(X || (X = {}));
(function(t) {
t[t.POINT_LIST = 0] = "POINT_LIST";
t[t.LINE_LIST = 1] = "LINE_LIST";
t[t.LINE_STRIP = 2] = "LINE_STRIP";
t[t.LINE_LOOP = 3] = "LINE_LOOP";
t[t.LINE_LIST_ADJACENCY = 4] = "LINE_LIST_ADJACENCY";
t[t.LINE_STRIP_ADJACENCY = 5] = "LINE_STRIP_ADJACENCY";
t[t.ISO_LINE_LIST = 6] = "ISO_LINE_LIST";
t[t.TRIANGLE_LIST = 7] = "TRIANGLE_LIST";
t[t.TRIANGLE_STRIP = 8] = "TRIANGLE_STRIP";
t[t.TRIANGLE_FAN = 9] = "TRIANGLE_FAN";
t[t.TRIANGLE_LIST_ADJACENCY = 10] = "TRIANGLE_LIST_ADJACENCY";
t[t.TRIANGLE_STRIP_ADJACENCY = 11] = "TRIANGLE_STRIP_ADJACENCY";
t[t.TRIANGLE_PATCH_ADJACENCY = 12] = "TRIANGLE_PATCH_ADJACENCY";
t[t.QUAD_PATCH_LIST = 13] = "QUAD_PATCH_LIST";
})(Y || (Y = {}));
(function(t) {
t[t.FILL = 0] = "FILL";
t[t.POINT = 1] = "POINT";
t[t.LINE = 2] = "LINE";
})(J || (J = {}));
(function(t) {
t[t.GOURAND = 0] = "GOURAND";
t[t.FLAT = 1] = "FLAT";
})(Z || (Z = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.FRONT = 1] = "FRONT";
t[t.BACK = 2] = "BACK";
})(K || (K = {}));
(function(t) {
t[t.NEVER = 0] = "NEVER";
t[t.LESS = 1] = "LESS";
t[t.EQUAL = 2] = "EQUAL";
t[t.LESS_EQUAL = 3] = "LESS_EQUAL";
t[t.GREATER = 4] = "GREATER";
t[t.NOT_EQUAL = 5] = "NOT_EQUAL";
t[t.GREATER_EQUAL = 6] = "GREATER_EQUAL";
t[t.ALWAYS = 7] = "ALWAYS";
})(Q || (Q = {}));
(function(t) {
t[t.ZERO = 0] = "ZERO";
t[t.KEEP = 1] = "KEEP";
t[t.REPLACE = 2] = "REPLACE";
t[t.INCR = 3] = "INCR";
t[t.DECR = 4] = "DECR";
t[t.INVERT = 5] = "INVERT";
t[t.INCR_WRAP = 6] = "INCR_WRAP";
t[t.DECR_WRAP = 7] = "DECR_WRAP";
})($ || ($ = {}));
(function(t) {
t[t.ADD = 0] = "ADD";
t[t.SUB = 1] = "SUB";
t[t.REV_SUB = 2] = "REV_SUB";
t[t.MIN = 3] = "MIN";
t[t.MAX = 4] = "MAX";
})(tt || (tt = {}));
(function(t) {
t[t.ZERO = 0] = "ZERO";
t[t.ONE = 1] = "ONE";
t[t.SRC_ALPHA = 2] = "SRC_ALPHA";
t[t.DST_ALPHA = 3] = "DST_ALPHA";
t[t.ONE_MINUS_SRC_ALPHA = 4] = "ONE_MINUS_SRC_ALPHA";
t[t.ONE_MINUS_DST_ALPHA = 5] = "ONE_MINUS_DST_ALPHA";
t[t.SRC_COLOR = 6] = "SRC_COLOR";
t[t.DST_COLOR = 7] = "DST_COLOR";
t[t.ONE_MINUS_SRC_COLOR = 8] = "ONE_MINUS_SRC_COLOR";
t[t.ONE_MINUS_DST_COLOR = 9] = "ONE_MINUS_DST_COLOR";
t[t.SRC_ALPHA_SATURATE = 10] = "SRC_ALPHA_SATURATE";
t[t.CONSTANT_COLOR = 11] = "CONSTANT_COLOR";
t[t.ONE_MINUS_CONSTANT_COLOR = 12] = "ONE_MINUS_CONSTANT_COLOR";
t[t.CONSTANT_ALPHA = 13] = "CONSTANT_ALPHA";
t[t.ONE_MINUS_CONSTANT_ALPHA = 14] = "ONE_MINUS_CONSTANT_ALPHA";
})(et || (et = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.R = 1] = "R";
t[t.G = 2] = "G";
t[t.B = 4] = "B";
t[t.A = 8] = "A";
t[t.ALL = 15] = "ALL";
})(it || (it = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.POINT = 1] = "POINT";
t[t.LINEAR = 2] = "LINEAR";
t[t.ANISOTROPIC = 3] = "ANISOTROPIC";
})(nt || (nt = {}));
(function(t) {
t[t.WRAP = 0] = "WRAP";
t[t.MIRROR = 1] = "MIRROR";
t[t.CLAMP = 2] = "CLAMP";
t[t.BORDER = 3] = "BORDER";
})(rt || (rt = {}));
(function(t) {
t[t.TEX1D = 0] = "TEX1D";
t[t.TEX2D = 1] = "TEX2D";
t[t.TEX3D = 2] = "TEX3D";
})(st || (st = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.TRANSFER_SRC = 1] = "TRANSFER_SRC";
t[t.TRANSFER_DST = 2] = "TRANSFER_DST";
t[t.SAMPLED = 4] = "SAMPLED";
t[t.STORAGE = 8] = "STORAGE";
t[t.COLOR_ATTACHMENT = 16] = "COLOR_ATTACHMENT";
t[t.DEPTH_STENCIL_ATTACHMENT = 32] = "DEPTH_STENCIL_ATTACHMENT";
t[t.TRANSIENT_ATTACHMENT = 64] = "TRANSIENT_ATTACHMENT";
t[t.INPUT_ATTACHMENT = 128] = "INPUT_ATTACHMENT";
})(ot || (ot = {}));
(function(t) {
t[t.X1 = 0] = "X1";
t[t.X2 = 1] = "X2";
t[t.X4 = 2] = "X4";
t[t.X8 = 3] = "X8";
t[t.X16 = 4] = "X16";
t[t.X32 = 5] = "X32";
t[t.X64 = 6] = "X64";
})(at || (at = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.GEN_MIPMAP = 1] = "GEN_MIPMAP";
t[t.CUBEMAP = 2] = "CUBEMAP";
t[t.BAKUP_BUFFER = 4] = "BAKUP_BUFFER";
})(ct || (ct = {}));
(function(t) {
t[t.TV1D = 0] = "TV1D";
t[t.TV2D = 1] = "TV2D";
t[t.TV3D = 2] = "TV3D";
t[t.CUBE = 3] = "CUBE";
t[t.TV1D_ARRAY = 4] = "TV1D_ARRAY";
t[t.TV2D_ARRAY = 5] = "TV2D_ARRAY";
})(lt || (lt = {}));
(function(t) {
t[t.VERTEX = 0] = "VERTEX";
t[t.HULL = 1] = "HULL";
t[t.DOMAIN = 2] = "DOMAIN";
t[t.GEOMETRY = 3] = "GEOMETRY";
t[t.FRAGMENT = 4] = "FRAGMENT";
t[t.COMPUTE = 5] = "COMPUTE";
t[t.COUNT = 6] = "COUNT";
})(ut || (ut = {}));
(function(t) {
t[t.UNKNOWN = 0] = "UNKNOWN";
t[t.UNIFORM_BUFFER = 1] = "UNIFORM_BUFFER";
t[t.SAMPLER = 2] = "SAMPLER";
t[t.STORAGE_BUFFER = 3] = "STORAGE_BUFFER";
})(ht || (ht = {}));
(function(t) {
t[t.PRIMARY = 0] = "PRIMARY";
t[t.SECONDARY = 1] = "SECONDARY";
})(ft || (ft = {}));
(function(t) {
t[t.LOAD = 0] = "LOAD";
t[t.CLEAR = 1] = "CLEAR";
t[t.DISCARD = 2] = "DISCARD";
})(_t || (_t = {}));
(function(t) {
t[t.STORE = 0] = "STORE";
t[t.DISCARD = 1] = "DISCARD";
})(dt || (dt = {}));
(function(t) {
t[t.UNDEFINED = 0] = "UNDEFINED";
t[t.GENERAL = 1] = "GENERAL";
t[t.COLOR_ATTACHMENT_OPTIMAL = 2] = "COLOR_ATTACHMENT_OPTIMAL";
t[t.DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3] = "DEPTH_STENCIL_ATTACHMENT_OPTIMAL";
t[t.DEPTH_STENCIL_READONLY_OPTIMAL = 4] = "DEPTH_STENCIL_READONLY_OPTIMAL";
t[t.SHADER_READONLY_OPTIMAL = 5] = "SHADER_READONLY_OPTIMAL";
t[t.TRANSFER_SRC_OPTIMAL = 6] = "TRANSFER_SRC_OPTIMAL";
t[t.TRANSFER_DST_OPTIMAL = 7] = "TRANSFER_DST_OPTIMAL";
t[t.PREINITIALIZED = 8] = "PREINITIALIZED";
t[t.PRESENT_SRC = 9] = "PRESENT_SRC";
})(pt || (pt = {}));
(function(t) {
t[t.GRAPHICS = 0] = "GRAPHICS";
t[t.COMPUTE = 1] = "COMPUTE";
t[t.RAY_TRACING = 2] = "RAY_TRACING";
})(mt || (mt = {}));
(function(t) {
t[t.VIEWPORT = 0] = "VIEWPORT";
t[t.SCISSOR = 1] = "SCISSOR";
t[t.LINE_WIDTH = 2] = "LINE_WIDTH";
t[t.DEPTH_BIAS = 3] = "DEPTH_BIAS";
t[t.BLEND_CONSTANTS = 4] = "BLEND_CONSTANTS";
t[t.DEPTH_BOUNDS = 5] = "DEPTH_BOUNDS";
t[t.STENCIL_WRITE_MASK = 6] = "STENCIL_WRITE_MASK";
t[t.STENCIL_COMPARE_MASK = 7] = "STENCIL_COMPARE_MASK";
})(yt || (yt = {}));
(function(t) {
t[t.FRONT = 0] = "FRONT";
t[t.BACK = 1] = "BACK";
t[t.ALL = 2] = "ALL";
})(vt || (vt = {}));
(function(t) {
t[t.GRAPHICS = 0] = "GRAPHICS";
t[t.COMPUTE = 1] = "COMPUTE";
t[t.TRANSFER = 2] = "TRANSFER";
})(gt || (gt = {}));
(function(t) {
t[t.NONE = 0] = "NONE";
t[t.COLOR = 1] = "COLOR";
t[t.DEPTH = 2] = "DEPTH";
t[t.STENCIL = 4] = "STENCIL";
t[t.DEPTH_STENCIL = 6] = "DEPTH_STENCIL";
t[t.ALL = 7] = "ALL";
})(bt || (bt = {}));
(function(t) {
t[t.DEFAULT = 100] = "DEFAULT";
})(Ct || (Ct = {}));
(function(t) {
t[t.MIN = 0] = "MIN";
t[t.MAX = 255] = "MAX";
t[t.DEFAULT = 128] = "DEFAULT";
})(xt || (xt = {}));
var At, St, wt, Tt;
(function(t) {
t[t.UBO_GLOBAL = 23] = "UBO_GLOBAL";
t[t.UBO_SHADOW = 22] = "UBO_SHADOW";
t[t.UBO_LOCAL = 21] = "UBO_LOCAL";
t[t.UBO_FORWARD_LIGHTS = 20] = "UBO_FORWARD_LIGHTS";
t[t.UBO_SKINNING = 19] = "UBO_SKINNING";
t[t.UBO_SKINNING_TEXTURE = 18] = "UBO_SKINNING_TEXTURE";
t[t.UBO_UI = 17] = "UBO_UI";
t[t.SAMPLER_JOINTS = 25] = "SAMPLER_JOINTS";
t[t.SAMPLER_ENVIRONMENT = 26] = "SAMPLER_ENVIRONMENT";
t[t.CUSTUM_UBO_BINDING_END_POINT = 17] = "CUSTUM_UBO_BINDING_END_POINT";
t[t.CUSTOM_SAMPLER_BINDING_START_POINT = 30] = "CUSTOM_SAMPLER_BINDING_START_POINT";
})(At || (At = {}));
(function(t) {
t[t.minFilter = 0] = "minFilter";
t[t.magFilter = 1] = "magFilter";
t[t.mipFilter = 2] = "mipFilter";
t[t.addressU = 3] = "addressU";
t[t.addressV = 4] = "addressV";
t[t.addressW = 5] = "addressW";
t[t.maxAnisotropy = 6] = "maxAnisotropy";
t[t.cmpFunc = 7] = "cmpFunc";
t[t.minLOD = 8] = "minLOD";
t[t.maxLOD = 9] = "maxLOD";
t[t.mipLODBias = 10] = "mipLODBias";
t[t.borderColor = 11] = "borderColor";
t[t.total = 15] = "total";
})(Tt || (Tt = {}));
var Et = {};
Et[Et.bool = j.BOOL] = "bool";
Et[Et.int = j.INT] = "int";
Et[Et.ivec2 = j.INT2] = "ivec2invTypeParams";
Et[Et.ivec3 = j.INT3] = "ivec3";
Et[Et.ivec4 = j.INT4] = "ivec4";
Et[Et.float = j.FLOAT] = "float";
Et[Et.vec2 = j.FLOAT2] = "vec2";
Et[Et.vec3 = j.FLOAT3] = "vec3";
Et[Et.vec4 = j.FLOAT4] = "vec4";
Et[Et.mat2 = j.MAT2] = "mat2";
Et[Et.mat3 = j.MAT3] = "mat3";
Et[Et.mat4 = j.MAT4] = "mat4";
Et[Et.sampler2D = j.SAMPLER2D] = "sampler2D";
Et[Et.samplerCube = j.SAMPLER_CUBE] = "samplerCube";
var Mt = ((St = {})[j.BOOL] = 4, St[j.INT] = 4, St[j.INT2] = 8, St[j.INT3] = 12, 
St[j.INT4] = 16, St[j.FLOAT] = 4, St[j.FLOAT2] = 8, St[j.FLOAT3] = 12, St[j.FLOAT4] = 16, 
St[j.MAT2] = 16, St[j.MAT3] = 36, St[j.MAT4] = 64, St[j.SAMPLER2D] = 4, St[j.SAMPLER_CUBE] = 4, 
St), Bt = ((wt = {})[j.BOOL] = H.R32I, wt[j.INT] = H.R32I, wt[j.INT2] = H.RG32I, 
wt[j.INT3] = H.RGB32I, wt[j.INT4] = H.RGBA32I, wt[j.FLOAT] = H.R32F, wt[j.FLOAT2] = H.RG32F, 
wt[j.FLOAT3] = H.RGB32F, wt[j.FLOAT4] = H.RGBA32F, wt), Dt = {
BACK: G,
FRONT: k,
NONE: z,
ADD: d,
SUB: p,
REV_SUB: m,
ZERO: y,
ONE: v,
SRC_COLOR: g,
ONE_MINUS_SRC_COLOR: b,
DST_COLOR: C,
ONE_MINUS_DST_COLOR: x,
SRC_ALPHA: A,
ONE_MINUS_SRC_ALPHA: S,
DST_ALPHA: w,
ONE_MINUS_DST_ALPHA: T,
CONSTANT_COLOR: E,
ONE_MINUS_CONSTANT_COLOR: M,
CONSTANT_ALPHA: B,
ONE_MINUS_CONSTANT_ALPHA: D,
SRC_ALPHA_SATURATE: R,
NEVER: o,
LESS: a,
EQUAL: c,
LEQUAL: l,
GREATER: u,
NOTEQUAL: h,
GEQUAL: f,
ALWAYS: _,
KEEP: I,
REPLACE: P,
INCR: O,
INCR_WRAP: L,
DECR: V,
DECR_WRAP: N,
INVERT: F
};
Object.assign(Dt, Ct);
var Rt = {
murmurhash2_32_gc: function(t, e) {
for (var i, n = t.length, r = e ^ n, s = 0; n >= 4; ) {
i = 1540483477 * (65535 & (i = 255 & t.charCodeAt(s) | (255 & t.charCodeAt(++s)) << 8 | (255 & t.charCodeAt(++s)) << 16 | (255 & t.charCodeAt(++s)) << 24)) + ((1540483477 * (i >>> 16) & 65535) << 16);
r = 1540483477 * (65535 & r) + ((1540483477 * (r >>> 16) & 65535) << 16) ^ (i = 1540483477 * (65535 & (i ^= i >>> 24)) + ((1540483477 * (i >>> 16) & 65535) << 16));
n -= 4;
++s;
}
switch (n) {
case 3:
r ^= (255 & t.charCodeAt(s + 2)) << 16;

case 2:
r ^= (255 & t.charCodeAt(s + 1)) << 8;

case 1:
r = 1540483477 * (65535 & (r ^= 255 & t.charCodeAt(s))) + ((1540483477 * (r >>> 16) & 65535) << 16);
}
r = 1540483477 * (65535 & (r ^= r >>> 13)) + ((1540483477 * (r >>> 16) & 65535) << 16);
return (r ^= r >>> 15) >>> 0;
},
SamplerInfoIndex: Tt,
effectStructure: {
$techniques: [ {
$passes: [ {
depthStencilState: {},
rasterizerState: {},
blendState: {
targets: [ {} ]
},
properties: {
any: {
sampler: {},
inspector: {}
}
}
} ]
} ]
},
typeMap: Et,
sizeMap: Mt,
formatMap: Bt,
passParams: Dt,
RenderQueue: {
OPAQUE: 0,
TRANSPARENT: 1,
OVERLAY: 2
},
RenderPriority: xt,
GFXGetTypeSize: function(t) {
switch (t) {
case j.BOOL:
case j.INT:
case j.UINT:
case j.FLOAT:
return 4;

case j.BOOL2:
case j.INT2:
case j.UINT2:
case j.FLOAT2:
return 8;

case j.BOOL3:
case j.INT3:
case j.UINT3:
case j.FLOAT3:
return 12;

case j.BOOL4:
case j.INT4:
case j.UINT4:
case j.FLOAT4:
case j.MAT2:
return 16;

case j.MAT2X3:
return 24;

case j.MAT2X4:
return 32;

case j.MAT3X2:
return 24;

case j.MAT3:
return 36;

case j.MAT3X4:
return 48;

case j.MAT4X2:
case j.MAT4X2:
return 32;

case j.MAT4:
return 64;

case j.SAMPLER1D:
case j.SAMPLER1D_ARRAY:
case j.SAMPLER2D:
case j.SAMPLER2D_ARRAY:
case j.SAMPLER3D:
case j.SAMPLER_CUBE:
return 4;

default:
return 0;
}
},
UniformBinding: At
};
e.exports = Rt;
}), {} ],
350: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../gfx"));
function r(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function s(t, e, i) {
e && r(t.prototype, e);
i && r(t, i);
return t;
}
var o = (function() {
function t(t, e, i) {
void 0 === i && (i = n.default.PT_TRIANGLES);
this._vertexBuffer = t;
this._indexBuffer = e;
this._primitiveType = i;
this._start = 0;
this._count = -1;
}
s(t, [ {
key: "count",
get: function() {
return -1 !== this._count ? this._count : this._indexBuffer ? this._indexBuffer.count : this._vertexBuffer ? this._vertexBuffer.count : 0;
}
} ]);
return t;
})();
i.default = o;
e.exports = i.default;
}), {
"../gfx": 354
} ],
351: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = o(t("../gfx")), r = o(t("../enums")), s = o(t("../../core/value-types/value-type"));
function o(t) {
return t && t.__esModule ? t : {
default: t
};
}
var a = (function() {
function t(t, e, i, r, s, o) {
void 0 === s && (s = {});
void 0 === o && (o = {});
this._name = t;
this._detailName = e;
this._programName = i;
this._stage = r;
this._properties = s;
this._defines = o;
this._cullMode = n.default.CULL_BACK;
this._blend = !1;
this._blendEq = n.default.BLEND_FUNC_ADD;
this._blendAlphaEq = n.default.BLEND_FUNC_ADD;
this._blendSrc = n.default.BLEND_SRC_ALPHA;
this._blendDst = n.default.BLEND_ONE_MINUS_SRC_ALPHA;
this._blendSrcAlpha = n.default.BLEND_SRC_ALPHA;
this._blendDstAlpha = n.default.BLEND_ONE_MINUS_SRC_ALPHA;
this._blendColor = 4294967295;
this._depthTest = !1;
this._depthWrite = !1;
this._depthFunc = n.default.DS_FUNC_LESS, this._stencilTest = n.default.STENCIL_INHERIT;
this._stencilFuncFront = n.default.DS_FUNC_ALWAYS;
this._stencilRefFront = 0;
this._stencilMaskFront = 255;
this._stencilFailOpFront = n.default.STENCIL_OP_KEEP;
this._stencilZFailOpFront = n.default.STENCIL_OP_KEEP;
this._stencilZPassOpFront = n.default.STENCIL_OP_KEEP;
this._stencilWriteMaskFront = 255;
this._stencilFuncBack = n.default.DS_FUNC_ALWAYS;
this._stencilRefBack = 0;
this._stencilMaskBack = 255;
this._stencilFailOpBack = n.default.STENCIL_OP_KEEP;
this._stencilZFailOpBack = n.default.STENCIL_OP_KEEP;
this._stencilZPassOpBack = n.default.STENCIL_OP_KEEP;
this._stencilWriteMaskBack = 255;
}
var e = t.prototype;
e.setCullMode = function(t) {
void 0 === t && (t = n.default.CULL_BACK);
this._cullMode = t;
};
e.setBlend = function(t, e, i, r, s, o, a, c) {
void 0 === t && (t = !1);
void 0 === e && (e = n.default.BLEND_FUNC_ADD);
void 0 === i && (i = n.default.BLEND_SRC_ALPHA);
void 0 === r && (r = n.default.BLEND_ONE_MINUS_SRC_ALPHA);
void 0 === s && (s = n.default.BLEND_FUNC_ADD);
void 0 === o && (o = n.default.BLEND_SRC_ALPHA);
void 0 === a && (a = n.default.BLEND_ONE_MINUS_SRC_ALPHA);
void 0 === c && (c = 4294967295);
this._blend = t;
this._blendEq = e;
this._blendSrc = i;
this._blendDst = r;
this._blendAlphaEq = s;
this._blendSrcAlpha = o;
this._blendDstAlpha = a;
this._blendColor = c;
};
e.setDepth = function(t, e, i) {
void 0 === t && (t = !1);
void 0 === e && (e = !1);
void 0 === i && (i = n.default.DS_FUNC_LESS);
this._depthTest = t;
this._depthWrite = e;
this._depthFunc = i;
};
e.setStencilFront = function(t, e, i, r, s, o, a, c) {
void 0 === t && (t = n.default.STENCIL_INHERIT);
void 0 === e && (e = n.default.DS_FUNC_ALWAYS);
void 0 === i && (i = 0);
void 0 === r && (r = 255);
void 0 === s && (s = n.default.STENCIL_OP_KEEP);
void 0 === o && (o = n.default.STENCIL_OP_KEEP);
void 0 === a && (a = n.default.STENCIL_OP_KEEP);
void 0 === c && (c = 255);
this._stencilTest = t;
this._stencilFuncFront = e;
this._stencilRefFront = i;
this._stencilMaskFront = r;
this._stencilFailOpFront = s;
this._stencilZFailOpFront = o;
this._stencilZPassOpFront = a;
this._stencilWriteMaskFront = c;
};
e.setStencilEnabled = function(t) {
void 0 === t && (t = n.default.STENCIL_INHERIT);
this._stencilTest = t;
};
e.setStencilBack = function(t, e, i, r, s, o, a, c) {
void 0 === t && (t = n.default.STENCIL_INHERIT);
void 0 === e && (e = n.default.DS_FUNC_ALWAYS);
void 0 === i && (i = 0);
void 0 === r && (r = 255);
void 0 === s && (s = n.default.STENCIL_OP_KEEP);
void 0 === o && (o = n.default.STENCIL_OP_KEEP);
void 0 === a && (a = n.default.STENCIL_OP_KEEP);
void 0 === c && (c = 255);
this._stencilTest = t;
this._stencilFuncBack = e;
this._stencilRefBack = i;
this._stencilMaskBack = r;
this._stencilFailOpBack = s;
this._stencilZFailOpBack = o;
this._stencilZPassOpBack = a;
this._stencilWriteMaskBack = c;
};
e.setStage = function(t) {
this._stage = t;
};
e.setProperties = function(t) {
this._properties = t;
};
e.getProperty = function(t) {
if (this._properties[t]) return this._properties[t].value;
};
e.setProperty = function(t, e, i) {
var n = this._properties[t];
if (!n) return !1;
n.directly = i;
if (Array.isArray(e)) {
var o = n.value;
if (o.length !== e.length) {
cc.warnID(9105, this._name, t);
return;
}
for (var a = 0; a < e.length; a++) o[a] = e[a];
} else if (e && !ArrayBuffer.isView(e)) if (n.type === r.default.PARAM_TEXTURE_2D) n.value = e.getImpl(); else if (e instanceof s.default) e.constructor.toArray(n.value, e); else {
"object" == typeof e && cc.warnID(9106, this._name, t);
n.value = e;
} else n.value = e;
return !0;
};
e.getDefine = function(t) {
return this._defines[t];
};
e.define = function(t, e, i) {
if (!i) {
if (void 0 === this._defines[t]) return !1;
}
this._defines[t] = e;
return !0;
};
e.clone = function() {
var e = new t(this._programName);
Object.assign(e, this);
var i = {}, n = this._properties;
for (var r in n) {
var s = n[r], o = i[r] = {}, a = s.value;
Array.isArray(a) ? o.value = a.concat() : ArrayBuffer.isView(a) ? o.value = new a.__proto__.constructor(a) : o.value = a;
for (var c in s) "value" !== c && (o[c] = s[c]);
}
e._properties = i;
e._defines = Object.assign({}, this._defines);
return e;
};
return t;
})();
i.default = a;
e.exports = i.default;
}), {
"../../core/value-types/value-type": 336,
"../enums": 353,
"../gfx": 354
} ],
352: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
function n(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function r(t, e, i) {
e && n(t.prototype, e);
i && n(t, i);
return t;
}
var s = (function() {
function t(t, e) {
this._name = t;
this._passes = e;
}
t.prototype.clone = function() {
for (var e = [], i = 0; i < this._passes.length; i++) e.push(this._passes[i].clone());
return new t(this._name, e);
};
r(t, [ {
key: "name",
get: function() {
return this._name;
}
}, {
key: "passes",
get: function() {
return this._passes;
}
} ]);
return t;
})();
i.default = s;
e.exports = i.default;
}), {} ],
353: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = t("./build/mappings"), r = {
PROJ_PERSPECTIVE: 0,
PROJ_ORTHO: 1,
LIGHT_DIRECTIONAL: 0,
LIGHT_POINT: 1,
LIGHT_SPOT: 2,
LIGHT_AMBIENT: 3,
SHADOW_NONE: 0,
SHADOW_HARD: 1,
SHADOW_SOFT: 2,
PARAM_INT: n.typeMap.int,
PARAM_INT2: n.typeMap.ivec2,
PARAM_INT3: n.typeMap.ivec3,
PARAM_INT4: n.typeMap.ivec4,
PARAM_FLOAT: n.typeMap.float,
PARAM_FLOAT2: n.typeMap.vec2,
PARAM_FLOAT3: n.typeMap.vec3,
PARAM_FLOAT4: n.typeMap.vec4,
PARAM_MAT2: n.typeMap.mat2,
PARAM_MAT3: n.typeMap.mat3,
PARAM_MAT4: n.typeMap.mat4,
PARAM_TEXTURE_2D: n.typeMap.sampler2D,
PARAM_TEXTURE_CUBE: n.typeMap.samplerCube,
CLEAR_COLOR: 1,
CLEAR_DEPTH: 2,
CLEAR_STENCIL: 4,
CLEAR_SKYBOX: 8,
BUFFER_VIEW_INT8: 0,
BUFFER_VIEW_UINT8: 1,
BUFFER_VIEW_INT16: 2,
BUFFER_VIEW_UINT16: 3,
BUFFER_VIEW_INT32: 4,
BUFFER_VIEW_UINT32: 5,
BUFFER_VIEW_FLOAT32: 6
};
i.default = r;
e.exports = i.default;
}), {
"./build/mappings": 349
} ],
354: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
t("./enums");
var n = null, r = n = window.gfx;
i.default = r;
cc.gfx = n;
e.exports = i.default;
}), {
"./device": void 0,
"./enums": void 0,
"./frame-buffer": void 0,
"./index-buffer": void 0,
"./program": void 0,
"./render-buffer": void 0,
"./texture": void 0,
"./texture-2d": void 0,
"./texture-cube": void 0,
"./vertex-buffer": void 0,
"./vertex-format": void 0
} ],
355: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function() {
function t(t, e) {
this._fn = t;
this._idx = e - 1;
this._frees = new Array(e);
for (var i = 0; i < e; ++i) this._frees[i] = t();
}
var e = t.prototype;
e._expand = function(t) {
var e = this._frees;
this._frees = new Array(t);
for (var i = t - e.length, n = 0; n < i; ++n) this._frees[n] = this._fn();
for (var r = i, s = 0; r < t; ++r, ++s) this._frees[r] = e[s];
this._idx += i;
};
e.alloc = function() {
this._idx < 0 && this._expand(Math.round(1.2 * this._frees.length) + 1);
var t = this._frees[this._idx];
this._frees[this._idx] = null;
--this._idx;
return t;
};
e.free = function(t) {
++this._idx;
this._frees[this._idx] = t;
};
e.clear = function(t) {
for (var e = 0; e <= this._idx; e++) t && t(this._frees[e]);
this._frees.length = 0;
this._idx = -1;
};
return t;
})();
i.default = n;
e.exports = i.default;
}), {} ],
356: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("./timsort"));
function r(t, e) {
for (var i = 0; i < e.length; i++) {
var n = e[i];
n.enumerable = n.enumerable || !1;
n.configurable = !0;
"value" in n && (n.writable = !0);
Object.defineProperty(t, n.key, n);
}
}
function s(t, e, i) {
e && r(t.prototype, e);
i && r(t, i);
return t;
}
var o = (function() {
function t(t, e) {
this._fn = t;
this._count = 0;
this._data = new Array(e);
for (var i = 0; i < e; ++i) this._data[i] = t();
}
var e = t.prototype;
e.reset = function() {
this._count = 0;
};
e.resize = function(t) {
if (t > this._data.length) for (var e = this._data.length; e < t; ++e) this._data[e] = this._fn();
};
e.add = function() {
this._count >= this._data.length && this.resize(2 * this._data.length);
return this._data[this._count++];
};
e.remove = function(t) {
if (!(t >= this._count)) {
var e = this._count - 1, i = this._data[t];
this._data[t] = this._data[e];
this._data[e] = i;
this._count -= 1;
}
};
e.sort = function(t) {
return (0, n.default)(this._data, 0, this._count, t);
};
s(t, [ {
key: "length",
get: function() {
return this._count;
}
}, {
key: "data",
get: function() {
return this._data;
}
} ]);
return t;
})();
i.default = o;
cc.RecyclePool = o;
e.exports = i.default;
}), {
"./timsort": 357
} ],
357: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function(t, e, i, r) {
if (!Array.isArray(t)) throw new TypeError("Can only sort arrays");
void 0 === e && (e = 0);
void 0 === i && (i = t.length);
void 0 === r && (r = c);
var s = i - e;
if (s < 2) return;
var o = 0;
if (s < n) {
o = u(t, e, i, r);
f(t, e, i, e + o, r);
return;
}
var a = new p(t, r), h = l(s);
do {
if ((o = u(t, e, i, r)) < h) {
var _ = s;
_ > h && (_ = h);
f(t, e, e + _, e + o, r);
o = _;
}
a.pushRun(e, o);
a.mergeRuns();
s -= o;
e += o;
} while (0 !== s);
a.forceMergeRuns();
};
var n = 32, r = 7, s = 256, o = [ 1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9 ];
function a(t) {
return t < 1e5 ? t < 100 ? t < 10 ? 0 : 1 : t < 1e4 ? t < 1e3 ? 2 : 3 : 4 : t < 1e7 ? t < 1e6 ? 5 : 6 : t < 1e9 ? t < 1e8 ? 7 : 8 : 9;
}
function c(t, e) {
if (t === e) return 0;
if (~~t === t && ~~e === e) {
if (0 === t || 0 === e) return t < e ? -1 : 1;
if (t < 0 || e < 0) {
if (e >= 0) return -1;
if (t >= 0) return 1;
t = -t;
e = -e;
}
var i = a(t), n = a(e), r = 0;
if (i < n) {
t *= o[n - i - 1];
e /= 10;
r = -1;
} else if (i > n) {
e *= o[i - n - 1];
t /= 10;
r = 1;
}
return t === e ? r : t < e ? -1 : 1;
}
var s = String(t), c = String(e);
return s === c ? 0 : s < c ? -1 : 1;
}
function l(t) {
for (var e = 0; t >= n; ) {
e |= 1 & t;
t >>= 1;
}
return t + e;
}
function u(t, e, i, n) {
var r = e + 1;
if (r === i) return 1;
if (n(t[r++], t[e]) < 0) {
for (;r < i && n(t[r], t[r - 1]) < 0; ) r++;
h(t, e, r);
} else for (;r < i && n(t[r], t[r - 1]) >= 0; ) r++;
return r - e;
}
function h(t, e, i) {
i--;
for (;e < i; ) {
var n = t[e];
t[e++] = t[i];
t[i--] = n;
}
}
function f(t, e, i, n, r) {
n === e && n++;
for (;n < i; n++) {
for (var s = t[n], o = e, a = n; o < a; ) {
var c = o + a >>> 1;
r(s, t[c]) < 0 ? a = c : o = c + 1;
}
var l = n - o;
switch (l) {
case 3:
t[o + 3] = t[o + 2];

case 2:
t[o + 2] = t[o + 1];

case 1:
t[o + 1] = t[o];
break;

default:
for (;l > 0; ) {
t[o + l] = t[o + l - 1];
l--;
}
}
t[o] = s;
}
}
function _(t, e, i, n, r, s) {
var o = 0, a = 0, c = 1;
if (s(t, e[i + r]) > 0) {
a = n - r;
for (;c < a && s(t, e[i + r + c]) > 0; ) {
o = c;
(c = 1 + (c << 1)) <= 0 && (c = a);
}
c > a && (c = a);
o += r;
c += r;
} else {
a = r + 1;
for (;c < a && s(t, e[i + r - c]) <= 0; ) {
o = c;
(c = 1 + (c << 1)) <= 0 && (c = a);
}
c > a && (c = a);
var l = o;
o = r - c;
c = r - l;
}
o++;
for (;o < c; ) {
var u = o + (c - o >>> 1);
s(t, e[i + u]) > 0 ? o = u + 1 : c = u;
}
return c;
}
function d(t, e, i, n, r, s) {
var o = 0, a = 0, c = 1;
if (s(t, e[i + r]) < 0) {
a = r + 1;
for (;c < a && s(t, e[i + r - c]) < 0; ) {
o = c;
(c = 1 + (c << 1)) <= 0 && (c = a);
}
c > a && (c = a);
var l = o;
o = r - c;
c = r - l;
} else {
a = n - r;
for (;c < a && s(t, e[i + r + c]) >= 0; ) {
o = c;
(c = 1 + (c << 1)) <= 0 && (c = a);
}
c > a && (c = a);
o += r;
c += r;
}
o++;
for (;o < c; ) {
var u = o + (c - o >>> 1);
s(t, e[i + u]) < 0 ? c = u : o = u + 1;
}
return c;
}
var p = (function() {
function t(t, e) {
this.array = t;
this.compare = e;
this.minGallop = r;
this.length = t.length;
this.tmpStorageLength = s;
this.length < 2 * s && (this.tmpStorageLength = this.length >>> 1);
this.tmp = new Array(this.tmpStorageLength);
this.stackLength = this.length < 120 ? 5 : this.length < 1542 ? 10 : this.length < 119151 ? 19 : 40;
this.runStart = new Array(this.stackLength);
this.runLength = new Array(this.stackLength);
this.stackSize = 0;
}
var e = t.prototype;
e.pushRun = function(t, e) {
this.runStart[this.stackSize] = t;
this.runLength[this.stackSize] = e;
this.stackSize += 1;
};
e.mergeRuns = function() {
for (;this.stackSize > 1; ) {
var t = this.stackSize - 2;
if (t >= 1 && this.runLength[t - 1] <= this.runLength[t] + this.runLength[t + 1] || t >= 2 && this.runLength[t - 2] <= this.runLength[t] + this.runLength[t - 1]) this.runLength[t - 1] < this.runLength[t + 1] && t--; else if (this.runLength[t] > this.runLength[t + 1]) break;
this.mergeAt(t);
}
};
e.forceMergeRuns = function() {
for (;this.stackSize > 1; ) {
var t = this.stackSize - 2;
t > 0 && this.runLength[t - 1] < this.runLength[t + 1] && t--;
this.mergeAt(t);
}
};
e.mergeAt = function(t) {
var e = this.compare, i = this.array, n = this.runStart[t], r = this.runLength[t], s = this.runStart[t + 1], o = this.runLength[t + 1];
this.runLength[t] = r + o;
if (t === this.stackSize - 3) {
this.runStart[t + 1] = this.runStart[t + 2];
this.runLength[t + 1] = this.runLength[t + 2];
}
this.stackSize--;
var a = d(i[s], i, n, r, 0, e);
n += a;
0 !== (r -= a) && 0 !== (o = _(i[n + r - 1], i, s, o, o - 1, e)) && (r <= o ? this.mergeLow(n, r, s, o) : this.mergeHigh(n, r, s, o));
};
e.mergeLow = function(t, e, i, n) {
var s = this.compare, o = this.array, a = this.tmp, c = 0;
for (c = 0; c < e; c++) a[c] = o[t + c];
var l = 0, u = i, h = t;
o[h++] = o[u++];
if (0 != --n) if (1 !== e) {
for (var f = this.minGallop; ;) {
var p = 0, m = 0, y = !1;
do {
if (s(o[u], a[l]) < 0) {
o[h++] = o[u++];
m++;
p = 0;
if (0 == --n) {
y = !0;
break;
}
} else {
o[h++] = a[l++];
p++;
m = 0;
if (1 == --e) {
y = !0;
break;
}
}
} while ((p | m) < f);
if (y) break;
do {
if (0 !== (p = d(o[u], a, l, e, 0, s))) {
for (c = 0; c < p; c++) o[h + c] = a[l + c];
h += p;
l += p;
if ((e -= p) <= 1) {
y = !0;
break;
}
}
o[h++] = o[u++];
if (0 == --n) {
y = !0;
break;
}
if (0 !== (m = _(a[l], o, u, n, 0, s))) {
for (c = 0; c < m; c++) o[h + c] = o[u + c];
h += m;
u += m;
if (0 === (n -= m)) {
y = !0;
break;
}
}
o[h++] = a[l++];
if (1 == --e) {
y = !0;
break;
}
f--;
} while (p >= r || m >= r);
if (y) break;
f < 0 && (f = 0);
f += 2;
}
this.minGallop = f;
f < 1 && (this.minGallop = 1);
if (1 === e) {
for (c = 0; c < n; c++) o[h + c] = o[u + c];
o[h + n] = a[l];
} else {
if (0 === e) throw new Error("mergeLow preconditions were not respected");
for (c = 0; c < e; c++) o[h + c] = a[l + c];
}
} else {
for (c = 0; c < n; c++) o[h + c] = o[u + c];
o[h + n] = a[l];
} else for (c = 0; c < e; c++) o[h + c] = a[l + c];
};
e.mergeHigh = function(t, e, i, n) {
var s = this.compare, o = this.array, a = this.tmp, c = 0;
for (c = 0; c < n; c++) a[c] = o[i + c];
var l = t + e - 1, u = n - 1, h = i + n - 1, f = 0, p = 0;
o[h--] = o[l--];
if (0 != --e) if (1 !== n) {
for (var m = this.minGallop; ;) {
var y = 0, v = 0, g = !1;
do {
if (s(a[u], o[l]) < 0) {
o[h--] = o[l--];
y++;
v = 0;
if (0 == --e) {
g = !0;
break;
}
} else {
o[h--] = a[u--];
v++;
y = 0;
if (1 == --n) {
g = !0;
break;
}
}
} while ((y | v) < m);
if (g) break;
do {
if (0 !== (y = e - d(a[u], o, t, e, e - 1, s))) {
e -= y;
p = (h -= y) + 1;
f = (l -= y) + 1;
for (c = y - 1; c >= 0; c--) o[p + c] = o[f + c];
if (0 === e) {
g = !0;
break;
}
}
o[h--] = a[u--];
if (1 == --n) {
g = !0;
break;
}
if (0 !== (v = n - _(o[l], a, 0, n, n - 1, s))) {
n -= v;
p = (h -= v) + 1;
f = (u -= v) + 1;
for (c = 0; c < v; c++) o[p + c] = a[f + c];
if (n <= 1) {
g = !0;
break;
}
}
o[h--] = o[l--];
if (0 == --e) {
g = !0;
break;
}
m--;
} while (y >= r || v >= r);
if (g) break;
m < 0 && (m = 0);
m += 2;
}
this.minGallop = m;
m < 1 && (this.minGallop = 1);
if (1 === n) {
p = (h -= e) + 1;
f = (l -= e) + 1;
for (c = e - 1; c >= 0; c--) o[p + c] = o[f + c];
o[h] = a[u];
} else {
if (0 === n) throw new Error("mergeHigh preconditions were not respected");
f = h - (n - 1);
for (c = 0; c < n; c++) o[f + c] = a[c];
}
} else {
p = (h -= e) + 1;
f = (l -= e) + 1;
for (c = e - 1; c >= 0; c--) o[p + c] = o[f + c];
o[h] = a[u];
} else {
f = h - (n - 1);
for (c = 0; c < n; c++) o[f + c] = a[c];
}
};
return t;
})();
e.exports = i.default;
}), {} ],
358: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = function(t, e) {
var i, n = t.length, r = e ^ n, s = 0;
for (;n >= 4; ) {
i = 1540483477 * (65535 & (i = 255 & t.charCodeAt(s) | (255 & t.charCodeAt(++s)) << 8 | (255 & t.charCodeAt(++s)) << 16 | (255 & t.charCodeAt(++s)) << 24)) + ((1540483477 * (i >>> 16) & 65535) << 16);
r = 1540483477 * (65535 & r) + ((1540483477 * (r >>> 16) & 65535) << 16) ^ (i = 1540483477 * (65535 & (i ^= i >>> 24)) + ((1540483477 * (i >>> 16) & 65535) << 16));
n -= 4;
++s;
}
switch (n) {
case 3:
r ^= (255 & t.charCodeAt(s + 2)) << 16;

case 2:
r ^= (255 & t.charCodeAt(s + 1)) << 8;

case 1:
r = 1540483477 * (65535 & (r ^= 255 & t.charCodeAt(s))) + ((1540483477 * (r >>> 16) & 65535) << 16);
}
r = 1540483477 * (65535 & (r ^= r >>> 13)) + ((1540483477 * (r >>> 16) & 65535) << 16);
return (r ^= r >>> 15) >>> 0;
};
e.exports = i.default;
}), {} ],
359: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.getInspectorProps = function(t) {
var e = {
type: t.type
};
Object.assign(e, t.editor || t.inspector);
e.defines = t.defines;
e.value = v(e.type)(t.value);
var i = g(e.type);
e.typeName = b[i] || i;
e.valueCtor = d[e.type];
if ("cc.Texture2D" == e.typeName) {
e.typeName = "cc.Asset";
e.assetType = "cc.Texture2D";
}
return e;
};
i.getClassName = i.getInstanceCtor = i.getInstanceType = i.enums2default = i.ctor2enums = void 0;
var n, r, s, o, a = u(t("./enums")), c = t("../core/value-types"), l = u(t("../core/assets/CCTexture2D"));
function u(t) {
return t && t.__esModule ? t : {
default: t
};
}
var h = null;
h = gfx.Texture2D;
var f = cc.Object, _ = ((n = {})[Boolean] = function(t) {
return t || !1;
}, n[Number] = function(t) {
return t ? ArrayBuffer.isView(t) ? t[0] : t : 0;
}, n[c.Vec2] = function(t) {
return t ? cc.v2(t[0], t[1]) : cc.v2();
}, n[c.Vec3] = function(t) {
return t ? cc.v3(t[0], t[1], t[2]) : cc.v3();
}, n[c.Vec4] = function(t) {
return t ? cc.v4(t[0], t[1], t[2], t[3]) : cc.v4();
}, n[c.Color] = function(t) {
return t ? cc.color(255 * t[0], 255 * t[1], 255 * t[2], 255 * (t[3] || 1)) : cc.color();
}, n[c.Mat4] = function(t) {
return t ? cc.mat4(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]) : cc.mat4();
}, n[l.default] = function() {
return null;
}, n[f] = function() {
return null;
}, n), d = ((r = {})[a.default.PARAM_INT] = Number, r[a.default.PARAM_INT2] = c.Vec2, 
r[a.default.PARAM_INT3] = c.Vec3, r[a.default.PARAM_INT4] = c.Vec4, r[a.default.PARAM_FLOAT] = Number, 
r[a.default.PARAM_FLOAT2] = c.Vec2, r[a.default.PARAM_FLOAT3] = c.Vec3, r[a.default.PARAM_FLOAT4] = c.Vec4, 
r[a.default.PARAM_MAT4] = c.Mat4, r[a.default.PARAM_TEXTURE_2D] = l.default, r.color = c.Color, 
r.number = Number, r.boolean = Boolean, r.default = f, r), p = ((s = {})[Number] = a.default.PARAM_FLOAT, 
s[c.Vec2] = a.default.PARAM_FLOAT2, s[c.Vec3] = a.default.PARAM_FLOAT3, s[c.Vec4] = a.default.PARAM_FLOAT4, 
s[c.Color] = a.default.PARAM_COLOR3, s[c.Color] = a.default.PARAM_COLOR4, s[c.Mat4] = a.default.PARAM_MAT4, 
s[l.default] = a.default.PARAM_TEXTURE_2D, s[h] = a.default.PARAM_TEXTURE_2D, s);
i.ctor2enums = p;
var m = ((o = {})[a.default.PARAM_INT] = new Uint32Array([ 0 ]), o[a.default.PARAM_INT2] = new Uint32Array([ 0, 0 ]), 
o[a.default.PARAM_INT3] = new Uint32Array([ 0, 0, 0 ]), o[a.default.PARAM_INT4] = new Uint32Array([ 0, 0, 0, 0 ]), 
o[a.default.PARAM_FLOAT] = new Float32Array([ 0 ]), o[a.default.PARAM_FLOAT2] = new Float32Array([ 0, 0 ]), 
o[a.default.PARAM_FLOAT3] = new Float32Array([ 0, 0, 0 ]), o[a.default.PARAM_FLOAT4] = new Float32Array([ 0, 0, 0, 0 ]), 
o[a.default.PARAM_MAT4] = cc.mat4().m, o[a.default.PARAM_TEXTURE_2D] = null, o.number = 0, 
o.boolean = !1, o);
i.enums2default = m;
var y = function(t) {
return d[t] || d.default;
};
i.getInstanceType = y;
var v = function(t) {
return _[y(t)];
};
i.getInstanceCtor = v;
var g = function(t) {
return cc.js.getClassName(y(t));
};
i.getClassName = g;
var b = {
Number: "number",
Boolean: "boolean"
};
}), {
"../core/assets/CCTexture2D": 92,
"../core/value-types": 328,
"./enums": 353,
"./gfx/texture-2d": void 0
} ],
360: [ (function(t, e, i) {
"use strict";
var n = t("../compression/ZipUtils"), r = t("../compression/zlib.min"), s = t("../core/platform/js");
t("../core/platform/CCSAXParser");
function o(t) {
if (t.length % 4 != 0) return null;
for (var e = t.length / 4, i = window.Uint32Array ? new Uint32Array(e) : [], n = 0; n < e; n++) {
var r = 4 * n;
i[n] = t[r] + 256 * t[r + 1] + 65536 * t[r + 2] + t[r + 3] * (1 << 24);
}
return i;
}
cc.TMXLayerInfo = function() {
this.properties = {};
this.name = "";
this._layerSize = null;
this._tiles = [];
this.visible = !0;
this._opacity = 0;
this.ownTiles = !0;
this._minGID = 1e5;
this._maxGID = 0;
this.offset = cc.v2(0, 0);
};
cc.TMXLayerInfo.prototype = {
constructor: cc.TMXLayerInfo,
getProperties: function() {
return this.properties;
},
setProperties: function(t) {
this.properties = t;
}
};
cc.TMXImageLayerInfo = function() {
this.name = "";
this.visible = !0;
this.width = 0;
this.height = 0;
this.offset = cc.v2(0, 0);
this._opacity = 0;
this._trans = new cc.Color(255, 255, 255, 255);
this.sourceImage = null;
};
cc.TMXObjectGroupInfo = function() {
this.properties = {};
this.name = "";
this._objects = [];
this.visible = !0;
this._opacity = 0;
this._color = new cc.Color(255, 255, 255, 255);
this.offset = cc.v2(0, 0);
this._draworder = "topdown";
};
cc.TMXObjectGroupInfo.prototype = {
constructor: cc.TMXObjectGroupInfo,
getProperties: function() {
return this.properties;
},
setProperties: function(t) {
this.properties = t;
}
};
cc.TMXTilesetInfo = function() {
this.name = "";
this.firstGid = 0;
this.spacing = 0;
this.margin = 0;
this.sourceImage = null;
this.imageSize = cc.size(0, 0);
this.tileOffset = cc.v2(0, 0);
this._tileSize = cc.size(0, 0);
};
cc.TMXTilesetInfo.prototype = {
constructor: cc.TMXTilesetInfo,
rectForGID: function(t, e) {
var i = e || cc.rect(0, 0, 0, 0);
i.width = this._tileSize.width;
i.height = this._tileSize.height;
t &= cc.TiledMap.TileFlag.FLIPPED_MASK;
t -= parseInt(this.firstGid, 10);
var n = parseInt((this.imageSize.width - 2 * this.margin + this.spacing) / (this._tileSize.width + this.spacing), 10);
i.x = parseInt(t % n * (this._tileSize.width + this.spacing) + this.margin, 10);
i.y = parseInt(parseInt(t / n, 10) * (this._tileSize.height + this.spacing) + this.margin, 10);
return i;
}
};
function a(t) {
var e = cc.Label.HorizontalAlign;
switch (t) {
case "center":
return e.CENTER;

case "right":
return e.RIGHT;

default:
return e.LEFT;
}
}
function c(t) {
var e = cc.Label.VerticalAlign;
switch (t) {
case "center":
return e.CENTER;

case "bottom":
return e.BOTTOM;

default:
return e.TOP;
}
}
function l(t) {
if (!t) return cc.color(0, 0, 0, 255);
if (8 === (t = -1 !== t.indexOf("#") ? t.substring(1) : t).length) {
var e = parseInt(t.substr(0, 2), 16) || 255, i = parseInt(t.substr(2, 2), 16) || 0, n = parseInt(t.substr(4, 2), 16) || 0, r = parseInt(t.substr(6, 2), 16) || 0;
return cc.color(i, n, r, e);
}
var s = parseInt(t.substr(0, 2), 16) || 0, o = parseInt(t.substr(2, 2), 16) || 0, a = parseInt(t.substr(4, 2), 16) || 0;
return cc.color(s, o, a, 255);
}
function u(t, e) {
for (var i = [], n = t.getElementsByTagName("properties"), r = 0; r < n.length; ++r) for (var s = n[r].getElementsByTagName("property"), o = 0; o < s.length; ++o) i.push(s[o]);
e = e || {};
for (var a = 0; a < i.length; a++) {
var c = i[a], u = c.getAttribute("name"), h = c.getAttribute("type") || "string", f = c.getAttribute("value");
"int" === h ? f = parseInt(f) : "float" === h ? f = parseFloat(f) : "bool" === h ? f = "true" === f : "color" === h && (f = l(f));
e[u] = f;
}
return e;
}
cc.TMXMapInfo = function(t, e, i, n, r) {
this.properties = [];
this.orientation = null;
this.parentElement = null;
this.parentGID = null;
this.layerAttrs = 0;
this.storingCharacters = !1;
this.currentString = null;
this.renderOrder = cc.TiledMap.RenderOrder.RightDown;
this._supportVersion = [ 1, 2, 0 ];
this._parser = new cc.SAXParser();
this._objectGroups = [];
this._allChildren = [];
this._mapSize = cc.size(0, 0);
this._tileSize = cc.size(0, 0);
this._layers = [];
this._tilesets = [];
this._imageLayers = [];
this._tileProperties = {};
this._tileAnimations = {};
this._tsxMap = null;
this._textures = null;
this._staggerAxis = null;
this._staggerIndex = null;
this._hexSideLength = 0;
this._imageLayerTextures = null;
this.initWithXML(t, e, i, n, r);
};
cc.TMXMapInfo.prototype = {
constructor: cc.TMXMapInfo,
getOrientation: function() {
return this.orientation;
},
setOrientation: function(t) {
this.orientation = t;
},
getStaggerAxis: function() {
return this._staggerAxis;
},
setStaggerAxis: function(t) {
this._staggerAxis = t;
},
getStaggerIndex: function() {
return this._staggerIndex;
},
setStaggerIndex: function(t) {
this._staggerIndex = t;
},
getHexSideLength: function() {
return this._hexSideLength;
},
setHexSideLength: function(t) {
this._hexSideLength = t;
},
getMapSize: function() {
return cc.size(this._mapSize.width, this._mapSize.height);
},
setMapSize: function(t) {
this._mapSize.width = t.width;
this._mapSize.height = t.height;
},
_getMapWidth: function() {
return this._mapSize.width;
},
_setMapWidth: function(t) {
this._mapSize.width = t;
},
_getMapHeight: function() {
return this._mapSize.height;
},
_setMapHeight: function(t) {
this._mapSize.height = t;
},
getTileSize: function() {
return cc.size(this._tileSize.width, this._tileSize.height);
},
setTileSize: function(t) {
this._tileSize.width = t.width;
this._tileSize.height = t.height;
},
_getTileWidth: function() {
return this._tileSize.width;
},
_setTileWidth: function(t) {
this._tileSize.width = t;
},
_getTileHeight: function() {
return this._tileSize.height;
},
_setTileHeight: function(t) {
this._tileSize.height = t;
},
getLayers: function() {
return this._layers;
},
setLayers: function(t) {
this._allChildren.push(t);
this._layers.push(t);
},
getImageLayers: function() {
return this._imageLayers;
},
setImageLayers: function(t) {
this._allChildren.push(t);
this._imageLayers.push(t);
},
getTilesets: function() {
return this._tilesets;
},
setTilesets: function(t) {
this._tilesets.push(t);
},
getObjectGroups: function() {
return this._objectGroups;
},
setObjectGroups: function(t) {
this._allChildren.push(t);
this._objectGroups.push(t);
},
getAllChildren: function() {
return this._allChildren;
},
getParentElement: function() {
return this.parentElement;
},
setParentElement: function(t) {
this.parentElement = t;
},
getParentGID: function() {
return this.parentGID;
},
setParentGID: function(t) {
this.parentGID = t;
},
getLayerAttribs: function() {
return this.layerAttrs;
},
setLayerAttribs: function(t) {
this.layerAttrs = t;
},
getStoringCharacters: function() {
return this.storingCharacters;
},
setStoringCharacters: function(t) {
this.storingCharacters = t;
},
getProperties: function() {
return this.properties;
},
setProperties: function(t) {
this.properties = t;
},
initWithXML: function(t, e, i, n, r) {
this._tilesets.length = 0;
this._layers.length = 0;
this._imageLayers.length = 0;
this._tsxMap = e;
this._textures = i;
this._imageLayerTextures = r;
this._textureSizes = n;
this._objectGroups.length = 0;
this._allChildren.length = 0;
this.properties.length = 0;
this._tileProperties = {};
this._tileAnimations = {};
this.currentString = "";
this.storingCharacters = !1;
this.layerAttrs = cc.TMXLayerInfo.ATTRIB_NONE;
this.parentElement = cc.TiledMap.NONE;
return this.parseXMLString(t);
},
parseXMLString: function(t, e) {
var i, n = this._parser._parseXML(t).documentElement, r = n.getAttribute("orientation"), s = n.getAttribute("staggeraxis"), o = n.getAttribute("staggerindex"), a = n.getAttribute("hexsidelength"), c = n.getAttribute("renderorder"), l = n.getAttribute("version") || "1.0.0";
if ("map" === n.nodeName) {
for (var h = l.split("."), f = this._supportVersion, _ = 0; _ < f.length; _++) {
var d = parseInt(h[_]) || 0;
if (f[_] < d) {
cc.logID(7216, l);
break;
}
}
"orthogonal" === r ? this.orientation = cc.TiledMap.Orientation.ORTHO : "isometric" === r ? this.orientation = cc.TiledMap.Orientation.ISO : "hexagonal" === r ? this.orientation = cc.TiledMap.Orientation.HEX : null !== r && cc.logID(7217, r);
this.renderOrder = "right-up" === c ? cc.TiledMap.RenderOrder.RightUp : "left-up" === c ? cc.TiledMap.RenderOrder.LeftUp : "left-down" === c ? cc.TiledMap.RenderOrder.LeftDown : cc.TiledMap.RenderOrder.RightDown;
"x" === s ? this.setStaggerAxis(cc.TiledMap.StaggerAxis.STAGGERAXIS_X) : "y" === s && this.setStaggerAxis(cc.TiledMap.StaggerAxis.STAGGERAXIS_Y);
"odd" === o ? this.setStaggerIndex(cc.TiledMap.StaggerIndex.STAGGERINDEX_ODD) : "even" === o && this.setStaggerIndex(cc.TiledMap.StaggerIndex.STAGGERINDEX_EVEN);
a && this.setHexSideLength(parseFloat(a));
var p = cc.size(0, 0);
p.width = parseFloat(n.getAttribute("width"));
p.height = parseFloat(n.getAttribute("height"));
this.setMapSize(p);
(p = cc.size(0, 0)).width = parseFloat(n.getAttribute("tilewidth"));
p.height = parseFloat(n.getAttribute("tileheight"));
this.setTileSize(p);
this.properties = u(n);
}
var m = n.getElementsByTagName("tileset");
"map" !== n.nodeName && (m = []).push(n);
for (i = 0; i < m.length; i++) {
var y = m[i], v = y.getAttribute("source");
if (v) {
var g = parseInt(y.getAttribute("firstgid")), b = this._tsxMap[v];
b && this.parseXMLString(b, g);
} else {
var C = y.getElementsByTagName("image"), x = C.length > 1, A = C[0], S = A.getAttribute("source");
S.replace(/\\/g, "/");
var w = y.getElementsByTagName("tile"), T = w && w.length || 1, E = null, M = y.getAttribute("name") || "", B = parseInt(y.getAttribute("spacing")) || 0, D = parseInt(y.getAttribute("margin")) || 0, R = parseInt(e);
R || (R = parseInt(y.getAttribute("firstgid")) || 0);
var I = cc.size(0, 0);
I.width = parseFloat(y.getAttribute("tilewidth"));
I.height = parseFloat(y.getAttribute("tileheight"));
var P = y.getElementsByTagName("tileoffset")[0], O = cc.v2(0, 0);
if (P) {
O.x = parseFloat(P.getAttribute("x"));
O.y = parseFloat(P.getAttribute("y"));
}
for (var L = null, V = 0; V < T; V++) {
if (!L || x) {
(L = new cc.TMXTilesetInfo()).name = M;
L.firstGid = R;
L.spacing = B;
L.margin = D;
L._tileSize = I;
L.tileOffset = O;
L.sourceImage = this._textures[S];
L.imageSize = this._textureSizes[S] || L.imageSize;
L.sourceImage || cc.errorID(7221, S);
this.setTilesets(L);
}
if (E = w && w[V]) {
this.parentGID = parseInt(R) + parseInt(E.getAttribute("id") || 0);
var N = E.getElementsByTagName("image");
if (N && N.length > 0) {
var F = (A = N[0]).getAttribute("source");
F.replace(/\\/g, "/");
L.sourceImage = this._textures[F];
L.sourceImage || cc.errorID(7221, F);
var z = cc.size(0, 0);
z.width = parseFloat(A.getAttribute("width"));
z.height = parseFloat(A.getAttribute("height"));
L._tileSize = z;
L.firstGid = this.parentGID;
}
this._tileProperties[this.parentGID] = u(E);
var k = E.getElementsByTagName("animation");
if (k && k.length > 0) {
var G = k[0].getElementsByTagName("frame"), U = {
frames: [],
dt: 0,
frameIdx: 0
};
this._tileAnimations[this.parentGID] = U;
for (var j = U.frames, H = 0; H < G.length; H++) {
var W = G[H], q = parseInt(R) + parseInt(W.getAttribute("tileid")), X = parseFloat(W.getAttribute("duration"));
j.push({
tileid: q,
duration: X / 1e3,
grid: null
});
}
}
}
}
}
}
var Y = n.childNodes;
for (i = 0; i < Y.length; i++) {
var J = Y[i];
if (!this._shouldIgnoreNode(J)) {
if ("imagelayer" === J.nodeName) {
var Z = this._parseImageLayer(J);
Z && this.setImageLayers(Z);
}
if ("layer" === J.nodeName) {
var K = this._parseLayer(J);
this.setLayers(K);
}
if ("objectgroup" === J.nodeName) {
var Q = this._parseObjectGroup(J);
this.setObjectGroups(Q);
}
}
}
return n;
},
_shouldIgnoreNode: function(t) {
return 3 === t.nodeType || 8 === t.nodeType || 4 === t.nodeType;
},
_parseImageLayer: function(t) {
var e = t.getElementsByTagName("image");
if (!e || 0 == e.length) return null;
var i = new cc.TMXImageLayerInfo();
i.name = t.getAttribute("name");
i.offset.x = parseFloat(t.getAttribute("offsetx")) || 0;
i.offset.y = parseFloat(t.getAttribute("offsety")) || 0;
var n = t.getAttribute("visible");
i.visible = !("0" === n);
var r = t.getAttribute("opacity") || 1;
i.opacity = parseInt(255 * parseFloat(r)) || 255;
var s = e[0], o = s.getAttribute("source");
i.sourceImage = this._imageLayerTextures[o];
i.width = parseInt(s.getAttribute("width")) || 0;
i.height = parseInt(s.getAttribute("height")) || 0;
i.trans = l(s.getAttribute("trans"));
if (!i.sourceImage) {
cc.errorID(7221, o);
return null;
}
return i;
},
_parseLayer: function(t) {
var e = t.getElementsByTagName("data")[0], i = new cc.TMXLayerInfo();
i.name = t.getAttribute("name");
var s = cc.size(0, 0);
s.width = parseFloat(t.getAttribute("width"));
s.height = parseFloat(t.getAttribute("height"));
i._layerSize = s;
var a = t.getAttribute("visible");
i.visible = !("0" === a);
var c = t.getAttribute("opacity") || 1;
i._opacity = c ? parseInt(255 * parseFloat(c)) : 255;
i.offset = cc.v2(parseFloat(t.getAttribute("offsetx")) || 0, parseFloat(t.getAttribute("offsety")) || 0);
for (var l = "", h = 0; h < e.childNodes.length; h++) l += e.childNodes[h].nodeValue;
l = l.trim();
var f, _ = e.getAttribute("compression"), d = e.getAttribute("encoding");
if (_ && "gzip" !== _ && "zlib" !== _) {
cc.logID(7218);
return null;
}
switch (_) {
case "gzip":
f = n.unzipBase64AsArray(l, 4);
break;

case "zlib":
f = o(new r.Inflate(n.Base64.decodeAsArray(l, 1)).decompress());
break;

case null:
case "":
if ("base64" === d) f = n.Base64.decodeAsArray(l, 4); else if ("csv" === d) {
f = [];
for (var p = l.split(","), m = 0; m < p.length; m++) f.push(parseInt(p[m]));
} else {
var y = e.getElementsByTagName("tile");
f = [];
for (var v = 0; v < y.length; v++) f.push(parseInt(y[v].getAttribute("gid")));
}
break;

default:
this.layerAttrs === cc.TMXLayerInfo.ATTRIB_NONE && cc.logID(7219);
}
f && (i._tiles = new Uint32Array(f));
i.properties = u(t);
return i;
},
_parseObjectGroup: function(t) {
var e = new cc.TMXObjectGroupInfo();
e.name = t.getAttribute("name") || "";
e.offset = cc.v2(parseFloat(t.getAttribute("offsetx")), parseFloat(t.getAttribute("offsety")));
var i = t.getAttribute("opacity") || 1;
e._opacity = i ? parseInt(255 * parseFloat(i)) : 255;
var n = t.getAttribute("visible");
n && 0 === parseInt(n) && (e.visible = !1);
var r = t.getAttribute("color");
r && e._color.fromHEX(r);
var s = t.getAttribute("draworder");
s && (e._draworder = s);
e.setProperties(u(t));
var o = t.getElementsByTagName("object");
if (o) {
for (var h = 0; h < o.length; h++) {
var f = o[h], _ = {};
_.id = f.getAttribute("id") || h;
_.name = f.getAttribute("name") || "";
_.width = parseFloat(f.getAttribute("width")) || 0;
_.height = parseFloat(f.getAttribute("height")) || 0;
_.x = parseFloat(f.getAttribute("x")) || 0;
_.y = parseFloat(f.getAttribute("y")) || 0;
_.rotation = parseFloat(f.getAttribute("rotation")) || 0;
u(f, _);
var d = f.getAttribute("visible");
_.visible = !(d && 0 === parseInt(d));
var p = f.getElementsByTagName("text");
if (p && p.length > 0) {
var m = p[0];
_.type = cc.TiledMap.TMXObjectType.TEXT;
_.wrap = "1" == m.getAttribute("wrap");
_.color = l(m.getAttribute("color"));
_.halign = a(m.getAttribute("halign"));
_.valign = c(m.getAttribute("valign"));
_.pixelsize = parseInt(m.getAttribute("pixelsize")) || 16;
_.text = m.childNodes[0].nodeValue;
}
var y = f.getAttribute("gid");
if (y) {
_.gid = parseInt(y);
_.type = cc.TiledMap.TMXObjectType.IMAGE;
}
var v = f.getElementsByTagName("ellipse");
v && v.length > 0 && (_.type = cc.TiledMap.TMXObjectType.ELLIPSE);
var g = f.getElementsByTagName("polygon");
if (g && g.length > 0) {
_.type = cc.TiledMap.TMXObjectType.POLYGON;
var b = g[0].getAttribute("points");
b && (_.points = this._parsePointsString(b));
}
var C = f.getElementsByTagName("polyline");
if (C && C.length > 0) {
_.type = cc.TiledMap.TMXObjectType.POLYLINE;
var x = C[0].getAttribute("points");
x && (_.polylinePoints = this._parsePointsString(x));
}
_.type || (_.type = cc.TiledMap.TMXObjectType.RECT);
e._objects.push(_);
}
"index" !== s && e._objects.sort((function(t, e) {
return t.y - e.y;
}));
}
return e;
},
_parsePointsString: function(t) {
if (!t) return null;
for (var e = [], i = t.split(" "), n = 0; n < i.length; n++) {
var r = i[n].split(",");
e.push({
x: parseFloat(r[0]),
y: parseFloat(r[1])
});
}
return e;
},
setTileAnimations: function(t) {
this._tileAnimations = t;
},
getTileAnimations: function() {
return this._tileAnimations;
},
getTileProperties: function() {
return this._tileProperties;
},
setTileProperties: function(t) {
this._tileProperties = t;
},
getCurrentString: function() {
return this.currentString;
},
setCurrentString: function(t) {
this.currentString = t;
}
};
var h = cc.TMXMapInfo.prototype;
s.getset(h, "mapWidth", h._getMapWidth, h._setMapWidth);
s.getset(h, "mapHeight", h._getMapHeight, h._setMapHeight);
s.getset(h, "tileWidth", h._getTileWidth, h._setTileWidth);
s.getset(h, "tileHeight", h._getTileHeight, h._setTileHeight);
cc.TMXLayerInfo.ATTRIB_NONE = 1;
cc.TMXLayerInfo.ATTRIB_BASE64 = 2;
cc.TMXLayerInfo.ATTRIB_GZIP = 4;
cc.TMXLayerInfo.ATTRIB_ZLIB = 8;
}), {
"../compression/ZipUtils": 22,
"../compression/zlib.min": 25,
"../core/platform/CCSAXParser": 237,
"../core/platform/js": 250
} ],
361: [ (function(t, e, i) {
"use strict";
var n = t("../core/value-types"), r = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../core/assets/material/material-variant"));
var s = t("../core/components/CCRenderComponent"), o = t("../core/assets/material/CCMaterial"), a = t("../core/renderer/render-flow"), c = cc.mat4(), l = cc.v2(), u = cc.v2(), h = {
row: 0,
col: 0
}, f = cc.Class({
name: "cc.TiledUserNodeData",
extends: cc.Component,
ctor: function() {
this._index = -1;
this._row = -1;
this._col = -1;
this._tiledLayer = null;
}
}), _ = cc.Class({
name: "cc.TiledLayer",
extends: s,
editor: {
inspector: "packages://inspector/inspectors/comps/tiled-layer.js"
},
ctor: function() {
this._userNodeGrid = {};
this._userNodeMap = {};
this._userNodeDirty = !1;
this._tiledTiles = [];
this._tilesetIndexArr = [];
this._texIdToMatIndex = {};
this._viewPort = {
x: -1,
y: -1,
width: -1,
height: -1
};
this._cullingRect = {
leftDown: {
row: -1,
col: -1
},
rightTop: {
row: -1,
col: -1
}
};
this._cullingDirty = !0;
this._rightTop = {
row: -1,
col: -1
};
this._layerInfo = null;
this._mapInfo = null;
this._topOffset = 0;
this._downOffset = 0;
this._leftOffset = 0;
this._rightOffset = 0;
this._tiles = [];
this._vertices = [];
this._verticesDirty = !0;
this._layerName = "";
this._layerOrientation = null;
this._texGrids = null;
this._textures = null;
this._tilesets = null;
this._leftDownToCenterX = 0;
this._leftDownToCenterY = 0;
this._hasTiledNodeGrid = !1;
this._hasAniGrid = !1;
this._animations = null;
this._enableCulling = cc.macro.ENABLE_TILEDMAP_CULLING;
},
_hasTiledNode: function() {
return this._hasTiledNodeGrid;
},
_hasAnimation: function() {
return this._hasAniGrid;
},
enableCulling: function(t) {
if (this._enableCulling != t) {
this._enableCulling = t;
this._cullingDirty = !0;
}
},
addUserNode: function(t) {
var e = t.getComponent(f);
if (e) {
cc.warn("CCTiledLayer:addUserNode node has been added");
return !1;
}
e = t.addComponent(f);
t.parent = this.node;
t._renderFlag |= a.FLAG_BREAK_FLOW;
this._userNodeMap[t._id] = e;
e._row = -1;
e._col = -1;
e._tiledLayer = this;
this._nodeLocalPosToLayerPos(t, l);
this._positionToRowCol(l.x, l.y, h);
this._addUserNodeToGrid(e, h);
this._updateCullingOffsetByUserNode(t);
t.on(cc.Node.EventType.POSITION_CHANGED, this._userNodePosChange, e);
t.on(cc.Node.EventType.SIZE_CHANGED, this._userNodeSizeChange, e);
return !0;
},
removeUserNode: function(t) {
var e = t.getComponent(f);
if (!e) {
cc.warn("CCTiledLayer:removeUserNode node is not exist");
return !1;
}
t.off(cc.Node.EventType.POSITION_CHANGED, this._userNodePosChange, e);
t.off(cc.Node.EventType.SIZE_CHANGED, this._userNodeSizeChange, e);
this._removeUserNodeFromGrid(e);
delete this._userNodeMap[t._id];
t._removeComponent(e);
e.destroy();
t.removeFromParent(!0);
t._renderFlag &= ~a.FLAG_BREAK_FLOW;
return !0;
},
destroyUserNode: function(t) {
this.removeUserNode(t);
t.destroy();
},
_nodeLocalPosToLayerPos: function(t, e) {
e.x = t.x + this._leftDownToCenterX;
e.y = t.y + this._leftDownToCenterY;
},
_getNodesByRowCol: function(t, e) {
var i = this._userNodeGrid[t];
return i ? i[e] : null;
},
_getNodesCountByRow: function(t) {
var e = this._userNodeGrid[t];
return e ? e.count : 0;
},
_updateAllUserNode: function() {
this._userNodeGrid = {};
for (var t in this._userNodeMap) {
var e = this._userNodeMap[t];
this._nodeLocalPosToLayerPos(e.node, l);
this._positionToRowCol(l.x, l.y, h);
this._addUserNodeToGrid(e, h);
this._updateCullingOffsetByUserNode(e.node);
}
},
_updateCullingOffsetByUserNode: function(t) {
this._topOffset < t.height && (this._topOffset = t.height);
this._downOffset < t.height && (this._downOffset = t.height);
this._leftOffset < t.width && (this._leftOffset = t.width);
this._rightOffset < t.width && (this._rightOffset = t.width);
},
_userNodeSizeChange: function() {
var t = this.node;
this._tiledLayer._updateCullingOffsetByUserNode(t);
},
_userNodePosChange: function() {
var t = this.node, e = this._tiledLayer;
e._nodeLocalPosToLayerPos(t, l);
e._positionToRowCol(l.x, l.y, h);
e._limitInLayer(h);
if (h.row !== this._row || h.col !== this._col) {
e._removeUserNodeFromGrid(this);
e._addUserNodeToGrid(this, h);
}
},
_removeUserNodeFromGrid: function(t) {
var e = t._row, i = t._col, n = t._index, r = this._userNodeGrid[e], s = r && r[i];
if (s) {
r.count--;
s.count--;
s.list[n] = null;
if (s.count <= 0) {
s.list.length = 0;
s.count = 0;
}
}
t._row = -1;
t._col = -1;
t._index = -1;
this._userNodeDirty = !0;
},
_limitInLayer: function(t) {
var e = t.row, i = t.col;
e < 0 && (t.row = 0);
e > this._rightTop.row && (t.row = this._rightTop.row);
i < 0 && (t.col = 0);
i > this._rightTop.col && (t.col = this._rightTop.col);
},
_addUserNodeToGrid: function(t, e) {
var i = e.row, n = e.col, r = this._userNodeGrid[i] = this._userNodeGrid[i] || {
count: 0
}, s = r[n] = r[n] || {
count: 0,
list: []
};
t._row = i;
t._col = n;
t._index = s.list.length;
r.count++;
s.count++;
s.list.push(t);
this._userNodeDirty = !0;
},
_isUserNodeDirty: function() {
return this._userNodeDirty;
},
_setUserNodeDirty: function(t) {
this._userNodeDirty = t;
},
onEnable: function() {
this._super();
this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this._syncAnchorPoint, this);
this._activateMaterial();
},
onDisable: function() {
this._super();
this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this._syncAnchorPoint, this);
},
_syncAnchorPoint: function() {
var t = this.node;
this._leftDownToCenterX = t.width * t.anchorX * t.scaleX;
this._leftDownToCenterY = t.height * t.anchorY * t.scaleY;
this._cullingDirty = !0;
},
onDestroy: function() {
this._super();
if (this._buffer) {
this._buffer.destroy();
this._buffer = null;
}
this._renderDataList = null;
},
getLayerName: function() {
return this._layerName;
},
setLayerName: function(t) {
this._layerName = t;
},
getProperty: function(t) {
return this._properties[t];
},
getPositionAt: function(t, e) {
var i, n;
if (void 0 !== e) {
i = Math.floor(t);
e = Math.floor(e);
} else {
i = Math.floor(t.x);
e = Math.floor(t.y);
}
switch (this._layerOrientation) {
case cc.TiledMap.Orientation.ORTHO:
n = this._positionForOrthoAt(i, e);
break;

case cc.TiledMap.Orientation.ISO:
n = this._positionForIsoAt(i, e);
break;

case cc.TiledMap.Orientation.HEX:
n = this._positionForHexAt(i, e);
}
return n;
},
_isInvalidPosition: function(t, e) {
if (t && "object" == typeof t) {
var i = t;
e = i.y;
t = i.x;
}
return t >= this._layerSize.width || e >= this._layerSize.height || t < 0 || e < 0;
},
_positionForIsoAt: function(t, e) {
var i = 0, n = 0, r = Math.floor(t) + Math.floor(e) * this._layerSize.width, s = this._tiles[r];
if (s) {
var o = this._texGrids[s].tileset.tileOffset;
i = o.x;
n = o.y;
}
return cc.v2(.5 * this._mapTileSize.width * (this._layerSize.height + t - e - 1) + i, .5 * this._mapTileSize.height * (this._layerSize.width - t + this._layerSize.height - e - 2) - n);
},
_positionForOrthoAt: function(t, e) {
var i = 0, n = 0, r = Math.floor(t) + Math.floor(e) * this._layerSize.width, s = this._tiles[r];
if (s) {
var o = this._texGrids[s].tileset.tileOffset;
i = o.x;
n = o.y;
}
return cc.v2(t * this._mapTileSize.width + i, (this._layerSize.height - e - 1) * this._mapTileSize.height - n);
},
_positionForHexAt: function(t, e) {
var i = this._mapTileSize.width, n = this._mapTileSize.height, r = this._layerSize.height, s = Math.floor(t) + Math.floor(e) * this._layerSize.width, o = this._tiles[s], a = this._texGrids[o].tileset.tileOffset, c = this._staggerIndex === cc.TiledMap.StaggerIndex.STAGGERINDEX_ODD ? 1 : -1, l = 0, u = 0, h = 0, f = 0;
switch (this._staggerAxis) {
case cc.TiledMap.StaggerAxis.STAGGERAXIS_Y:
h = 0;
e % 2 == 1 && (h = i / 2 * c);
l = t * i + h + a.x;
u = (r - e - 1) * (n - (n - this._hexSideLength) / 2) - a.y;
break;

case cc.TiledMap.StaggerAxis.STAGGERAXIS_X:
f = 0;
t % 2 == 1 && (f = n / 2 * -c);
l = t * (i - (i - this._hexSideLength) / 2) + a.x;
u = (r - e - 1) * n + f - a.y;
}
return cc.v2(l, u);
},
setTileGIDAt: function(t, e, i, n) {
if (void 0 === e) throw new Error("cc.TiledLayer.setTileGIDAt(): pos should be non-null");
var r;
if (void 0 === n && e instanceof cc.Vec2) {
r = e;
n = i;
} else r = cc.v2(e, i);
r.x = Math.floor(r.x);
r.y = Math.floor(r.y);
if (this._isInvalidPosition(r)) throw new Error("cc.TiledLayer.setTileGIDAt(): invalid position");
if (this._tiles && this._tilesets && 0 != this._tilesets.length) if (0 !== t && t < this._tilesets[0].firstGid) cc.logID(7239, t); else {
n = n || 0;
var s = this.getTileFlagsAt(r);
if (this.getTileGIDAt(r) !== t || s !== n) {
var o = (t | n) >>> 0;
this._updateTileForGID(o, r);
}
} else cc.logID(7238);
},
_updateTileForGID: function(t, e) {
if (0 === t || this._texGrids[t]) {
var i = 0 | e.x + e.y * this._layerSize.width;
if (i < this._tiles.length) {
this._tiles[i] = t;
this._cullingDirty = !0;
}
}
},
getTileGIDAt: function(t, e) {
if (void 0 === t) throw new Error("cc.TiledLayer.getTileGIDAt(): pos should be non-null");
var i = t;
if (void 0 === e) {
i = t.x;
e = t.y;
}
if (this._isInvalidPosition(i, e)) throw new Error("cc.TiledLayer.getTileGIDAt(): invalid position");
if (!this._tiles) {
cc.logID(7237);
return null;
}
var n = Math.floor(i) + Math.floor(e) * this._layerSize.width;
return (this._tiles[n] & cc.TiledMap.TileFlag.FLIPPED_MASK) >>> 0;
},
getTileFlagsAt: function(t, e) {
if (!t) throw new Error("TiledLayer.getTileFlagsAt: pos should be non-null");
void 0 !== e && (t = cc.v2(t, e));
if (this._isInvalidPosition(t)) throw new Error("TiledLayer.getTileFlagsAt: invalid position");
if (!this._tiles) {
cc.logID(7240);
return null;
}
var i = Math.floor(t.x) + Math.floor(t.y) * this._layerSize.width;
return (this._tiles[i] & cc.TiledMap.TileFlag.FLIPPED_ALL) >>> 0;
},
_setCullingDirty: function(t) {
this._cullingDirty = t;
},
_isCullingDirty: function() {
return this._cullingDirty;
},
_updateViewPort: function(t, e, i, n) {
if (this._viewPort.width !== i || this._viewPort.height !== n || this._viewPort.x !== t || this._viewPort.y !== e) {
this._viewPort.x = t;
this._viewPort.y = e;
this._viewPort.width = i;
this._viewPort.height = n;
var r = 1;
this._layerOrientation === cc.TiledMap.Orientation.ISO && (r = 2);
var s = this._viewPort.x - this._offset.x + this._leftDownToCenterX, o = this._viewPort.y - this._offset.y + this._leftDownToCenterY, a = s - this._leftOffset, c = o - this._downOffset, l = s + i + this._rightOffset, u = o + n + this._topOffset, f = this._cullingRect.leftDown, _ = this._cullingRect.rightTop;
a < 0 && (a = 0);
c < 0 && (c = 0);
this._positionToRowCol(a, c, h);
h.row -= r;
h.col -= r;
h.row = h.row > 0 ? h.row : 0;
h.col = h.col > 0 ? h.col : 0;
if (h.row !== f.row || h.col !== f.col) {
f.row = h.row;
f.col = h.col;
this._cullingDirty = !0;
}
if (l < 0 || u < 0) {
h.row = -1;
h.col = -1;
} else {
this._positionToRowCol(l, u, h);
h.row++;
h.col++;
}
h.row > this._rightTop.row && (h.row = this._rightTop.row);
h.col > this._rightTop.col && (h.col = this._rightTop.col);
if (h.row !== _.row || h.col !== _.col) {
_.row = h.row;
_.col = h.col;
this._cullingDirty = !0;
}
}
},
_positionToRowCol: function(t, e, i) {
var n = cc.TiledMap, r = n.Orientation, s = n.StaggerAxis, o = this._mapTileSize.width, a = this._mapTileSize.height, c = .5 * o, l = .5 * a, u = 0, h = 0, f = 0, _ = 0, d = this._staggerAxis;
this._layerSize.width;
switch (this._layerOrientation) {
case r.ORTHO:
h = Math.floor(t / o);
u = Math.floor(e / a);
break;

case r.ISO:
h = Math.floor(t / c);
u = Math.floor(e / l);
break;

case r.HEX:
if (d === s.STAGGERAXIS_Y) {
f = (u = Math.floor(e / (a - this._diffY1))) % 2 == 1 ? c * this._odd_even : 0;
h = Math.floor((t - f) / o);
} else {
_ = (h = Math.floor(t / (o - this._diffX1))) % 2 == 1 ? l * -this._odd_even : 0;
u = Math.floor((e - _) / a);
}
}
i.row = u;
i.col = h;
return i;
},
_updateCulling: function() {
if (this._enableCulling) {
this.node._updateWorldMatrix();
n.Mat4.invert(c, this.node._worldMatrix);
var t = cc.visibleRect, e = cc.Camera.findCamera(this.node);
if (e) {
l.x = 0;
l.y = 0;
u.x = l.x + t.width;
u.y = l.y + t.height;
e.getScreenToWorldPoint(l, l);
e.getScreenToWorldPoint(u, u);
n.Vec2.transformMat4(l, l, c);
n.Vec2.transformMat4(u, u, c);
this._updateViewPort(l.x, l.y, u.x - l.x, u.y - l.y);
}
}
},
getLayerOrientation: function() {
return this._layerOrientation;
},
getProperties: function() {
return this._properties;
},
_updateVertices: function() {
var t = cc.TiledMap, e = t.TileFlag.FLIPPED_MASK, i = t.StaggerAxis, n = t.Orientation, r = this._vertices;
r.length = 0;
var s = this._layerOrientation, o = this._tiles;
if (o) {
var a = this._rightTop;
a.row = -1;
a.col = -1;
var c, l, u, h, f, _, d, p, m, y = this._mapTileSize.width, v = this._mapTileSize.height, g = .5 * y, b = .5 * v, C = this._layerSize.height, x = this._layerSize.width, A = this._texGrids, S = 0;
if (s === n.HEX) {
h = this._staggerAxis;
f = this._diffX1;
_ = this._diffY1;
d = this._odd_even;
}
var w = 0, T = 0, E = null, M = 0;
this._topOffset = 0;
this._downOffset = 0;
this._leftOffset = 0;
this._rightOffset = 0;
this._hasAniGrid = !1;
for (var B = 0, D = 0, R = 0, I = 0, P = 0; P < C; ++P) {
for (var O = 0; O < x; ++O) {
var L = S + O;
c = A[M = (o[L] & e) >>> 0];
this._animations[M] && (this._hasAniGrid = !0);
if (c) {
switch (s) {
case n.ORTHO:
l = (w = O) * y;
u = (T = C - P - 1) * v;
break;

case n.ISO:
l = g * (w = C + O - P - 1);
u = b * (T = C + x - O - P - 2);
break;

case n.HEX:
p = h === i.STAGGERAXIS_Y && P % 2 == 1 ? g * d : 0;
m = h === i.STAGGERAXIS_X && O % 2 == 1 ? b * -d : 0;
l = O * (y - f) + p;
u = (C - P - 1) * (v - _) + m;
w = O;
T = C - P - 1;
}
var V = r[T] = r[T] || {
minCol: 0,
maxCol: 0
}, N = V[w] = V[w] || {};
V.minCol > w && (V.minCol = w);
V.maxCol < w && (V.maxCol = w);
a.row < T && (a.row = T);
a.col < w && (a.col = w);
E = c.tileset.tileOffset;
l += this._offset.x + E.x;
u += this._offset.y - E.y;
B = (B = -E.y + c.tileset._tileSize.height - v) < 0 ? 0 : B;
D = E.y < 0 ? 0 : E.y;
R = -E.x < 0 ? 0 : -E.x;
I = (I = E.x + c.tileset._tileSize.width - y) < 0 ? 0 : I;
this._rightOffset < R && (this._rightOffset = R);
this._leftOffset < I && (this._leftOffset = I);
this._topOffset < D && (this._topOffset = D);
this._downOffset < B && (this._downOffset = B);
N.left = l;
N.bottom = u;
N.index = L;
}
}
S += x;
}
this._verticesDirty = !1;
}
},
getTiledTileAt: function(t, e, i) {
if (this._isInvalidPosition(t, e)) throw new Error("TiledLayer.getTiledTileAt: invalid position");
if (!this._tiles) {
cc.logID(7236);
return null;
}
var n = Math.floor(t) + Math.floor(e) * this._layerSize.width, r = this._tiledTiles[n];
if (!r && i) {
var s = new cc.Node();
(r = s.addComponent(cc.TiledTile))._x = t;
r._y = e;
r._layer = this;
r._updateInfo();
s.parent = this.node;
return r;
}
return r;
},
setTiledTileAt: function(t, e, i) {
if (this._isInvalidPosition(t, e)) throw new Error("TiledLayer.setTiledTileAt: invalid position");
if (!this._tiles) {
cc.logID(7236);
return null;
}
var n = Math.floor(t) + Math.floor(e) * this._layerSize.width;
this._tiledTiles[n] = i;
this._cullingDirty = !0;
this._hasTiledNodeGrid = !!i || this._tiledTiles.some((function(t, e) {
return !!t;
}));
return i;
},
getTexture: function(t) {
t = t || 0;
return this._textures && t >= 0 && this._textures.length > t ? this._textures[t] : null;
},
getTextures: function() {
return this._textures;
},
setTexture: function(t) {
this.setTextures([ t ]);
},
setTextures: function(t) {
this._textures = t;
this._activateMaterial();
},
getLayerSize: function() {
return this._layerSize;
},
getMapTileSize: function() {
return this._mapTileSize;
},
getTileSet: function(t) {
t = t || 0;
return this._tilesets && t >= 0 && this._tilesets.length > t ? this._tilesets[t] : null;
},
getTileSets: function() {
return this._tilesets;
},
setTileSet: function(t) {
this.setTileSets([ t ]);
},
setTileSets: function(t) {
this._tilesets = t;
for (var e = this._textures = [], i = this._texGrids = [], n = 0; n < t.length; n++) {
var r = t[n];
r && (e[n] = r.sourceImage);
}
cc.TiledMap.loadAllTextures(e, function() {
for (var e = 0, n = t.length; e < n; ++e) {
var r = t[e];
r && cc.TiledMap.fillTextureGrids(r, i, e);
}
this._prepareToRender();
}.bind(this));
},
_traverseAllGrid: function() {
var t = this._tiles, e = this._texGrids, i = this._tilesetIndexArr, n = {}, r = cc.TiledMap.TileFlag.FLIPPED_MASK;
i.length = 0;
for (var s = 0; s < t.length; s++) {
var o = t[s];
if (0 !== o) {
var a = e[o = (o & r) >>> 0];
if (a) {
var c = a.texId;
if (!n[c]) {
n[c] = !0;
i.push(c);
}
} else cc.error("CCTiledLayer:_traverseAllGrid grid is null, gid is:", o);
}
}
},
_init: function(t, e, i, n, r) {
this._cullingDirty = !0;
this._layerInfo = t;
this._mapInfo = e;
var s = t._layerSize;
this._layerName = t.name;
this._tiles = t._tiles;
this._properties = t.properties;
this._layerSize = s;
this._minGID = t._minGID;
this._maxGID = t._maxGID;
this._opacity = t._opacity;
this._renderOrder = e.renderOrder;
this._staggerAxis = e.getStaggerAxis();
this._staggerIndex = e.getStaggerIndex();
this._hexSideLength = e.getHexSideLength();
this._animations = e.getTileAnimations();
this._tilesets = i;
this._textures = n;
this._texGrids = r;
this._layerOrientation = e.orientation;
this._mapTileSize = e.getTileSize();
var o = this._mapTileSize.width, a = this._mapTileSize.height, c = this._layerSize.width, l = this._layerSize.height;
if (this._layerOrientation === cc.TiledMap.Orientation.HEX) {
var u = cc.TiledMap, h = u.StaggerAxis, f = u.StaggerIndex, _ = 0, d = 0;
this._odd_even = this._staggerIndex === f.STAGGERINDEX_ODD ? 1 : -1;
if (this._staggerAxis === h.STAGGERAXIS_X) {
this._diffX1 = (o - this._hexSideLength) / 2;
this._diffY1 = 0;
d = a * (l + .5);
_ = (o + this._hexSideLength) * Math.floor(c / 2) + o * (c % 2);
} else {
this._diffX1 = 0;
this._diffY1 = (a - this._hexSideLength) / 2;
_ = o * (c + .5);
d = (a + this._hexSideLength) * Math.floor(l / 2) + a * (l % 2);
}
this.node.setContentSize(_, d);
} else if (this._layerOrientation === cc.TiledMap.Orientation.ISO) {
var p = c + l;
this.node.setContentSize(.5 * o * p, .5 * a * p);
} else this.node.setContentSize(c * o, l * a);
this._offset = cc.v2(t.offset.x, -t.offset.y);
this._useAutomaticVertexZ = !1;
this._vertexZvalue = 0;
this._syncAnchorPoint();
this._prepareToRender();
},
_prepareToRender: function() {
this._updateVertices();
this._traverseAllGrid();
this._updateAllUserNode();
this._activateMaterial();
},
_activateMaterial: function() {
var t = this._tilesetIndexArr;
if (0 !== t.length) {
for (var e = this._texIdToMatIndex = {}, i = this._textures, n = t.length, s = 0; s < n; s++) {
var a = t[s], c = i[a], l = this._materials[s];
l || (l = o.getBuiltinMaterial("2d-sprite"));
(l = r.default.create(l, this)).define("CC_USE_MODEL", !0);
l.setProperty("texture", c);
this._materials[s] = l;
e[a] = s;
}
this._materials.length = n;
this.markForRender(!0);
} else this.disableRender();
}
});
cc.TiledLayer = e.exports = _;
}), {
"../core/assets/material/CCMaterial": 95,
"../core/assets/material/material-variant": 102,
"../core/components/CCRenderComponent": 131,
"../core/renderer/render-flow": 263,
"../core/value-types": 328
} ],
362: [ (function(t, e, i) {
"use strict";
t("./CCTMXXMLParser");
t("./CCTiledMapAsset");
t("./CCTiledLayer");
t("./CCTiledTile");
t("./CCTiledObjectGroup");
var n = cc.Enum({
ORTHO: 0,
HEX: 1,
ISO: 2
}), r = cc.Enum({
NONE: 0,
MAP: 1,
LAYER: 2,
OBJECTGROUP: 3,
OBJECT: 4,
TILE: 5
}), s = cc.Enum({
HORIZONTAL: 2147483648,
VERTICAL: 1073741824,
DIAGONAL: 536870912,
FLIPPED_ALL: 4026531840,
FLIPPED_MASK: 268435455
}), o = cc.Enum({
STAGGERAXIS_X: 0,
STAGGERAXIS_Y: 1
}), a = cc.Enum({
STAGGERINDEX_ODD: 0,
STAGGERINDEX_EVEN: 1
}), c = cc.Enum({
RightDown: 0,
RightUp: 1,
LeftDown: 2,
LeftUp: 3
}), l = cc.Enum({
RECT: 0,
ELLIPSE: 1,
POLYGON: 2,
POLYLINE: 3,
IMAGE: 4,
TEXT: 5
}), u = cc.Class({
name: "cc.TiledMap",
extends: cc.Component,
editor: !1,
ctor: function() {
this._texGrids = [];
this._textures = [];
this._tilesets = [];
this._animations = [];
this._imageLayers = [];
this._layers = [];
this._groups = [];
this._images = [];
this._properties = [];
this._tileProperties = [];
this._mapSize = cc.size(0, 0);
this._tileSize = cc.size(0, 0);
},
statics: {
Orientation: n,
Property: r,
TileFlag: s,
StaggerAxis: o,
StaggerIndex: a,
TMXObjectType: l,
RenderOrder: c
},
properties: {
_tmxFile: {
default: null,
type: cc.TiledMapAsset
},
tmxAsset: {
get: function() {
return this._tmxFile;
},
set: function(t, e) {
if (this._tmxFile !== t) {
this._tmxFile = t;
this._applyFile();
}
},
type: cc.TiledMapAsset
}
},
getMapSize: function() {
return this._mapSize;
},
getTileSize: function() {
return this._tileSize;
},
getMapOrientation: function() {
return this._mapOrientation;
},
getObjectGroups: function() {
return this._groups;
},
getObjectGroup: function(t) {
for (var e = this._groups, i = 0, n = e.length; i < n; i++) {
var r = e[i];
if (r && r.getGroupName() === t) return r;
}
return null;
},
enableCulling: function(t) {
for (var e = this._layers, i = 0; i < e.length; ++i) e[i].enableCulling(t);
},
getProperties: function() {
return this._properties;
},
getLayers: function() {
return this._layers;
},
getLayer: function(t) {
for (var e = this._layers, i = 0, n = e.length; i < n; i++) {
var r = e[i];
if (r && r.getLayerName() === t) return r;
}
return null;
},
_changeLayer: function(t, e) {
for (var i = this._layers, n = 0, r = i.length; n < r; n++) {
var s = i[n];
if (s && s.getLayerName() === t) {
i[n] = e;
return;
}
}
},
getProperty: function(t) {
return this._properties[t.toString()];
},
getPropertiesForGID: function(t) {
return this._tileProperties[t];
},
__preload: function() {
this._tmxFile && this._applyFile();
},
onEnable: function() {
this.node.on(cc.Node.EventType.ANCHOR_CHANGED, this._syncAnchorPoint, this);
},
onDisable: function() {
this.node.off(cc.Node.EventType.ANCHOR_CHANGED, this._syncAnchorPoint, this);
},
_applyFile: function() {
var t = this._tmxFile;
if (t) {
for (var e = t.textures, i = t.textureNames, n = t.textureSizes, r = {}, s = {}, o = 0; o < e.length; ++o) {
var a = i[o];
r[a] = e[o];
s[a] = n[o];
}
var c = {};
e = t.imageLayerTextures;
i = t.imageLayerTextureNames;
for (var l = 0; l < e.length; ++l) c[i[l]] = e[l];
for (var u = t.tsxFileNames, h = t.tsxFiles, f = {}, _ = 0; _ < u.length; ++_) u[_].length > 0 && (f[u[_]] = h[_].text);
var d = new cc.TMXMapInfo(t.tmxXmlStr, f, r, s, c), p = d.getTilesets();
p && 0 !== p.length || cc.logID(7241);
this._buildWithMapInfo(d);
} else this._releaseMapInfo();
},
_releaseMapInfo: function() {
for (var t = this._layers, e = 0, i = t.length; e < i; e++) {
t[e].node.removeFromParent(!0);
t[e].node.destroy();
}
t.length = 0;
for (var n = this._groups, r = 0, s = n.length; r < s; r++) {
n[r].node.removeFromParent(!0);
n[r].node.destroy();
}
n.length = 0;
for (var o = this._images, a = 0, c = o.length; a < c; a++) {
o[a].removeFromParent(!0);
o[a].destroy();
}
o.length = 0;
},
_syncAnchorPoint: function() {
var t, e, i = this.node.getAnchorPoint(), n = this.node.width * i.x, r = this.node.height * (1 - i.y);
for (t = 0, e = this._layers.length; t < e; t++) {
this._layers[t].node.setAnchorPoint(i);
}
for (t = 0, e = this._groups.length; t < e; t++) {
var s = this._groups[t], o = s.node;
o.anchorX = .5;
o.anchorY = .5;
o.x = s._offset.x - n + o.width * o.anchorX;
o.y = s._offset.y + r - o.height * o.anchorY;
}
for (t = 0, e = this._images.length; t < e; t++) {
var a = this._images[t];
a.anchorX = .5;
a.anchorY = .5;
a.x = a._offset.x - n + a.width * a.anchorX;
a.y = a._offset.y + r - a.height * a.anchorY;
}
},
_fillAniGrids: function(t, e) {
for (var i in e) {
var n = e[i];
if (n) for (var r = n.frames, s = 0; s < r.length; s++) {
var o = r[s];
o.grid = t[o.tileid];
}
}
},
_buildLayerAndGroup: function() {
var t = this._tilesets, e = this._texGrids, i = this._animations;
e.length = 0;
for (var n = 0, r = t.length; n < r; ++n) {
var s = t[n];
s && cc.TiledMap.fillTextureGrids(s, e, n);
}
this._fillAniGrids(e, i);
for (var o = this._layers, a = this._groups, c = this._images, l = {}, u = 0, h = o.length; u < h; u++) l[o[u].node._name] = !0;
for (var f = 0, _ = a.length; f < _; f++) l[a[f].node._name] = !0;
for (var d = 0, p = c.length; d < p; d++) l[c[d]._name] = !0;
o = this._layers = [];
a = this._groups = [];
c = this._images = [];
var m = this._mapInfo, y = this.node, v = m.getAllChildren(), g = this._textures, b = 0, C = 0;
if (v && v.length > 0) for (var x = 0, A = v.length; x < A; x++) {
var S = v[x], w = S.name, T = this.node.getChildByName(w);
l[w] = !1;
if (!T) {
(T = new cc.Node()).name = w;
y.addChild(T);
}
T.setSiblingIndex(x);
T.active = S.visible;
if (S instanceof cc.TMXLayerInfo) {
var E = T.getComponent(cc.TiledLayer);
E || (E = T.addComponent(cc.TiledLayer));
E._init(S, m, t, g, e);
S.ownTiles = !1;
o.push(E);
} else if (S instanceof cc.TMXObjectGroupInfo) {
var M = T.getComponent(cc.TiledObjectGroup);
M || (M = T.addComponent(cc.TiledObjectGroup));
M._init(S, m, e);
a.push(M);
} else if (S instanceof cc.TMXImageLayerInfo) {
var B = S.sourceImage;
T.opacity = S.opacity;
T.layerInfo = S;
T._offset = cc.v2(S.offset.x, -S.offset.y);
var D = T.getComponent(cc.Sprite);
D || (D = T.addComponent(cc.Sprite));
var R = D.spriteFrame || new cc.SpriteFrame();
R.setTexture(B);
D.spriteFrame = R;
T.width = B.width;
T.height = B.height;
c.push(T);
}
b = Math.max(b, T.width);
C = Math.max(C, T.height);
}
for (var I = y.children, P = 0, O = I.length; P < O; P++) {
var L = I[P];
l[L._name] && L.destroy();
}
this.node.width = b;
this.node.height = C;
this._syncAnchorPoint();
},
_buildWithMapInfo: function(t) {
this._mapInfo = t;
this._mapSize = t.getMapSize();
this._tileSize = t.getTileSize();
this._mapOrientation = t.orientation;
this._properties = t.properties;
this._tileProperties = t.getTileProperties();
this._imageLayers = t.getImageLayers();
this._animations = t.getTileAnimations();
this._tilesets = t.getTilesets();
var e = this._tilesets;
this._textures.length = 0;
for (var i = [], n = 0, r = e.length; n < r; ++n) {
var s = e[n];
if (s && s.sourceImage) {
this._textures[n] = s.sourceImage;
i.push(s.sourceImage);
}
}
for (var o = 0; o < this._imageLayers.length; o++) {
var a = this._imageLayers[o];
a && a.sourceImage && i.push(a.sourceImage);
}
cc.TiledMap.loadAllTextures(i, function() {
this._buildLayerAndGroup();
}.bind(this));
},
update: function(t) {
var e = this._animations, i = this._texGrids;
for (var n in e) {
var r = e[n], s = r.frames, o = s[r.frameIdx];
r.dt += t;
if (o.duration < r.dt) {
r.dt = 0;
r.frameIdx++;
r.frameIdx >= s.length && (r.frameIdx = 0);
o = s[r.frameIdx];
}
i[n] = o.grid;
}
}
});
cc.TiledMap = e.exports = u;
cc.TiledMap.loadAllTextures = function(t, e) {
var i = t.length;
if (0 !== i) for (var n = 0, r = function() {
++n >= i && e();
}, s = 0; s < i; s++) {
var o = t[s];
o.loaded ? r() : o.once("load", (function() {
r();
}));
} else e();
};
cc.TiledMap.fillTextureGrids = function(t, e, i) {
var n = t.sourceImage;
if (!t.imageSize.width || !t.imageSize.height) {
t.imageSize.width = n.width;
t.imageSize.height = n.height;
}
var r = t._tileSize.width, s = t._tileSize.height, o = n.width, a = n.height, c = t.spacing, l = t.margin, u = Math.floor((o - 2 * l + c) / (r + c)), h = Math.floor((a - 2 * l + c) / (s + c)) * u, f = t.firstGid, _ = null, d = !!e[f], p = cc.macro.FIX_ARTIFACTS_BY_STRECHING_TEXEL_TMX ? .5 : 0;
h <= 0 && (h = 1);
for (var m = t.firstGid + h; f < m; ++f) {
d && !e[f] && (d = !1);
if (!d && e[f]) break;
_ = {
texId: i,
tileset: t,
x: 0,
y: 0,
width: r,
height: s,
t: 0,
l: 0,
r: 0,
b: 0,
gid: f
};
t.rectForGID(f, _);
_.x += p;
_.y += p;
_.width -= 2 * p;
_.height -= 2 * p;
_.t = _.y / a;
_.l = _.x / o;
_.r = (_.x + _.width) / o;
_.b = (_.y + _.height) / a;
e[f] = _;
}
};
cc.js.obsolete(cc.TiledMap.prototype, "cc.TiledMap.tmxFile", "tmxAsset", !0);
cc.js.get(cc.TiledMap.prototype, "mapLoaded", (function() {
cc.errorID(7203);
return [];
}), !1);
}), {
"./CCTMXXMLParser": 360,
"./CCTiledLayer": 361,
"./CCTiledMapAsset": 363,
"./CCTiledObjectGroup": 365,
"./CCTiledTile": 366
} ],
363: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.TiledMapAsset",
extends: cc.Asset,
properties: {
tmxXmlStr: "",
textures: {
default: [],
type: [ cc.Texture2D ]
},
textureNames: [ cc.String ],
textureSizes: {
default: [],
type: [ cc.Size ]
},
imageLayerTextures: {
default: [],
type: [ cc.Texture2D ]
},
imageLayerTextureNames: [ cc.String ],
tsxFiles: [ cc.TextAsset ],
tsxFileNames: [ cc.String ]
},
statics: {
preventDeferredLoadDependents: !0
},
createNode: !1
});
cc.TiledMapAsset = n;
e.exports = n;
}), {} ],
364: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../renderer/core/input-assembler"));
var r = cc.Class({
name: "cc.TiledMapRenderDataList",
ctor: function() {
this._dataList = [];
this._offset = 0;
},
_pushRenderData: function() {
var t = {};
t.ia = new n.default();
t.nodesRenderList = [];
this._dataList.push(t);
},
popRenderData: function(t) {
this._offset >= this._dataList.length && this._pushRenderData();
var e = this._dataList[this._offset];
e.nodesRenderList.length = 0;
var i = e.ia;
i._vertexBuffer = t._vb;
i._indexBuffer = t._ib;
i._start = t.indiceOffset;
i._count = 0;
this._offset++;
return e;
},
pushNodesList: function(t, e) {
t.nodesRenderList.push(e);
},
reset: function() {
this._offset = 0;
}
});
cc.TiledMapRenderDataList = e.exports = r;
}), {
"../renderer/core/input-assembler": 350
} ],
365: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.TiledObjectGroup",
extends: cc.Component,
getPositionOffset: function() {
return this._positionOffset;
},
getProperties: function() {
this._properties;
},
getGroupName: function() {
return this._groupName;
},
getProperty: function(t) {
return this._properties[t.toString()];
},
getObject: function(t) {
for (var e = 0, i = this._objects.length; e < i; e++) {
var n = this._objects[e];
if (n && n.name === t) return n;
}
return null;
},
getObjects: function() {
return this._objects;
},
_init: function(t, e, i) {
var n = cc.TiledMap, r = n.TMXObjectType, s = n.Orientation, o = n.StaggerAxis, a = n.TileFlag, c = a.FLIPPED_MASK, l = a.HORIZONTAL, u = a.VERTICAL;
this._groupName = t.name;
this._positionOffset = t.offset;
this._mapInfo = e;
this._properties = t.getProperties();
this._offset = cc.v2(t.offset.x, -t.offset.y);
this._opacity = t._opacity;
var h = e._mapSize, f = e._tileSize, _ = 0, d = 0;
if (e.orientation === s.HEX) if (e.getStaggerAxis() === o.STAGGERAXIS_X) {
d = f.height * (h.height + .5);
_ = (f.width + e.getHexSideLength()) * Math.floor(h.width / 2) + f.width * (h.width % 2);
} else {
_ = f.width * (h.width + .5);
d = (f.height + e.getHexSideLength()) * Math.floor(h.height / 2) + f.height * (h.height % 2);
} else if (e.orientation === s.ISO) {
var p = h.width + h.height;
_ = .5 * f.width * p;
d = .5 * f.height * p;
} else {
_ = h.width * f.width;
d = h.height * f.height;
}
this.node.setContentSize(_, d);
for (var m = _ * this.node.anchorX, y = d * (1 - this.node.anchorY), v = t._objects, g = {}, b = 0, C = v.length; b < C; b++) {
var x = v[b], A = x.type;
x.offset = cc.v2(x.x, x.y);
var S = x.points || x.polylinePoints;
if (S) for (var w = 0; w < S.length; w++) S[w].y *= -1;
if (s.ISO !== e.orientation) x.y = d - x.y; else {
var T = x.x / f.height, E = x.y / f.height;
x.x = .5 * f.width * (h.height + T - E);
x.y = .5 * f.height * (h.width + h.height - T - E);
}
if (A === r.TEXT) {
var M = "text" + x.id;
g[M] = !0;
var B = this.node.getChildByName(M);
B || (B = new cc.Node());
B.anchorX = 0;
B.anchorY = 1;
B.angle = -x.rotation;
B.x = x.x - m;
B.y = x.y - y;
B.name = M;
B.parent = this.node;
B.color = x.color;
B.opacity = this._opacity;
B.setSiblingIndex(b);
var D = B.getComponent(cc.Label);
D || (D = B.addComponent(cc.Label));
D.overflow = cc.Label.Overflow.SHRINK;
D.lineHeight = x.height;
D.string = x.text;
D.horizontalAlign = x.halign;
D.verticalAlign = x.valign;
D.fontSize = x.pixelsize;
B.width = x.width;
B.height = x.height;
}
if (A === r.IMAGE) {
var R = x.gid, I = i[(R & c) >>> 0];
if (!I) continue;
var P = I.tileset, O = "img" + x.id;
g[O] = !0;
var L = this.node.getChildByName(O), V = x.width || I.width, N = x.height || I.height, F = P.tileOffset.x, z = P.tileOffset.y;
if (L instanceof cc.PrivateNode) {
L.removeFromParent();
L.destroy();
L = null;
}
L || (L = new cc.Node());
if (s.ISO == e.orientation) {
L.anchorX = .5 + F / V;
L.anchorY = z / N;
} else {
L.anchorX = F / V;
L.anchorY = z / N;
}
L.angle = -x.rotation;
L.x = x.x - m;
L.y = x.y - y;
L.name = O;
L.parent = this.node;
L.opacity = this._opacity;
L.setSiblingIndex(b);
var k = L.getComponent(cc.Sprite);
k || (k = L.addComponent(cc.Sprite));
var G = k.spriteFrame;
G || (G = new cc.SpriteFrame());
(R & l) >>> 0 ? G.setFlipX(!0) : G.setFlipX(!1);
(R & u) >>> 0 ? G.setFlipY(!0) : G.setFlipY(!1);
G.setTexture(I.tileset.sourceImage, cc.rect(I));
k.spriteFrame = G;
k.setVertsDirty();
L.width = V;
L.height = N;
}
}
this._objects = v;
for (var U = this.node.children, j = /^(?:img|text)\d+$/, H = 0, W = U.length; H < W; H++) {
var q = U[H], X = q._name;
j.test(X) && !g[X] && q.destroy();
}
}
});
cc.TiledObjectGroup = e.exports = n;
}), {} ],
366: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.TiledTile",
extends: cc.Component,
editor: !1,
ctor: function() {
this._layer = null;
},
properties: {
_x: 0,
_y: 0,
x: {
get: function() {
return this._x;
},
set: function(t) {
if (t !== this._x) if (this._layer && this._layer._isInvalidPosition(t, this._y)) cc.warn("Invalid x, the valid value is between [%s] ~ [%s]", 0, this._layer._layerSize.width); else {
this._resetTile();
this._x = t;
this._updateInfo();
}
},
type: cc.Integer
},
y: {
get: function() {
return this._y;
},
set: function(t) {
if (t !== this._y) if (this._layer && this._layer._isInvalidPosition(this._x, t)) cc.warn("Invalid y, the valid value is between [%s] ~ [%s]", 0, this._layer._layerSize.height); else {
this._resetTile();
this._y = t;
this._updateInfo();
}
},
type: cc.Integer
},
gid: {
get: function() {
return this._layer ? this._layer.getTileGIDAt(this._x, this._y) : 0;
},
set: function(t) {
this._layer && this._layer.setTileGIDAt(t, this._x, this._y);
},
type: cc.Integer
}
},
onEnable: function() {
var t = this.node.parent;
this._layer = t.getComponent(cc.TiledLayer);
this._resetTile();
this._updateInfo();
},
onDisable: function() {
this._resetTile();
},
_resetTile: function() {
this._layer && this._layer.getTiledTileAt(this._x, this._y) === this && this._layer.setTiledTileAt(this._x, this._y, null);
},
_updateInfo: function() {
if (this._layer) {
var t = this._x, e = this._y;
if (this._layer.getTiledTileAt(t, e)) cc.warn("There is already a TiledTile at [%s, %s]", t, e); else {
this.node.setPosition(this._layer.getPositionAt(t, e));
this._layer.setTiledTileAt(t, e, this);
}
}
}
});
cc.TiledTile = e.exports = n;
}), {} ],
367: [ (function(t, e, i) {
"use strict";
t("./CCTiledMap");
t("./CCTiledMapRenderDataList");
t("./tiledmap-buffer");
t("./tmx-layer-assembler");
}), {
"./CCTiledMap": 362,
"./CCTiledMapRenderDataList": 364,
"./tiledmap-buffer": 368,
"./tmx-layer-assembler": 369
} ],
368: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "cc.TiledMapBuffer",
extends: t("../core/renderer/webgl/quad-buffer"),
_updateOffset: function() {
var t = this._offsetInfo;
t.vertexOffset = this.vertexOffset;
t.indiceOffset = this.indiceOffset;
t.byteOffset = this.byteOffset;
},
adjust: function(t, e) {
this.vertexOffset += t;
this.indiceOffset += e;
this.indiceStart = this.indiceOffset;
this.byteOffset = this.byteOffset + t * this._vertexBytes;
this._dirty = !0;
}
});
cc.TiledMapBuffer = e.exports = n;
}), {
"../core/renderer/webgl/quad-buffer": 299
} ],
369: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../core/renderer/assembler")), r = t("../core/value-types");
function s(t) {
return function() {
var e, i = l(t);
if (c()) {
var n = l(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return o(this, e);
};
}
function o(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? a(t) : e;
}
function a(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function c() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function l(t) {
return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function u(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var h = t("./CCTiledLayer"), f = t("./CCTiledMap"), _ = f.TileFlag, d = _.FLIPPED_MASK, p = t("../core/renderer/"), m = t("../core/renderer/webgl/vertex-format").vfmtPosUvColor, y = parseInt(10922.5), v = f.RenderOrder, g = (t("../core/renderer/render-flow"), 
cc.mat4()), b = cc.v3(), C = {
row: 0,
col: 0
}, x = {
x: 0,
y: 0
}, A = {
x: 0,
y: 0
}, S = {
x: 0,
y: 0
}, w = {
x: 0,
y: 0
}, T = null, E = null, M = 0, B = 0, D = 0, R = 0, I = null, P = null, O = null, L = null, V = null, N = null, F = null;
function z() {
if (0 !== E._count) {
I.material = T.material;
I.node = V.node;
I._flushIA(T.ia);
if (M >= y) {
O.uploadData();
O.switchBuffer();
N = O._vData;
F = O._uintVData;
T = P.popRenderData(O);
E = T.ia;
B = 0;
M = 0;
} else {
T = P.popRenderData(O);
E = T.ia;
}
T.material = L;
}
}
function k(t, e) {
var i = V._getNodesByRowCol(t, e);
if (i && 0 != i.count) {
var n = i.list, r = 0, s = 0;
z();
I.worldMatDirty++;
for (;r < i.count; ) {
var o = n[s];
s++;
if (o) {
o.node;
if (r !== s) {
n[r] = o;
o._index = r;
}
r++;
}
}
n.length = r;
I.worldMatDirty--;
P.pushNodesList(T, n);
I._flush();
I.node = V.node;
}
}
function G(t, e) {
x.x = t.l;
x.y = t.t;
A.x = t.r;
A.y = t.t;
S.x = t.l;
S.y = t.b;
w.x = t.r;
w.y = t.b;
var i = null;
if ((e & _.DIAGONAL) >>> 0) {
i = A;
A = S;
S = i;
}
if ((e & _.HORIZONTAL) >>> 0) {
i = x;
x = A;
A = i;
i = S;
S = w;
w = i;
}
if ((e & _.VERTICAL) >>> 0) {
i = x;
x = S;
S = i;
i = A;
A = w;
w = i;
}
}
var U = (function(t) {
u(e, t);
s(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.updateRenderData = function(t) {
if (!t._renderDataList) {
t._buffer = new cc.TiledMapBuffer(p._handle, m);
t._renderDataList = new cc.TiledMapRenderDataList();
}
};
i.fillBuffers = function(t, e) {
if (0 !== t._vertices.length) {
t._updateCulling();
var i = t.node;
D = t._leftDownToCenterX;
R = t._leftDownToCenterY;
i._worldMatrix;
I = e;
V = t;
P = t._renderDataList;
O = t._buffer;
if (t._isCullingDirty() || t._isUserNodeDirty() || t._hasAnimation() || t._hasTiledNode()) {
O.reset();
var n, r;
if (t._enableCulling) {
var s = t._cullingRect;
n = s.leftDown;
r = s.rightTop;
} else {
n = C;
r = t._rightTop;
}
var o = (r.row - n.row + 1) * (r.col - n.col + 1);
o > y && (o = y);
O.request(4 * o, 6 * o);
switch (t._renderOrder) {
case v.RightDown:
this.traverseGrids(n, r, -1, 1);
break;

case v.LeftDown:
this.traverseGrids(n, r, -1, -1);
break;

case v.RightUp:
this.traverseGrids(n, r, 1, 1);
break;

case v.LeftUp:
this.traverseGrids(n, r, 1, -1);
}
t._setCullingDirty(!1);
t._setUserNodeDirty(!1);
} else {
}
T = null;
E = null;
null;
I = null;
P = null;
O = null;
L = null;
V = null;
N = null;
F = null;
}
};
i.traverseGrids = function(t, e, i, n) {
P.reset();
if (!(e.row < 0 || e.col < 0)) {
T = P.popRenderData(O);
E = T.ia;
N = O._vData;
F = O._uintVData;
M = 0;
B = 0;
L = null;
var r, s, o, a, c, l, u, h, f = V.node._color._val, _ = V._tiledTiles, p = V._texGrids, m = V._tiles, v = V._texIdToMatIndex, g = V._materials, b = V._vertices, C = null, U = 0, j = 0, H = 0, W = 0, q = 0, X = null, Y = -1, J = 0, Z = !0;
if (-1 == i) {
a = e.row;
c = t.row;
} else {
a = t.row;
c = e.row;
}
for (;(c - a) * i >= 0; a += i) {
r = b[a];
Z = 0 == (J = V._getNodesCountByRow(a)) && void 0 != r;
if (1 == n) {
s = Z && t.col < r.minCol ? r.minCol : t.col;
o = Z && e.col > r.maxCol ? r.maxCol : e.col;
} else {
s = Z && e.col > r.maxCol ? r.maxCol : e.col;
o = Z && t.col < r.minCol ? r.minCol : t.col;
}
for (;(o - s) * n >= 0; s += n) if (l = r && r[s]) {
if (C = p[((U = m[l.index]) & d) >>> 0]) {
if (Y !== C.texId) {
-1 !== Y && z();
h = v[Y = C.texId];
L = g[h];
T.material = L;
}
if (L) {
j = l.left - D;
H = l.bottom - R;
W = j + (u = C.tileset._tileSize).width;
q = H + u.height;
if (X = _[l.index]) this.fillByTiledNode(X.node, N, F, j, W, q, H); else {
N[B] = j;
N[B + 1] = q;
F[B + 4] = f;
N[B + 5] = j;
N[B + 6] = H;
F[B + 9] = f;
N[B + 10] = W;
N[B + 11] = q;
F[B + 14] = f;
N[B + 15] = W;
N[B + 16] = H;
F[B + 19] = f;
}
G(C, U);
N[B + 2] = x.x;
N[B + 3] = x.y;
N[B + 7] = S.x;
N[B + 8] = S.y;
N[B + 12] = A.x;
N[B + 13] = A.y;
N[B + 17] = w.x;
N[B + 18] = w.y;
B += 20;
O.adjust(4, 6);
E._count += 6;
M++;
J > 0 && k(a, s);
M >= y && z();
}
}
} else J > 0 && k(a, s);
}
O.uploadData();
if (E._count > 0) {
I.material = T.material;
I.node = V.node;
I._flushIA(T.ia);
}
}
};
i.fillByTiledNode = function(t, e, i, n, s, o, a) {
t._updateLocalMatrix();
r.Mat4.copy(g, t._matrix);
r.Vec3.set(b, -(n + D), -(a + R), 0);
r.Mat4.transform(g, g, b);
var c = g.m, l = c[0], u = c[1], h = c[4], f = c[5], _ = c[12], d = c[13], p = t._color._val;
e[B] = n * l + o * h + _;
e[B + 1] = n * u + o * f + d;
i[B + 4] = p;
e[B + 5] = n * l + a * h + _;
e[B + 6] = n * u + a * f + d;
i[B + 9] = p;
e[B + 10] = s * l + o * h + _;
e[B + 11] = s * u + o * f + d;
i[B + 14] = p;
e[B + 15] = s * l + a * h + _;
e[B + 16] = s * u + a * f + d;
i[B + 19] = p;
};
return e;
})(n.default);
i.default = U;
n.default.register(h, U);
e.exports = i.default;
}), {
"../core/renderer/": 262,
"../core/renderer/assembler": 259,
"../core/renderer/render-flow": 263,
"../core/renderer/webgl/vertex-format": 301,
"../core/value-types": 328,
"./CCTiledLayer": 361,
"./CCTiledMap": 362
} ],
370: [ (function(t, e, i) {
"use strict";
var n = t("./video-player-impl"), r = n.EventType, s = cc.Enum({
REMOTE: 0,
LOCAL: 1
}), o = cc.Class({
name: "cc.VideoPlayer",
extends: cc.Component,
editor: !1,
properties: {
_resourceType: s.REMOTE,
resourceType: {
tooltip: !1,
type: s,
set: function(t) {
this._resourceType = t;
this._updateVideoSource();
},
get: function() {
return this._resourceType;
}
},
_remoteURL: "",
remoteURL: {
tooltip: !1,
type: cc.String,
set: function(t) {
this._remoteURL = t;
this._updateVideoSource();
},
get: function() {
return this._remoteURL;
}
},
_clip: {
default: null,
type: cc.Asset
},
clip: {
tooltip: !1,
get: function() {
return this._clip;
},
set: function(t) {
this._clip = t;
this._updateVideoSource();
},
type: cc.Asset
},
currentTime: {
tooltip: !1,
type: cc.Float,
set: function(t) {
this._impl && this._impl.seekTo(t);
},
get: function() {
return this._impl ? this._currentStatus === r.NONE || this._currentStatus === r.STOPPED || this._currentStatus === r.META_LOADED || this._currentStatus === r.READY_TO_PLAY ? 0 : this._currentStatus === r.COMPLETED ? this._impl.duration() : this._impl.currentTime() : -1;
}
},
_volume: 1,
volume: {
get: function() {
return this._volume;
},
set: function(t) {
this._volume = t;
this.isPlaying() && !this._mute && this._syncVolume();
},
range: [ 0, 1 ],
type: cc.Float,
tooltip: !1
},
_mute: !1,
mute: {
get: function() {
return this._mute;
},
set: function(t) {
this._mute = t;
this._syncVolume();
},
tooltip: !1
},
keepAspectRatio: {
tooltip: !1,
default: !0,
type: cc.Boolean,
notify: function() {
this._impl && this._impl.setKeepAspectRatioEnabled(this.keepAspectRatio);
}
},
_isFullscreen: {
default: !1,
formerlySerializedAs: "_N$isFullscreen"
},
isFullscreen: {
get: function() {
this._isFullscreen = this._impl && this._impl.isFullScreenEnabled();
return this._isFullscreen;
},
set: function(t) {
this._isFullscreen = t;
this._impl && this._impl.setFullScreenEnabled(t);
},
animatable: !1,
tooltip: !1
},
_stayOnBottom: !1,
stayOnBottom: {
get: function() {
return this._stayOnBottom;
},
set: function(t) {
this._stayOnBottom = t;
this._impl && this._impl.setStayOnBottom(t);
},
animatable: !1,
tooltip: !1
},
videoPlayerEvent: {
default: [],
type: cc.Component.EventHandler
}
},
statics: {
EventType: r,
ResourceType: s,
Impl: n
},
ctor: function() {
this._impl = new n();
this._currentStatus = r.NONE;
},
_syncVolume: function() {
var t = this._impl;
if (t) {
var e = this._mute ? 0 : this._volume;
t.setVolume(e);
}
},
_updateVideoSource: function() {
var t = "";
this.resourceType === s.REMOTE ? t = this.remoteURL : this._clip && (t = this._clip.nativeUrl || "");
t && cc.loader.md5Pipe && (t = cc.loader.md5Pipe.transformURL(t));
this._impl.setURL(t, this._mute || 0 === this._volume);
this._impl.setKeepAspectRatioEnabled(this.keepAspectRatio);
},
onLoad: function() {
var t = this._impl;
if (t) {
t.createDomElementIfNeeded(this._mute || 0 === this._volume);
t.setStayOnBottom(this._stayOnBottom);
this._updateVideoSource();
t.seekTo(this.currentTime);
t.setFullScreenEnabled(this._isFullscreen);
this.pause();
t.setEventListener(r.PLAYING, this.onPlaying.bind(this));
t.setEventListener(r.PAUSED, this.onPasued.bind(this));
t.setEventListener(r.STOPPED, this.onStopped.bind(this));
t.setEventListener(r.COMPLETED, this.onCompleted.bind(this));
t.setEventListener(r.META_LOADED, this.onMetaLoaded.bind(this));
t.setEventListener(r.CLICKED, this.onClicked.bind(this));
t.setEventListener(r.READY_TO_PLAY, this.onReadyToPlay.bind(this));
}
},
onRestore: function() {
this._impl || (this._impl = new n());
},
onEnable: function() {
this._impl && this._impl.enable();
},
onDisable: function() {
this._impl && this._impl.disable();
},
onDestroy: function() {
if (this._impl) {
this._impl.destroy();
this._impl = null;
}
},
update: function(t) {
this._impl && this._impl.updateMatrix(this.node);
},
onReadyToPlay: function() {
this._currentStatus = r.READY_TO_PLAY;
cc.Component.EventHandler.emitEvents(this.videoPlayerEvent, this, r.READY_TO_PLAY);
this.node.emit("ready-to-play", this);
},
onMetaLoaded: function() {
this._currentStatus = r.META_LOADED;
cc.Component.EventHandler.emitEvents(this.videoPlayerEvent, this, r.META_LOADED);
this.node.emit("meta-loaded", this);
},
onClicked: function() {
this._currentStatus = r.CLICKED;
cc.Component.EventHandler.emitEvents(this.videoPlayerEvent, this, r.CLICKED);
this.node.emit("clicked", this);
},
onPlaying: function() {
this._currentStatus = r.PLAYING;
cc.Component.EventHandler.emitEvents(this.videoPlayerEvent, this, r.PLAYING);
this.node.emit("playing", this);
},
onPasued: function() {
this._currentStatus = r.PAUSED;
cc.Component.EventHandler.emitEvents(this.videoPlayerEvent, this, r.PAUSED);
this.node.emit("paused", this);
},
onStopped: function() {
this._currentStatus = r.STOPPED;
cc.Component.EventHandler.emitEvents(this.videoPlayerEvent, this, r.STOPPED);
this.node.emit("stopped", this);
},
onCompleted: function() {
this._currentStatus = r.COMPLETED;
cc.Component.EventHandler.emitEvents(this.videoPlayerEvent, this, r.COMPLETED);
this.node.emit("completed", this);
},
play: function() {
if (this._impl) {
this._syncVolume();
this._impl.play();
}
},
resume: function() {
if (this._impl) {
this._syncVolume();
this._impl.resume();
}
},
pause: function() {
this._impl && this._impl.pause();
},
stop: function() {
this._impl && this._impl.stop();
},
getDuration: function() {
return this._impl ? this._impl.duration() : -1;
},
isPlaying: function() {
return !!this._impl && this._impl.isPlaying();
}
});
cc.VideoPlayer = e.exports = o;
}), {
"./video-player-impl": 371
} ],
371: [ (function(t, e, i) {
"use strict";
var n = t("../core/platform/utils"), r = t("../core/platform/CCSys"), s = t("../core/platform/CCMacro"), o = {
HAVE_NOTHING: 0,
HAVE_METADATA: 1,
HAVE_CURRENT_DATA: 2,
HAVE_FUTURE_DATA: 3,
HAVE_ENOUGH_DATA: 4
}, a = cc.mat4(), c = cc.Class({
name: "VideoPlayerImpl",
ctor: function() {
this._EventList = {};
this._video = null;
this._url = "";
this._waitingFullscreen = !1;
this._fullScreenEnabled = !1;
this._stayOnBottom = !1;
this._loadedmeta = !1;
this._loaded = !1;
this._visible = !1;
this._playing = !1;
this._ignorePause = !1;
this._forceUpdate = !1;
this._m00 = 0;
this._m01 = 0;
this._m04 = 0;
this._m05 = 0;
this._m12 = 0;
this._m13 = 0;
this._w = 0;
this._h = 0;
this.__eventListeners = {};
},
_bindEvent: function() {
var t = this._video, e = this, i = this.__eventListeners;
i.loadedmetadata = function() {
e._loadedmeta = !0;
e._forceUpdate = !0;
if (e._waitingFullscreen) {
e._waitingFullscreen = !1;
e._toggleFullscreen(!0);
}
e._dispatchEvent(c.EventType.META_LOADED);
};
i.ended = function() {
if (e._video === t) {
e._playing = !1;
e._dispatchEvent(c.EventType.COMPLETED);
}
};
i.play = function() {
if (e._video === t) {
e._playing = !0;
e._updateVisibility();
e._dispatchEvent(c.EventType.PLAYING);
}
};
i.pause = function() {
if (e._video === t) {
e._playing = !1;
e._ignorePause || e._dispatchEvent(c.EventType.PAUSED);
}
};
i.click = function() {
e._dispatchEvent(c.EventType.CLICKED);
};
t.addEventListener("loadedmetadata", i.loadedmetadata);
t.addEventListener("ended", i.ended);
t.addEventListener("play", i.play);
t.addEventListener("pause", i.pause);
t.addEventListener("click", i.click);
i.onCanPlay = function() {
if (!e._loaded && !e._playing) {
var t = e._video;
if (t.readyState === o.HAVE_ENOUGH_DATA || t.readyState === o.HAVE_METADATA) {
t.currentTime = 0;
e._loaded = !0;
e._forceUpdate = !0;
e._dispatchEvent(c.EventType.READY_TO_PLAY);
e._updateVisibility();
}
}
};
t.addEventListener("canplay", i.onCanPlay);
t.addEventListener("canplaythrough", i.onCanPlay);
t.addEventListener("suspend", i.onCanPlay);
},
_updateVisibility: function() {
var t = this._video;
if (t) if (this._visible) t.style.visibility = "visible"; else {
t.style.visibility = "hidden";
t.pause();
this._playing = !1;
}
},
_updateSize: function(t, e) {
var i = this._video;
if (i) {
i.style.width = t + "px";
i.style.height = e + "px";
}
},
_createDom: function(t) {
var e = document.createElement("video");
e.style.position = "absolute";
e.style.bottom = "0px";
e.style.left = "0px";
e.style["z-index"] = this._stayOnBottom ? s.MIN_ZINDEX : 0;
e.className = "cocosVideo";
e.setAttribute("preload", "auto");
e.setAttribute("webkit-playsinline", "");
e.setAttribute("x5-playsinline", "");
e.setAttribute("playsinline", "");
t && e.setAttribute("muted", "");
this._video = e;
cc.game.container.appendChild(e);
},
createDomElementIfNeeded: function(t) {
this._video || this._createDom(t);
},
removeDom: function() {
var t = this._video;
if (t) {
n.contains(cc.game.container, t) && cc.game.container.removeChild(t);
var e = this.__eventListeners;
t.removeEventListener("loadedmetadata", e.loadedmetadata);
t.removeEventListener("ended", e.ended);
t.removeEventListener("play", e.play);
t.removeEventListener("pause", e.pause);
t.removeEventListener("click", e.click);
t.removeEventListener("canplay", e.onCanPlay);
t.removeEventListener("canplaythrough", e.onCanPlay);
t.removeEventListener("suspend", e.onCanPlay);
e.loadedmetadata = null;
e.ended = null;
e.play = null;
e.pause = null;
e.click = null;
e.onCanPlay = null;
}
this._video = null;
this._url = "";
},
setURL: function(t, e) {
var i, n;
if (this._url !== t) {
this.removeDom();
this._url = t;
this.createDomElementIfNeeded(e);
this._bindEvent();
var r = this._video;
r.style.visibility = "hidden";
this._loaded = !1;
this._playing = !1;
this._loadedmeta = !1;
(i = document.createElement("source")).src = t;
r.appendChild(i);
n = cc.path.extname(t);
for (var s = c._polyfill, o = 0; o < s.canPlayType.length; o++) if (n !== s.canPlayType[o]) {
(i = document.createElement("source")).src = t.replace(n, s.canPlayType[o]);
r.appendChild(i);
}
}
},
getURL: function() {
return this._url;
},
play: function() {
var t = this._video;
if (t && this._visible && !this._playing) if (c._polyfill.autoplayAfterOperation) {
setTimeout((function() {
t.play();
}), 20);
} else t.play();
},
pause: function() {
var t = this._video;
this._playing && t && t.pause();
},
resume: function() {
this.play();
},
stop: function() {
var t = this._video;
if (t && this._visible) {
this._ignorePause = !0;
t.currentTime = 0;
t.pause();
setTimeout(function() {
this._dispatchEvent(c.EventType.STOPPED);
this._ignorePause = !1;
}.bind(this), 0);
}
},
setVolume: function(t) {
var e = this._video;
e && (e.volume = t);
},
seekTo: function(t) {
var e = this._video;
if (e) {
if (this._loaded) e.currentTime = t; else {
e.addEventListener(c._polyfill.event, (function i() {
e.currentTime = t;
e.removeEventListener(c._polyfill.event, i);
}));
}
c._polyfill.autoplayAfterOperation && this.isPlaying() && setTimeout((function() {
e.play();
}), 20);
}
},
isPlaying: function() {
var t = this._video;
c._polyfill.autoplayAfterOperation && this._playing && setTimeout((function() {
t.play();
}), 20);
return this._playing;
},
duration: function() {
var t = this._video, e = -1;
if (!t) return e;
e = t.duration;
e <= 0 && cc.logID(7702);
return e;
},
currentTime: function() {
var t = this._video;
return t ? t.currentTime : -1;
},
setKeepAspectRatioEnabled: function() {
0;
cc.logID(7700);
},
isKeepAspectRatioEnabled: function() {
return !0;
},
_toggleFullscreen: function(t) {
var e = this, i = this._video;
if (i) if (t) {
r.browserType === r.BROWSER_TYPE_IE && (i.style.transform = "");
cc.screen.requestFullScreen(i, (function(t) {
var n = r.browserType === r.BROWSER_TYPE_IE ? document.msFullscreenElement : document.fullscreenElement;
e._fullScreenEnabled = n === i;
}), (function(t) {
e._fullScreenEnabled = !1;
}));
} else cc.screen.fullScreen() && cc.screen.exitFullScreen(i);
},
setStayOnBottom: function(t) {
this._stayOnBottom = t;
this._video && (this._video.style["z-index"] = t ? s.MIN_ZINDEX : 0);
},
setFullScreenEnabled: function(t) {
!this._loadedmeta && t ? this._waitingFullscreen = !0 : this._toggleFullscreen(t);
},
isFullScreenEnabled: function() {
return this._fullScreenEnabled;
},
setEventListener: function(t, e) {
this._EventList[t] = e;
},
removeEventListener: function(t) {
this._EventList[t] = null;
},
_dispatchEvent: function(t) {
var e = this._EventList[t];
e && e.call(this, this, this._video.src);
},
onPlayEvent: function() {
this._EventList[c.EventType.PLAYING].call(this, this, this._video.src);
},
enable: function() {
var t = c.elements;
-1 === t.indexOf(this) && t.push(this);
this.setVisible(!0);
},
disable: function() {
var t = c.elements, e = t.indexOf(this);
-1 !== e && t.splice(e, 1);
this.setVisible(!1);
},
destroy: function() {
this.disable();
this.removeDom();
},
setVisible: function(t) {
if (this._visible !== t) {
this._visible = !!t;
this._updateVisibility();
}
},
updateMatrix: function(t) {
if (this._video && this._visible && !this._fullScreenEnabled) {
t.getWorldMatrix(a);
var e = cc.Camera._findRendererCamera(t);
e && e.worldMatrixToScreen(a, a, cc.game.canvas.width, cc.game.canvas.height);
var i = a.m;
if (this._forceUpdate || this._m00 !== i[0] || this._m01 !== i[1] || this._m04 !== i[4] || this._m05 !== i[5] || this._m12 !== i[12] || this._m13 !== i[13] || this._w !== t._contentSize.width || this._h !== t._contentSize.height) {
this._m00 = i[0];
this._m01 = i[1];
this._m04 = i[4];
this._m05 = i[5];
this._m12 = i[12];
this._m13 = i[13];
this._w = t._contentSize.width;
this._h = t._contentSize.height;
var n, s, o = cc.view._devicePixelRatio, l = 1 / o, u = 1 / o, h = cc.game.container, f = i[0] * l, _ = i[1], d = i[4], p = i[5] * u, m = h && h.style.paddingLeft ? parseInt(h.style.paddingLeft) : 0, y = h && h.style.paddingBottom ? parseInt(h.style.paddingBottom) : 0;
if (c._polyfill.zoomInvalid) {
this._updateSize(this._w * f, this._h * p);
f = 1;
p = 1;
n = this._w * l;
s = this._h * u;
} else {
n = this._w * l;
s = this._h * u;
this._updateSize(this._w, this._h);
}
var v = n * i[0] * t._anchorPoint.x, g = s * i[5] * t._anchorPoint.y, b = "matrix(" + f + "," + -_ + "," + -d + "," + p + "," + (i[12] * l - v + m) + "," + -(i[13] * u - g + y) + ")";
this._video.style.transform = b;
this._video.style["-webkit-transform"] = b;
this._video.style["transform-origin"] = "0px 100% 0px";
this._video.style["-webkit-transform-origin"] = "0px 100% 0px";
r.browserType !== r.BROWSER_TYPE_IE && (this._forceUpdate = !1);
}
}
}
});
c.EventType = {
NONE: -1,
PLAYING: 0,
PAUSED: 1,
STOPPED: 2,
COMPLETED: 3,
META_LOADED: 4,
CLICKED: 5,
READY_TO_PLAY: 6
};
c.elements = [];
c.pauseElements = [];
cc.game.on(cc.game.EVENT_HIDE, (function() {
for (var t, e = c.elements, i = 0; i < e.length; i++) if ((t = e[i]).isPlaying()) {
t.pause();
c.pauseElements.push(t);
}
}));
cc.game.on(cc.game.EVENT_SHOW, (function() {
for (var t = c.pauseElements, e = t.pop(); e; ) {
e.play();
e = t.pop();
}
}));
c._polyfill = {
devicePixelRatio: !1,
event: "canplay",
canPlayType: []
};
var l = document.createElement("video");
if (l.canPlayType) {
if (l.canPlayType("video/ogg")) {
c._polyfill.canPlayType.push(".ogg");
c._polyfill.canPlayType.push(".ogv");
}
l.canPlayType("video/mp4") && c._polyfill.canPlayType.push(".mp4");
l.canPlayType("video/webm") && c._polyfill.canPlayType.push(".webm");
}
r.browserType === r.BROWSER_TYPE_FIREFOX && (c._polyfill.autoplayAfterOperation = !0);
r.OS_ANDROID !== r.os || r.browserType !== r.BROWSER_TYPE_SOUGOU && r.browserType !== r.BROWSER_TYPE_360 || (c._polyfill.zoomInvalid = !0);
var u = document.createElement("style");
u.innerHTML = ".cocosVideo:-moz-full-screen{transform:matrix(1,0,0,1,0,0) !important;}.cocosVideo:full-screen{transform:matrix(1,0,0,1,0,0) !important;}.cocosVideo:-webkit-full-screen{transform:matrix(1,0,0,1,0,0) !important;}";
document.head.appendChild(u);
e.exports = c;
}), {
"../core/platform/CCMacro": 235,
"../core/platform/CCSys": 239,
"../core/platform/utils": 254
} ],
372: [ (function(t, e, i) {
"use strict";
var n = t("./webview-impl"), r = n.EventType;
function s() {}
var o = cc.Class({
name: "cc.WebView",
extends: cc.Component,
editor: !1,
properties: {
_useOriginalSize: !0,
_url: "",
url: {
type: cc.String,
tooltip: !1,
get: function() {
return this._url;
},
set: function(t) {
this._url = t;
var e = this._impl;
e && e.loadURL(t);
}
},
webviewEvents: {
default: [],
type: cc.Component.EventHandler
}
},
statics: {
EventType: r,
Impl: n
},
ctor: function() {
this._impl = new o.Impl();
},
onRestore: function() {
this._impl || (this._impl = new o.Impl());
},
onEnable: function() {
var t = this._impl;
t.createDomElementIfNeeded(this.node.width, this.node.height);
t.setEventListener(r.LOADED, this._onWebViewLoaded.bind(this));
t.setEventListener(r.LOADING, this._onWebViewLoading.bind(this));
t.setEventListener(r.ERROR, this._onWebViewLoadError.bind(this));
t.loadURL(this._url);
t.setVisible(!0);
},
onDisable: function() {
var t = this._impl;
t.setVisible(!1);
t.setEventListener(r.LOADED, s);
t.setEventListener(r.LOADING, s);
t.setEventListener(r.ERROR, s);
},
onDestroy: function() {
if (this._impl) {
this._impl.destroy();
this._impl = null;
}
},
update: function(t) {
this._impl && this._impl.updateMatrix(this.node);
},
_onWebViewLoaded: function() {
cc.Component.EventHandler.emitEvents(this.webviewEvents, this, r.LOADED);
this.node.emit("loaded", this);
},
_onWebViewLoading: function() {
cc.Component.EventHandler.emitEvents(this.webviewEvents, this, r.LOADING);
this.node.emit("loading", this);
return !0;
},
_onWebViewLoadError: function() {
cc.Component.EventHandler.emitEvents(this.webviewEvents, this, r.ERROR);
this.node.emit("error", this);
},
setJavascriptInterfaceScheme: function(t) {
this._impl && this._impl.setJavascriptInterfaceScheme(t);
},
setOnJSCallback: function(t) {
this._impl && this._impl.setOnJSCallback(t);
},
evaluateJS: function(t) {
this._impl && this._impl.evaluateJS(t);
}
});
cc.WebView = e.exports = o;
}), {
"./webview-impl": 373
} ],
373: [ (function(t, e, i) {
"use strict";
var n = t("../core/platform/utils"), r = t("../core/platform/CCSys"), s = cc.mat4(), o = cc.Class({
name: "WebViewImpl",
ctor: function() {
this._EventList = {};
this._visible = !1;
this._parent = null;
this._div = null;
this._iframe = null;
this._listener = null;
this._forceUpdate = !1;
this._m00 = 0;
this._m01 = 0;
this._m04 = 0;
this._m05 = 0;
this._m12 = 0;
this._m13 = 0;
this._w = 0;
this._h = 0;
this.__eventListeners = {};
},
_updateVisibility: function() {
if (this._div) {
var t = this._div;
this._visible ? t.style.visibility = "visible" : t.style.visibility = "hidden";
}
},
_updateSize: function(t, e) {
var i = this._div;
if (i) {
i.style.width = t + "px";
i.style.height = e + "px";
}
},
_initEvent: function() {
var t = this._iframe;
if (t) {
var e = this.__eventListeners, i = this;
e.load = function() {
i._forceUpdate = !0;
i._dispatchEvent(o.EventType.LOADED);
};
e.error = function() {
i._dispatchEvent(o.EventType.ERROR);
};
t.addEventListener("load", e.load);
t.addEventListener("error", e.error);
}
},
_initStyle: function() {
if (this._div) {
var t = this._div;
t.style.position = "absolute";
t.style.bottom = "0px";
t.style.left = "0px";
}
},
_setOpacity: function(t) {
var e = this._iframe;
e && e.style && (e.style.opacity = t / 255);
},
_createDom: function(t, e) {
if (o._polyfill.enableDiv) {
this._div = document.createElement("div");
this._div.style["-webkit-overflow"] = "auto";
this._div.style["-webkit-overflow-scrolling"] = "touch";
this._iframe = document.createElement("iframe");
this._div.appendChild(this._iframe);
this._iframe.style.width = "100%";
this._iframe.style.height = "100%";
} else this._div = this._iframe = document.createElement("iframe");
o._polyfill.enableBG && (this._div.style.background = "#FFF");
this._div.style.background = "#FFF";
this._div.style.height = e + "px";
this._div.style.width = t + "px";
this._div.style.overflow = "scroll";
this._iframe.style.border = "none";
cc.game.container.appendChild(this._div);
this._updateVisibility();
},
_createNativeControl: function(t, e) {
this._createDom(t, e);
this._initStyle();
this._initEvent();
},
createDomElementIfNeeded: function(t, e) {
this._div ? this._updateSize(t, e) : this._createNativeControl(t, e);
},
removeDom: function() {
var t = this._div;
if (t) {
n.contains(cc.game.container, t) && cc.game.container.removeChild(t);
this._div = null;
}
var e = this._iframe;
if (e) {
var i = this.__eventListeners;
e.removeEventListener("load", i.load);
e.removeEventListener("error", i.error);
i.load = null;
i.error = null;
this._iframe = null;
}
},
setOnJSCallback: function(t) {},
setJavascriptInterfaceScheme: function(t) {},
loadData: function(t, e, i, n) {},
loadHTMLString: function(t, e) {},
loadURL: function(t) {
var e = this._iframe;
if (e) {
e.src = t;
var i = this;
e.addEventListener("load", (function t() {
i._loaded = !0;
i._updateVisibility();
e.removeEventListener("load", t);
}));
this._dispatchEvent(o.EventType.LOADING);
}
},
stopLoading: function() {
cc.logID(7800);
},
reload: function() {
var t = this._iframe;
if (t) {
var e = t.contentWindow;
e && e.location && e.location.reload();
}
},
canGoBack: function() {
cc.logID(7801);
return !0;
},
canGoForward: function() {
cc.logID(7802);
return !0;
},
goBack: function() {
try {
if (o._polyfill.closeHistory) return cc.logID(7803);
var t = this._iframe;
if (t) {
var e = t.contentWindow;
e && e.location && e.history.back.call(e);
}
} catch (t) {
cc.log(t);
}
},
goForward: function() {
try {
if (o._polyfill.closeHistory) return cc.logID(7804);
var t = this._iframe;
if (t) {
var e = t.contentWindow;
e && e.location && e.history.forward.call(e);
}
} catch (t) {
cc.log(t);
}
},
evaluateJS: function(t) {
var e = this._iframe;
if (e) {
var i = e.contentWindow;
try {
i.eval(t);
this._dispatchEvent(o.EventType.JS_EVALUATED);
} catch (t) {
console.error(t);
}
}
},
setScalesPageToFit: function() {
cc.logID(7805);
},
setEventListener: function(t, e) {
this._EventList[t] = e;
},
removeEventListener: function(t) {
this._EventList[t] = null;
},
_dispatchEvent: function(t) {
var e = this._EventList[t];
e && e.call(this, this, this._iframe.src);
},
_createRenderCmd: function() {
return new o.RenderCmd(this);
},
destroy: function() {
this.removeDom();
},
setVisible: function(t) {
if (this._visible !== t) {
this._visible = !!t;
this._updateVisibility();
}
},
updateMatrix: function(t) {
if (this._div && this._visible) {
t.getWorldMatrix(s);
var e = cc.Camera._findRendererCamera(t);
e && e.worldMatrixToScreen(s, s, cc.game.canvas.width, cc.game.canvas.height);
var i = s.m;
if (this._forceUpdate || this._m00 !== i[0] || this._m01 !== i[1] || this._m04 !== i[4] || this._m05 !== i[5] || this._m12 !== i[12] || this._m13 !== i[13] || this._w !== t._contentSize.width || this._h !== t._contentSize.height) {
this._m00 = i[0];
this._m01 = i[1];
this._m04 = i[4];
this._m05 = i[5];
this._m12 = i[12];
this._m13 = i[13];
this._w = t._contentSize.width;
this._h = t._contentSize.height;
var n = cc.view._devicePixelRatio, r = 1 / n, o = 1 / n, a = cc.game.container, c = i[0] * r, l = i[1], u = i[4], h = i[5] * o, f = a && a.style.paddingLeft ? parseInt(a.style.paddingLeft) : 0, _ = a && a.style.paddingBottom ? parseInt(a.style.paddingBottom) : 0;
this._updateSize(this._w, this._h);
var d = this._w * r, p = this._h * o, m = d * i[0] * t._anchorPoint.x, y = p * i[5] * t._anchorPoint.y, v = "matrix(" + c + "," + -l + "," + -u + "," + h + "," + (i[12] * r - m + f) + "," + -(i[13] * o - y + _) + ")";
this._div.style.transform = v;
this._div.style["-webkit-transform"] = v;
this._div.style["transform-origin"] = "0px 100% 0px";
this._div.style["-webkit-transform-origin"] = "0px 100% 0px";
this._setOpacity(t.opacity);
this._forceUpdate = !1;
}
}
}
});
o.EventType = {
LOADING: 0,
LOADED: 1,
ERROR: 2,
JS_EVALUATED: 3
};
var a = o._polyfill = {
devicePixelRatio: !1,
enableDiv: !1
};
r.os === r.OS_IOS && (a.enableDiv = !0);
r.isMobile ? r.browserType === r.BROWSER_TYPE_FIREFOX && (a.enableBG = !0) : r.browserType === r.BROWSER_TYPE_IE && (a.closeHistory = !0);
e.exports = o;
}), {
"../core/platform/CCSys": 239,
"../core/platform/utils": 254
} ],
374: [ (function(t, e, i) {
"use strict";
t("./cocos2d/core");
t("./cocos2d/animation");
t("./cocos2d/particle");
t("./cocos2d/tilemap");
t("./cocos2d/videoplayer/CCVideoPlayer");
t("./cocos2d/webview/CCWebView");
t("./cocos2d/core/components/CCStudioComponent");
t("./extensions/ccpool/CCNodePool");
t("./cocos2d/actions");
t("./extensions/spine");
t("./extensions/dragonbones");
t("./cocos2d/deprecated");
}), {
"./cocos2d/actions": 7,
"./cocos2d/animation": 16,
"./cocos2d/core": 176,
"./cocos2d/core/components/CCStudioComponent": 137,
"./cocos2d/deprecated": 340,
"./cocos2d/particle": 346,
"./cocos2d/particle/CCParticleAsset": 343,
"./cocos2d/tilemap": 367,
"./cocos2d/tilemap/CCTiledMapAsset": 363,
"./cocos2d/videoplayer/CCVideoPlayer": 370,
"./cocos2d/webview/CCWebView": 372,
"./extensions/ccpool/CCNodePool": 375,
"./extensions/dragonbones": 380,
"./extensions/spine": 384
} ],
375: [ (function(t, e, i) {
"use strict";
cc.NodePool = function(t) {
this.poolHandlerComp = t;
this._pool = [];
};
cc.NodePool.prototype = {
constructor: cc.NodePool,
size: function() {
return this._pool.length;
},
clear: function() {
for (var t = this._pool.length, e = 0; e < t; ++e) this._pool[e].destroy();
this._pool.length = 0;
},
put: function(t) {
if (t && -1 === this._pool.indexOf(t)) {
t.removeFromParent(!1);
var e = this.poolHandlerComp ? t.getComponent(this.poolHandlerComp) : null;
e && e.unuse && e.unuse();
this._pool.push(t);
}
},
get: function() {
var t = this._pool.length - 1;
if (t < 0) return null;
var e = this._pool[t];
this._pool.length = t;
var i = this.poolHandlerComp ? e.getComponent(this.poolHandlerComp) : null;
i && i.reuse && i.reuse.apply(i, arguments);
return e;
}
};
e.exports = cc.NodePool;
}), {} ],
376: [ (function(t, e, i) {
"use strict";
var n = t("../../cocos2d/core/components/CCRenderComponent"), r = t("../../cocos2d/core/event/event-target"), s = t("../../cocos2d/core/graphics/graphics"), o = t("../../cocos2d/core/renderer/render-flow").FLAG_POST_RENDER, a = t("./ArmatureCache"), c = t("./AttachUtil"), l = cc.Enum({
default: -1
}), u = cc.Enum({
"<None>": 0
}), h = (cc.Enum({
REALTIME: 0
}), cc.Enum({
REALTIME: 0,
SHARED_CACHE: 1,
PRIVATE_CACHE: 2
}));
var f = cc.Class({
name: "dragonBones.ArmatureDisplay",
extends: n,
editor: !1,
statics: {
AnimationCacheMode: h
},
properties: {
_factory: {
default: null,
type: dragonBones.CCFactory,
serializable: !1
},
dragonAsset: {
default: null,
type: dragonBones.DragonBonesAsset,
notify: function() {
this._refresh();
0;
},
tooltip: !1
},
dragonAtlasAsset: {
default: null,
type: dragonBones.DragonBonesAtlasAsset,
notify: function() {
this._parseDragonAtlasAsset();
this._refresh();
},
tooltip: !1
},
_armatureName: "",
armatureName: {
get: function() {
return this._armatureName;
},
set: function(t) {
this._armatureName = t;
var e = this.getAnimationNames(this._armatureName);
(!this.animationName || e.indexOf(this.animationName) < 0) && (this.animationName = "");
this._armature && !this.isAnimationCached() && this._factory._dragonBones.clock.remove(this._armature);
this._refresh();
this._armature && !this.isAnimationCached() && this._factory._dragonBones.clock.add(this._armature);
},
visible: !1
},
_animationName: "",
animationName: {
get: function() {
return this._animationName;
},
set: function(t) {
this._animationName = t;
},
visible: !1
},
_defaultArmatureIndex: {
default: 0,
notify: function() {
var t = "";
if (this.dragonAsset) {
var e;
this.dragonAsset && (e = this.dragonAsset.getArmatureEnum());
if (!e) return cc.errorID(7400, this.name);
t = e[this._defaultArmatureIndex];
}
void 0 !== t ? this.armatureName = t : cc.errorID(7401, this.name);
},
type: l,
visible: !0,
editorOnly: !0,
animatable: !1,
displayName: "Armature",
tooltip: !1
},
_animationIndex: {
default: 0,
notify: function() {
if (0 !== this._animationIndex) {
var t;
this.dragonAsset && (t = this.dragonAsset.getAnimsEnum(this.armatureName));
if (t) {
var e = t[this._animationIndex];
void 0 !== e ? this.playAnimation(e, this.playTimes) : cc.errorID(7402, this.name);
}
} else this.animationName = "";
},
type: u,
visible: !0,
editorOnly: !0,
displayName: "Animation",
tooltip: !1
},
_preCacheMode: -1,
_cacheMode: h.REALTIME,
_defaultCacheMode: {
default: 0,
type: h,
notify: function() {
if (this._defaultCacheMode === h.REALTIME || !this._armature || a.canCache(this._armature)) this.setAnimationCacheMode(this._defaultCacheMode); else {
this._defaultCacheMode = h.REALTIME;
cc.warn("Animation cache mode doesn't support skeletal nesting");
}
},
editorOnly: !0,
visible: !0,
animatable: !1,
displayName: "Animation Cache Mode",
tooltip: !1
},
timeScale: {
default: 1,
notify: function() {
this._armature && !this.isAnimationCached() && (this._armature.animation.timeScale = this.timeScale);
},
tooltip: !1
},
playTimes: {
default: -1,
tooltip: !1
},
premultipliedAlpha: {
default: !1,
tooltip: !1
},
debugBones: {
default: !1,
notify: function() {
this._updateDebugDraw();
},
tooltip: !1
},
enableBatch: {
default: !1,
notify: function() {
this._updateBatch();
},
tooltip: !1
},
_armatureKey: "",
_accTime: 0,
_playCount: 0,
_frameCache: null,
_curFrame: null,
_playing: !1,
_armatureCache: null
},
ctor: function() {
this._eventTarget = new r();
this._materialCache = {};
this._inited = !1;
this.attachUtil = new c();
this._factory = dragonBones.CCFactory.getInstance();
},
onLoad: function() {
for (var t = this.node.children, e = 0, i = t.length; e < i; e++) {
var n = t[e];
0 === (n._name && n._name.search("CHILD_ARMATURE-")) && n.destroy();
}
},
_updateBatch: function() {
var t = this.getMaterial(0);
t && t.define("CC_USE_MODEL", !this.enableBatch);
this._materialCache = {};
},
_updateMaterial: function() {
var t = this.getMaterial(0);
if (t) {
t.define("CC_USE_MODEL", !this.enableBatch);
t.define("USE_TEXTURE", !0);
}
this._materialCache = {};
},
disableRender: function() {
this._super();
this.node._renderFlag &= ~o;
},
markForRender: function(t) {
this._super(t);
t ? this.node._renderFlag |= o : this.node._renderFlag &= ~o;
},
_validateRender: function() {
var t = this.dragonAtlasAsset && this.dragonAtlasAsset.texture;
t && t.loaded ? this._super() : this.disableRender();
},
__preload: function() {
this._init();
},
_init: function() {
if (!this._inited) {
this._inited = !0;
this._resetAssembler();
this._activateMaterial();
this._parseDragonAtlasAsset();
this._refresh();
for (var t = this.node.children, e = 0, i = t.length; e < i; e++) {
var n = t[e];
n && "DEBUG_DRAW_NODE" === n._name && n.destroy();
}
this._updateDebugDraw();
}
},
getArmatureKey: function() {
return this._armatureKey;
},
setAnimationCacheMode: function(t) {
if (this._preCacheMode !== t) {
this._cacheMode = t;
this._buildArmature();
}
},
isAnimationCached: function() {
0;
return this._cacheMode !== h.REALTIME;
},
onEnable: function() {
this._super();
this._armature && !this.isAnimationCached() && this._factory._dragonBones.clock.add(this._armature);
},
onDisable: function() {
this._super();
this._armature && !this.isAnimationCached() && this._factory._dragonBones.clock.remove(this._armature);
},
_emitCacheCompleteEvent: function() {
this._eventTarget.emit(dragonBones.EventObject.LOOP_COMPLETE);
this._eventTarget.emit(dragonBones.EventObject.COMPLETE);
},
update: function(t) {
if (this.isAnimationCached() && this._frameCache) {
var e = this._frameCache;
if (e.isInited()) {
var i = e.frames;
if (this._playing) {
var n = a.FrameTime;
0 == this._accTime && 0 == this._playCount && this._eventTarget.emit(dragonBones.EventObject.START);
var r = dragonBones.timeScale;
this._accTime += t * this.timeScale * r;
var s = Math.floor(this._accTime / n);
e.isCompleted || e.updateToFrame(s);
if (e.isCompleted && s >= i.length) {
this._playCount++;
if (this.playTimes > 0 && this._playCount >= this.playTimes) {
this._curFrame = i[i.length - 1];
this._accTime = 0;
this._playing = !1;
this._playCount = 0;
this._emitCacheCompleteEvent();
return;
}
this._accTime = 0;
s = 0;
this._emitCacheCompleteEvent();
}
this._curFrame = i[s];
} else if (e.isInvalid()) {
e.updateToFrame();
this._curFrame = i[i.length - 1];
}
}
}
},
onDestroy: function() {
this._super();
this._inited = !1;
if (this._cacheMode === h.PRIVATE_CACHE) {
this._armatureCache.dispose();
this._armatureCache = null;
this._armature = null;
} else if (this._cacheMode === h.SHARED_CACHE) {
this._armatureCache = null;
this._armature = null;
} else if (this._armature) {
this._armature.dispose();
this._armature = null;
}
},
_updateDebugDraw: function() {
if (this.debugBones) {
if (!this._debugDraw) {
var t = new cc.PrivateNode();
t.name = "DEBUG_DRAW_NODE";
var e = t.addComponent(s);
e.lineWidth = 1;
e.strokeColor = cc.color(255, 0, 0, 255);
this._debugDraw = e;
}
this._debugDraw.node.parent = this.node;
} else this._debugDraw && (this._debugDraw.node.parent = null);
},
_buildArmature: function() {
if (this.dragonAsset && this.dragonAtlasAsset && this.armatureName) {
if (this._armature) {
this._preCacheMode === h.PRIVATE_CACHE ? this._armatureCache.dispose() : this._preCacheMode === h.REALTIME && this._armature.dispose();
this._armatureCache = null;
this._armature = null;
this._displayProxy = null;
this._frameCache = null;
this._curFrame = null;
this._playing = !1;
this._preCacheMode = null;
}
if (this._cacheMode === h.SHARED_CACHE) this._armatureCache = a.sharedCache; else if (this._cacheMode === h.PRIVATE_CACHE) {
this._armatureCache = new a();
this._armatureCache.enablePrivateMode();
}
var t = this.dragonAtlasAsset._uuid;
this._armatureKey = this.dragonAsset.init(this._factory, t);
if (this.isAnimationCached()) {
this._armature = this._armatureCache.getArmatureCache(this.armatureName, this._armatureKey, t);
this._armature || (this._cacheMode = h.REALTIME);
}
this._preCacheMode = this._cacheMode;
if (this._cacheMode === h.REALTIME) {
this._displayProxy = this._factory.buildArmatureDisplay(this.armatureName, this._armatureKey, "", t);
if (!this._displayProxy) return;
this._displayProxy._ccNode = this.node;
this._displayProxy.setEventTarget(this._eventTarget);
this._armature = this._displayProxy._armature;
this._armature.animation.timeScale = this.timeScale;
this._factory._dragonBones.clock.add(this._armature);
}
this._cacheMode !== h.REALTIME && this.debugBones && cc.warn("Debug bones is invalid in cached mode");
if (this._armature) {
var e = this._armature.armatureData.aabb;
this.node.setContentSize(e.width, e.height);
}
this._updateBatch();
this.attachUtil.init(this);
this.attachUtil._associateAttachedNode();
this.animationName && this.playAnimation(this.animationName, this.playTimes);
this.markForRender(!0);
}
},
_parseDragonAtlasAsset: function() {
this.dragonAtlasAsset && this.dragonAtlasAsset.init(this._factory);
},
_refresh: function() {
this._buildArmature();
0;
},
_updateCacheModeEnum: !1,
_updateAnimEnum: !1,
_updateArmatureEnum: !1,
playAnimation: function(t, e) {
this.playTimes = void 0 === e ? -1 : e;
this.animationName = t;
if (this.isAnimationCached()) {
var i = this._armatureCache.getAnimationCache(this._armatureKey, t);
i || (i = this._armatureCache.initAnimationCache(this._armatureKey, t));
if (i) {
this._accTime = 0;
this._playCount = 0;
this._frameCache = i;
this.attachUtil._hasAttachedNode() && this._frameCache.enableCacheAttachedInfo();
this._frameCache.updateToFrame(0);
this._playing = !0;
this._curFrame = this._frameCache.frames[0];
}
} else if (this._armature) return this._armature.animation.play(t, this.playTimes);
},
updateAnimationCache: function(t) {
this.isAnimationCached() && this._armatureCache.updateAnimationCache(this._armatureKey, t);
},
invalidAnimationCache: function() {
this.isAnimationCached() && this._armatureCache.invalidAnimationCache(this._armatureKey);
},
getArmatureNames: function() {
var t = this._factory.getDragonBonesData(this._armatureKey);
return t && t.armatureNames || [];
},
getAnimationNames: function(t) {
var e = [], i = this._factory.getDragonBonesData(this._armatureKey);
if (i) {
var n = i.getArmature(t);
if (n) for (var r in n.animations) n.animations.hasOwnProperty(r) && e.push(r);
}
return e;
},
on: function(t, e, i) {
this.addEventListener(t, e, i);
},
off: function(t, e, i) {
this.removeEventListener(t, e, i);
},
once: function(t, e, i) {
this._eventTarget.once(t, e, i);
},
addEventListener: function(t, e, i) {
this._eventTarget.on(t, e, i);
},
removeEventListener: function(t, e, i) {
this._eventTarget.off(t, e, i);
},
buildArmature: function(t, e) {
return this._factory.createArmatureNode(this, t, e);
},
armature: function() {
return this._armature;
}
});
e.exports = dragonBones.ArmatureDisplay = f;
}), {
"../../cocos2d/core/components/CCRenderComponent": 131,
"../../cocos2d/core/event/event-target": 156,
"../../cocos2d/core/graphics/graphics": 172,
"../../cocos2d/core/renderer/render-flow": 263,
"./ArmatureCache": void 0,
"./AttachUtil": 377
} ],
377: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../cocos2d/core/value-types/mat4"));
var r = t("../../cocos2d/core/renderer/render-flow").FLAG_TRANSFORM, s = function() {}, o = function(t) {
Object.defineProperty(t, "_worldMatDirty", {
get: function() {
return !0;
},
set: function(t) {}
});
t._calculWorldMatrix = s;
t._mulMat = s;
}, a = new n.default(), c = cc.Class({
name: "dragonBones.AttachUtil",
ctor: function() {
this._inited = !1;
this._armature = null;
this._armatureNode = null;
this._armatureDisplay = null;
this._attachedRootNode = null;
this._attachedNodeArray = [];
this._boneIndexToNode = {};
},
init: function(t) {
this._inited = !0;
this._armature = t._armature;
this._armatureNode = t.node;
this._armatureDisplay = t;
},
reset: function() {
this._inited = !1;
this._armature = null;
this._armatureNode = null;
this._armatureDisplay = null;
},
_prepareAttachNode: function() {
if (this._armature) {
var t = this._armatureNode.getChildByName("ATTACHED_NODE_TREE");
if (!t || !t.isValid) {
t = new cc.Node("ATTACHED_NODE_TREE");
o(t);
this._armatureNode.addChild(t);
}
this._armatureDisplay.isAnimationCached() && this._armatureDisplay._frameCache && this._armatureDisplay._frameCache.enableCacheAttachedInfo();
this._attachedRootNode = t;
return t;
}
},
_buildBoneAttachedNode: function(t, e) {
var i = "ATTACHED_NODE:" + t.name, n = new cc.Node(i);
this._buildBoneRelation(n, t, e);
return n;
},
_buildBoneRelation: function(t, e, i) {
o(t);
t._bone = e;
t._boneIndex = i;
this._attachedNodeArray.push(t);
this._boneIndexToNode[i] = t;
},
getAttachedRootNode: function() {
return this._attachedRootNode;
},
getAttachedNodes: function(t) {
var e = this._attachedNodeArray, i = [];
if (!this._inited) return i;
for (var n = 0, r = e.length; n < r; n++) {
var s = e[n];
s && s.isValid && (s.name === "ATTACHED_NODE:" + t && i.push(s));
}
return i;
},
_rebuildNodeArray: function() {
for (var t = this._boneIndexToNode = {}, e = this._attachedNodeArray, i = this._attachedNodeArray = [], n = 0, r = e.length; n < r; n++) {
var s = e[n];
if (s && s.isValid && !s._toRemove) {
i.push(s);
t[s._boneIndex] = s;
}
}
},
_sortNodeArray: function() {
this._attachedNodeArray.sort((function(t, e) {
return t._boneIndex < e._boneIndex ? -1 : 1;
}));
},
_getNodeByBoneIndex: function(t) {
var e = this._boneIndexToNode[t];
return e && e.isValid ? e : null;
},
destroyAttachedNodes: function(t) {
if (this._inited) {
for (var e = this._attachedNodeArray, i = function t(e) {
for (var i = e.children, n = 0, r = i.length; n < r; n++) {
var s = i[n];
s && t(s);
}
e._toRemove = !0;
}, n = 0, r = e.length; n < r; n++) {
var s = e[n];
if (s && s.isValid) {
if (s.name.split("ATTACHED_NODE:")[1] === t) {
i(s);
s.removeFromParent(!0);
s.destroy();
e[n] = null;
}
}
}
this._rebuildNodeArray();
}
},
generateAttachedNodes: function(t) {
var e = [];
if (!this._inited) return e;
var i = this._prepareAttachNode();
if (!i) return e;
var n = 0, r = [], s = function(e) {
if (e) {
for (var i, o = e.getBones(), a = 0, c = o.length; a < c; a++) {
(i = o[a])._boneIndex = n++;
t === i.name && r.push(i);
}
for (var l, u = e.getSlots(), h = 0, f = u.length; h < f; h++) (l = u[h]).childArmature && s(l.childArmature);
}
}.bind(this);
s(this._armature);
for (var o = function(t) {
if (t) {
var e = this._getNodeByBoneIndex(t._boneIndex);
if (e) return e;
e = this._buildBoneAttachedNode(t, t._boneIndex);
var n = null;
if (t.armature.parent) {
n = t.armature.parent.parent;
}
var r = o(t.parent || n) || i;
e.parent = r;
t.parent ? e._rootNode = r._rootNode : e._rootNode = r;
return e;
}
}.bind(this), a = 0, c = r.length; a < c; a++) {
var l = o(r[a]);
l && e.push(l);
}
this._sortNodeArray();
return e;
},
destroyAllAttachedNodes: function() {
this._attachedRootNode = null;
this._attachedNodeArray.length = 0;
this._boneIndexToNode = {};
if (this._inited) {
var t = this._armatureNode.getChildByName("ATTACHED_NODE_TREE");
if (t) {
t.removeFromParent(!0);
t.destroy();
t = null;
}
}
},
generateAllAttachedNodes: function() {
if (this._inited) {
this._boneIndexToNode = {};
this._attachedNodeArray.length = 0;
var t = this._prepareAttachNode();
if (t) {
var e = 0, i = function(n) {
if (n) {
var r = t;
if (n.parent) {
r = n.parent.parent._attachedNode;
}
for (var s, o = n.getBones(), a = 0, c = o.length; a < c; a++) {
var l = e++;
(s = o[a])._attachedNode = null;
var u = null;
if (u = s.parent ? s.parent._attachedNode : r) {
var h = u.getChildByName("ATTACHED_NODE:" + s.name);
if (h && h.isValid) this._buildBoneRelation(h, s, l); else {
h = this._buildBoneAttachedNode(s, l);
u.addChild(h);
}
h._rootNode = r;
s._attachedNode = h;
}
}
for (var f, _ = n.getSlots(), d = 0, p = _.length; d < p; d++) (f = _[d]).childArmature && i(f.childArmature);
}
}.bind(this);
i(this._armature);
return t;
}
}
},
_hasAttachedNode: function() {
return !!this._inited && !!this._armatureNode.getChildByName("ATTACHED_NODE_TREE");
},
_associateAttachedNode: function() {
if (this._inited) {
var t = this._armatureNode.getChildByName("ATTACHED_NODE_TREE");
if (t && t.isValid) {
this._attachedRootNode = t;
this._boneIndexToNode = {};
this._attachedNodeArray.length = 0;
var e = this._armature;
if (e) {
o(t);
var i = 0, n = function(e) {
if (e) {
var r = t;
if (e.parent) {
r = e.parent.parent._attachedNode;
}
for (var s, o = e.getBones(), a = 0, c = o.length; a < c; a++) {
var l = i++;
(s = o[a])._attachedNode = null;
var u = null;
if (u = s.parent ? s.parent._attachedNode : r) {
var h = u.getChildByName("ATTACHED_NODE:" + s.name);
if (h && h.isValid) {
this._buildBoneRelation(h, s, l);
h._rootNode = r;
s._attachedNode = h;
}
}
}
for (var f, _ = e.getSlots(), d = 0, p = _.length; d < p; d++) (f = _[d]).childArmature && n(f.childArmature);
}
}.bind(this);
n(e);
}
}
}
},
_syncAttachedNode: function() {
if (this._inited) {
var t = this._attachedRootNode, e = this._attachedNodeArray;
if (t && t.isValid) {
var i = this._armatureNode._worldMatrix;
n.default.copy(t._worldMatrix, i);
t._renderFlag &= ~r;
var s = null, o = this._armatureDisplay.isAnimationCached();
if (!o || (s = this._armatureDisplay._curFrame && this._armatureDisplay._curFrame.boneInfos)) {
for (var c = this._armatureNode._mulMat, l = function(t, e, i) {
var n = a.m;
n[0] = i.a;
n[1] = i.b;
n[4] = -i.c;
n[5] = -i.d;
n[12] = i.tx;
n[13] = i.ty;
c(t, e, a);
}, u = !1, h = 0, f = e.length; h < f; h++) {
var _ = e[h];
if (_ && _.isValid) {
var d = o ? s[_._boneIndex] : _._bone;
if (d && !d._isInPool) {
l(_._worldMatrix, _._rootNode._worldMatrix, d.globalTransformMatrix);
_._renderFlag &= ~r;
} else {
_.removeFromParent(!0);
_.destroy();
e[h] = null;
u = !0;
}
} else {
e[h] = null;
u = !0;
}
}
u && this._rebuildNodeArray();
}
} else {
this._attachedRootNode = null;
e.length = 0;
}
}
}
});
e.exports = dragonBones.AttachUtil = c;
}), {
"../../cocos2d/core/renderer/render-flow": 263,
"../../cocos2d/core/value-types/mat4": 330
} ],
378: [ (function(t, e, i) {
"use strict";
var n = !1, r = cc.Class({
name: "dragonBones.DragonBonesAsset",
extends: cc.Asset,
ctor: function() {
this.reset();
},
properties: {
_dragonBonesJson: "",
dragonBonesJson: {
get: function() {
return this._dragonBonesJson;
},
set: function(t) {
this._dragonBonesJson = t;
this._dragonBonesJsonData = JSON.parse(t);
this.reset();
}
},
_nativeAsset: {
get: function() {
return this._buffer;
},
set: function(t) {
this._buffer = t.buffer || t;
this.reset();
},
override: !0
}
},
statics: {
preventDeferredLoadDependents: !0
},
createNode: !1,
reset: function() {
this._clear();
0;
},
init: function(t, e) {
this._factory = t;
!this._dragonBonesJsonData && this.dragonBonesJson && (this._dragonBonesJsonData = JSON.parse(this.dragonBonesJson));
var i = null;
i = this._dragonBonesJsonData ? this._dragonBonesJsonData : this._nativeAsset;
if (!this._uuid) {
var n = this._factory.getDragonBonesDataByRawData(i);
n ? this._uuid = n.name : cc.warn("dragonbones name is empty");
}
var r = this._uuid + "#" + e;
if (this._factory.getDragonBonesData(r)) return r;
this._factory.parseDragonBonesData(i, r);
return r;
},
getArmatureEnum: !1,
getAnimsEnum: !1,
_clear: function() {
if (this._factory) {
n.resetArmature(this._uuid);
this._factory.removeDragonBonesDataByUUID(this._uuid, !0);
}
},
destroy: function() {
this._clear();
this._super();
}
});
dragonBones.DragonBonesAsset = e.exports = r;
}), {
"./ArmatureCache": void 0
} ],
379: [ (function(t, e, i) {
"use strict";
var n = cc.Class({
name: "dragonBones.DragonBonesAtlasAsset",
extends: cc.Asset,
ctor: function() {
this._clear();
},
properties: {
_atlasJson: "",
atlasJson: {
get: function() {
return this._atlasJson;
},
set: function(t) {
this._atlasJson = t;
this._atlasJsonData = JSON.parse(this.atlasJson);
this._clear();
}
},
_texture: {
default: null,
type: cc.Texture2D,
formerlySerializedAs: "texture"
},
texture: {
get: function() {
return this._texture;
},
set: function(t) {
this._texture = t;
this._clear();
}
},
_textureAtlasData: null
},
statics: {
preventDeferredLoadDependents: !0
},
createNode: !1,
init: function(t) {
this._factory = t;
this._atlasJsonData || (this._atlasJsonData = JSON.parse(this.atlasJson));
var e = this._atlasJsonData;
this._uuid = this._uuid || e.name;
this._textureAtlasData ? t.addTextureAtlasData(this._textureAtlasData, this._uuid) : this._textureAtlasData = t.parseTextureAtlasData(e, this.texture, this._uuid);
},
_clear: function() {},
destroy: function() {
this._clear();
this._super();
}
});
dragonBones.DragonBonesAtlasAsset = e.exports = n;
}), {
"./ArmatureCache": void 0
} ],
380: [ (function(t, e, i) {
"use strict";
var n = "undefined" == typeof window ? global : window;
0;
if (void 0 !== n.dragonBones) {
dragonBones._timeScale = 1;
Object.defineProperty(dragonBones, "timeScale", {
get: function() {
return this._timeScale;
},
set: function(t) {
this._timeScale = t;
this.CCFactory.getInstance()._dragonBones.clock.timeScale = t;
},
configurable: !0
});
dragonBones.DisplayType = {
Image: 0,
Armature: 1,
Mesh: 2
};
dragonBones.ArmatureType = {
Armature: 0,
MovieClip: 1,
Stage: 2
};
dragonBones.ExtensionType = {
FFD: 0,
AdjustColor: 10,
BevelFilter: 11,
BlurFilter: 12,
DropShadowFilter: 13,
GlowFilter: 14,
GradientBevelFilter: 15,
GradientGlowFilter: 16
};
dragonBones.EventType = {
Frame: 0,
Sound: 1
};
dragonBones.ActionType = {
Play: 0,
Stop: 1,
GotoAndPlay: 2,
GotoAndStop: 3,
FadeIn: 4,
FadeOut: 5
};
dragonBones.AnimationFadeOutMode = {
None: 0,
SameLayer: 1,
SameGroup: 2,
SameLayerAndGroup: 3,
All: 4
};
dragonBones.BinaryOffset = {
WeigthBoneCount: 0,
WeigthFloatOffset: 1,
WeigthBoneIndices: 2,
MeshVertexCount: 0,
MeshTriangleCount: 1,
MeshFloatOffset: 2,
MeshWeightOffset: 3,
MeshVertexIndices: 4,
TimelineScale: 0,
TimelineOffset: 1,
TimelineKeyFrameCount: 2,
TimelineFrameValueCount: 3,
TimelineFrameValueOffset: 4,
TimelineFrameOffset: 5,
FramePosition: 0,
FrameTweenType: 1,
FrameTweenEasingOrCurveSampleCount: 2,
FrameCurveSamples: 3,
DeformMeshOffset: 0,
DeformCount: 1,
DeformValueCount: 2,
DeformValueOffset: 3,
DeformFloatOffset: 4
};
dragonBones.BoneType = {
Bone: 0,
Surface: 1
};
0;
t("./DragonBonesAsset");
t("./DragonBonesAtlasAsset");
t("./ArmatureDisplay");
t("./webgl-assembler");
}
}), {
"./ArmatureCache": void 0,
"./ArmatureDisplay": 376,
"./CCArmatureDisplay": void 0,
"./CCFactory": void 0,
"./CCSlot": void 0,
"./CCTextureData": void 0,
"./DragonBonesAsset": 378,
"./DragonBonesAtlasAsset": 379,
"./lib/dragonBones": void 0,
"./webgl-assembler": 381
} ],
381: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = s(t("../../cocos2d/core/renderer/assembler")), r = s(t("../../cocos2d/core/value-types/mat4"));
function s(t) {
return t && t.__esModule ? t : {
default: t
};
}
function o(t) {
return function() {
var e, i = u(t);
if (l()) {
var n = u(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return a(this, e);
};
}
function a(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? c(t) : e;
}
function c(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function l() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function u(t) {
return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function h(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var f, _, d, p, m, y, v, g, b, C, x, A, S, w, T, E, M, B, D, R, I, P, O, L, V, N, F, z, k, G, U = t("./ArmatureDisplay"), j = t("../../cocos2d/core/renderer/render-flow"), H = cc.gfx, W = cc.color(255, 0, 0, 255), q = cc.color(0, 0, 255, 255), X = cc.color(0, 255, 0, 255);
function Y(t, e) {
if (!t) return null;
var i, n;
switch (e) {
case 1:
i = m ? cc.macro.ONE : cc.macro.SRC_ALPHA;
n = cc.macro.ONE;
break;

case 10:
i = cc.macro.DST_COLOR;
n = cc.macro.ONE_MINUS_SRC_ALPHA;
break;

case 12:
i = cc.macro.ONE;
n = cc.macro.ONE_MINUS_SRC_COLOR;
break;

case 0:
default:
i = m ? cc.macro.ONE : cc.macro.SRC_ALPHA;
n = cc.macro.ONE_MINUS_SRC_ALPHA;
}
var r = !x.enableBatch, s = x._materials[0];
if (!s) return null;
var o = x._materialCache, a = t.getId() + i + n + r, c = o[a];
if (!c) {
if (o.baseMaterial) c = cc.MaterialVariant.create(s); else {
c = s;
o.baseMaterial = s;
}
c.define("CC_USE_MODEL", r);
c.setProperty("texture", t);
c.setBlend(!0, H.BLEND_FUNC_ADD, i, n, H.BLEND_FUNC_ADD, i, n);
o[a] = c;
}
return c;
}
function J(t, e) {
O = t.a * e * p;
y = m ? O / 255 : 1;
R = t.r * f * y;
I = t.g * _ * y;
P = t.b * d * y;
D = (O << 24 >>> 0) + (P << 16) + (I << 8) + R;
}
var Z = (function(t) {
h(e, t);
o(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.updateRenderData = function(t, e) {};
i.realTimeTraverse = function(t, e, i) {
for (var n, s, o, a, c, l, u, h, f, _, d = t._slots, p = 0, m = d.length; p < m; p++) {
u = (h = d[p])._color;
if (h._visible && h._displayData) {
e ? h._mulMat(h._worldMatrix, e, h._matrix) : r.default.copy(h._worldMatrix, h._matrix);
if (h.childArmature) this.realTimeTraverse(h.childArmature, h._worldMatrix, i * u.a / 255); else if (a = Y(h.getTexture(), h._blendMode)) {
if (v || a.getHash() !== C.material.getHash()) {
v = !1;
C._flush();
C.node = b;
C.material = a;
}
J(u, i);
f = h._worldMatrix.m;
c = h._localVertices;
T = c.length >> 2;
l = h._indices;
E = l.length;
_ = g.request(T, E);
S = _.indiceOffset;
A = _.byteOffset >> 2;
w = _.vertexOffset;
n = g._vData;
s = g._iData;
o = g._uintVData;
V = f[0];
N = f[4];
F = f[12];
z = f[1];
k = f[5];
G = f[13];
for (var y = 0, x = c.length; y < x; ) {
M = c[y++];
B = c[y++];
n[A++] = M * V + B * N + F;
n[A++] = M * z + B * k + G;
n[A++] = c[y++];
n[A++] = c[y++];
o[A++] = D;
}
for (var R = 0, I = l.length; R < I; R++) s[S++] = w + l[R];
}
}
}
};
i.cacheTraverse = function(t, e) {
if (t) {
var i = t.segments;
if (0 != i.length) {
var n, r, s, o, a, c = t.vertices, l = t.indices, u = 0, h = 0, f = 0;
if (e) {
var _ = e.m;
V = _[0];
z = _[1];
N = _[4];
k = _[5];
F = _[12];
G = _[13];
}
var d = 16 & L, p = d && (1 === V && 0 === z && 0 === N && 1 === k), m = 0, y = t.colors, x = y[m++], R = x.vfOffset;
J(x, 1);
for (var I = 0, P = i.length; I < P; I++) {
var O = i[I];
o = Y(O.tex, O.blendMode);
if (v || o.getHash() !== C.material.getHash()) {
v = !1;
C._flush();
C.node = b;
C.material = o;
}
T = O.vertexCount;
E = O.indexCount;
a = g.request(T, E);
S = a.indiceOffset;
w = a.vertexOffset;
A = a.byteOffset >> 2;
n = g._vData;
r = g._iData;
s = g._uintVData;
for (var U = S, j = S + E; U < j; U++) r[U] = w + l[h++];
f = O.vfCount;
n.set(c.subarray(u, u + f), A);
u += f;
if (p) for (var H = A, W = A + f; H < W; H += 5) {
n[H] += F;
n[H + 1] += G;
} else if (d) for (var q = A, X = A + f; q < X; q += 5) {
M = n[q];
B = n[q + 1];
n[q] = M * V + B * N + F;
n[q + 1] = M * z + B * k + G;
}
if (1 & L) for (var Z = u - f, K = A + 4, Q = A + 4 + f; K < Q; K += 5, Z += 5) {
if (Z >= R) {
J(x = y[m++], 1);
R = x.vfOffset;
}
s[K] = D;
}
}
}
}
};
i.fillBuffers = function(t, e) {
t.node._renderFlag |= j.FLAG_UPDATE_RENDER_DATA;
var i = t._armature;
if (i) {
v = !0;
m = t.premultipliedAlpha;
b = t.node;
g = e._meshBuffer;
C = e;
x = t;
L = 0;
var n = b._color;
f = n.r / 255;
_ = n.g / 255;
d = n.b / 255;
p = n.a / 255;
4294967295 !== n._val && (L |= 1);
var r = void 0;
if (x.enableBatch) {
r = b._worldMatrix;
v = !1;
L |= 16;
}
if (t.isAnimationCached()) this.cacheTraverse(t._curFrame, r); else {
this.realTimeTraverse(i, r, 1);
var s = t._debugDraw;
if (t.debugBones && s) {
s.clear();
s.lineWidth = 5;
s.strokeColor = W;
s.fillColor = q;
for (var o = i.getBones(), a = 0, c = o.length; a < c; a++) {
var l = o[a], u = Math.max(l.boneData.length, 5), h = l.globalTransformMatrix.tx, y = l.globalTransformMatrix.ty, A = h + l.globalTransformMatrix.a * u, S = y + l.globalTransformMatrix.b * u;
s.moveTo(h, y);
s.lineTo(A, S);
s.stroke();
s.circle(h, y, 2 * Math.PI);
s.fill();
0 === a && (s.fillColor = X);
}
}
}
e.worldMatDirty++;
t.attachUtil._syncAttachedNode();
b = void 0;
g = void 0;
C = void 0;
x = void 0;
}
};
i.postFillBuffers = function(t, e) {
e.worldMatDirty--;
};
return e;
})(n.default);
i.default = Z;
n.default.register(U, Z);
e.exports = i.default;
}), {
"../../cocos2d/core/renderer/assembler": 259,
"../../cocos2d/core/renderer/render-flow": 263,
"../../cocos2d/core/value-types/mat4": 330,
"./ArmatureDisplay": 376
} ],
382: [ (function(t, e, i) {
"use strict";
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../cocos2d/core/value-types/mat4"));
var r = t("../../cocos2d/core/renderer/render-flow").FLAG_TRANSFORM, s = function() {}, o = function(t) {
Object.defineProperty(t, "_worldMatDirty", {
get: function() {
return !0;
},
set: function(t) {}
});
t._calculWorldMatrix = s;
t._mulMat = s;
}, a = new n.default(), c = cc.Class({
name: "sp.AttachUtil",
ctor: function() {
this._inited = !1;
this._skeleton = null;
this._skeletonNode = null;
this._skeletonComp = null;
this._attachedRootNode = null;
this._attachedNodeArray = [];
this._boneIndexToNode = {};
},
init: function(t) {
this._inited = !0;
this._skeleton = t._skeleton;
this._skeletonNode = t.node;
this._skeletonComp = t;
},
reset: function() {
this._inited = !1;
this._skeleton = null;
this._skeletonNode = null;
this._skeletonComp = null;
},
_prepareAttachNode: function() {
if (this._skeleton) {
var t = this._skeletonNode.getChildByName("ATTACHED_NODE_TREE");
if (!t || !t.isValid) {
t = new cc.Node("ATTACHED_NODE_TREE");
o(t);
this._skeletonNode.addChild(t);
}
this._skeletonComp.isAnimationCached() && this._skeletonComp._frameCache && this._skeletonComp._frameCache.enableCacheAttachedInfo();
this._attachedRootNode = t;
return t;
}
},
_buildBoneAttachedNode: function(t, e) {
var i = "ATTACHED_NODE:" + t.data.name, n = new cc.Node(i);
this._buildBoneRelation(n, t, e);
return n;
},
_buildBoneRelation: function(t, e, i) {
o(t);
t._bone = e;
t._boneIndex = i;
this._attachedNodeArray.push(t);
this._boneIndexToNode[i] = t;
},
getAttachedRootNode: function() {
return this._attachedRootNode;
},
getAttachedNodes: function(t) {
var e = this._attachedNodeArray, i = [];
if (!this._inited) return i;
for (var n = 0, r = e.length; n < r; n++) {
var s = e[n];
s && s.isValid && (s.name === "ATTACHED_NODE:" + t && i.push(s));
}
return i;
},
_rebuildNodeArray: function() {
for (var t = this._boneIndexToNode = {}, e = this._attachedNodeArray, i = this._attachedNodeArray = [], n = 0, r = e.length; n < r; n++) {
var s = e[n];
if (s && s.isValid && !s._toRemove) {
i.push(s);
t[s._boneIndex] = s;
}
}
},
_sortNodeArray: function() {
this._attachedNodeArray.sort((function(t, e) {
return t._boneIndex < e._boneIndex ? -1 : 1;
}));
},
_getNodeByBoneIndex: function(t) {
var e = this._boneIndexToNode[t];
return e && e.isValid ? e : null;
},
destroyAttachedNodes: function(t) {
if (this._inited) {
for (var e = this._attachedNodeArray, i = function t(e) {
for (var i = e.children, n = 0, r = i.length; n < r; n++) {
var s = i[n];
s && t(s);
}
e._toRemove = !0;
}, n = 0, r = e.length; n < r; n++) {
var s = e[n];
if (s && s.isValid) {
if (s.name.split("ATTACHED_NODE:")[1] === t) {
i(s);
s.removeFromParent(!0);
s.destroy();
e[n] = null;
}
}
}
this._rebuildNodeArray();
}
},
generateAttachedNodes: function(t) {
var e = [];
if (!this._inited) return e;
var i = this._prepareAttachNode();
if (!i) return e;
for (var n = [], r = this._skeleton.bones, s = 0, o = r.length; s < o; s++) {
var a = r[s];
a.data.name == t && n.push(a);
}
for (var c = function(t) {
if (t) {
var e = t.data, n = this._getNodeByBoneIndex(e.index);
if (n) return n;
n = this._buildBoneAttachedNode(t, e.index);
var r = c(t.parent) || i;
n.parent = r;
return n;
}
}.bind(this), l = 0, u = n.length; l < u; l++) {
var h = c(n[l]);
e.push(h);
}
this._sortNodeArray();
return e;
},
destroyAllAttachedNodes: function() {
this._attachedRootNode = null;
this._attachedNodeArray.length = 0;
this._boneIndexToNode = {};
if (this._inited) {
var t = this._skeletonNode.getChildByName("ATTACHED_NODE_TREE");
if (t) {
t.removeFromParent(!0);
t.destroy();
t = null;
}
}
},
generateAllAttachedNodes: function() {
if (this._inited) {
this._boneIndexToNode = {};
this._attachedNodeArray.length = 0;
var t = this._prepareAttachNode();
if (t) {
for (var e = this._skeleton.bones, i = 0, n = e.length; i < n; i++) {
var r = e[i], s = r.data, o = null;
if (r.parent) {
var a = r.parent.data.index;
o = this._boneIndexToNode[a];
} else o = t;
if (o) {
var c = o.getChildByName("ATTACHED_NODE:" + s.name);
if (c && c.isValid) this._buildBoneRelation(c, r, s.index); else {
c = this._buildBoneAttachedNode(r, s.index);
o.addChild(c);
}
}
}
return t;
}
}
},
_hasAttachedNode: function() {
return !!this._inited && !!this._skeletonNode.getChildByName("ATTACHED_NODE_TREE");
},
_associateAttachedNode: function() {
if (this._inited) {
var t = this._skeletonNode.getChildByName("ATTACHED_NODE_TREE");
if (t && t.isValid) {
this._attachedRootNode = t;
this._boneIndexToNode = {};
this._attachedNodeArray.length = 0;
o(t);
for (var e = this._skeleton.bones, i = 0, n = e.length; i < n; i++) {
var r = e[i], s = r.data, a = null;
if (r.parent) {
var c = r.parent.data.index;
a = this._boneIndexToNode[c];
} else a = t;
if (a) {
var l = a.getChildByName("ATTACHED_NODE:" + s.name);
l && l.isValid && this._buildBoneRelation(l, r, s.index);
}
}
}
}
},
_syncAttachedNode: function() {
if (this._inited) {
var t = this._attachedRootNode, e = this._attachedNodeArray;
if (t && t.isValid) {
var i = this._skeletonNode._worldMatrix;
n.default.copy(t._worldMatrix, i);
t._renderFlag &= ~r;
var s = null;
if (s = this._skeletonComp.isAnimationCached() ? this._skeletonComp._curFrame && this._skeletonComp._curFrame.boneInfos : this._skeleton.bones) {
for (var o = this._skeletonNode._mulMat, c = function(t, e, i) {
var n = a.m;
n[0] = i.a;
n[1] = i.c;
n[4] = i.b;
n[5] = i.d;
n[12] = i.worldX;
n[13] = i.worldY;
o(t, e, a);
}, l = !1, u = 0, h = e.length; u < h; u++) {
var f = e[u];
if (f && f.isValid) {
var _ = s[f._boneIndex];
if (_) {
c(f._worldMatrix, t._worldMatrix, _);
f._renderFlag &= ~r;
} else {
f.removeFromParent(!0);
f.destroy();
e[u] = null;
l = !0;
}
} else {
e[u] = null;
l = !0;
}
}
l && this._rebuildNodeArray();
}
} else {
this._attachedRootNode = null;
e.length = 0;
}
}
}
});
e.exports = sp.AttachUtil = c;
}), {
"../../cocos2d/core/renderer/render-flow": 263,
"../../cocos2d/core/value-types/mat4": 330
} ],
383: [ (function(t, e, i) {
"use strict";
var n = t("./track-entry-listeners"), r = t("../../cocos2d/core/components/CCRenderComponent"), s = t("./lib/spine"), o = t("../../cocos2d/core/graphics/graphics"), a = t("../../cocos2d/core/renderer/render-flow").FLAG_POST_RENDER, c = t("./skeleton-cache"), l = t("./AttachUtil"), u = cc.Enum({
default: -1
}), h = cc.Enum({
"<None>": 0
}), f = cc.Enum({
REALTIME: 0,
SHARED_CACHE: 1,
PRIVATE_CACHE: 2
});
sp.Skeleton = cc.Class({
name: "sp.Skeleton",
extends: r,
editor: !1,
statics: {
AnimationCacheMode: f
},
properties: {
paused: {
default: !1,
visible: !1
},
skeletonData: {
default: null,
type: sp.SkeletonData,
notify: function() {
this.defaultSkin = "";
this.defaultAnimation = "";
0;
this._updateSkeletonData();
},
tooltip: !1
},
defaultSkin: {
default: "",
visible: !1
},
defaultAnimation: {
default: "",
visible: !1
},
animation: {
get: function() {
if (this.isAnimationCached()) return this._animationName;
var t = this.getCurrent(0);
return t && t.animation.name || "";
},
set: function(t) {
this.defaultAnimation = t;
if (t) this.setAnimation(0, t, this.loop); else if (!this.isAnimationCached()) {
this.clearTrack(0);
this.setToSetupPose();
}
},
visible: !1
},
_defaultSkinIndex: {
get: function() {
if (this.skeletonData) {
var t = this.skeletonData.getSkinsEnum();
if (t) if ("" === this.defaultSkin) {
if (t.hasOwnProperty(0)) {
this._defaultSkinIndex = 0;
return 0;
}
} else {
var e = t[this.defaultSkin];
if (void 0 !== e) return e;
}
}
return 0;
},
set: function(t) {
var e;
this.skeletonData && (e = this.skeletonData.getSkinsEnum());
if (!e) return cc.errorID("", this.name);
var i = e[t];
if (void 0 !== i) {
this.defaultSkin = i;
this.setSkin(this.defaultSkin);
0;
} else cc.errorID(7501, this.name);
},
type: u,
visible: !0,
displayName: "Default Skin",
tooltip: !1
},
_animationIndex: {
get: function() {
var t = this.animation;
if (this.skeletonData && t) {
var e = this.skeletonData.getAnimsEnum();
if (e) {
var i = e[t];
if (void 0 !== i) return i;
}
}
return 0;
},
set: function(t) {
if (0 !== t) {
var e;
this.skeletonData && (e = this.skeletonData.getAnimsEnum());
if (!e) return cc.errorID(7502, this.name);
var i = e[t];
void 0 !== i ? this.animation = i : cc.errorID(7503, this.name);
} else this.animation = "";
},
type: h,
visible: !0,
displayName: "Animation",
tooltip: !1
},
_preCacheMode: -1,
_cacheMode: f.REALTIME,
_defaultCacheMode: {
default: 0,
type: f,
notify: function() {
this.setAnimationCacheMode(this._defaultCacheMode);
},
editorOnly: !0,
visible: !0,
animatable: !1,
displayName: "Animation Cache Mode",
tooltip: !1
},
loop: {
default: !0,
tooltip: !1
},
premultipliedAlpha: {
default: !0,
tooltip: !1
},
timeScale: {
default: 1,
tooltip: !1
},
debugSlots: {
default: !1,
editorOnly: !0,
tooltip: !1,
notify: function() {
this._updateDebugDraw();
}
},
debugBones: {
default: !1,
editorOnly: !0,
tooltip: !1,
notify: function() {
this._updateDebugDraw();
}
},
debugMesh: {
default: !1,
editorOnly: !0,
tooltip: !1,
notify: function() {
this._updateDebugDraw();
}
},
useTint: {
default: !1,
tooltip: !1,
notify: function() {
this._updateUseTint();
}
},
enableBatch: {
default: !1,
notify: function() {
this._updateBatch();
},
tooltip: !1
},
_accTime: 0,
_playCount: 0,
_frameCache: null,
_curFrame: null,
_skeletonCache: null,
_animationName: "",
_animationQueue: [],
_headAniInfo: null,
_playTimes: 0,
_isAniComplete: !0
},
ctor: function() {
this._effectDelegate = null;
this._skeleton = null;
this._rootBone = null;
this._listener = null;
this._materialCache = {};
this._debugRenderer = null;
this._startSlotIndex = -1;
this._endSlotIndex = -1;
this._startEntry = {
animation: {
name: ""
},
trackIndex: 0
};
this._endEntry = {
animation: {
name: ""
},
trackIndex: 0
};
this.attachUtil = new l();
},
_getDefaultMaterial: function() {
return cc.Material.getBuiltinMaterial("2d-spine");
},
_updateMaterial: function() {
var t = this.useTint || this.isAnimationCached() && !1, e = this.getMaterial(0);
if (e) {
e.define("USE_TINT", t);
e.define("CC_USE_MODEL", !this.enableBatch);
}
this._materialCache = {};
},
disableRender: function() {
this._super();
this.node._renderFlag &= ~a;
},
markForRender: function(t) {
this._super(t);
t ? this.node._renderFlag |= a : this.node._renderFlag &= ~a;
},
_updateUseTint: function() {
var t = this.getMaterial(0);
if (t) {
var e = this.useTint || this.isAnimationCached() && !1;
t.define("USE_TINT", e);
}
this._materialCache = {};
},
_updateBatch: function() {
var t = this.getMaterial(0);
t && t.define("CC_USE_MODEL", !this.enableBatch);
this._materialCache = {};
},
_validateRender: function() {
var t = this.skeletonData;
t && t.isTexturesLoaded() ? this._super() : this.disableRender();
},
setSkeletonData: function(t) {
null != t.width && null != t.height && this.node.setContentSize(t.width, t.height);
if (this._cacheMode === f.SHARED_CACHE) this._skeletonCache = c.sharedCache; else if (this._cacheMode === f.PRIVATE_CACHE) {
this._skeletonCache = new c();
this._skeletonCache.enablePrivateMode();
}
if (this.isAnimationCached()) {
(this.debugBones || this.debugSlots) && cc.warn("Debug bones or slots is invalid in cached mode");
var e = this._skeletonCache.getSkeletonCache(this.skeletonData._uuid, t);
this._skeleton = e.skeleton;
this._clipper = e.clipper;
this._rootBone = this._skeleton.getRootBone();
} else {
this._skeleton = new s.Skeleton(t);
this._clipper = new s.SkeletonClipping();
this._rootBone = this._skeleton.getRootBone();
}
this.markForRender(!0);
},
setSlotsRange: function(t, e) {
if (this.isAnimationCached()) cc.warn("Slots visible range can not be modified in cached mode."); else {
this._startSlotIndex = t;
this._endSlotIndex = e;
}
},
setAnimationStateData: function(t) {
if (this.isAnimationCached()) cc.warn("'setAnimationStateData' interface can not be invoked in cached mode."); else {
var e = new s.AnimationState(t);
if (this._listener) {
this._state && this._state.removeListener(this._listener);
e.addListener(this._listener);
}
this._state = e;
}
},
__preload: function() {
this._super();
for (var t = this.node.children, e = 0, i = t.length; e < i; e++) {
var n = t[e];
n && "DEBUG_DRAW_NODE" === n._name && n.destroy();
}
this._updateSkeletonData();
this._updateDebugDraw();
this._updateUseTint();
this._updateBatch();
},
setAnimationCacheMode: function(t) {
if (this._preCacheMode !== t) {
this._cacheMode = t;
this._updateSkeletonData();
this._updateUseTint();
}
},
isAnimationCached: function() {
0;
return this._cacheMode !== f.REALTIME;
},
update: function(t) {
0;
if (!this.paused) {
t *= this.timeScale * sp.timeScale;
if (this.isAnimationCached()) {
if (this._isAniComplete) {
if (0 === this._animationQueue.length && !this._headAniInfo) {
var e = this._frameCache;
if (e && e.isInvalid()) {
e.updateToFrame();
var i = e.frames;
this._curFrame = i[i.length - 1];
}
return;
}
this._headAniInfo || (this._headAniInfo = this._animationQueue.shift());
this._accTime += t;
if (this._accTime > this._headAniInfo.delay) {
var n = this._headAniInfo;
this._headAniInfo = null;
this.setAnimation(0, n.animationName, n.loop);
}
return;
}
this._updateCache(t);
} else this._updateRealtime(t);
}
},
_emitCacheCompleteEvent: function() {
if (this._listener) {
this._endEntry.animation.name = this._animationName;
this._listener.complete && this._listener.complete(this._endEntry);
this._listener.end && this._listener.end(this._endEntry);
}
},
_updateCache: function(t) {
var e = this._frameCache;
if (e.isInited()) {
var i = e.frames, n = c.FrameTime;
if (0 == this._accTime && 0 == this._playCount) {
this._startEntry.animation.name = this._animationName;
this._listener && this._listener.start && this._listener.start(this._startEntry);
}
this._accTime += t;
var r = Math.floor(this._accTime / n);
e.isCompleted || e.updateToFrame(r);
if (e.isCompleted && r >= i.length) {
this._playCount++;
if (this._playTimes > 0 && this._playCount >= this._playTimes) {
this._curFrame = i[i.length - 1];
this._accTime = 0;
this._playCount = 0;
this._isAniComplete = !0;
this._emitCacheCompleteEvent();
return;
}
this._accTime = 0;
r = 0;
this._emitCacheCompleteEvent();
}
this._curFrame = i[r];
}
},
_updateRealtime: function(t) {
var e = this._skeleton, i = this._state;
if (e) {
e.update(t);
if (i) {
i.update(t);
i.apply(e);
}
}
},
setVertexEffectDelegate: function(t) {
this._effectDelegate = t;
},
updateWorldTransform: function() {
this.isAnimationCached() && this._skeleton && this._skeleton.updateWorldTransform();
},
setToSetupPose: function() {
this._skeleton && this._skeleton.setToSetupPose();
},
setBonesToSetupPose: function() {
this._skeleton && this._skeleton.setBonesToSetupPose();
},
setSlotsToSetupPose: function() {
this._skeleton && this._skeleton.setSlotsToSetupPose();
},
updateAnimationCache: function(t) {
if (this.isAnimationCached()) {
var e = this.skeletonData._uuid;
this._skeletonCache && this._skeletonCache.updateAnimationCache(e, t);
}
},
invalidAnimationCache: function() {
this.isAnimationCached() && this._skeletonCache && this._skeletonCache.invalidAnimationCache(this.skeletonData._uuid);
},
findBone: function(t) {
return this._skeleton ? this._skeleton.findBone(t) : null;
},
findSlot: function(t) {
return this._skeleton ? this._skeleton.findSlot(t) : null;
},
setSkin: function(t) {
if (this._skeleton) {
this._skeleton.setSkinByName(t);
this._skeleton.setSlotsToSetupPose();
}
this.invalidAnimationCache();
},
getAttachment: function(t, e) {
return this._skeleton ? this._skeleton.getAttachmentByName(t, e) : null;
},
setAttachment: function(t, e) {
this._skeleton && this._skeleton.setAttachment(t, e);
this.invalidAnimationCache();
},
getTextureAtlas: function(t) {
return t.region;
},
setMix: function(t, e, i) {
this._state && this._state.data.setMix(t, e, i);
},
setAnimation: function(t, e, i) {
this._playTimes = i ? 0 : 1;
this._animationName = e;
if (this.isAnimationCached()) {
0 !== t && cc.warn("Track index can not greater than 0 in cached mode.");
if (!this._skeletonCache) return null;
var n = this._skeletonCache.getAnimationCache(this.skeletonData._uuid, e);
n || (n = this._skeletonCache.initAnimationCache(this.skeletonData._uuid, e));
if (n) {
this._isAniComplete = !1;
this._accTime = 0;
this._playCount = 0;
this._frameCache = n;
this.attachUtil._hasAttachedNode() && this._frameCache.enableCacheAttachedInfo();
this._frameCache.updateToFrame(0);
this._curFrame = this._frameCache.frames[0];
}
} else if (this._skeleton) {
var r = this._skeleton.data.findAnimation(e);
if (!r) {
cc.logID(7509, e);
return null;
}
var s = this._state.setAnimationWith(t, r, i);
this._state.apply(this._skeleton);
return s;
}
return null;
},
addAnimation: function(t, e, i, n) {
n = n || 0;
if (this.isAnimationCached()) {
0 !== t && cc.warn("Track index can not greater than 0 in cached mode.");
this._animationQueue.push({
animationName: e,
loop: i,
delay: n
});
} else if (this._skeleton) {
var r = this._skeleton.data.findAnimation(e);
if (!r) {
cc.logID(7510, e);
return null;
}
return this._state.addAnimationWith(t, r, i, n);
}
return null;
},
findAnimation: function(t) {
return this._skeleton ? this._skeleton.data.findAnimation(t) : null;
},
getCurrent: function(t) {
if (this.isAnimationCached()) cc.warn("'getCurrent' interface can not be invoked in cached mode."); else if (this._state) return this._state.getCurrent(t);
return null;
},
clearTracks: function() {
this.isAnimationCached() ? cc.warn("'clearTracks' interface can not be invoked in cached mode.") : this._state && this._state.clearTracks();
},
clearTrack: function(t) {
if (this.isAnimationCached()) cc.warn("'clearTrack' interface can not be invoked in cached mode."); else if (this._state) {
this._state.clearTrack(t);
0;
}
},
setStartListener: function(t) {
this._ensureListener();
this._listener.start = t;
},
setInterruptListener: function(t) {
this._ensureListener();
this._listener.interrupt = t;
},
setEndListener: function(t) {
this._ensureListener();
this._listener.end = t;
},
setDisposeListener: function(t) {
this._ensureListener();
this._listener.dispose = t;
},
setCompleteListener: function(t) {
this._ensureListener();
this._listener.complete = t;
},
setEventListener: function(t) {
this._ensureListener();
this._listener.event = t;
},
setTrackStartListener: function(t, e) {
n.getListeners(t).start = e;
},
setTrackInterruptListener: function(t, e) {
n.getListeners(t).interrupt = e;
},
setTrackEndListener: function(t, e) {
n.getListeners(t).end = e;
},
setTrackDisposeListener: function(t, e) {
n.getListeners(t).dispose = e;
},
setTrackCompleteListener: function(t, e) {
n.getListeners(t).complete = function(t) {
var i = Math.floor(t.trackTime / t.animationEnd);
e(t, i);
};
},
setTrackEventListener: function(t, e) {
n.getListeners(t).event = e;
},
getState: function() {
return this._state;
},
_updateAnimEnum: !1,
_updateSkinEnum: !1,
_ensureListener: function() {
if (!this._listener) {
this._listener = new n();
this._state && this._state.addListener(this._listener);
}
},
_updateSkeletonData: function() {
if (this.skeletonData) {
var t = this.skeletonData.getRuntimeData();
if (t) {
try {
this.setSkeletonData(t);
this.isAnimationCached() || this.setAnimationStateData(new s.AnimationStateData(this._skeleton.data));
this.defaultSkin && this.setSkin(this.defaultSkin);
} catch (t) {
cc.warn(t);
}
this.attachUtil.init(this);
this.attachUtil._associateAttachedNode();
this._preCacheMode = this._cacheMode;
this.animation = this.defaultAnimation;
} else this.disableRender();
} else this.disableRender();
},
_refreshInspector: function() {
this._updateAnimEnum();
this._updateSkinEnum();
Editor.Utils.refreshSelectedInspector("node", this.node.uuid);
},
_updateDebugDraw: function() {
if (this.debugBones || this.debugSlots) {
if (!this._debugRenderer) {
var t = new cc.PrivateNode();
t.name = "DEBUG_DRAW_NODE";
var e = t.addComponent(o);
e.lineWidth = 1;
e.strokeColor = cc.color(255, 0, 0, 255);
this._debugRenderer = e;
}
this._debugRenderer.node.parent = this.node;
this.isAnimationCached() && cc.warn("Debug bones or slots is invalid in cached mode");
} else this._debugRenderer && (this._debugRenderer.node.parent = null);
}
});
e.exports = sp.Skeleton;
}), {
"../../cocos2d/core/components/CCRenderComponent": 131,
"../../cocos2d/core/graphics/graphics": 172,
"../../cocos2d/core/renderer/render-flow": 263,
"./AttachUtil": 382,
"./lib/spine": void 0,
"./skeleton-cache": void 0,
"./track-entry-listeners": 388
} ],
384: [ (function(t, e, i) {
"use strict";
var n = "undefined" == typeof window ? global : window, r = !0;
n.spine || (r = !1);
if (r) {
n.sp = {};
sp._timeScale = 1;
Object.defineProperty(sp, "timeScale", {
get: function() {
return this._timeScale;
},
set: function(t) {
this._timeScale = t;
},
configurable: !0
});
sp.ATTACHMENT_TYPE = {
REGION: 0,
BOUNDING_BOX: 1,
MESH: 2,
SKINNED_MESH: 3
};
sp.AnimationEventType = cc.Enum({
START: 0,
INTERRUPT: 1,
END: 2,
DISPOSE: 3,
COMPLETE: 4,
EVENT: 5
});
sp.spine = n.spine;
0;
t("./skeleton-data");
t("./vertex-effect-delegate");
t("./Skeleton");
t("./spine-assembler");
}
}), {
"./Skeleton": 383,
"./lib/spine": void 0,
"./skeleton-data": 385,
"./skeleton-texture": 386,
"./spine-assembler": 387,
"./vertex-effect-delegate": void 0
} ],
385: [ (function(t, e, i) {
"use strict";
var n = !1, r = cc.Class({
name: "sp.SkeletonData",
extends: cc.Asset,
ctor: function() {
this.reset();
},
properties: {
_skeletonJson: null,
skeletonJsonStr: {
get: function() {
return this._skeletonJson ? JSON.stringify(this._skeletonJson) : "";
}
},
skeletonJson: {
get: function() {
return this._skeletonJson;
},
set: function(t) {
this.reset();
this._skeletonJson = "string" == typeof t ? JSON.parse(t) : t;
!this._uuid && t.skeleton && (this._uuid = t.skeleton.hash);
}
},
_atlasText: "",
atlasText: {
get: function() {
return this._atlasText;
},
set: function(t) {
this._atlasText = t;
this.reset();
}
},
textures: {
default: [],
type: [ cc.Texture2D ]
},
textureNames: {
default: [],
type: [ cc.String ]
},
scale: 1,
_nativeAsset: {
get: function() {
return this._buffer;
},
set: function(t) {
this._buffer = t.buffer || t;
this.reset();
},
override: !0
}
},
statics: {
preventDeferredLoadDependents: !0
},
createNode: !1,
reset: function() {
this._skeletonCache = null;
this._atlasCache = null;
0;
},
ensureTexturesLoaded: function(t, e) {
var i = this.textures, n = i.length;
if (0 != n) for (var r = 0, s = function() {
if (++r >= n) {
t && t.call(e, !0);
t = null;
}
}, o = 0; o < n; o++) {
var a = i[o];
a.loaded ? s() : a.once("load", s);
} else t.call(e, !1);
},
isTexturesLoaded: function() {
for (var t = this.textures, e = t.length, i = 0; i < e; i++) {
if (!t[i].loaded) return !1;
}
return !0;
},
getRuntimeData: function(t) {
if (this._skeletonCache) return this._skeletonCache;
if (!(this.textures && this.textures.length > 0) && this.textureNames && this.textureNames.length > 0) {
t || cc.errorID(7507, this.name);
return null;
}
var e = this._getAtlas(t);
if (!e) return null;
var i = new sp.spine.AtlasAttachmentLoader(e), n = null, r = null;
if (this.skeletonJson) {
r = new sp.spine.SkeletonJson(i);
n = this.skeletonJson;
} else {
r = new sp.spine.SkeletonBinary(i);
n = new Uint8Array(this._nativeAsset);
}
r.scale = this.scale;
this._skeletonCache = r.readSkeletonData(n);
e.dispose();
return this._skeletonCache;
},
getSkinsEnum: !1,
getAnimsEnum: !1,
_getTexture: function(t) {
for (var e = this.textureNames, i = 0; i < e.length; i++) if (e[i] === t) {
var n = this.textures[i], r = new sp.SkeletonTexture({
width: n.width,
height: n.height
});
r.setRealTexture(n);
return r;
}
cc.errorID(7506, t);
return null;
},
_getAtlas: function(t) {
if (this._atlasCache) return this._atlasCache;
if (!this.atlasText) {
t || cc.errorID(7508, this.name);
return null;
}
return this._atlasCache = new sp.spine.TextureAtlas(this.atlasText, this._getTexture.bind(this));
},
destroy: function() {
n.removeSkeleton(this._uuid);
this._super();
}
});
sp.SkeletonData = e.exports = r;
}), {
"./skeleton-cache": void 0
} ],
386: [ (function(t, e, i) {
"use strict";
sp.SkeletonTexture = cc.Class({
name: "sp.SkeletonTexture",
extends: sp.spine.Texture,
_texture: null,
_material: null,
setRealTexture: function(t) {
this._texture = t;
},
getRealTexture: function() {
return this._texture;
},
setFilters: function(t, e) {
this._texture && this._texture.setFilters(t, e);
},
setWraps: function(t, e) {
this._texture && this._texture.setWrapMode(t, e);
},
dispose: function() {}
});
}), {} ],
387: [ (function(t, e, i) {
"use strict";
i.__esModule = !0;
i.default = void 0;
var n = (function(t) {
return t && t.__esModule ? t : {
default: t
};
})(t("../../cocos2d/core/renderer/assembler"));
function r(t) {
return function() {
var e, i = c(t);
if (a()) {
var n = c(this).constructor;
e = Reflect.construct(i, arguments, n);
} else e = i.apply(this, arguments);
return s(this, e);
};
}
function s(t, e) {
return !e || "object" != typeof e && "function" != typeof e ? o(t) : e;
}
function o(t) {
if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return t;
}
function a() {
if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
if (Reflect.construct.sham) return !1;
if ("function" == typeof Proxy) return !0;
try {
Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
return !0;
} catch (t) {
return !1;
}
}
function c(t) {
return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
return t.__proto__ || Object.getPrototypeOf(t);
})(t);
}
function l(t, e) {
t.prototype = Object.create(e.prototype);
t.prototype.constructor = t;
t.__proto__ = e;
}
var u, h, f, _, d, p, m, y, v, g, b, C, x, A, S, w, T, E = t("./Skeleton"), M = t("./lib/spine"), B = t("../../cocos2d/core/renderer/render-flow"), D = t("../../cocos2d/core/renderer/webgl/vertex-format"), R = D.vfmtPosUvColor, I = D.vfmtPosUvTwoColor, P = cc.gfx, O = 0, L = [ 0, 1, 2, 2, 3, 0 ], V = cc.color(0, 0, 255, 255), N = cc.color(255, 0, 0, 255), F = cc.color(0, 255, 0, 255), z = cc.color(255, 255, 0, 255), k = null, G = null, U = null, j = null;
0;
var H, W, q, X, Y, J, Z, K, Q, $, tt, et, it, nt, rt, st, ot, at, ct, lt, ut, ht, ft, _t, dt, pt, mt, yt, vt, gt = 0, bt = 0, Ct = 0, xt = 0, At = 0, St = 0, wt = 0;
function Tt(t, e) {
var i, n;
switch (e) {
case M.BlendMode.Additive:
i = u ? cc.macro.ONE : cc.macro.SRC_ALPHA;
n = cc.macro.ONE;
break;

case M.BlendMode.Multiply:
i = cc.macro.DST_COLOR;
n = cc.macro.ONE_MINUS_SRC_ALPHA;
break;

case M.BlendMode.Screen:
i = cc.macro.ONE;
n = cc.macro.ONE_MINUS_SRC_COLOR;
break;

case M.BlendMode.Normal:
default:
i = u ? cc.macro.ONE : cc.macro.SRC_ALPHA;
n = cc.macro.ONE_MINUS_SRC_ALPHA;
}
var r = !_t.enableBatch, s = _t._materials[0];
if (!s) return null;
var o = t.getId() + i + n + d + r, a = _t._materialCache, c = a[o];
if (!c) {
if (a.baseMaterial) c = cc.MaterialVariant.create(s); else {
c = s;
a.baseMaterial = s;
}
c.define("CC_USE_MODEL", r);
c.define("USE_TINT", d);
c.setProperty("texture", t);
c.setBlend(!0, P.BLEND_FUNC_ADD, i, n, P.BLEND_FUNC_ADD, i, n);
a[o] = c;
}
return c;
}
function Et(t) {
lt = t.fa * C;
nt = v * (h = u ? lt / 255 : 1);
rt = g * h;
st = b * h;
ot = t.fr * nt;
at = t.fg * rt;
ct = t.fb * st;
x = (lt << 24 >>> 0) + (ct << 16) + (at << 8) + ot;
ut = t.dr * nt;
ht = t.dg * rt;
ft = t.db * st;
A = ((u ? 255 : 0) << 24 >>> 0) + (ft << 16) + (ht << 8) + ut;
}
function Mt(t) {
return (t.a << 24 >>> 0) + (t.b << 16) + (t.g << 8) + t.r;
}
var Bt = (function(t) {
l(e, t);
r(e);
function e() {
return t.apply(this, arguments) || this;
}
var i = e.prototype;
i.updateRenderData = function(t) {
if (!t.isAnimationCached()) {
var e = t._skeleton;
e && e.updateWorldTransform();
}
};
i.fillVertices = function(t, e, i, n, r) {
var s, o = dt._vData, a = dt._iData, c = dt._uintVData;
k.a = i.a * e.a * t.a * C * 255;
h = u ? k.a : 255;
H = v * e.r * t.r * h;
W = g * e.g * t.g * h;
q = b * e.b * t.b * h;
k.r = H * i.r;
k.g = W * i.g;
k.b = q * i.b;
if (null == r.darkColor) G.set(0, 0, 0, 1); else {
G.r = r.darkColor.r * H;
G.g = r.darkColor.g * W;
G.b = r.darkColor.b * q;
}
G.a = u ? 255 : 0;
if (n.isClipping()) {
var l = o.subarray(Ct + 2);
n.clipTriangles(o.subarray(Ct), gt, a.subarray(St), At, l, k, G, d, w);
var f = new Float32Array(n.clippedVertices), _ = n.clippedTriangles;
At = _.length;
gt = f.length / T * w;
s = dt.request(gt / w, At);
St = s.indiceOffset, xt = s.vertexOffset, Ct = s.byteOffset >> 2;
o = dt._vData, a = dt._iData;
c = dt._uintVData;
a.set(_, St);
if (vt) for (var p = 0, m = f.length, y = Ct; p < m; p += T, y += w) {
U.x = f[p];
U.y = f[p + 1];
k.set(f[p + 2], f[p + 3], f[p + 4], f[p + 5]);
j.x = f[p + 6];
j.y = f[p + 7];
d ? G.set(f[p + 8], f[p + 9], f[p + 10], f[p + 11]) : G.set(0, 0, 0, 0);
vt.transform(U, j, k, G);
o[y] = U.x;
o[y + 1] = U.y;
o[y + 2] = j.x;
o[y + 3] = j.y;
c[y + 4] = Mt(k);
d && (c[y + 5] = Mt(G));
} else for (var S = 0, E = f.length, M = Ct; S < E; S += T, M += w) {
o[M] = f[S];
o[M + 1] = f[S + 1];
o[M + 2] = f[S + 6];
o[M + 3] = f[S + 7];
x = (f[S + 5] << 24 >>> 0) + (f[S + 4] << 16) + (f[S + 3] << 8) + f[S + 2];
c[M + 4] = x;
if (d) {
A = (f[S + 11] << 24 >>> 0) + (f[S + 10] << 16) + (f[S + 9] << 8) + f[S + 8];
c[M + 5] = A;
}
}
} else if (vt) for (var B = Ct, D = Ct + gt; B < D; B += w) {
U.x = o[B];
U.y = o[B + 1];
j.x = o[B + 2];
j.y = o[B + 3];
vt.transform(U, j, k, G);
o[B] = U.x;
o[B + 1] = U.y;
o[B + 2] = j.x;
o[B + 3] = j.y;
c[B + 4] = Mt(k);
d && (c[B + 5] = Mt(G));
} else {
x = Mt(k);
A = Mt(G);
for (var R = Ct, I = Ct + gt; R < I; R += w) {
c[R + 4] = x;
d && (c[R + 5] = A);
}
}
};
i.realTimeTraverse = function(t) {
var e, i, n, r, s, o, a, c, l, u, h, v, g = _t._skeleton, b = g.color, C = _t._debugRenderer, x = _t._clipper, A = null;
f = _t._startSlotIndex;
_ = _t._endSlotIndex;
X = !1;
-1 == f && (X = !0);
p = _t.debugSlots;
m = _t.debugBones;
y = _t.debugMesh;
if (C && (m || p || y)) {
C.clear();
C.lineWidth = 2;
}
T = d ? 12 : 8;
gt = 0;
Ct = 0;
xt = 0;
At = 0;
St = 0;
for (var S = 0, E = g.drawOrder.length; S < E; S++) {
h = g.drawOrder[S];
f >= 0 && f == h.data.index && (X = !0);
if (X) {
_ >= 0 && _ == h.data.index && (X = !1);
gt = 0;
At = 0;
if (n = h.getAttachment()) {
c = n instanceof M.RegionAttachment;
l = n instanceof M.MeshAttachment;
if (n instanceof M.ClippingAttachment) x.clipStart(h, n); else if (c || l) if (A = Tt(n.region.texture._texture, h.data.blendMode)) {
if (Y || A.getHash() !== pt.material.getHash()) {
Y = !1;
pt._flush();
pt.node = mt;
pt.material = A;
}
if (c) {
a = L;
gt = 4 * w;
At = 6;
u = dt.request(4, 6);
St = u.indiceOffset, xt = u.vertexOffset, Ct = u.byteOffset >> 2;
e = dt._vData, i = dt._iData;
n.computeWorldVertices(h.bone, e, Ct, w);
if (C && p) {
C.strokeColor = V;
C.moveTo(e[Ct], e[Ct + 1]);
for (var B = Ct + w, D = Ct + gt; B < D; B += w) C.lineTo(e[B], e[B + 1]);
C.close();
C.stroke();
}
} else if (l) {
a = n.triangles;
gt = (n.worldVerticesLength >> 1) * w;
At = a.length;
u = dt.request(gt / w, At);
St = u.indiceOffset, xt = u.vertexOffset, Ct = u.byteOffset >> 2;
e = dt._vData, i = dt._iData;
n.computeWorldVertices(h, 0, n.worldVerticesLength, e, Ct, w);
if (C && y) {
C.strokeColor = z;
for (var R = 0, I = a.length; R < I; R += 3) {
var P = a[R] * w + Ct, O = a[R + 1] * w + Ct, k = a[R + 2] * w + Ct;
C.moveTo(e[P], e[P + 1]);
C.lineTo(e[O], e[O + 1]);
C.lineTo(e[k], e[k + 1]);
C.close();
C.stroke();
}
}
}
if (0 != gt && 0 != At) {
i.set(a, St);
o = n.uvs;
for (var G = Ct, U = Ct + gt, j = 0; G < U; G += w, j += 2) {
e[G + 2] = o[j];
e[G + 3] = o[j + 1];
}
r = n.color, s = h.color;
this.fillVertices(b, r, s, x, h);
if (At > 0) {
for (var H = St, W = St + At; H < W; H++) i[H] += xt;
if (t) {
v = t.m;
K = v[0];
Q = v[4];
$ = v[12];
tt = v[1];
et = v[5];
it = v[13];
for (var q = Ct, nt = Ct + gt; q < nt; q += w) {
J = e[q];
Z = e[q + 1];
e[q] = J * K + Z * Q + $;
e[q + 1] = J * tt + Z * et + it;
}
}
dt.adjust(gt / w, At);
}
x.clipEndWithSlot(h);
} else x.clipEndWithSlot(h);
} else x.clipEndWithSlot(h); else x.clipEndWithSlot(h);
} else x.clipEndWithSlot(h);
} else x.clipEndWithSlot(h);
}
x.clipEnd();
if (C && m) {
var rt;
C.strokeColor = N;
C.fillColor = V;
for (var st = 0, ot = g.bones.length; st < ot; st++) {
var at = (rt = g.bones[st]).data.length * rt.a + rt.worldX, ct = rt.data.length * rt.c + rt.worldY;
C.moveTo(rt.worldX, rt.worldY);
C.lineTo(at, ct);
C.stroke();
C.circle(rt.worldX, rt.worldY, 1.5 * Math.PI);
C.fill();
0 === st && (C.fillColor = F);
}
}
};
i.cacheTraverse = function(t) {
var e = _t._curFrame;
if (e) {
var i = e.segments;
if (0 != i.length) {
var n, r, s, o, a, c, l = e.vertices, u = e.indices, h = 0, f = 0, _ = 0;
if (t) {
c = t.m;
K = c[0];
tt = c[1];
Q = c[4];
et = c[5];
$ = c[12];
it = c[13];
}
var d = 16 & O, p = d && (1 === K && 0 === tt && 0 === Q && 1 === et), m = 0, y = e.colors, v = y[m++], g = v.vfOffset;
Et(v);
for (var b = 0, C = i.length; b < C; b++) {
var S = i[b];
if (o = Tt(S.tex, S.blendMode)) {
if (Y || o.getHash() !== pt.material.getHash()) {
Y = !1;
pt._flush();
pt.node = mt;
pt.material = o;
}
bt = S.vertexCount;
At = S.indexCount;
a = dt.request(bt, At);
St = a.indiceOffset;
xt = a.vertexOffset;
wt = a.byteOffset >> 2;
n = dt._vData;
r = dt._iData;
s = dt._uintVData;
for (var w = St, T = St + At; w < T; w++) r[w] = xt + u[f++];
_ = S.vfCount;
n.set(l.subarray(h, h + _), wt);
h += _;
if (p) for (var E = wt, M = wt + _; E < M; E += 6) {
n[E] += $;
n[E + 1] += it;
} else if (d) for (var B = wt, D = wt + _; B < D; B += 6) {
J = n[B];
Z = n[B + 1];
n[B] = J * K + Z * Q + $;
n[B + 1] = J * tt + Z * et + it;
}
dt.adjust(bt, At);
if (yt) for (var R = h - _, I = wt + 4, P = wt + 4 + _; I < P; I += 6, R += 6) {
if (R >= g) {
Et(v = y[m++]);
g = v.vfOffset;
}
s[I] = x;
s[I + 1] = A;
}
}
}
}
}
};
i.fillBuffers = function(t, e) {
var i = t.node;
i._renderFlag |= B.FLAG_UPDATE_RENDER_DATA;
if (t._skeleton) {
var n = i._color;
v = n.r / 255;
g = n.g / 255;
b = n.b / 255;
C = n.a / 255;
d = t.useTint || t.isAnimationCached();
S = d ? I : R;
w = d ? 6 : 5;
mt = t.node;
dt = e.getBuffer("spine", S);
pt = e;
_t = t;
Y = !0;
u = t.premultipliedAlpha;
h = 1;
O = 0;
yt = !1;
vt = t._effectDelegate && t._effectDelegate._vertexEffect;
(4294967295 !== n._val || u) && (yt = !0);
d && (O |= 1);
var r = void 0;
if (_t.enableBatch) {
r = mt._worldMatrix;
Y = !1;
O |= 16;
}
if (t.isAnimationCached()) this.cacheTraverse(r); else {
vt && vt.begin(t._skeleton);
this.realTimeTraverse(r);
vt && vt.end();
}
e.worldMatDirty++;
t.attachUtil._syncAttachedNode();
mt = void 0;
dt = void 0;
pt = void 0;
_t = void 0;
vt = null;
}
};
i.postFillBuffers = function(t, e) {
e.worldMatDirty--;
};
return e;
})(n.default);
i.default = Bt;
n.default.register(E, Bt);
e.exports = i.default;
}), {
"../../cocos2d/core/renderer/assembler": 259,
"../../cocos2d/core/renderer/render-flow": 263,
"../../cocos2d/core/renderer/webgl/vertex-format": 301,
"./Skeleton": 383,
"./lib/spine": void 0
} ],
388: [ (function(t, e, i) {
"use strict";
var n = function() {
this.start = null;
this.end = null;
this.complete = null;
this.event = null;
this.interrupt = null;
this.dispose = null;
};
n.getListeners = function(t) {
t.listener || (t.listener = new n());
return t.listener;
};
e.exports = n;
}), {} ],
389: [ (function(t, e, i) {
"use strict";
(function(t, n) {
"object" == typeof i && "undefined" != typeof e ? n(i) : "function" == typeof define && define.amd ? define([ "exports" ], n) : n((void 0).box2d = {});
})(0, (function(t) {
function e(t, e) {
return void 0 !== t ? t : e;
}
var i = 1e37, n = 1e-5, r = n * n, s = 3.14159265359, o = 2, a = 8, c = .008, l = 2 / 180 * s, u = 2 * c, h = -1;
var f = (function() {
function t(t, e, i) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
void 0 === i && (i = 0);
this.major = 0;
this.minor = 0;
this.revision = 0;
this.major = t;
this.minor = e;
this.revision = i;
}
t.prototype.toString = function() {
return this.major + "." + this.minor + "." + this.revision;
};
return t;
})(), _ = new f(2, 3, 2);
function d(t, e) {
for (var i = [], n = 0; n < t; ++n) i.push(e(n));
return i;
}
function p(t, e) {
void 0 === e && (e = 0);
for (var i = [], n = 0; n < t; ++n) i.push(e);
return i;
}
var m = s / 180, y = 180 / s, v = Math.abs, g = Math.min, b = Math.max;
function C(t, e, i) {
return t < e ? e : t > i ? i : t;
}
var x = isFinite;
function A(t) {
return t * t;
}
function S(t) {
return 1 / Math.sqrt(t);
}
var w = Math.sqrt, T = Math.pow;
var E = Math.cos, M = Math.sin, B = Math.acos, D = Math.asin, R = Math.atan2;
var I = (function() {
function t(t, e) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
this.x = t;
this.y = e;
}
t.prototype.Clone = function() {
return new t(this.x, this.y);
};
t.prototype.SetZero = function() {
this.x = 0;
this.y = 0;
return this;
};
t.prototype.Set = function(t, e) {
this.x = t;
this.y = e;
return this;
};
t.prototype.Copy = function(t) {
this.x = t.x;
this.y = t.y;
return this;
};
t.prototype.SelfAdd = function(t) {
this.x += t.x;
this.y += t.y;
return this;
};
t.prototype.SelfAddXY = function(t, e) {
this.x += t;
this.y += e;
return this;
};
t.prototype.SelfSub = function(t) {
this.x -= t.x;
this.y -= t.y;
return this;
};
t.prototype.SelfSubXY = function(t, e) {
this.x -= t;
this.y -= e;
return this;
};
t.prototype.SelfMul = function(t) {
this.x *= t;
this.y *= t;
return this;
};
t.prototype.SelfMulAdd = function(t, e) {
this.x += t * e.x;
this.y += t * e.y;
return this;
};
t.prototype.SelfMulSub = function(t, e) {
this.x -= t * e.x;
this.y -= t * e.y;
return this;
};
t.prototype.Dot = function(t) {
return this.x * t.x + this.y * t.y;
};
t.prototype.Cross = function(t) {
return this.x * t.y - this.y * t.x;
};
t.prototype.Length = function() {
var t = this.x, e = this.y;
return Math.sqrt(t * t + e * e);
};
t.prototype.LengthSquared = function() {
var t = this.x, e = this.y;
return t * t + e * e;
};
t.prototype.Normalize = function() {
var t = this.Length();
if (t >= n) {
var e = 1 / t;
this.x *= e;
this.y *= e;
}
return t;
};
t.prototype.SelfNormalize = function() {
var t = this.Length();
if (t >= n) {
var e = 1 / t;
this.x *= e;
this.y *= e;
}
return this;
};
t.prototype.SelfRotate = function(t) {
var e = Math.cos(t), i = Math.sin(t), n = this.x;
this.x = e * n - i * this.y;
this.y = i * n + e * this.y;
return this;
};
t.prototype.IsValid = function() {
return isFinite(this.x) && isFinite(this.y);
};
t.prototype.SelfCrossVS = function(t) {
var e = this.x;
this.x = t * this.y;
this.y = -t * e;
return this;
};
t.prototype.SelfCrossSV = function(t) {
var e = this.x;
this.x = -t * this.y;
this.y = t * e;
return this;
};
t.prototype.SelfMinV = function(t) {
this.x = g(this.x, t.x);
this.y = g(this.y, t.y);
return this;
};
t.prototype.SelfMaxV = function(t) {
this.x = b(this.x, t.x);
this.y = b(this.y, t.y);
return this;
};
t.prototype.SelfAbs = function() {
this.x = v(this.x);
this.y = v(this.y);
return this;
};
t.prototype.SelfNeg = function() {
this.x = -this.x;
this.y = -this.y;
return this;
};
t.prototype.SelfSkew = function() {
var t = this.x;
this.x = -this.y;
this.y = t;
return this;
};
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
t.AbsV = function(t, e) {
e.x = v(t.x);
e.y = v(t.y);
return e;
};
t.MinV = function(t, e, i) {
i.x = g(t.x, e.x);
i.y = g(t.y, e.y);
return i;
};
t.MaxV = function(t, e, i) {
i.x = b(t.x, e.x);
i.y = b(t.y, e.y);
return i;
};
t.ClampV = function(t, e, i, n) {
n.x = C(t.x, e.x, i.x);
n.y = C(t.y, e.y, i.y);
return n;
};
t.RotateV = function(t, e, i) {
var n = t.x, r = t.y, s = Math.cos(e), o = Math.sin(e);
i.x = s * n - o * r;
i.y = o * n + s * r;
return i;
};
t.DotVV = function(t, e) {
return t.x * e.x + t.y * e.y;
};
t.CrossVV = function(t, e) {
return t.x * e.y - t.y * e.x;
};
t.CrossVS = function(t, e, i) {
var n = t.x;
i.x = e * t.y;
i.y = -e * n;
return i;
};
t.CrossVOne = function(t, e) {
var i = t.x;
e.x = t.y;
e.y = -i;
return e;
};
t.CrossSV = function(t, e, i) {
var n = e.x;
i.x = -t * e.y;
i.y = t * n;
return i;
};
t.CrossOneV = function(t, e) {
var i = t.x;
e.x = -t.y;
e.y = i;
return e;
};
t.AddVV = function(t, e, i) {
i.x = t.x + e.x;
i.y = t.y + e.y;
return i;
};
t.SubVV = function(t, e, i) {
i.x = t.x - e.x;
i.y = t.y - e.y;
return i;
};
t.MulSV = function(t, e, i) {
i.x = e.x * t;
i.y = e.y * t;
return i;
};
t.MulVS = function(t, e, i) {
i.x = t.x * e;
i.y = t.y * e;
return i;
};
t.AddVMulSV = function(t, e, i, n) {
n.x = t.x + e * i.x;
n.y = t.y + e * i.y;
return n;
};
t.SubVMulSV = function(t, e, i, n) {
n.x = t.x - e * i.x;
n.y = t.y - e * i.y;
return n;
};
t.AddVCrossSV = function(t, e, i, n) {
var r = i.x;
n.x = t.x - e * i.y;
n.y = t.y + e * r;
return n;
};
t.MidVV = function(t, e, i) {
i.x = .5 * (t.x + e.x);
i.y = .5 * (t.y + e.y);
return i;
};
t.ExtVV = function(t, e, i) {
i.x = .5 * (e.x - t.x);
i.y = .5 * (e.y - t.y);
return i;
};
t.IsEqualToV = function(t, e) {
return t.x === e.x && t.y === e.y;
};
t.DistanceVV = function(t, e) {
var i = t.x - e.x, n = t.y - e.y;
return Math.sqrt(i * i + n * n);
};
t.DistanceSquaredVV = function(t, e) {
var i = t.x - e.x, n = t.y - e.y;
return i * i + n * n;
};
t.NegV = function(t, e) {
e.x = -t.x;
e.y = -t.y;
return e;
};
t.ZERO = new t(0, 0);
t.UNITX = new t(1, 0);
t.UNITY = new t(0, 1);
t.s_t0 = new t();
t.s_t1 = new t();
t.s_t2 = new t();
t.s_t3 = new t();
return t;
})(), P = new I(0, 0), O = (function() {
function t(t, e, i) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
void 0 === i && (i = 0);
this.x = t;
this.y = e;
this.z = i;
}
t.prototype.Clone = function() {
return new t(this.x, this.y, this.z);
};
t.prototype.SetZero = function() {
this.x = 0;
this.y = 0;
this.z = 0;
return this;
};
t.prototype.SetXYZ = function(t, e, i) {
this.x = t;
this.y = e;
this.z = i;
return this;
};
t.prototype.Copy = function(t) {
this.x = t.x;
this.y = t.y;
this.z = t.z;
return this;
};
t.prototype.SelfNeg = function() {
this.x = -this.x;
this.y = -this.y;
this.z = -this.z;
return this;
};
t.prototype.SelfAdd = function(t) {
this.x += t.x;
this.y += t.y;
this.z += t.z;
return this;
};
t.prototype.SelfAddXYZ = function(t, e, i) {
this.x += t;
this.y += e;
this.z += i;
return this;
};
t.prototype.SelfSub = function(t) {
this.x -= t.x;
this.y -= t.y;
this.z -= t.z;
return this;
};
t.prototype.SelfSubXYZ = function(t, e, i) {
this.x -= t;
this.y -= e;
this.z -= i;
return this;
};
t.prototype.SelfMul = function(t) {
this.x *= t;
this.y *= t;
this.z *= t;
return this;
};
t.DotV3V3 = function(t, e) {
return t.x * e.x + t.y * e.y + t.z * e.z;
};
t.CrossV3V3 = function(t, e, i) {
var n = t.x, r = t.y, s = t.z, o = e.x, a = e.y, c = e.z;
i.x = r * c - s * a;
i.y = s * o - n * c;
i.z = n * a - r * o;
return i;
};
t.ZERO = new t(0, 0, 0);
t.s_t0 = new t();
return t;
})(), L = (function() {
function t() {
this.ex = new I(1, 0);
this.ey = new I(0, 1);
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.FromVV = function(e, i) {
return new t().SetVV(e, i);
};
t.FromSSSS = function(e, i, n, r) {
return new t().SetSSSS(e, i, n, r);
};
t.FromAngle = function(e) {
return new t().SetAngle(e);
};
t.prototype.SetSSSS = function(t, e, i, n) {
this.ex.Set(t, i);
this.ey.Set(e, n);
return this;
};
t.prototype.SetVV = function(t, e) {
this.ex.Copy(t);
this.ey.Copy(e);
return this;
};
t.prototype.SetAngle = function(t) {
var e = Math.cos(t), i = Math.sin(t);
this.ex.Set(e, i);
this.ey.Set(-i, e);
return this;
};
t.prototype.Copy = function(t) {
this.ex.Copy(t.ex);
this.ey.Copy(t.ey);
return this;
};
t.prototype.SetIdentity = function() {
this.ex.Set(1, 0);
this.ey.Set(0, 1);
return this;
};
t.prototype.SetZero = function() {
this.ex.SetZero();
this.ey.SetZero();
return this;
};
t.prototype.GetAngle = function() {
return Math.atan2(this.ex.y, this.ex.x);
};
t.prototype.GetInverse = function(t) {
var e = this.ex.x, i = this.ey.x, n = this.ex.y, r = this.ey.y, s = e * r - i * n;
0 !== s && (s = 1 / s);
t.ex.x = s * r;
t.ey.x = -s * i;
t.ex.y = -s * n;
t.ey.y = s * e;
return t;
};
t.prototype.Solve = function(t, e, i) {
var n = this.ex.x, r = this.ey.x, s = this.ex.y, o = this.ey.y, a = n * o - r * s;
0 !== a && (a = 1 / a);
i.x = a * (o * t - r * e);
i.y = a * (n * e - s * t);
return i;
};
t.prototype.SelfAbs = function() {
this.ex.SelfAbs();
this.ey.SelfAbs();
return this;
};
t.prototype.SelfInv = function() {
this.GetInverse(this);
return this;
};
t.prototype.SelfAddM = function(t) {
this.ex.SelfAdd(t.ex);
this.ey.SelfAdd(t.ey);
return this;
};
t.prototype.SelfSubM = function(t) {
this.ex.SelfSub(t.ex);
this.ey.SelfSub(t.ey);
return this;
};
t.AbsM = function(t, e) {
var i = t.ex, n = t.ey;
e.ex.x = v(i.x);
e.ex.y = v(i.y);
e.ey.x = v(n.x);
e.ey.y = v(n.y);
return e;
};
t.MulMV = function(t, e, i) {
var n = t.ex, r = t.ey, s = e.x, o = e.y;
i.x = n.x * s + r.x * o;
i.y = n.y * s + r.y * o;
return i;
};
t.MulTMV = function(t, e, i) {
var n = t.ex, r = t.ey, s = e.x, o = e.y;
i.x = n.x * s + n.y * o;
i.y = r.x * s + r.y * o;
return i;
};
t.AddMM = function(t, e, i) {
var n = t.ex, r = t.ey, s = e.ex, o = e.ey;
i.ex.x = n.x + s.x;
i.ex.y = n.y + s.y;
i.ey.x = r.x + o.x;
i.ey.y = r.y + o.y;
return i;
};
t.MulMM = function(t, e, i) {
var n = t.ex.x, r = t.ex.y, s = t.ey.x, o = t.ey.y, a = e.ex.x, c = e.ex.y, l = e.ey.x, u = e.ey.y;
i.ex.x = n * a + s * c;
i.ex.y = r * a + o * c;
i.ey.x = n * l + s * u;
i.ey.y = r * l + o * u;
return i;
};
t.MulTMM = function(t, e, i) {
var n = t.ex.x, r = t.ex.y, s = t.ey.x, o = t.ey.y, a = e.ex.x, c = e.ex.y, l = e.ey.x, u = e.ey.y;
i.ex.x = n * a + r * c;
i.ex.y = s * a + o * c;
i.ey.x = n * l + r * u;
i.ey.y = s * l + o * u;
return i;
};
t.IDENTITY = new t();
return t;
})(), V = (function() {
function t() {
this.ex = new O(1, 0, 0);
this.ey = new O(0, 1, 0);
this.ez = new O(0, 0, 1);
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.SetVVV = function(t, e, i) {
this.ex.Copy(t);
this.ey.Copy(e);
this.ez.Copy(i);
return this;
};
t.prototype.Copy = function(t) {
this.ex.Copy(t.ex);
this.ey.Copy(t.ey);
this.ez.Copy(t.ez);
return this;
};
t.prototype.SetIdentity = function() {
this.ex.SetXYZ(1, 0, 0);
this.ey.SetXYZ(0, 1, 0);
this.ez.SetXYZ(0, 0, 1);
return this;
};
t.prototype.SetZero = function() {
this.ex.SetZero();
this.ey.SetZero();
this.ez.SetZero();
return this;
};
t.prototype.SelfAddM = function(t) {
this.ex.SelfAdd(t.ex);
this.ey.SelfAdd(t.ey);
this.ez.SelfAdd(t.ez);
return this;
};
t.prototype.Solve33 = function(t, e, i, n) {
var r = this.ex.x, s = this.ex.y, o = this.ex.z, a = this.ey.x, c = this.ey.y, l = this.ey.z, u = this.ez.x, h = this.ez.y, f = this.ez.z, _ = r * (c * f - l * h) + s * (l * u - a * f) + o * (a * h - c * u);
0 !== _ && (_ = 1 / _);
n.x = _ * (t * (c * f - l * h) + e * (l * u - a * f) + i * (a * h - c * u));
n.y = _ * (r * (e * f - i * h) + s * (i * u - t * f) + o * (t * h - e * u));
n.z = _ * (r * (c * i - l * e) + s * (l * t - a * i) + o * (a * e - c * t));
return n;
};
t.prototype.Solve22 = function(t, e, i) {
var n = this.ex.x, r = this.ey.x, s = this.ex.y, o = this.ey.y, a = n * o - r * s;
0 !== a && (a = 1 / a);
i.x = a * (o * t - r * e);
i.y = a * (n * e - s * t);
return i;
};
t.prototype.GetInverse22 = function(t) {
var e = this.ex.x, i = this.ey.x, n = this.ex.y, r = this.ey.y, s = e * r - i * n;
0 !== s && (s = 1 / s);
t.ex.x = s * r;
t.ey.x = -s * i;
t.ex.z = 0;
t.ex.y = -s * n;
t.ey.y = s * e;
t.ey.z = 0;
t.ez.x = 0;
t.ez.y = 0;
t.ez.z = 0;
};
t.prototype.GetSymInverse33 = function(t) {
var e = O.DotV3V3(this.ex, O.CrossV3V3(this.ey, this.ez, O.s_t0));
0 !== e && (e = 1 / e);
var i = this.ex.x, n = this.ey.x, r = this.ez.x, s = this.ey.y, o = this.ez.y, a = this.ez.z;
t.ex.x = e * (s * a - o * o);
t.ex.y = e * (r * o - n * a);
t.ex.z = e * (n * o - r * s);
t.ey.x = t.ex.y;
t.ey.y = e * (i * a - r * r);
t.ey.z = e * (r * n - i * o);
t.ez.x = t.ex.z;
t.ez.y = t.ey.z;
t.ez.z = e * (i * s - n * n);
};
t.MulM33V3 = function(t, e, i) {
var n = e.x, r = e.y, s = e.z;
i.x = t.ex.x * n + t.ey.x * r + t.ez.x * s;
i.y = t.ex.y * n + t.ey.y * r + t.ez.y * s;
i.z = t.ex.z * n + t.ey.z * r + t.ez.z * s;
return i;
};
t.MulM33XYZ = function(t, e, i, n, r) {
r.x = t.ex.x * e + t.ey.x * i + t.ez.x * n;
r.y = t.ex.y * e + t.ey.y * i + t.ez.y * n;
r.z = t.ex.z * e + t.ey.z * i + t.ez.z * n;
return r;
};
t.MulM33V2 = function(t, e, i) {
var n = e.x, r = e.y;
i.x = t.ex.x * n + t.ey.x * r;
i.y = t.ex.y * n + t.ey.y * r;
return i;
};
t.MulM33XY = function(t, e, i, n) {
n.x = t.ex.x * e + t.ey.x * i;
n.y = t.ex.y * e + t.ey.y * i;
return n;
};
t.IDENTITY = new t();
return t;
})(), N = (function() {
function t(t) {
void 0 === t && (t = 0);
this.s = 0;
this.c = 1;
if (t) {
this.s = Math.sin(t);
this.c = Math.cos(t);
}
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.Copy = function(t) {
this.s = t.s;
this.c = t.c;
return this;
};
t.prototype.SetAngle = function(t) {
this.s = Math.sin(t);
this.c = Math.cos(t);
return this;
};
t.prototype.SetIdentity = function() {
this.s = 0;
this.c = 1;
return this;
};
t.prototype.GetAngle = function() {
return Math.atan2(this.s, this.c);
};
t.prototype.GetXAxis = function(t) {
t.x = this.c;
t.y = this.s;
return t;
};
t.prototype.GetYAxis = function(t) {
t.x = -this.s;
t.y = this.c;
return t;
};
t.MulRR = function(t, e, i) {
var n = t.c, r = t.s, s = e.c, o = e.s;
i.s = r * s + n * o;
i.c = n * s - r * o;
return i;
};
t.MulTRR = function(t, e, i) {
var n = t.c, r = t.s, s = e.c, o = e.s;
i.s = n * o - r * s;
i.c = n * s + r * o;
return i;
};
t.MulRV = function(t, e, i) {
var n = t.c, r = t.s, s = e.x, o = e.y;
i.x = n * s - r * o;
i.y = r * s + n * o;
return i;
};
t.MulTRV = function(t, e, i) {
var n = t.c, r = t.s, s = e.x, o = e.y;
i.x = n * s + r * o;
i.y = -r * s + n * o;
return i;
};
t.IDENTITY = new t();
return t;
})(), F = (function() {
function t() {
this.p = new I();
this.q = new N();
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.Copy = function(t) {
this.p.Copy(t.p);
this.q.Copy(t.q);
return this;
};
t.prototype.SetIdentity = function() {
this.p.SetZero();
this.q.SetIdentity();
return this;
};
t.prototype.SetPositionRotation = function(t, e) {
this.p.Copy(t);
this.q.Copy(e);
return this;
};
t.prototype.SetPositionAngle = function(t, e) {
this.p.Copy(t);
this.q.SetAngle(e);
return this;
};
t.prototype.SetPosition = function(t) {
this.p.Copy(t);
return this;
};
t.prototype.SetPositionXY = function(t, e) {
this.p.Set(t, e);
return this;
};
t.prototype.SetRotation = function(t) {
this.q.Copy(t);
return this;
};
t.prototype.SetRotationAngle = function(t) {
this.q.SetAngle(t);
return this;
};
t.prototype.GetPosition = function() {
return this.p;
};
t.prototype.GetRotation = function() {
return this.q;
};
t.prototype.GetRotationAngle = function() {
return this.q.GetAngle();
};
t.prototype.GetAngle = function() {
return this.q.GetAngle();
};
t.MulXV = function(t, e, i) {
var n = t.q.c, r = t.q.s, s = e.x, o = e.y;
i.x = n * s - r * o + t.p.x;
i.y = r * s + n * o + t.p.y;
return i;
};
t.MulTXV = function(t, e, i) {
var n = t.q.c, r = t.q.s, s = e.x - t.p.x, o = e.y - t.p.y;
i.x = n * s + r * o;
i.y = -r * s + n * o;
return i;
};
t.MulXX = function(t, e, i) {
N.MulRR(t.q, e.q, i.q);
I.AddVV(N.MulRV(t.q, e.p, i.p), t.p, i.p);
return i;
};
t.MulTXX = function(t, e, i) {
N.MulTRR(t.q, e.q, i.q);
N.MulTRV(t.q, I.SubVV(e.p, t.p, i.p), i.p);
return i;
};
t.IDENTITY = new t();
return t;
})(), z = (function() {
function t() {
this.localCenter = new I();
this.c0 = new I();
this.c = new I();
this.a0 = 0;
this.a = 0;
this.alpha0 = 0;
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.Copy = function(t) {
this.localCenter.Copy(t.localCenter);
this.c0.Copy(t.c0);
this.c.Copy(t.c);
this.a0 = t.a0;
this.a = t.a;
this.alpha0 = t.alpha0;
return this;
};
t.prototype.GetTransform = function(t, e) {
var i = 1 - e;
t.p.x = i * this.c0.x + e * this.c.x;
t.p.y = i * this.c0.y + e * this.c.y;
var n = i * this.a0 + e * this.a;
t.q.SetAngle(n);
t.p.SelfSub(N.MulRV(t.q, this.localCenter, I.s_t0));
return t;
};
t.prototype.Advance = function(t) {
var e = (t - this.alpha0) / (1 - this.alpha0), i = 1 - e;
this.c0.x = i * this.c0.x + e * this.c.x;
this.c0.y = i * this.c0.y + e * this.c.y;
this.a0 = i * this.a0 + e * this.a;
this.alpha0 = t;
};
t.prototype.Normalize = function() {
var t = 6.28318530718 * Math.floor(this.a0 / 6.28318530718);
this.a0 -= t;
this.a -= t;
};
return t;
})(), k = (function() {
function t(t, e, i, n) {
void 0 === t && (t = .5);
void 0 === e && (e = .5);
void 0 === i && (i = .5);
void 0 === n && (n = 1);
this.r = t;
this.g = e;
this.b = i;
this.a = n;
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.Copy = function(t) {
this.r = t.r;
this.g = t.g;
this.b = t.b;
this.a = t.a;
return this;
};
t.prototype.IsEqual = function(t) {
return this.r === t.r && this.g === t.g && this.b === t.b && this.a === t.a;
};
t.prototype.IsZero = function() {
return 0 === this.r && 0 === this.g && 0 === this.b && 0 === this.a;
};
t.prototype.Set = function(t, e, i, n) {
void 0 === n && (n = this.a);
this.SetRGBA(t, e, i, n);
};
t.prototype.SetByteRGB = function(t, e, i) {
this.r = t / 255;
this.g = e / 255;
this.b = i / 255;
return this;
};
t.prototype.SetByteRGBA = function(t, e, i, n) {
this.r = t / 255;
this.g = e / 255;
this.b = i / 255;
this.a = n / 255;
return this;
};
t.prototype.SetRGB = function(t, e, i) {
this.r = t;
this.g = e;
this.b = i;
return this;
};
t.prototype.SetRGBA = function(t, e, i, n) {
this.r = t;
this.g = e;
this.b = i;
this.a = n;
return this;
};
t.prototype.SelfAdd = function(t) {
this.r += t.r;
this.g += t.g;
this.b += t.b;
this.a += t.a;
return this;
};
t.prototype.Add = function(t, e) {
e.r = this.r + t.r;
e.g = this.g + t.g;
e.b = this.b + t.b;
e.a = this.a + t.a;
return e;
};
t.prototype.SelfSub = function(t) {
this.r -= t.r;
this.g -= t.g;
this.b -= t.b;
this.a -= t.a;
return this;
};
t.prototype.Sub = function(t, e) {
e.r = this.r - t.r;
e.g = this.g - t.g;
e.b = this.b - t.b;
e.a = this.a - t.a;
return e;
};
t.prototype.SelfMul = function(t) {
this.r *= t;
this.g *= t;
this.b *= t;
this.a *= t;
return this;
};
t.prototype.Mul = function(t, e) {
e.r = this.r * t;
e.g = this.g * t;
e.b = this.b * t;
e.a = this.a * t;
return e;
};
t.prototype.Mix = function(e, i) {
t.MixColors(this, e, i);
};
t.MixColors = function(t, e, i) {
var n = i * (e.r - t.r), r = i * (e.g - t.g), s = i * (e.b - t.b), o = i * (e.a - t.a);
t.r += n;
t.g += r;
t.b += s;
t.a += o;
e.r -= n;
e.g -= r;
e.b -= s;
e.a -= o;
};
t.prototype.MakeStyleString = function(e) {
void 0 === e && (e = this.a);
return t.MakeStyleString(this.r, this.g, this.b, e);
};
t.MakeStyleString = function(t, e, i, n) {
void 0 === n && (n = 1);
t *= 255;
e *= 255;
i *= 255;
return n < 1 ? "rgba(" + t + "," + e + "," + i + "," + n + ")" : "rgb(" + t + "," + e + "," + i + ")";
};
t.ZERO = new t(0, 0, 0, 0);
t.RED = new t(1, 0, 0);
t.GREEN = new t(0, 1, 0);
t.BLUE = new t(0, 0, 1);
return t;
})();
(function(t) {
t[t.e_none = 0] = "e_none";
t[t.e_shapeBit = 1] = "e_shapeBit";
t[t.e_jointBit = 2] = "e_jointBit";
t[t.e_aabbBit = 4] = "e_aabbBit";
t[t.e_pairBit = 8] = "e_pairBit";
t[t.e_centerOfMassBit = 16] = "e_centerOfMassBit";
t[t.e_particleBit = 32] = "e_particleBit";
t[t.e_controllerBit = 64] = "e_controllerBit";
t[t.e_all = 63] = "e_all";
})(t.b2DrawFlags || (t.b2DrawFlags = {}));
var G = (function() {
function t() {
this.m_drawFlags = 0;
}
t.prototype.SetFlags = function(t) {
this.m_drawFlags = t;
};
t.prototype.GetFlags = function() {
return this.m_drawFlags;
};
t.prototype.AppendFlags = function(t) {
this.m_drawFlags |= t;
};
t.prototype.ClearFlags = function(t) {
this.m_drawFlags &= ~t;
};
return t;
})(), U = (function() {
function t() {
this.m_start = Date.now();
}
t.prototype.Reset = function() {
this.m_start = Date.now();
return this;
};
t.prototype.GetMilliseconds = function() {
return Date.now() - this.m_start;
};
return t;
})(), j = (function() {
function t() {
this.m_count = 0;
this.m_min_count = 0;
this.m_max_count = 0;
}
t.prototype.GetCount = function() {
return this.m_count;
};
t.prototype.GetMinCount = function() {
return this.m_min_count;
};
t.prototype.GetMaxCount = function() {
return this.m_max_count;
};
t.prototype.ResetCount = function() {
var t = this.m_count;
this.m_count = 0;
return t;
};
t.prototype.ResetMinCount = function() {
this.m_min_count = 0;
};
t.prototype.ResetMaxCount = function() {
this.m_max_count = 0;
};
t.prototype.Increment = function() {
this.m_count++;
this.m_max_count < this.m_count && (this.m_max_count = this.m_count);
};
t.prototype.Decrement = function() {
this.m_count--;
this.m_min_count > this.m_count && (this.m_min_count = this.m_count);
};
return t;
})(), H = (function() {
function t(t) {
this.m_stack = [];
this.m_count = 0;
this.m_stack = d(t, (function(t) {
return null;
}));
this.m_count = 0;
}
t.prototype.Reset = function() {
this.m_count = 0;
return this;
};
t.prototype.Push = function(t) {
this.m_stack[this.m_count] = t;
this.m_count++;
};
t.prototype.Pop = function() {
this.m_count--;
var t = this.m_stack[this.m_count];
this.m_stack[this.m_count] = null;
if (null === t) throw new Error();
return t;
};
t.prototype.GetCount = function() {
return this.m_count;
};
return t;
})(), W = (function() {
return function() {};
})(), q = (function() {
return function() {};
})(), X = (function() {
function t() {
this.m_buffer = I.MakeArray(2);
this.m_vertices = this.m_buffer;
this.m_count = 0;
this.m_radius = 0;
}
t.prototype.Copy = function(t) {
if (t.m_vertices === t.m_buffer) {
this.m_vertices = this.m_buffer;
this.m_buffer[0].Copy(t.m_buffer[0]);
this.m_buffer[1].Copy(t.m_buffer[1]);
} else this.m_vertices = t.m_vertices;
this.m_count = t.m_count;
this.m_radius = t.m_radius;
return this;
};
t.prototype.Reset = function() {
this.m_vertices = this.m_buffer;
this.m_count = 0;
this.m_radius = 0;
return this;
};
t.prototype.SetShape = function(t, e) {
t.SetupDistanceProxy(this, e);
};
t.prototype.SetVerticesRadius = function(t, e, i) {
this.m_vertices = t;
this.m_count = e;
this.m_radius = i;
};
t.prototype.GetSupport = function(t) {
for (var e = 0, i = I.DotVV(this.m_vertices[0], t), n = 1; n < this.m_count; ++n) {
var r = I.DotVV(this.m_vertices[n], t);
if (r > i) {
e = n;
i = r;
}
}
return e;
};
t.prototype.GetSupportVertex = function(t) {
for (var e = 0, i = I.DotVV(this.m_vertices[0], t), n = 1; n < this.m_count; ++n) {
var r = I.DotVV(this.m_vertices[n], t);
if (r > i) {
e = n;
i = r;
}
}
return this.m_vertices[e];
};
t.prototype.GetVertexCount = function() {
return this.m_count;
};
t.prototype.GetVertex = function(t) {
return this.m_vertices[t];
};
return t;
})(), Y = (function() {
function t() {
this.metric = 0;
this.count = 0;
this.indexA = [ 0, 0, 0 ];
this.indexB = [ 0, 0, 0 ];
}
t.prototype.Reset = function() {
this.metric = 0;
this.count = 0;
return this;
};
return t;
})(), J = (function() {
function t() {
this.proxyA = new X();
this.proxyB = new X();
this.transformA = new F();
this.transformB = new F();
this.useRadii = !1;
}
t.prototype.Reset = function() {
this.proxyA.Reset();
this.proxyB.Reset();
this.transformA.SetIdentity();
this.transformB.SetIdentity();
this.useRadii = !1;
return this;
};
return t;
})(), Z = (function() {
function t() {
this.pointA = new I();
this.pointB = new I();
this.distance = 0;
this.iterations = 0;
}
t.prototype.Reset = function() {
this.pointA.SetZero();
this.pointB.SetZero();
this.distance = 0;
this.iterations = 0;
return this;
};
return t;
})(), K = (function() {
return function() {
this.proxyA = new X();
this.proxyB = new X();
this.transformA = new F();
this.transformB = new F();
this.translationB = new I();
};
})(), Q = (function() {
return function() {
this.point = new I();
this.normal = new I();
this.lambda = 0;
this.iterations = 0;
};
})();
t.b2_gjkCalls = 0;
t.b2_gjkIters = 0;
t.b2_gjkMaxIters = 0;
var $ = (function() {
function t() {
this.wA = new I();
this.wB = new I();
this.w = new I();
this.a = 0;
this.indexA = 0;
this.indexB = 0;
}
t.prototype.Copy = function(t) {
this.wA.Copy(t.wA);
this.wB.Copy(t.wB);
this.w.Copy(t.w);
this.a = t.a;
this.indexA = t.indexA;
this.indexB = t.indexB;
return this;
};
return t;
})(), tt = (function() {
function t() {
this.m_v1 = new $();
this.m_v2 = new $();
this.m_v3 = new $();
this.m_vertices = [];
this.m_count = 0;
this.m_vertices[0] = this.m_v1;
this.m_vertices[1] = this.m_v2;
this.m_vertices[2] = this.m_v3;
}
t.prototype.ReadCache = function(t, e, i, r, s) {
this.m_count = t.count;
for (var o = this.m_vertices, a = 0; a < this.m_count; ++a) {
(f = o[a]).indexA = t.indexA[a];
f.indexB = t.indexB[a];
var c = e.GetVertex(f.indexA), l = r.GetVertex(f.indexB);
F.MulXV(i, c, f.wA);
F.MulXV(s, l, f.wB);
I.SubVV(f.wB, f.wA, f.w);
f.a = 0;
}
if (this.m_count > 1) {
var u = t.metric, h = this.GetMetric();
(h < .5 * u || 2 * u < h || h < n) && (this.m_count = 0);
}
if (0 === this.m_count) {
var f;
(f = o[0]).indexA = 0;
f.indexB = 0;
c = e.GetVertex(0), l = r.GetVertex(0);
F.MulXV(i, c, f.wA);
F.MulXV(s, l, f.wB);
I.SubVV(f.wB, f.wA, f.w);
f.a = 1;
this.m_count = 1;
}
};
t.prototype.WriteCache = function(t) {
t.metric = this.GetMetric();
t.count = this.m_count;
for (var e = this.m_vertices, i = 0; i < this.m_count; ++i) {
t.indexA[i] = e[i].indexA;
t.indexB[i] = e[i].indexB;
}
};
t.prototype.GetSearchDirection = function(t) {
switch (this.m_count) {
case 1:
return I.NegV(this.m_v1.w, t);

case 2:
var e = I.SubVV(this.m_v2.w, this.m_v1.w, t);
return I.CrossVV(e, I.NegV(this.m_v1.w, I.s_t0)) > 0 ? I.CrossOneV(e, t) : I.CrossVOne(e, t);

default:
return t.SetZero();
}
};
t.prototype.GetClosestPoint = function(t) {
switch (this.m_count) {
case 0:
return t.SetZero();

case 1:
return t.Copy(this.m_v1.w);

case 2:
return t.Set(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);

case 3:
default:
return t.SetZero();
}
};
t.prototype.GetWitnessPoints = function(t, e) {
switch (this.m_count) {
case 0:
break;

case 1:
t.Copy(this.m_v1.wA);
e.Copy(this.m_v1.wB);
break;

case 2:
t.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;
t.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;
e.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;
e.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;
break;

case 3:
e.x = t.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;
e.y = t.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;
}
};
t.prototype.GetMetric = function() {
switch (this.m_count) {
case 0:
case 1:
return 0;

case 2:
return I.DistanceVV(this.m_v1.w, this.m_v2.w);

case 3:
return I.CrossVV(I.SubVV(this.m_v2.w, this.m_v1.w, I.s_t0), I.SubVV(this.m_v3.w, this.m_v1.w, I.s_t1));

default:
return 0;
}
};
t.prototype.Solve2 = function() {
var e = this.m_v1.w, i = this.m_v2.w, n = I.SubVV(i, e, t.s_e12), r = -I.DotVV(e, n);
if (r <= 0) {
this.m_v1.a = 1;
this.m_count = 1;
} else {
var s = I.DotVV(i, n);
if (s <= 0) {
this.m_v2.a = 1;
this.m_count = 1;
this.m_v1.Copy(this.m_v2);
} else {
var o = 1 / (s + r);
this.m_v1.a = s * o;
this.m_v2.a = r * o;
this.m_count = 2;
}
}
};
t.prototype.Solve3 = function() {
var e = this.m_v1.w, i = this.m_v2.w, n = this.m_v3.w, r = I.SubVV(i, e, t.s_e12), s = I.DotVV(e, r), o = I.DotVV(i, r), a = -s, c = I.SubVV(n, e, t.s_e13), l = I.DotVV(e, c), u = I.DotVV(n, c), h = -l, f = I.SubVV(n, i, t.s_e23), _ = I.DotVV(i, f), d = I.DotVV(n, f), p = -_, m = I.CrossVV(r, c), y = m * I.CrossVV(i, n), v = m * I.CrossVV(n, e), g = m * I.CrossVV(e, i);
if (a <= 0 && h <= 0) {
this.m_v1.a = 1;
this.m_count = 1;
} else if (o > 0 && a > 0 && g <= 0) {
var b = 1 / (o + a);
this.m_v1.a = o * b;
this.m_v2.a = a * b;
this.m_count = 2;
} else if (u > 0 && h > 0 && v <= 0) {
var C = 1 / (u + h);
this.m_v1.a = u * C;
this.m_v3.a = h * C;
this.m_count = 2;
this.m_v2.Copy(this.m_v3);
} else if (o <= 0 && p <= 0) {
this.m_v2.a = 1;
this.m_count = 1;
this.m_v1.Copy(this.m_v2);
} else if (u <= 0 && d <= 0) {
this.m_v3.a = 1;
this.m_count = 1;
this.m_v1.Copy(this.m_v3);
} else if (d > 0 && p > 0 && y <= 0) {
var x = 1 / (d + p);
this.m_v2.a = d * x;
this.m_v3.a = p * x;
this.m_count = 2;
this.m_v1.Copy(this.m_v3);
} else {
var A = 1 / (y + v + g);
this.m_v1.a = y * A;
this.m_v2.a = v * A;
this.m_v3.a = g * A;
this.m_count = 3;
}
};
t.s_e12 = new I();
t.s_e13 = new I();
t.s_e23 = new I();
return t;
})(), et = new tt(), it = [ 0, 0, 0 ], nt = [ 0, 0, 0 ], rt = new I(), st = new I(), ot = new I(), at = new I(), ct = new I();
function lt(e, i, s) {
++t.b2_gjkCalls;
var o = s.proxyA, a = s.proxyB, c = s.transformA, l = s.transformB, u = et;
u.ReadCache(i, o, c, a, l);
for (var h = u.m_vertices, f = it, _ = nt, d = 0, p = 0; p < 20; ) {
d = u.m_count;
for (var m = 0; m < d; ++m) {
f[m] = h[m].indexA;
_[m] = h[m].indexB;
}
switch (u.m_count) {
case 1:
break;

case 2:
u.Solve2();
break;

case 3:
u.Solve3();
}
if (3 === u.m_count) break;
var y = u.GetSearchDirection(st);
if (y.LengthSquared() < r) break;
var v = h[u.m_count];
v.indexA = o.GetSupport(N.MulTRV(c.q, I.NegV(y, I.s_t0), at));
F.MulXV(c, o.GetVertex(v.indexA), v.wA);
v.indexB = a.GetSupport(N.MulTRV(l.q, y, ct));
F.MulXV(l, a.GetVertex(v.indexB), v.wB);
I.SubVV(v.wB, v.wA, v.w);
++p;
++t.b2_gjkIters;
var g = !1;
for (m = 0; m < d; ++m) if (v.indexA === f[m] && v.indexB === _[m]) {
g = !0;
break;
}
if (g) break;
++u.m_count;
}
t.b2_gjkMaxIters = b(t.b2_gjkMaxIters, p);
u.GetWitnessPoints(e.pointA, e.pointB);
e.distance = I.DistanceVV(e.pointA, e.pointB);
e.iterations = p;
u.WriteCache(i);
if (s.useRadii) {
var C = o.m_radius, x = a.m_radius;
if (e.distance > C + x && e.distance > n) {
e.distance -= C + x;
var A = I.SubVV(e.pointB, e.pointA, ot);
A.Normalize();
e.pointA.SelfMulAdd(C, A);
e.pointB.SelfMulSub(x, A);
} else {
var S = I.MidVV(e.pointA, e.pointB, rt);
e.pointA.Copy(S);
e.pointB.Copy(S);
e.distance = 0;
}
}
}
var ut = new I(), ht = new tt(), ft = new I(), _t = new I(), dt = new I(), pt = new I(), mt = new I(), yt = new I();
(function(t) {
t[t.e_vertex = 0] = "e_vertex";
t[t.e_face = 1] = "e_face";
})(t.b2ContactFeatureType || (t.b2ContactFeatureType = {}));
var vt = (function() {
function t() {
this._key = 0;
this._key_invalid = !1;
this._indexA = 0;
this._indexB = 0;
this._typeA = 0;
this._typeB = 0;
}
Object.defineProperty(t.prototype, "key", {
get: function() {
if (this._key_invalid) {
this._key_invalid = !1;
this._key = this._indexA | this._indexB << 8 | this._typeA << 16 | this._typeB << 24;
}
return this._key;
},
set: function(t) {
this._key = t;
this._key_invalid = !1;
this._indexA = 255 & this._key;
this._indexB = this._key >> 8 & 255;
this._typeA = this._key >> 16 & 255;
this._typeB = this._key >> 24 & 255;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "indexA", {
get: function() {
return this._indexA;
},
set: function(t) {
this._indexA = t;
this._key_invalid = !0;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "indexB", {
get: function() {
return this._indexB;
},
set: function(t) {
this._indexB = t;
this._key_invalid = !0;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "typeA", {
get: function() {
return this._typeA;
},
set: function(t) {
this._typeA = t;
this._key_invalid = !0;
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "typeB", {
get: function() {
return this._typeB;
},
set: function(t) {
this._typeB = t;
this._key_invalid = !0;
},
enumerable: !0,
configurable: !0
});
return t;
})(), gt = (function() {
function t() {
this.cf = new vt();
}
t.prototype.Copy = function(t) {
this.key = t.key;
return this;
};
t.prototype.Clone = function() {
return new t().Copy(this);
};
Object.defineProperty(t.prototype, "key", {
get: function() {
return this.cf.key;
},
set: function(t) {
this.cf.key = t;
},
enumerable: !0,
configurable: !0
});
return t;
})(), bt = (function() {
function t() {
this.localPoint = new I();
this.normalImpulse = 0;
this.tangentImpulse = 0;
this.id = new gt();
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
t.prototype.Reset = function() {
this.localPoint.SetZero();
this.normalImpulse = 0;
this.tangentImpulse = 0;
this.id.key = 0;
};
t.prototype.Copy = function(t) {
this.localPoint.Copy(t.localPoint);
this.normalImpulse = t.normalImpulse;
this.tangentImpulse = t.tangentImpulse;
this.id.Copy(t.id);
return this;
};
return t;
})();
(function(t) {
t[t.e_unknown = -1] = "e_unknown";
t[t.e_circles = 0] = "e_circles";
t[t.e_faceA = 1] = "e_faceA";
t[t.e_faceB = 2] = "e_faceB";
})(t.b2ManifoldType || (t.b2ManifoldType = {}));
var Ct = (function() {
function e() {
this.points = bt.MakeArray(o);
this.localNormal = new I();
this.localPoint = new I();
this.type = t.b2ManifoldType.e_unknown;
this.pointCount = 0;
}
e.prototype.Reset = function() {
for (var e = 0; e < o; ++e) this.points[e].Reset();
this.localNormal.SetZero();
this.localPoint.SetZero();
this.type = t.b2ManifoldType.e_unknown;
this.pointCount = 0;
};
e.prototype.Copy = function(t) {
this.pointCount = t.pointCount;
for (var e = 0; e < o; ++e) this.points[e].Copy(t.points[e]);
this.localNormal.Copy(t.localNormal);
this.localPoint.Copy(t.localPoint);
this.type = t.type;
return this;
};
e.prototype.Clone = function() {
return new e().Copy(this);
};
return e;
})(), xt = (function() {
function e() {
this.normal = new I();
this.points = I.MakeArray(o);
this.separations = p(o);
}
e.prototype.Initialize = function(i, n, s, o, a) {
if (0 !== i.pointCount) switch (i.type) {
case t.b2ManifoldType.e_circles:
this.normal.Set(1, 0);
var c = F.MulXV(n, i.localPoint, e.Initialize_s_pointA), l = F.MulXV(o, i.points[0].localPoint, e.Initialize_s_pointB);
I.DistanceSquaredVV(c, l) > r && I.SubVV(l, c, this.normal).SelfNormalize();
var u = I.AddVMulSV(c, s, this.normal, e.Initialize_s_cA), h = I.SubVMulSV(l, a, this.normal, e.Initialize_s_cB);
I.MidVV(u, h, this.points[0]);
this.separations[0] = I.DotVV(I.SubVV(h, u, I.s_t0), this.normal);
break;

case t.b2ManifoldType.e_faceA:
N.MulRV(n.q, i.localNormal, this.normal);
for (var f = F.MulXV(n, i.localPoint, e.Initialize_s_planePoint), _ = 0; _ < i.pointCount; ++_) {
var d = F.MulXV(o, i.points[_].localPoint, e.Initialize_s_clipPoint), p = s - I.DotVV(I.SubVV(d, f, I.s_t0), this.normal);
u = I.AddVMulSV(d, p, this.normal, e.Initialize_s_cA), h = I.SubVMulSV(d, a, this.normal, e.Initialize_s_cB);
I.MidVV(u, h, this.points[_]);
this.separations[_] = I.DotVV(I.SubVV(h, u, I.s_t0), this.normal);
}
break;

case t.b2ManifoldType.e_faceB:
N.MulRV(o.q, i.localNormal, this.normal);
for (f = F.MulXV(o, i.localPoint, e.Initialize_s_planePoint), _ = 0; _ < i.pointCount; ++_) {
d = F.MulXV(n, i.points[_].localPoint, e.Initialize_s_clipPoint), p = a - I.DotVV(I.SubVV(d, f, I.s_t0), this.normal), 
h = I.AddVMulSV(d, p, this.normal, e.Initialize_s_cB), u = I.SubVMulSV(d, s, this.normal, e.Initialize_s_cA);
I.MidVV(u, h, this.points[_]);
this.separations[_] = I.DotVV(I.SubVV(u, h, I.s_t0), this.normal);
}
this.normal.SelfNeg();
}
};
e.Initialize_s_pointA = new I();
e.Initialize_s_pointB = new I();
e.Initialize_s_cA = new I();
e.Initialize_s_cB = new I();
e.Initialize_s_planePoint = new I();
e.Initialize_s_clipPoint = new I();
return e;
})();
(function(t) {
t[t.b2_nullState = 0] = "b2_nullState";
t[t.b2_addState = 1] = "b2_addState";
t[t.b2_persistState = 2] = "b2_persistState";
t[t.b2_removeState = 3] = "b2_removeState";
})(t.b2PointState || (t.b2PointState = {}));
var At = (function() {
function t() {
this.v = new I();
this.id = new gt();
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
t.prototype.Copy = function(t) {
this.v.Copy(t.v);
this.id.Copy(t.id);
return this;
};
return t;
})(), St = (function() {
function t() {
this.p1 = new I();
this.p2 = new I();
this.maxFraction = 1;
}
t.prototype.Copy = function(t) {
this.p1.Copy(t.p1);
this.p2.Copy(t.p2);
this.maxFraction = t.maxFraction;
return this;
};
return t;
})(), wt = (function() {
function t() {
this.normal = new I();
this.fraction = 0;
}
t.prototype.Copy = function(t) {
this.normal.Copy(t.normal);
this.fraction = t.fraction;
return this;
};
return t;
})(), Tt = (function() {
function t() {
this.lowerBound = new I();
this.upperBound = new I();
this.m_cache_center = new I();
this.m_cache_extent = new I();
}
t.prototype.Copy = function(t) {
this.lowerBound.Copy(t.lowerBound);
this.upperBound.Copy(t.upperBound);
return this;
};
t.prototype.IsValid = function() {
var t = this.upperBound.x - this.lowerBound.x, e = this.upperBound.y - this.lowerBound.y, i = t >= 0 && e >= 0;
return i = i && this.lowerBound.IsValid() && this.upperBound.IsValid();
};
t.prototype.GetCenter = function() {
return I.MidVV(this.lowerBound, this.upperBound, this.m_cache_center);
};
t.prototype.GetExtents = function() {
return I.ExtVV(this.lowerBound, this.upperBound, this.m_cache_extent);
};
t.prototype.GetPerimeter = function() {
return 2 * (this.upperBound.x - this.lowerBound.x + (this.upperBound.y - this.lowerBound.y));
};
t.prototype.Combine1 = function(t) {
this.lowerBound.x = g(this.lowerBound.x, t.lowerBound.x);
this.lowerBound.y = g(this.lowerBound.y, t.lowerBound.y);
this.upperBound.x = b(this.upperBound.x, t.upperBound.x);
this.upperBound.y = b(this.upperBound.y, t.upperBound.y);
return this;
};
t.prototype.Combine2 = function(t, e) {
this.lowerBound.x = g(t.lowerBound.x, e.lowerBound.x);
this.lowerBound.y = g(t.lowerBound.y, e.lowerBound.y);
this.upperBound.x = b(t.upperBound.x, e.upperBound.x);
this.upperBound.y = b(t.upperBound.y, e.upperBound.y);
return this;
};
t.Combine = function(t, e, i) {
i.Combine2(t, e);
return i;
};
t.prototype.Contains = function(t) {
var e = !0;
return e = (e = (e = (e = e && this.lowerBound.x <= t.lowerBound.x) && this.lowerBound.y <= t.lowerBound.y) && t.upperBound.x <= this.upperBound.x) && t.upperBound.y <= this.upperBound.y;
};
t.prototype.RayCast = function(t, e) {
var r = -i, s = i, o = e.p1.x, a = e.p1.y, c = e.p2.x - e.p1.x, l = e.p2.y - e.p1.y, u = v(c), h = v(l), f = t.normal;
if (u < n) {
if (o < this.lowerBound.x || this.upperBound.x < o) return !1;
} else {
var _ = 1 / c, d = -1;
if ((m = (this.lowerBound.x - o) * _) > (y = (this.upperBound.x - o) * _)) {
var p = m;
m = y;
y = p;
d = 1;
}
if (m > r) {
f.x = d;
f.y = 0;
r = m;
}
if (r > (s = g(s, y))) return !1;
}
if (h < n) {
if (a < this.lowerBound.y || this.upperBound.y < a) return !1;
} else {
var m, y;
_ = 1 / l, d = -1;
if ((m = (this.lowerBound.y - a) * _) > (y = (this.upperBound.y - a) * _)) {
p = m;
m = y;
y = p;
d = 1;
}
if (m > r) {
f.x = 0;
f.y = d;
r = m;
}
if (r > (s = g(s, y))) return !1;
}
if (r < 0 || e.maxFraction < r) return !1;
t.fraction = r;
return !0;
};
t.prototype.TestContain = function(t) {
return !(t.x < this.lowerBound.x || this.upperBound.x < t.x) && !(t.y < this.lowerBound.y || this.upperBound.y < t.y);
};
t.prototype.TestOverlap = function(t) {
var e = t.lowerBound.x - this.upperBound.x, i = t.lowerBound.y - this.upperBound.y, n = this.lowerBound.x - t.upperBound.x, r = this.lowerBound.y - t.upperBound.y;
return !(e > 0 || i > 0) && !(n > 0 || r > 0);
};
return t;
})();
function Et(t, e) {
var i = e.lowerBound.x - t.upperBound.x, n = e.lowerBound.y - t.upperBound.y, r = t.lowerBound.x - e.upperBound.x, s = t.lowerBound.y - e.upperBound.y;
return !(i > 0 || n > 0) && !(r > 0 || s > 0);
}
function Mt(e, i, n, r, s) {
var o = 0, a = i[0], c = i[1], l = I.DotVV(n, a.v) - r, u = I.DotVV(n, c.v) - r;
l <= 0 && e[o++].Copy(a);
u <= 0 && e[o++].Copy(c);
if (l * u < 0) {
var h = l / (l - u), f = e[o].v;
f.x = a.v.x + h * (c.v.x - a.v.x);
f.y = a.v.y + h * (c.v.y - a.v.y);
var _ = e[o].id;
_.cf.indexA = s;
_.cf.indexB = a.id.cf.indexB;
_.cf.typeA = t.b2ContactFeatureType.e_vertex;
_.cf.typeB = t.b2ContactFeatureType.e_face;
++o;
}
return o;
}
var Bt = new J(), Dt = new Y(), Rt = new Z();
function It(t, e, i, r, s, o) {
var a = Bt.Reset();
a.proxyA.SetShape(t, e);
a.proxyB.SetShape(i, r);
a.transformA.Copy(s);
a.transformB.Copy(o);
a.useRadii = !0;
var c = Dt.Reset();
c.count = 0;
var l = Rt.Reset();
lt(l, c, a);
return l.distance < 10 * n;
}
function Pt(t) {
if (null === t) throw new Error();
return t;
}
var Ot = (function() {
function t(t) {
void 0 === t && (t = 0);
this.m_id = 0;
this.aabb = new Tt();
this.parent = null;
this.child1 = null;
this.child2 = null;
this.height = 0;
this.m_id = t;
}
t.prototype.IsLeaf = function() {
return null === this.child1;
};
return t;
})(), Lt = (function() {
function t() {
this.m_root = null;
this.m_freeList = null;
this.m_path = 0;
this.m_insertionCount = 0;
this.m_stack = new H(256);
}
t.prototype.Query = function(t, e) {
if (null !== this.m_root) {
var i = this.m_stack.Reset();
i.Push(this.m_root);
for (;i.GetCount() > 0; ) {
var n = i.Pop();
if (n.aabb.TestOverlap(t)) if (n.IsLeaf()) {
if (!e(n)) return;
} else {
i.Push(Pt(n.child1));
i.Push(Pt(n.child2));
}
}
}
};
t.prototype.QueryPoint = function(t, e) {
if (null !== this.m_root) {
var i = this.m_stack.Reset();
i.Push(this.m_root);
for (;i.GetCount() > 0; ) {
var n = i.Pop();
if (n.aabb.TestContain(t)) if (n.IsLeaf()) {
if (!e(n)) return;
} else {
i.Push(Pt(n.child1));
i.Push(Pt(n.child2));
}
}
}
};
t.prototype.RayCast = function(e, i) {
if (null !== this.m_root) {
var n = e.p1, r = e.p2, s = I.SubVV(r, n, t.s_r);
s.Normalize();
var o = I.CrossOneV(s, t.s_v), a = I.AbsV(o, t.s_abs_v), c = e.maxFraction, l = t.s_segmentAABB, u = n.x + c * (r.x - n.x), h = n.y + c * (r.y - n.y);
l.lowerBound.x = g(n.x, u);
l.lowerBound.y = g(n.y, h);
l.upperBound.x = b(n.x, u);
l.upperBound.y = b(n.y, h);
var f = this.m_stack.Reset();
f.Push(this.m_root);
for (;f.GetCount() > 0; ) {
var _ = f.Pop();
if (Et(_.aabb, l)) {
var d = _.aabb.GetCenter(), p = _.aabb.GetExtents();
if (!(v(I.DotVV(o, I.SubVV(n, d, I.s_t0))) - I.DotVV(a, p) > 0)) if (_.IsLeaf()) {
var m = t.s_subInput;
m.p1.Copy(e.p1);
m.p2.Copy(e.p2);
m.maxFraction = c;
var y = i(m, _);
if (0 === y) return;
if (y > 0) {
c = y;
u = n.x + c * (r.x - n.x);
h = n.y + c * (r.y - n.y);
l.lowerBound.x = g(n.x, u);
l.lowerBound.y = g(n.y, h);
l.upperBound.x = b(n.x, u);
l.upperBound.y = b(n.y, h);
}
} else {
f.Push(Pt(_.child1));
f.Push(Pt(_.child2));
}
}
}
}
};
t.prototype.AllocateNode = function() {
if (this.m_freeList) {
var e = this.m_freeList;
this.m_freeList = e.parent;
e.parent = null;
e.child1 = null;
e.child2 = null;
e.height = 0;
delete e.userData;
return e;
}
return new Ot(t.s_node_id++);
};
t.prototype.FreeNode = function(t) {
t.parent = this.m_freeList;
t.child1 = null;
t.child2 = null;
t.height = -1;
delete t.userData;
this.m_freeList = t;
};
t.prototype.CreateProxy = function(t, e) {
var i = this.AllocateNode();
i.aabb.lowerBound.x = t.lowerBound.x - .1;
i.aabb.lowerBound.y = t.lowerBound.y - .1;
i.aabb.upperBound.x = t.upperBound.x + .1;
i.aabb.upperBound.y = t.upperBound.y + .1;
i.userData = e;
i.height = 0;
this.InsertLeaf(i);
return i;
};
t.prototype.DestroyProxy = function(t) {
this.RemoveLeaf(t);
this.FreeNode(t);
};
t.prototype.MoveProxy = function(t, e, i) {
if (t.aabb.Contains(e)) return !1;
this.RemoveLeaf(t);
var n = .1 + 2 * (i.x > 0 ? i.x : -i.x), r = .1 + 2 * (i.y > 0 ? i.y : -i.y);
t.aabb.lowerBound.x = e.lowerBound.x - n;
t.aabb.lowerBound.y = e.lowerBound.y - r;
t.aabb.upperBound.x = e.upperBound.x + n;
t.aabb.upperBound.y = e.upperBound.y + r;
this.InsertLeaf(t);
return !0;
};
t.prototype.InsertLeaf = function(e) {
++this.m_insertionCount;
if (null !== this.m_root) {
for (var i = e.aabb, n = this.m_root; !n.IsLeaf(); ) {
var r = Pt(n.child1), s = Pt(n.child2), o = n.aabb.GetPerimeter(), a = t.s_combinedAABB;
a.Combine2(n.aabb, i);
var c = a.GetPerimeter(), l = 2 * c, u = 2 * (c - o), h = void 0, f = t.s_aabb, _ = void 0;
if (r.IsLeaf()) {
f.Combine2(i, r.aabb);
h = f.GetPerimeter() + u;
} else {
f.Combine2(i, r.aabb);
_ = r.aabb.GetPerimeter();
h = f.GetPerimeter() - _ + u;
}
var d = void 0;
if (s.IsLeaf()) {
f.Combine2(i, s.aabb);
d = f.GetPerimeter() + u;
} else {
f.Combine2(i, s.aabb);
_ = s.aabb.GetPerimeter();
d = f.GetPerimeter() - _ + u;
}
if (l < h && l < d) break;
n = h < d ? r : s;
}
var p = n, m = p.parent, y = this.AllocateNode();
y.parent = m;
delete y.userData;
y.aabb.Combine2(i, p.aabb);
y.height = p.height + 1;
if (m) {
m.child1 === p ? m.child1 = y : m.child2 = y;
y.child1 = p;
y.child2 = e;
p.parent = y;
e.parent = y;
} else {
y.child1 = p;
y.child2 = e;
p.parent = y;
e.parent = y;
this.m_root = y;
}
for (var v = e.parent; null !== v; ) {
r = Pt((v = this.Balance(v)).child1), s = Pt(v.child2);
v.height = 1 + b(r.height, s.height);
v.aabb.Combine2(r.aabb, s.aabb);
v = v.parent;
}
} else {
this.m_root = e;
this.m_root.parent = null;
}
};
t.prototype.RemoveLeaf = function(t) {
if (t !== this.m_root) {
var e, i = Pt(t.parent), n = i && i.parent;
e = i.child1 === t ? Pt(i.child2) : Pt(i.child1);
if (n) {
n.child1 === i ? n.child1 = e : n.child2 = e;
e.parent = n;
this.FreeNode(i);
for (var r = n; r; ) {
var s = Pt((r = this.Balance(r)).child1), o = Pt(r.child2);
r.aabb.Combine2(s.aabb, o.aabb);
r.height = 1 + b(s.height, o.height);
r = r.parent;
}
} else {
this.m_root = e;
e.parent = null;
this.FreeNode(i);
}
} else this.m_root = null;
};
t.prototype.Balance = function(t) {
if (t.IsLeaf() || t.height < 2) return t;
var e = Pt(t.child1), i = Pt(t.child2), n = i.height - e.height;
if (n > 1) {
var r = Pt(i.child1), s = Pt(i.child2);
i.child1 = t;
i.parent = t.parent;
t.parent = i;
null !== i.parent ? i.parent.child1 === t ? i.parent.child1 = i : i.parent.child2 = i : this.m_root = i;
if (r.height > s.height) {
i.child2 = r;
t.child2 = s;
s.parent = t;
t.aabb.Combine2(e.aabb, s.aabb);
i.aabb.Combine2(t.aabb, r.aabb);
t.height = 1 + b(e.height, s.height);
i.height = 1 + b(t.height, r.height);
} else {
i.child2 = s;
t.child2 = r;
r.parent = t;
t.aabb.Combine2(e.aabb, r.aabb);
i.aabb.Combine2(t.aabb, s.aabb);
t.height = 1 + b(e.height, r.height);
i.height = 1 + b(t.height, s.height);
}
return i;
}
if (n < -1) {
var o = Pt(e.child1), a = Pt(e.child2);
e.child1 = t;
e.parent = t.parent;
t.parent = e;
null !== e.parent ? e.parent.child1 === t ? e.parent.child1 = e : e.parent.child2 = e : this.m_root = e;
if (o.height > a.height) {
e.child2 = o;
t.child1 = a;
a.parent = t;
t.aabb.Combine2(i.aabb, a.aabb);
e.aabb.Combine2(t.aabb, o.aabb);
t.height = 1 + b(i.height, a.height);
e.height = 1 + b(t.height, o.height);
} else {
e.child2 = a;
t.child1 = o;
o.parent = t;
t.aabb.Combine2(i.aabb, o.aabb);
e.aabb.Combine2(t.aabb, a.aabb);
t.height = 1 + b(i.height, o.height);
e.height = 1 + b(t.height, a.height);
}
return e;
}
return t;
};
t.prototype.GetHeight = function() {
return null === this.m_root ? 0 : this.m_root.height;
};
t.GetAreaNode = function(e) {
if (null === e) return 0;
if (e.IsLeaf()) return 0;
var i = e.aabb.GetPerimeter();
i += t.GetAreaNode(e.child1);
return i += t.GetAreaNode(e.child2);
};
t.prototype.GetAreaRatio = function() {
if (null === this.m_root) return 0;
var e = this.m_root.aabb.GetPerimeter();
return t.GetAreaNode(this.m_root) / e;
};
t.prototype.ComputeHeightNode = function(t) {
if (!t || t.IsLeaf()) return 0;
var e = this.ComputeHeightNode(t.child1), i = this.ComputeHeightNode(t.child2);
return 1 + b(e, i);
};
t.prototype.ComputeHeight = function() {
return this.ComputeHeightNode(this.m_root);
};
t.prototype.ValidateStructure = function(t) {
if (null !== t) {
this.m_root;
var e = t;
if (!e.IsLeaf()) {
var i = Pt(e.child1), n = Pt(e.child2);
this.ValidateStructure(i);
this.ValidateStructure(n);
}
}
};
t.prototype.ValidateMetrics = function(e) {
if (null !== e) {
var i = e;
if (!i.IsLeaf()) {
var n = Pt(i.child1), r = Pt(i.child2);
t.s_aabb.Combine2(n.aabb, r.aabb);
this.ValidateMetrics(n);
this.ValidateMetrics(r);
}
}
};
t.prototype.Validate = function() {};
t.GetMaxBalanceNode = function(t, e) {
if (null === t) return e;
if (t.height <= 1) return e;
var i = Pt(t.child1), n = Pt(t.child2), r = v(n.height - i.height);
return b(e, r);
};
t.prototype.GetMaxBalance = function() {
return t.GetMaxBalanceNode(this.m_root, 0);
};
t.prototype.RebuildBottomUp = function() {
this.Validate();
};
t.ShiftOriginNode = function(e, i) {
if (null !== e && !(e.height <= 1)) {
var n = e.child1, r = e.child2;
t.ShiftOriginNode(n, i);
t.ShiftOriginNode(r, i);
e.aabb.lowerBound.SelfSub(i);
e.aabb.upperBound.SelfSub(i);
}
};
t.prototype.ShiftOrigin = function(e) {
t.ShiftOriginNode(this.m_root, e);
};
t.s_r = new I();
t.s_v = new I();
t.s_abs_v = new I();
t.s_segmentAABB = new Tt();
t.s_subInput = new St();
t.s_combinedAABB = new Tt();
t.s_aabb = new Tt();
t.s_node_id = 0;
return t;
})(), Vt = (function() {
return function(t, e) {
this.proxyA = t;
this.proxyB = e;
};
})(), Nt = (function() {
function t() {
this.m_tree = new Lt();
this.m_proxyCount = 0;
this.m_moveCount = 0;
this.m_moveBuffer = [];
this.m_pairCount = 0;
this.m_pairBuffer = [];
}
t.prototype.CreateProxy = function(t, e) {
var i = this.m_tree.CreateProxy(t, e);
++this.m_proxyCount;
this.BufferMove(i);
return i;
};
t.prototype.DestroyProxy = function(t) {
this.UnBufferMove(t);
--this.m_proxyCount;
this.m_tree.DestroyProxy(t);
};
t.prototype.MoveProxy = function(t, e, i) {
this.m_tree.MoveProxy(t, e, i) && this.BufferMove(t);
};
t.prototype.TouchProxy = function(t) {
this.BufferMove(t);
};
t.prototype.GetProxyCount = function() {
return this.m_proxyCount;
};
t.prototype.UpdatePairs = function(t) {
var e = this;
this.m_pairCount = 0;
for (var i = function(t) {
var i = n.m_moveBuffer[t];
if (null === i) return "continue";
var r = i.aabb;
n.m_tree.Query(r, (function(t) {
if (t.m_id === i.m_id) return !0;
var n, r;
if (t.m_id < i.m_id) {
n = t;
r = i;
} else {
n = i;
r = t;
}
if (e.m_pairCount === e.m_pairBuffer.length) e.m_pairBuffer[e.m_pairCount] = new Vt(n, r); else {
var s = e.m_pairBuffer[e.m_pairCount];
s.proxyA = n;
s.proxyB = r;
}
++e.m_pairCount;
return !0;
}));
}, n = this, r = 0; r < this.m_moveCount; ++r) i(r);
this.m_moveCount = 0;
this.m_pairBuffer.length = this.m_pairCount;
this.m_pairBuffer.sort(Ft);
for (var s = 0; s < this.m_pairCount; ) {
var o = this.m_pairBuffer[s], a = o.proxyA.userData, c = o.proxyB.userData;
a && c && t(a, c);
++s;
for (;s < this.m_pairCount; ) {
var l = this.m_pairBuffer[s];
if (l.proxyA.m_id !== o.proxyA.m_id || l.proxyB.m_id !== o.proxyB.m_id) break;
++s;
}
}
};
t.prototype.Query = function(t, e) {
this.m_tree.Query(t, e);
};
t.prototype.QueryPoint = function(t, e) {
this.m_tree.QueryPoint(t, e);
};
t.prototype.RayCast = function(t, e) {
this.m_tree.RayCast(t, e);
};
t.prototype.GetTreeHeight = function() {
return this.m_tree.GetHeight();
};
t.prototype.GetTreeBalance = function() {
return this.m_tree.GetMaxBalance();
};
t.prototype.GetTreeQuality = function() {
return this.m_tree.GetAreaRatio();
};
t.prototype.ShiftOrigin = function(t) {
this.m_tree.ShiftOrigin(t);
};
t.prototype.BufferMove = function(t) {
this.m_moveBuffer[this.m_moveCount] = t;
++this.m_moveCount;
};
t.prototype.UnBufferMove = function(t) {
var e = this.m_moveBuffer.indexOf(t);
this.m_moveBuffer[e] = null;
};
return t;
})();
function Ft(t, e) {
return t.proxyA.m_id === e.proxyA.m_id ? t.proxyB.m_id - e.proxyB.m_id : t.proxyA.m_id - e.proxyA.m_id;
}
t.b2_toiTime = 0;
t.b2_toiMaxTime = 0;
t.b2_toiCalls = 0;
t.b2_toiIters = 0;
t.b2_toiMaxIters = 0;
t.b2_toiRootIters = 0;
t.b2_toiMaxRootIters = 0;
var zt = new F(), kt = new F(), Gt = new I(), Ut = new I(), jt = new I(), Ht = new I(), Wt = new I(), qt = (function() {
return function() {
this.proxyA = new X();
this.proxyB = new X();
this.sweepA = new z();
this.sweepB = new z();
this.tMax = 0;
};
})();
(function(t) {
t[t.e_unknown = 0] = "e_unknown";
t[t.e_failed = 1] = "e_failed";
t[t.e_overlapped = 2] = "e_overlapped";
t[t.e_touching = 3] = "e_touching";
t[t.e_separated = 4] = "e_separated";
})(t.b2TOIOutputState || (t.b2TOIOutputState = {}));
var Xt = (function() {
return function() {
this.state = t.b2TOIOutputState.e_unknown;
this.t = 0;
};
})();
(function(t) {
t[t.e_unknown = -1] = "e_unknown";
t[t.e_points = 0] = "e_points";
t[t.e_faceA = 1] = "e_faceA";
t[t.e_faceB = 2] = "e_faceB";
})(t.b2SeparationFunctionType || (t.b2SeparationFunctionType = {}));
var Yt = (function() {
function e() {
this.m_sweepA = new z();
this.m_sweepB = new z();
this.m_type = t.b2SeparationFunctionType.e_unknown;
this.m_localPoint = new I();
this.m_axis = new I();
}
e.prototype.Initialize = function(e, i, n, r, s, o) {
this.m_proxyA = i;
this.m_proxyB = r;
var a = e.count;
this.m_sweepA.Copy(n);
this.m_sweepB.Copy(s);
var c = zt, l = kt;
this.m_sweepA.GetTransform(c, o);
this.m_sweepB.GetTransform(l, o);
if (1 === a) {
this.m_type = t.b2SeparationFunctionType.e_points;
var u = this.m_proxyA.GetVertex(e.indexA[0]), h = this.m_proxyB.GetVertex(e.indexB[0]), f = F.MulXV(c, u, Gt), _ = F.MulXV(l, h, Ut);
I.SubVV(_, f, this.m_axis);
var d = this.m_axis.Normalize();
this.m_localPoint.SetZero();
return d;
}
if (e.indexA[0] === e.indexA[1]) {
this.m_type = t.b2SeparationFunctionType.e_faceB;
var p = this.m_proxyB.GetVertex(e.indexB[0]), m = this.m_proxyB.GetVertex(e.indexB[1]);
I.CrossVOne(I.SubVV(m, p, I.s_t0), this.m_axis).SelfNormalize();
var y = N.MulRV(l.q, this.m_axis, jt);
I.MidVV(p, m, this.m_localPoint);
_ = F.MulXV(l, this.m_localPoint, Ut), u = this.m_proxyA.GetVertex(e.indexA[0]), 
f = F.MulXV(c, u, Gt);
if ((d = I.DotVV(I.SubVV(f, _, I.s_t0), y)) < 0) {
this.m_axis.SelfNeg();
d = -d;
}
return d;
}
this.m_type = t.b2SeparationFunctionType.e_faceA;
var v = this.m_proxyA.GetVertex(e.indexA[0]), g = this.m_proxyA.GetVertex(e.indexA[1]);
I.CrossVOne(I.SubVV(g, v, I.s_t0), this.m_axis).SelfNormalize();
y = N.MulRV(c.q, this.m_axis, jt);
I.MidVV(v, g, this.m_localPoint);
f = F.MulXV(c, this.m_localPoint, Gt), h = this.m_proxyB.GetVertex(e.indexB[0]), 
_ = F.MulXV(l, h, Ut);
if ((d = I.DotVV(I.SubVV(_, f, I.s_t0), y)) < 0) {
this.m_axis.SelfNeg();
d = -d;
}
return d;
};
e.prototype.FindMinSeparation = function(e, i, n) {
var r = zt, s = kt;
this.m_sweepA.GetTransform(r, n);
this.m_sweepB.GetTransform(s, n);
switch (this.m_type) {
case t.b2SeparationFunctionType.e_points:
var o = N.MulTRV(r.q, this.m_axis, Ht), a = N.MulTRV(s.q, I.NegV(this.m_axis, I.s_t0), Wt);
e[0] = this.m_proxyA.GetSupport(o);
i[0] = this.m_proxyB.GetSupport(a);
var c = this.m_proxyA.GetVertex(e[0]), l = this.m_proxyB.GetVertex(i[0]), u = F.MulXV(r, c, Gt), h = F.MulXV(s, l, Ut);
return I.DotVV(I.SubVV(h, u, I.s_t0), this.m_axis);

case t.b2SeparationFunctionType.e_faceA:
var f = N.MulRV(r.q, this.m_axis, jt);
u = F.MulXV(r, this.m_localPoint, Gt), a = N.MulTRV(s.q, I.NegV(f, I.s_t0), Wt);
e[0] = -1;
i[0] = this.m_proxyB.GetSupport(a);
l = this.m_proxyB.GetVertex(i[0]), h = F.MulXV(s, l, Ut);
return I.DotVV(I.SubVV(h, u, I.s_t0), f);

case t.b2SeparationFunctionType.e_faceB:
f = N.MulRV(s.q, this.m_axis, jt), h = F.MulXV(s, this.m_localPoint, Ut), o = N.MulTRV(r.q, I.NegV(f, I.s_t0), Ht);
i[0] = -1;
e[0] = this.m_proxyA.GetSupport(o);
c = this.m_proxyA.GetVertex(e[0]), u = F.MulXV(r, c, Gt);
return I.DotVV(I.SubVV(u, h, I.s_t0), f);

default:
e[0] = -1;
i[0] = -1;
return 0;
}
};
e.prototype.Evaluate = function(e, i, n) {
var r = zt, s = kt;
this.m_sweepA.GetTransform(r, n);
this.m_sweepB.GetTransform(s, n);
switch (this.m_type) {
case t.b2SeparationFunctionType.e_points:
var o = this.m_proxyA.GetVertex(e), a = this.m_proxyB.GetVertex(i), c = F.MulXV(r, o, Gt), l = F.MulXV(s, a, Ut);
return I.DotVV(I.SubVV(l, c, I.s_t0), this.m_axis);

case t.b2SeparationFunctionType.e_faceA:
var u = N.MulRV(r.q, this.m_axis, jt);
c = F.MulXV(r, this.m_localPoint, Gt), a = this.m_proxyB.GetVertex(i), l = F.MulXV(s, a, Ut);
return I.DotVV(I.SubVV(l, c, I.s_t0), u);

case t.b2SeparationFunctionType.e_faceB:
u = N.MulRV(s.q, this.m_axis, jt), l = F.MulXV(s, this.m_localPoint, Ut), o = this.m_proxyA.GetVertex(e), 
c = F.MulXV(r, o, Gt);
return I.DotVV(I.SubVV(c, l, I.s_t0), u);

default:
return 0;
}
};
return e;
})(), Jt = new U(), Zt = new Y(), Kt = new J(), Qt = new Z(), $t = new Yt(), te = [ 0 ], ee = [ 0 ], ie = new z(), ne = new z();
function re(e, i) {
var n = Jt.Reset();
++t.b2_toiCalls;
e.state = t.b2TOIOutputState.e_unknown;
e.t = i.tMax;
var r = i.proxyA, s = i.proxyB, o = ie.Copy(i.sweepA), l = ne.Copy(i.sweepB);
o.Normalize();
l.Normalize();
var u = i.tMax, h = r.m_radius + s.m_radius, f = b(c, h - 3 * c), _ = .25 * c, d = 0, p = 0, m = Zt;
m.count = 0;
var y = Kt;
y.proxyA.Copy(i.proxyA);
y.proxyB.Copy(i.proxyB);
y.useRadii = !1;
for (;;) {
var g = zt, C = kt;
o.GetTransform(g, d);
l.GetTransform(C, d);
y.transformA.Copy(g);
y.transformB.Copy(C);
var x = Qt;
lt(x, m, y);
if (x.distance <= 0) {
e.state = t.b2TOIOutputState.e_overlapped;
e.t = 0;
break;
}
if (x.distance < f + _) {
e.state = t.b2TOIOutputState.e_touching;
e.t = d;
break;
}
var A = $t;
A.Initialize(m, r, o, s, l, d);
for (var S = !1, w = u, T = 0; ;) {
var E = te, M = ee, B = A.FindMinSeparation(E, M, w);
if (B > f + _) {
e.state = t.b2TOIOutputState.e_separated;
e.t = u;
S = !0;
break;
}
if (B > f - _) {
d = w;
break;
}
var D = A.Evaluate(E[0], M[0], d);
if (D < f - _) {
e.state = t.b2TOIOutputState.e_failed;
e.t = d;
S = !0;
break;
}
if (D <= f + _) {
e.state = t.b2TOIOutputState.e_touching;
e.t = d;
S = !0;
break;
}
for (var R = 0, I = d, P = w; ;) {
var O = 0;
O = 1 & R ? I + (f - D) * (P - I) / (B - D) : .5 * (I + P);
++R;
++t.b2_toiRootIters;
var L = A.Evaluate(E[0], M[0], O);
if (v(L - f) < _) {
w = O;
break;
}
if (L > f) {
I = O;
D = L;
} else {
P = O;
B = L;
}
if (50 === R) break;
}
t.b2_toiMaxRootIters = b(t.b2_toiMaxRootIters, R);
if (++T === a) break;
}
++p;
++t.b2_toiIters;
if (S) break;
if (20 === p) {
e.state = t.b2TOIOutputState.e_failed;
e.t = d;
break;
}
}
t.b2_toiMaxIters = b(t.b2_toiMaxIters, p);
var V = n.GetMilliseconds();
t.b2_toiMaxTime = b(t.b2_toiMaxTime, V);
t.b2_toiTime += V;
}
var se = new I(), oe = new I();
function ae(e, i, n, r, s) {
e.pointCount = 0;
var o = F.MulXV(n, i.m_p, se), a = F.MulXV(s, r.m_p, oe), c = I.DistanceSquaredVV(o, a), l = i.m_radius + r.m_radius;
if (!(c > l * l)) {
e.type = t.b2ManifoldType.e_circles;
e.localPoint.Copy(i.m_p);
e.localNormal.SetZero();
e.pointCount = 1;
e.points[0].localPoint.Copy(r.m_p);
e.points[0].id.key = 0;
}
}
var ce = new I(), le = new I(), ue = new I();
function he(e, r, s, o, a) {
e.pointCount = 0;
for (var c = F.MulXV(a, o.m_p, ce), l = F.MulTXV(s, c, le), u = 0, h = -i, f = r.m_radius + o.m_radius, _ = r.m_count, d = r.m_vertices, p = r.m_normals, m = 0; m < _; ++m) {
var y = I.DotVV(p[m], I.SubVV(l, d[m], I.s_t0));
if (y > f) return;
if (y > h) {
h = y;
u = m;
}
}
var v = u, g = (v + 1) % _, b = d[v], C = d[g];
if (h < n) {
e.pointCount = 1;
e.type = t.b2ManifoldType.e_faceA;
e.localNormal.Copy(p[u]);
I.MidVV(b, C, e.localPoint);
e.points[0].localPoint.Copy(o.m_p);
e.points[0].id.key = 0;
} else {
var x = I.DotVV(I.SubVV(l, b, I.s_t0), I.SubVV(C, b, I.s_t1)), A = I.DotVV(I.SubVV(l, C, I.s_t0), I.SubVV(b, C, I.s_t1));
if (x <= 0) {
if (I.DistanceSquaredVV(l, b) > f * f) return;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_faceA;
I.SubVV(l, b, e.localNormal).SelfNormalize();
e.localPoint.Copy(b);
e.points[0].localPoint.Copy(o.m_p);
e.points[0].id.key = 0;
} else if (A <= 0) {
if (I.DistanceSquaredVV(l, C) > f * f) return;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_faceA;
I.SubVV(l, C, e.localNormal).SelfNormalize();
e.localPoint.Copy(C);
e.points[0].localPoint.Copy(o.m_p);
e.points[0].id.key = 0;
} else {
var S = I.MidVV(b, C, ue);
if (I.DotVV(I.SubVV(l, S, I.s_t1), p[v]) > f) return;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_faceA;
e.localNormal.Copy(p[v]).SelfNormalize();
e.localPoint.Copy(S);
e.points[0].localPoint.Copy(o.m_p);
e.points[0].id.key = 0;
}
}
}
var fe = new I(), _e = new I(), de = new I(), pe = new I();
function me(t, e, n, r, s) {
for (var o = t.m_vertices, a = t.m_normals, c = r.m_count, l = r.m_vertices, u = N.MulRV(e.q, a[n], fe), h = N.MulTRV(s.q, u, _e), f = 0, _ = i, d = 0; d < c; ++d) {
var p = I.DotVV(l[d], h);
if (p < _) {
_ = p;
f = d;
}
}
var m = F.MulXV(e, o[n], de), y = F.MulXV(s, l[f], pe);
return I.DotVV(I.SubVV(y, m, I.s_t0), u);
}
var ye = new I(), ve = new I();
function ge(t, e, n, r, s) {
for (var o = e.m_count, a = e.m_normals, c = I.SubVV(F.MulXV(s, r.m_centroid, I.s_t0), F.MulXV(n, e.m_centroid, I.s_t1), ye), l = N.MulTRV(n.q, c, ve), u = 0, h = -i, f = 0; f < o; ++f) {
var _ = I.DotVV(a[f], l);
if (_ > h) {
h = _;
u = f;
}
}
var d = me(e, n, u, r, s), p = (u + o - 1) % o, m = me(e, n, p, r, s), y = (u + 1) % o, v = me(e, n, y, r, s), g = 0, b = 0, C = 0;
if (m > d && m > v) {
C = -1;
g = p;
b = m;
} else {
if (!(v > d)) {
t[0] = u;
return d;
}
C = 1;
g = y;
b = v;
}
for (;(d = me(e, n, u = -1 === C ? (g + o - 1) % o : (g + 1) % o, r, s)) > b; ) {
g = u;
b = d;
}
t[0] = g;
return b;
}
var be = new I();
function Ce(e, n, r, s, o, a) {
for (var c = n.m_normals, l = o.m_count, u = o.m_vertices, h = o.m_normals, f = N.MulTRV(a.q, N.MulRV(r.q, c[s], I.s_t0), be), _ = 0, d = i, p = 0; p < l; ++p) {
var m = I.DotVV(f, h[p]);
if (m < d) {
d = m;
_ = p;
}
}
var y = _, v = (y + 1) % l, g = e[0];
F.MulXV(a, u[y], g.v);
var b = g.id.cf;
b.indexA = s;
b.indexB = y;
b.typeA = t.b2ContactFeatureType.e_face;
b.typeB = t.b2ContactFeatureType.e_vertex;
var C = e[1];
F.MulXV(a, u[v], C.v);
var x = C.id.cf;
x.indexA = s;
x.indexB = v;
x.typeA = t.b2ContactFeatureType.e_face;
x.typeB = t.b2ContactFeatureType.e_vertex;
}
var xe = At.MakeArray(2), Ae = At.MakeArray(2), Se = At.MakeArray(2), we = [ 0 ], Te = [ 0 ], Ee = new I(), Me = new I(), Be = new I(), De = new I(), Re = new I(), Ie = new I(), Pe = new I(), Oe = new I();
function Le(e, i, n, r, s) {
e.pointCount = 0;
var a = i.m_radius + r.m_radius, c = we;
c[0] = 0;
var l = ge(c, i, n, r, s);
if (!(l > a)) {
var u = Te;
u[0] = 0;
var h = ge(u, r, s, i, n);
if (!(h > a)) {
var f, _, d, p, m = 0, y = 0;
if (h > .98 * l + .001) {
f = r;
_ = i;
d = s;
p = n;
m = u[0];
e.type = t.b2ManifoldType.e_faceB;
y = 1;
} else {
f = i;
_ = r;
d = n;
p = s;
m = c[0];
e.type = t.b2ManifoldType.e_faceA;
y = 0;
}
var v = xe;
Ce(v, f, d, m, _, p);
var g = f.m_count, b = f.m_vertices, C = m, x = (m + 1) % g, A = b[C], S = b[x], w = I.SubVV(S, A, Ee);
w.Normalize();
var T = I.CrossVOne(w, Me), E = I.MidVV(A, S, Be), M = N.MulRV(d.q, w, Re), B = I.CrossVOne(M, De), D = F.MulXV(d, A, Pe), R = F.MulXV(d, S, Oe), P = I.DotVV(B, D), O = -I.DotVV(M, D) + a, L = I.DotVV(M, R) + a, V = Ae, z = Se;
if (!(Mt(V, v, I.NegV(M, Ie), O, C) < 2 || Mt(z, V, M, L, x) < 2)) {
e.localNormal.Copy(T);
e.localPoint.Copy(E);
for (var k = 0, G = 0; G < o; ++G) {
var U = z[G];
if (I.DotVV(B, U.v) - P <= a) {
var j = e.points[k];
F.MulTXV(p, U.v, j.localPoint);
j.id.Copy(U.id);
if (y) {
var H = j.id.cf;
j.id.cf.indexA = H.indexB;
j.id.cf.indexB = H.indexA;
j.id.cf.typeA = H.typeB;
j.id.cf.typeB = H.typeA;
}
++k;
}
}
e.pointCount = k;
}
}
}
}
var Ve = new I(), Ne = new I(), Fe = new I(), ze = new I(), ke = new I(), Ge = new I(), Ue = new I(), je = new gt();
function He(e, i, n, r, s) {
e.pointCount = 0;
var o = F.MulTXV(n, F.MulXV(s, r.m_p, I.s_t0), Ve), a = i.m_vertex1, c = i.m_vertex2, l = I.SubVV(c, a, Ne), u = I.DotVV(l, I.SubVV(c, o, I.s_t0)), h = I.DotVV(l, I.SubVV(o, a, I.s_t0)), f = i.m_radius + r.m_radius, _ = je;
_.cf.indexB = 0;
_.cf.typeB = t.b2ContactFeatureType.e_vertex;
if (h <= 0) {
var d = a, p = I.SubVV(o, d, Fe);
if (I.DotVV(p, p) > f * f) return;
if (i.m_hasVertex0) {
var m = i.m_vertex0, y = a, v = I.SubVV(y, m, ze);
if (I.DotVV(v, I.SubVV(y, o, I.s_t0)) > 0) return;
}
_.cf.indexA = 0;
_.cf.typeA = t.b2ContactFeatureType.e_vertex;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_circles;
e.localNormal.SetZero();
e.localPoint.Copy(d);
e.points[0].id.Copy(_);
e.points[0].localPoint.Copy(r.m_p);
} else if (u <= 0) {
var g = c, b = I.SubVV(o, g, Fe);
if (I.DotVV(b, b) > f * f) return;
if (i.m_hasVertex3) {
var C = i.m_vertex3, x = c, A = I.SubVV(C, x, ke);
if (I.DotVV(A, I.SubVV(o, x, I.s_t0)) > 0) return;
}
_.cf.indexA = 1;
_.cf.typeA = t.b2ContactFeatureType.e_vertex;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_circles;
e.localNormal.SetZero();
e.localPoint.Copy(g);
e.points[0].id.Copy(_);
e.points[0].localPoint.Copy(r.m_p);
} else {
var S = I.DotVV(l, l), w = Ge;
w.x = 1 / S * (u * a.x + h * c.x);
w.y = 1 / S * (u * a.y + h * c.y);
var T = I.SubVV(o, w, Fe);
if (!(I.DotVV(T, T) > f * f)) {
var E = Ue.Set(-l.y, l.x);
I.DotVV(E, I.SubVV(o, a, I.s_t0)) < 0 && E.Set(-E.x, -E.y);
E.Normalize();
_.cf.indexA = 0;
_.cf.typeA = t.b2ContactFeatureType.e_face;
e.pointCount = 1;
e.type = t.b2ManifoldType.e_faceA;
e.localNormal.Copy(E);
e.localPoint.Copy(a);
e.points[0].id.Copy(_);
e.points[0].localPoint.Copy(r.m_p);
}
}
}
var We = (function() {
return function() {
this.type = 0;
this.index = 0;
this.separation = 0;
};
})(), qe = (function() {
return function() {
this.vertices = I.MakeArray(a);
this.normals = I.MakeArray(a);
this.count = 0;
};
})(), Xe = (function() {
return function() {
this.i1 = 0;
this.i2 = 0;
this.v1 = new I();
this.v2 = new I();
this.normal = new I();
this.sideNormal1 = new I();
this.sideOffset1 = 0;
this.sideNormal2 = new I();
this.sideOffset2 = 0;
};
})(), Ye = new (function() {
function e() {
this.m_polygonB = new qe();
this.m_xf = new F();
this.m_centroidB = new I();
this.m_v0 = new I();
this.m_v1 = new I();
this.m_v2 = new I();
this.m_v3 = new I();
this.m_normal0 = new I();
this.m_normal1 = new I();
this.m_normal2 = new I();
this.m_normal = new I();
this.m_type1 = 0;
this.m_type2 = 0;
this.m_lowerLimit = new I();
this.m_upperLimit = new I();
this.m_radius = 0;
this.m_front = !1;
}
e.prototype.Collide = function(i, n, r, s, a) {
F.MulTXX(r, a, this.m_xf);
F.MulXV(this.m_xf, s.m_centroid, this.m_centroidB);
this.m_v0.Copy(n.m_vertex0);
this.m_v1.Copy(n.m_vertex1);
this.m_v2.Copy(n.m_vertex2);
this.m_v3.Copy(n.m_vertex3);
var c = n.m_hasVertex0, l = n.m_hasVertex3, u = I.SubVV(this.m_v2, this.m_v1, e.s_edge1);
u.Normalize();
this.m_normal1.Set(u.y, -u.x);
var h = I.DotVV(this.m_normal1, I.SubVV(this.m_centroidB, this.m_v1, I.s_t0)), f = 0, _ = 0, d = !1, p = !1;
if (c) {
var m = I.SubVV(this.m_v1, this.m_v0, e.s_edge0);
m.Normalize();
this.m_normal0.Set(m.y, -m.x);
d = I.CrossVV(m, u) >= 0;
f = I.DotVV(this.m_normal0, I.SubVV(this.m_centroidB, this.m_v0, I.s_t0));
}
if (l) {
var y = I.SubVV(this.m_v3, this.m_v2, e.s_edge2);
y.Normalize();
this.m_normal2.Set(y.y, -y.x);
p = I.CrossVV(u, y) > 0;
_ = I.DotVV(this.m_normal2, I.SubVV(this.m_centroidB, this.m_v2, I.s_t0));
}
if (c && l) if (d && p) {
this.m_front = f >= 0 || h >= 0 || _ >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal0);
this.m_upperLimit.Copy(this.m_normal2);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
}
} else if (d) {
this.m_front = f >= 0 || h >= 0 && _ >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal0);
this.m_upperLimit.Copy(this.m_normal1);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
}
} else if (p) {
this.m_front = _ >= 0 || f >= 0 && h >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal2);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal0).SelfNeg();
}
} else {
this.m_front = f >= 0 && h >= 0 && _ >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal1);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();
this.m_upperLimit.Copy(this.m_normal0).SelfNeg();
}
} else if (c) if (d) {
this.m_front = f >= 0 || h >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal0);
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
}
} else {
this.m_front = f >= 0 && h >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal0).SelfNeg();
}
} else if (l) if (p) {
this.m_front = h >= 0 || _ >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal2);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1);
}
} else {
this.m_front = h >= 0 && _ >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1);
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal2).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1);
}
} else {
this.m_front = h >= 0;
if (this.m_front) {
this.m_normal.Copy(this.m_normal1);
this.m_lowerLimit.Copy(this.m_normal1).SelfNeg();
this.m_upperLimit.Copy(this.m_normal1).SelfNeg();
} else {
this.m_normal.Copy(this.m_normal1).SelfNeg();
this.m_lowerLimit.Copy(this.m_normal1);
this.m_upperLimit.Copy(this.m_normal1);
}
}
this.m_polygonB.count = s.m_count;
for (var v = 0; v < s.m_count; ++v) {
F.MulXV(this.m_xf, s.m_vertices[v], this.m_polygonB.vertices[v]);
N.MulRV(this.m_xf.q, s.m_normals[v], this.m_polygonB.normals[v]);
}
this.m_radius = s.m_radius + n.m_radius;
i.pointCount = 0;
var g = this.ComputeEdgeSeparation(e.s_edgeAxis);
if (0 !== g.type && !(g.separation > this.m_radius)) {
var b = this.ComputePolygonSeparation(e.s_polygonAxis);
if (!(0 !== b.type && b.separation > this.m_radius)) {
var C;
C = 0 === b.type ? g : b.separation > .98 * g.separation + .001 ? b : g;
var x = e.s_ie, A = e.s_rf;
if (1 === C.type) {
i.type = t.b2ManifoldType.e_faceA;
var S = 0, w = I.DotVV(this.m_normal, this.m_polygonB.normals[0]);
for (v = 1; v < this.m_polygonB.count; ++v) {
var T = I.DotVV(this.m_normal, this.m_polygonB.normals[v]);
if (T < w) {
w = T;
S = v;
}
}
var E = S, M = (E + 1) % this.m_polygonB.count;
(B = x[0]).v.Copy(this.m_polygonB.vertices[E]);
B.id.cf.indexA = 0;
B.id.cf.indexB = E;
B.id.cf.typeA = t.b2ContactFeatureType.e_face;
B.id.cf.typeB = t.b2ContactFeatureType.e_vertex;
(D = x[1]).v.Copy(this.m_polygonB.vertices[M]);
D.id.cf.indexA = 0;
D.id.cf.indexB = M;
D.id.cf.typeA = t.b2ContactFeatureType.e_face;
D.id.cf.typeB = t.b2ContactFeatureType.e_vertex;
if (this.m_front) {
A.i1 = 0;
A.i2 = 1;
A.v1.Copy(this.m_v1);
A.v2.Copy(this.m_v2);
A.normal.Copy(this.m_normal1);
} else {
A.i1 = 1;
A.i2 = 0;
A.v1.Copy(this.m_v2);
A.v2.Copy(this.m_v1);
A.normal.Copy(this.m_normal1).SelfNeg();
}
} else {
i.type = t.b2ManifoldType.e_faceB;
var B, D;
(B = x[0]).v.Copy(this.m_v1);
B.id.cf.indexA = 0;
B.id.cf.indexB = C.index;
B.id.cf.typeA = t.b2ContactFeatureType.e_vertex;
B.id.cf.typeB = t.b2ContactFeatureType.e_face;
(D = x[1]).v.Copy(this.m_v2);
D.id.cf.indexA = 0;
D.id.cf.indexB = C.index;
D.id.cf.typeA = t.b2ContactFeatureType.e_vertex;
D.id.cf.typeB = t.b2ContactFeatureType.e_face;
A.i1 = C.index;
A.i2 = (A.i1 + 1) % this.m_polygonB.count;
A.v1.Copy(this.m_polygonB.vertices[A.i1]);
A.v2.Copy(this.m_polygonB.vertices[A.i2]);
A.normal.Copy(this.m_polygonB.normals[A.i1]);
}
A.sideNormal1.Set(A.normal.y, -A.normal.x);
A.sideNormal2.Copy(A.sideNormal1).SelfNeg();
A.sideOffset1 = I.DotVV(A.sideNormal1, A.v1);
A.sideOffset2 = I.DotVV(A.sideNormal2, A.v2);
var R = e.s_clipPoints1, P = e.s_clipPoints2;
if (!(Mt(R, x, A.sideNormal1, A.sideOffset1, A.i1) < o || Mt(P, R, A.sideNormal2, A.sideOffset2, A.i2) < o)) {
if (1 === C.type) {
i.localNormal.Copy(A.normal);
i.localPoint.Copy(A.v1);
} else {
i.localNormal.Copy(s.m_normals[A.i1]);
i.localPoint.Copy(s.m_vertices[A.i1]);
}
var O = 0;
for (v = 0; v < o; ++v) {
if (I.DotVV(A.normal, I.SubVV(P[v].v, A.v1, I.s_t0)) <= this.m_radius) {
var L = i.points[O];
if (1 === C.type) {
F.MulTXV(this.m_xf, P[v].v, L.localPoint);
L.id = P[v].id;
} else {
L.localPoint.Copy(P[v].v);
L.id.cf.typeA = P[v].id.cf.typeB;
L.id.cf.typeB = P[v].id.cf.typeA;
L.id.cf.indexA = P[v].id.cf.indexB;
L.id.cf.indexB = P[v].id.cf.indexA;
}
++O;
}
}
i.pointCount = O;
}
}
}
};
e.prototype.ComputeEdgeSeparation = function(t) {
var e = t;
e.type = 1;
e.index = this.m_front ? 0 : 1;
e.separation = i;
for (var n = 0; n < this.m_polygonB.count; ++n) {
var r = I.DotVV(this.m_normal, I.SubVV(this.m_polygonB.vertices[n], this.m_v1, I.s_t0));
r < e.separation && (e.separation = r);
}
return e;
};
e.prototype.ComputePolygonSeparation = function(t) {
var n = t;
n.type = 0;
n.index = -1;
n.separation = -i;
for (var r = e.s_perp.Set(-this.m_normal.y, this.m_normal.x), s = 0; s < this.m_polygonB.count; ++s) {
var o = I.NegV(this.m_polygonB.normals[s], e.s_n), a = I.DotVV(o, I.SubVV(this.m_polygonB.vertices[s], this.m_v1, I.s_t0)), c = I.DotVV(o, I.SubVV(this.m_polygonB.vertices[s], this.m_v2, I.s_t0)), u = g(a, c);
if (u > this.m_radius) {
n.type = 2;
n.index = s;
n.separation = u;
return n;
}
if (I.DotVV(o, r) >= 0) {
if (I.DotVV(I.SubVV(o, this.m_upperLimit, I.s_t0), this.m_normal) < -l) continue;
} else if (I.DotVV(I.SubVV(o, this.m_lowerLimit, I.s_t0), this.m_normal) < -l) continue;
if (u > n.separation) {
n.type = 2;
n.index = s;
n.separation = u;
}
}
return n;
};
e.s_edge1 = new I();
e.s_edge0 = new I();
e.s_edge2 = new I();
e.s_ie = At.MakeArray(2);
e.s_rf = new Xe();
e.s_clipPoints1 = At.MakeArray(2);
e.s_clipPoints2 = At.MakeArray(2);
e.s_edgeAxis = new We();
e.s_polygonAxis = new We();
e.s_n = new I();
e.s_perp = new I();
return e;
}())();
function Je(t, e, i, n, r) {
Ye.Collide(t, e, i, n, r);
}
var Ze = (function() {
return function() {
this.mass = 0;
this.center = new I(0, 0);
this.I = 0;
};
})();
(function(t) {
t[t.e_unknown = -1] = "e_unknown";
t[t.e_circleShape = 0] = "e_circleShape";
t[t.e_edgeShape = 1] = "e_edgeShape";
t[t.e_polygonShape = 2] = "e_polygonShape";
t[t.e_chainShape = 3] = "e_chainShape";
t[t.e_shapeTypeCount = 4] = "e_shapeTypeCount";
})(t.b2ShapeType || (t.b2ShapeType = {}));
var Ke = (function() {
function e(e, i) {
this.m_type = t.b2ShapeType.e_unknown;
this.m_radius = 0;
this.m_type = e;
this.m_radius = i;
}
e.prototype.Copy = function(t) {
this.m_radius = t.m_radius;
return this;
};
e.prototype.GetType = function() {
return this.m_type;
};
return e;
})(), Qe = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
};
function $e(t, e) {
Qe(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}
var ti = (function(e) {
$e(i, e);
function i(i) {
void 0 === i && (i = 0);
var n = e.call(this, t.b2ShapeType.e_circleShape, i) || this;
n.m_p = new I();
return n;
}
i.prototype.Set = function(t, e) {
void 0 === e && (e = this.m_radius);
this.m_p.Copy(t);
this.m_radius = e;
return this;
};
i.prototype.Clone = function() {
return new i().Copy(this);
};
i.prototype.Copy = function(t) {
e.prototype.Copy.call(this, t);
this.m_p.Copy(t.m_p);
return this;
};
i.prototype.GetChildCount = function() {
return 1;
};
i.prototype.TestPoint = function(t, e) {
var n = F.MulXV(t, this.m_p, i.TestPoint_s_center), r = I.SubVV(e, n, i.TestPoint_s_d);
return I.DotVV(r, r) <= A(this.m_radius);
};
i.prototype.ComputeDistance = function(t, e, n, r) {
var s = F.MulXV(t, this.m_p, i.ComputeDistance_s_center);
I.SubVV(e, s, n);
return n.Normalize() - this.m_radius;
};
i.prototype.RayCast = function(t, e, r, s) {
var o = F.MulXV(r, this.m_p, i.RayCast_s_position), a = I.SubVV(e.p1, o, i.RayCast_s_s), c = I.DotVV(a, a) - A(this.m_radius), l = I.SubVV(e.p2, e.p1, i.RayCast_s_r), u = I.DotVV(a, l), h = I.DotVV(l, l), f = u * u - h * c;
if (f < 0 || h < n) return !1;
var _ = -(u + w(f));
if (0 <= _ && _ <= e.maxFraction * h) {
_ /= h;
t.fraction = _;
I.AddVMulSV(a, _, l, t.normal).SelfNormalize();
return !0;
}
return !1;
};
i.prototype.ComputeAABB = function(t, e, n) {
var r = F.MulXV(e, this.m_p, i.ComputeAABB_s_p);
t.lowerBound.Set(r.x - this.m_radius, r.y - this.m_radius);
t.upperBound.Set(r.x + this.m_radius, r.y + this.m_radius);
};
i.prototype.ComputeMass = function(t, e) {
var i = A(this.m_radius);
t.mass = e * s * i;
t.center.Copy(this.m_p);
t.I = t.mass * (.5 * i + I.DotVV(this.m_p, this.m_p));
};
i.prototype.SetupDistanceProxy = function(t, e) {
t.m_vertices = t.m_buffer;
t.m_vertices[0].Copy(this.m_p);
t.m_count = 1;
t.m_radius = this.m_radius;
};
i.prototype.ComputeSubmergedArea = function(t, e, i, r) {
var o = F.MulXV(i, this.m_p, new I()), a = -(I.DotVV(t, o) - e);
if (a < -this.m_radius + n) return 0;
if (a > this.m_radius) {
r.Copy(o);
return s * this.m_radius * this.m_radius;
}
var c = this.m_radius * this.m_radius, l = a * a, u = c * (D(a / this.m_radius) + s / 2) + a * w(c - l), h = -2 / 3 * T(c - l, 1.5) / u;
r.x = o.x + t.x * h;
r.y = o.y + t.y * h;
return u;
};
i.prototype.Dump = function(t) {
t("    const shape: b2CircleShape = new b2CircleShape();\n");
t("    shape.m_radius = %.15f;\n", this.m_radius);
t("    shape.m_p.Set(%.15f, %.15f);\n", this.m_p.x, this.m_p.y);
};
i.TestPoint_s_center = new I();
i.TestPoint_s_d = new I();
i.ComputeDistance_s_center = new I();
i.RayCast_s_position = new I();
i.RayCast_s_s = new I();
i.RayCast_s_r = new I();
i.ComputeAABB_s_p = new I();
return i;
})(Ke), ei = (function(e) {
$e(r, e);
function r() {
var i = e.call(this, t.b2ShapeType.e_polygonShape, u) || this;
i.m_centroid = new I(0, 0);
i.m_vertices = [];
i.m_normals = [];
i.m_count = 0;
return i;
}
r.prototype.Clone = function() {
return new r().Copy(this);
};
r.prototype.Copy = function(t) {
e.prototype.Copy.call(this, t);
this.m_centroid.Copy(t.m_centroid);
this.m_count = t.m_count;
this.m_vertices = I.MakeArray(this.m_count);
this.m_normals = I.MakeArray(this.m_count);
for (var i = 0; i < this.m_count; ++i) {
this.m_vertices[i].Copy(t.m_vertices[i]);
this.m_normals[i].Copy(t.m_normals[i]);
}
return this;
};
r.prototype.GetChildCount = function() {
return 1;
};
r.prototype.Set = function(t, e, i) {
void 0 === e && (e = t.length);
void 0 === i && (i = 0);
if (e < 3) return this.SetAsBox(1, 1);
for (var n = g(e, a), s = r.Set_s_ps, o = 0, l = 0; l < n; ++l) {
for (var u = t[i + l], h = !0, f = 0; f < o; ++f) if (I.DistanceSquaredVV(u, s[f]) < .5 * c * (.5 * c)) {
h = !1;
break;
}
h && s[o++].Copy(u);
}
if ((n = o) < 3) return this.SetAsBox(1, 1);
var _ = 0, d = s[0].x;
for (l = 1; l < n; ++l) {
var p = s[l].x;
if (p > d || p === d && s[l].y < s[_].y) {
_ = l;
d = p;
}
}
for (var m = r.Set_s_hull, y = 0, v = _; ;) {
m[y] = v;
var b = 0;
for (f = 1; f < n; ++f) if (b !== v) {
var C = I.SubVV(s[b], s[m[y]], r.Set_s_r), x = (u = I.SubVV(s[f], s[m[y]], r.Set_s_v), 
I.CrossVV(C, u));
x < 0 && (b = f);
0 === x && u.LengthSquared() > C.LengthSquared() && (b = f);
} else b = f;
++y;
v = b;
if (b === _) break;
}
this.m_count = y;
this.m_vertices = I.MakeArray(this.m_count);
this.m_normals = I.MakeArray(this.m_count);
for (l = 0; l < y; ++l) this.m_vertices[l].Copy(s[m[l]]);
for (l = 0; l < y; ++l) {
var A = this.m_vertices[l], S = this.m_vertices[(l + 1) % y], w = I.SubVV(S, A, I.s_t0);
I.CrossVOne(w, this.m_normals[l]).SelfNormalize();
}
r.ComputeCentroid(this.m_vertices, y, this.m_centroid);
return this;
};
r.prototype.SetAsArray = function(t, e) {
void 0 === e && (e = t.length);
return this.Set(t, e);
};
r.prototype.SetAsBox = function(t, e, i, n) {
void 0 === n && (n = 0);
this.m_count = 4;
this.m_vertices = I.MakeArray(this.m_count);
this.m_normals = I.MakeArray(this.m_count);
this.m_vertices[0].Set(-t, -e);
this.m_vertices[1].Set(t, -e);
this.m_vertices[2].Set(t, e);
this.m_vertices[3].Set(-t, e);
this.m_normals[0].Set(0, -1);
this.m_normals[1].Set(1, 0);
this.m_normals[2].Set(0, 1);
this.m_normals[3].Set(-1, 0);
this.m_centroid.SetZero();
if (i) {
this.m_centroid.Copy(i);
var r = new F();
r.SetPosition(i);
r.SetRotationAngle(n);
for (var s = 0; s < this.m_count; ++s) {
F.MulXV(r, this.m_vertices[s], this.m_vertices[s]);
N.MulRV(r.q, this.m_normals[s], this.m_normals[s]);
}
}
return this;
};
r.prototype.TestPoint = function(t, e) {
for (var i = F.MulTXV(t, e, r.TestPoint_s_pLocal), n = 0; n < this.m_count; ++n) {
if (I.DotVV(this.m_normals[n], I.SubVV(i, this.m_vertices[n], I.s_t0)) > 0) return !1;
}
return !0;
};
r.prototype.ComputeDistance = function(t, e, n, s) {
for (var o = F.MulTXV(t, e, r.ComputeDistance_s_pLocal), a = -i, c = r.ComputeDistance_s_normalForMaxDistance.Copy(o), l = 0; l < this.m_count; ++l) {
var u = I.DotVV(this.m_normals[l], I.SubVV(o, this.m_vertices[l], I.s_t0));
if (u > a) {
a = u;
c.Copy(this.m_normals[l]);
}
}
if (a > 0) {
var h = r.ComputeDistance_s_minDistance.Copy(c), f = a * a;
for (l = 0; l < this.m_count; ++l) {
var _ = I.SubVV(o, this.m_vertices[l], r.ComputeDistance_s_distance), d = _.LengthSquared();
if (f > d) {
h.Copy(_);
f = d;
}
}
N.MulRV(t.q, h, n);
n.Normalize();
return Math.sqrt(f);
}
N.MulRV(t.q, c, n);
return a;
};
r.prototype.RayCast = function(t, e, i, n) {
for (var s = F.MulTXV(i, e.p1, r.RayCast_s_p1), o = F.MulTXV(i, e.p2, r.RayCast_s_p2), a = I.SubVV(o, s, r.RayCast_s_d), c = 0, l = e.maxFraction, u = -1, h = 0; h < this.m_count; ++h) {
var f = I.DotVV(this.m_normals[h], I.SubVV(this.m_vertices[h], s, I.s_t0)), _ = I.DotVV(this.m_normals[h], a);
if (0 === _) {
if (f < 0) return !1;
} else if (_ < 0 && f < c * _) {
c = f / _;
u = h;
} else _ > 0 && f < l * _ && (l = f / _);
if (l < c) return !1;
}
if (u >= 0) {
t.fraction = c;
N.MulRV(i.q, this.m_normals[u], t.normal);
return !0;
}
return !1;
};
r.prototype.ComputeAABB = function(t, e, i) {
for (var n = F.MulXV(e, this.m_vertices[0], t.lowerBound), s = t.upperBound.Copy(n), o = 0; o < this.m_count; ++o) {
var a = F.MulXV(e, this.m_vertices[o], r.ComputeAABB_s_v);
I.MinV(a, n, n);
I.MaxV(a, s, s);
}
var c = this.m_radius;
n.SelfSubXY(c, c);
s.SelfAddXY(c, c);
};
r.prototype.ComputeMass = function(t, e) {
for (var i = r.ComputeMass_s_center.SetZero(), n = 0, s = 0, o = r.ComputeMass_s_s.SetZero(), a = 0; a < this.m_count; ++a) o.SelfAdd(this.m_vertices[a]);
o.SelfMul(1 / this.m_count);
for (a = 0; a < this.m_count; ++a) {
var c = I.SubVV(this.m_vertices[a], o, r.ComputeMass_s_e1), l = I.SubVV(this.m_vertices[(a + 1) % this.m_count], o, r.ComputeMass_s_e2), u = I.CrossVV(c, l), h = .5 * u;
n += h;
i.SelfAdd(I.MulSV(h * (1 / 3), I.AddVV(c, l, I.s_t0), I.s_t1));
var f = c.x, _ = c.y, d = l.x, p = l.y;
s += 1 / 3 * .25 * u * (f * f + d * f + d * d + (_ * _ + p * _ + p * p));
}
t.mass = e * n;
i.SelfMul(1 / n);
I.AddVV(i, o, t.center);
t.I = e * s;
t.I += t.mass * (I.DotVV(t.center, t.center) - I.DotVV(i, i));
};
r.prototype.Validate = function() {
for (var t = 0; t < this.m_count; ++t) for (var e = t, i = (t + 1) % this.m_count, n = this.m_vertices[e], s = I.SubVV(this.m_vertices[i], n, r.Validate_s_e), o = 0; o < this.m_count; ++o) if (o !== e && o !== i) {
var a = I.SubVV(this.m_vertices[o], n, r.Validate_s_v);
if (I.CrossVV(s, a) < 0) return !1;
}
return !0;
};
r.prototype.SetupDistanceProxy = function(t, e) {
t.m_vertices = this.m_vertices;
t.m_count = this.m_count;
t.m_radius = this.m_radius;
};
r.prototype.ComputeSubmergedArea = function(t, e, i, s) {
for (var o = N.MulTRV(i.q, t, r.ComputeSubmergedArea_s_normalL), a = e - I.DotVV(t, i.p), c = r.ComputeSubmergedArea_s_depths, l = 0, u = -1, h = -1, f = !1, _ = 0; _ < this.m_count; ++_) {
c[_] = I.DotVV(o, this.m_vertices[_]) - a;
var d = c[_] < -n;
if (_ > 0) if (d) {
if (!f) {
u = _ - 1;
l++;
}
} else if (f) {
h = _ - 1;
l++;
}
f = d;
}
switch (l) {
case 0:
if (f) {
var p = r.ComputeSubmergedArea_s_md;
this.ComputeMass(p, 1);
F.MulXV(i, p.center, s);
return p.mass;
}
return 0;

case 1:
-1 === u ? u = this.m_count - 1 : h = this.m_count - 1;
}
for (var m, y = (u + 1) % this.m_count, v = (h + 1) % this.m_count, g = (0 - c[u]) / (c[y] - c[u]), b = (0 - c[h]) / (c[v] - c[h]), C = r.ComputeSubmergedArea_s_intoVec.Set(this.m_vertices[u].x * (1 - g) + this.m_vertices[y].x * g, this.m_vertices[u].y * (1 - g) + this.m_vertices[y].y * g), x = r.ComputeSubmergedArea_s_outoVec.Set(this.m_vertices[h].x * (1 - b) + this.m_vertices[v].x * b, this.m_vertices[h].y * (1 - b) + this.m_vertices[v].y * b), A = 0, S = r.ComputeSubmergedArea_s_center.SetZero(), w = this.m_vertices[y], T = y; T !== v; ) {
m = (T = (T + 1) % this.m_count) === v ? x : this.m_vertices[T];
var E = .5 * ((w.x - C.x) * (m.y - C.y) - (w.y - C.y) * (m.x - C.x));
A += E;
S.x += E * (C.x + w.x + m.x) / 3;
S.y += E * (C.y + w.y + m.y) / 3;
w = m;
}
S.SelfMul(1 / A);
F.MulXV(i, S, s);
return A;
};
r.prototype.Dump = function(t) {
t("    const shape: b2PolygonShape = new b2PolygonShape();\n");
t("    const vs: b2Vec2[] = b2Vec2.MakeArray(%d);\n", a);
for (var e = 0; e < this.m_count; ++e) t("    vs[%d].Set(%.15f, %.15f);\n", e, this.m_vertices[e].x, this.m_vertices[e].y);
t("    shape.Set(vs, %d);\n", this.m_count);
};
r.ComputeCentroid = function(t, e, i) {
var n = i;
n.SetZero();
for (var s = 0, o = r.ComputeCentroid_s_pRef.SetZero(), a = 0; a < e; ++a) {
var c = o, l = t[a], u = t[(a + 1) % e], h = I.SubVV(l, c, r.ComputeCentroid_s_e1), f = I.SubVV(u, c, r.ComputeCentroid_s_e2), _ = .5 * I.CrossVV(h, f);
s += _;
n.x += _ * (1 / 3) * (c.x + l.x + u.x);
n.y += _ * (1 / 3) * (c.y + l.y + u.y);
}
n.SelfMul(1 / s);
return n;
};
r.Set_s_ps = I.MakeArray(a);
r.Set_s_hull = p(a);
r.Set_s_r = new I();
r.Set_s_v = new I();
r.TestPoint_s_pLocal = new I();
r.ComputeDistance_s_pLocal = new I();
r.ComputeDistance_s_normalForMaxDistance = new I();
r.ComputeDistance_s_minDistance = new I();
r.ComputeDistance_s_distance = new I();
r.RayCast_s_p1 = new I();
r.RayCast_s_p2 = new I();
r.RayCast_s_d = new I();
r.ComputeAABB_s_v = new I();
r.ComputeMass_s_center = new I();
r.ComputeMass_s_s = new I();
r.ComputeMass_s_e1 = new I();
r.ComputeMass_s_e2 = new I();
r.Validate_s_e = new I();
r.Validate_s_v = new I();
r.ComputeSubmergedArea_s_normalL = new I();
r.ComputeSubmergedArea_s_depths = p(a);
r.ComputeSubmergedArea_s_md = new Ze();
r.ComputeSubmergedArea_s_intoVec = new I();
r.ComputeSubmergedArea_s_outoVec = new I();
r.ComputeSubmergedArea_s_center = new I();
r.ComputeCentroid_s_pRef = new I();
r.ComputeCentroid_s_e1 = new I();
r.ComputeCentroid_s_e2 = new I();
return r;
})(Ke), ii = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2ShapeType.e_edgeShape, u) || this;
i.m_vertex1 = new I();
i.m_vertex2 = new I();
i.m_vertex0 = new I();
i.m_vertex3 = new I();
i.m_hasVertex0 = !1;
i.m_hasVertex3 = !1;
return i;
}
i.prototype.Set = function(t, e) {
this.m_vertex1.Copy(t);
this.m_vertex2.Copy(e);
this.m_hasVertex0 = !1;
this.m_hasVertex3 = !1;
return this;
};
i.prototype.Clone = function() {
return new i().Copy(this);
};
i.prototype.Copy = function(t) {
e.prototype.Copy.call(this, t);
this.m_vertex1.Copy(t.m_vertex1);
this.m_vertex2.Copy(t.m_vertex2);
this.m_vertex0.Copy(t.m_vertex0);
this.m_vertex3.Copy(t.m_vertex3);
this.m_hasVertex0 = t.m_hasVertex0;
this.m_hasVertex3 = t.m_hasVertex3;
return this;
};
i.prototype.GetChildCount = function() {
return 1;
};
i.prototype.TestPoint = function(t, e) {
return !1;
};
i.prototype.ComputeDistance = function(t, e, n, r) {
var s = F.MulXV(t, this.m_vertex1, i.ComputeDistance_s_v1), o = F.MulXV(t, this.m_vertex2, i.ComputeDistance_s_v2), a = I.SubVV(e, s, i.ComputeDistance_s_d), c = I.SubVV(o, s, i.ComputeDistance_s_s), l = I.DotVV(a, c);
if (l > 0) {
var u = I.DotVV(c, c);
l > u ? I.SubVV(e, o, a) : a.SelfMulSub(l / u, c);
}
n.Copy(a);
return n.Normalize();
};
i.prototype.RayCast = function(t, e, n, r) {
var s = F.MulTXV(n, e.p1, i.RayCast_s_p1), o = F.MulTXV(n, e.p2, i.RayCast_s_p2), a = I.SubVV(o, s, i.RayCast_s_d), c = this.m_vertex1, l = this.m_vertex2, u = I.SubVV(l, c, i.RayCast_s_e), h = t.normal.Set(u.y, -u.x).SelfNormalize(), f = I.DotVV(h, I.SubVV(c, s, I.s_t0)), _ = I.DotVV(h, a);
if (0 === _) return !1;
var d = f / _;
if (d < 0 || e.maxFraction < d) return !1;
var p = I.AddVMulSV(s, d, a, i.RayCast_s_q), m = I.SubVV(l, c, i.RayCast_s_r), y = I.DotVV(m, m);
if (0 === y) return !1;
var v = I.DotVV(I.SubVV(p, c, I.s_t0), m) / y;
if (v < 0 || 1 < v) return !1;
t.fraction = d;
N.MulRV(n.q, t.normal, t.normal);
f > 0 && t.normal.SelfNeg();
return !0;
};
i.prototype.ComputeAABB = function(t, e, n) {
var r = F.MulXV(e, this.m_vertex1, i.ComputeAABB_s_v1), s = F.MulXV(e, this.m_vertex2, i.ComputeAABB_s_v2);
I.MinV(r, s, t.lowerBound);
I.MaxV(r, s, t.upperBound);
var o = this.m_radius;
t.lowerBound.SelfSubXY(o, o);
t.upperBound.SelfAddXY(o, o);
};
i.prototype.ComputeMass = function(t, e) {
t.mass = 0;
I.MidVV(this.m_vertex1, this.m_vertex2, t.center);
t.I = 0;
};
i.prototype.SetupDistanceProxy = function(t, e) {
t.m_vertices = t.m_buffer;
t.m_vertices[0].Copy(this.m_vertex1);
t.m_vertices[1].Copy(this.m_vertex2);
t.m_count = 2;
t.m_radius = this.m_radius;
};
i.prototype.ComputeSubmergedArea = function(t, e, i, n) {
n.SetZero();
return 0;
};
i.prototype.Dump = function(t) {
t("    const shape: b2EdgeShape = new b2EdgeShape();\n");
t("    shape.m_radius = %.15f;\n", this.m_radius);
t("    shape.m_vertex0.Set(%.15f, %.15f);\n", this.m_vertex0.x, this.m_vertex0.y);
t("    shape.m_vertex1.Set(%.15f, %.15f);\n", this.m_vertex1.x, this.m_vertex1.y);
t("    shape.m_vertex2.Set(%.15f, %.15f);\n", this.m_vertex2.x, this.m_vertex2.y);
t("    shape.m_vertex3.Set(%.15f, %.15f);\n", this.m_vertex3.x, this.m_vertex3.y);
t("    shape.m_hasVertex0 = %s;\n", this.m_hasVertex0);
t("    shape.m_hasVertex3 = %s;\n", this.m_hasVertex3);
};
i.ComputeDistance_s_v1 = new I();
i.ComputeDistance_s_v2 = new I();
i.ComputeDistance_s_d = new I();
i.ComputeDistance_s_s = new I();
i.RayCast_s_p1 = new I();
i.RayCast_s_p2 = new I();
i.RayCast_s_d = new I();
i.RayCast_s_e = new I();
i.RayCast_s_q = new I();
i.RayCast_s_r = new I();
i.ComputeAABB_s_v1 = new I();
i.ComputeAABB_s_v2 = new I();
return i;
})(Ke), ni = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2ShapeType.e_chainShape, u) || this;
i.m_vertices = [];
i.m_count = 0;
i.m_prevVertex = new I();
i.m_nextVertex = new I();
i.m_hasPrevVertex = !1;
i.m_hasNextVertex = !1;
return i;
}
i.prototype.CreateLoop = function(t, e, i) {
void 0 === e && (e = t.length);
void 0 === i && (i = 0);
if (e < 3) return this;
this.m_count = e + 1;
this.m_vertices = I.MakeArray(this.m_count);
for (var n = 0; n < e; ++n) this.m_vertices[n].Copy(t[i + n]);
this.m_vertices[e].Copy(this.m_vertices[0]);
this.m_prevVertex.Copy(this.m_vertices[this.m_count - 2]);
this.m_nextVertex.Copy(this.m_vertices[1]);
this.m_hasPrevVertex = !0;
this.m_hasNextVertex = !0;
return this;
};
i.prototype.CreateChain = function(t, e, i) {
void 0 === e && (e = t.length);
void 0 === i && (i = 0);
this.m_count = e;
this.m_vertices = I.MakeArray(e);
for (var n = 0; n < e; ++n) this.m_vertices[n].Copy(t[i + n]);
this.m_hasPrevVertex = !1;
this.m_hasNextVertex = !1;
this.m_prevVertex.SetZero();
this.m_nextVertex.SetZero();
return this;
};
i.prototype.SetPrevVertex = function(t) {
this.m_prevVertex.Copy(t);
this.m_hasPrevVertex = !0;
return this;
};
i.prototype.SetNextVertex = function(t) {
this.m_nextVertex.Copy(t);
this.m_hasNextVertex = !0;
return this;
};
i.prototype.Clone = function() {
return new i().Copy(this);
};
i.prototype.Copy = function(t) {
e.prototype.Copy.call(this, t);
this.CreateChain(t.m_vertices, t.m_count);
this.m_prevVertex.Copy(t.m_prevVertex);
this.m_nextVertex.Copy(t.m_nextVertex);
this.m_hasPrevVertex = t.m_hasPrevVertex;
this.m_hasNextVertex = t.m_hasNextVertex;
return this;
};
i.prototype.GetChildCount = function() {
return this.m_count - 1;
};
i.prototype.GetChildEdge = function(e, i) {
e.m_type = t.b2ShapeType.e_edgeShape;
e.m_radius = this.m_radius;
e.m_vertex1.Copy(this.m_vertices[i]);
e.m_vertex2.Copy(this.m_vertices[i + 1]);
if (i > 0) {
e.m_vertex0.Copy(this.m_vertices[i - 1]);
e.m_hasVertex0 = !0;
} else {
e.m_vertex0.Copy(this.m_prevVertex);
e.m_hasVertex0 = this.m_hasPrevVertex;
}
if (i < this.m_count - 2) {
e.m_vertex3.Copy(this.m_vertices[i + 2]);
e.m_hasVertex3 = !0;
} else {
e.m_vertex3.Copy(this.m_nextVertex);
e.m_hasVertex3 = this.m_hasNextVertex;
}
};
i.prototype.TestPoint = function(t, e) {
return !1;
};
i.prototype.ComputeDistance = function(t, e, n, r) {
var s = i.ComputeDistance_s_edgeShape;
this.GetChildEdge(s, r);
return s.ComputeDistance(t, e, n, 0);
};
i.prototype.RayCast = function(t, e, n, r) {
var s = i.RayCast_s_edgeShape;
s.m_vertex1.Copy(this.m_vertices[r]);
s.m_vertex2.Copy(this.m_vertices[(r + 1) % this.m_count]);
return s.RayCast(t, e, n, 0);
};
i.prototype.ComputeAABB = function(t, e, n) {
var r = this.m_vertices[n], s = this.m_vertices[(n + 1) % this.m_count], o = F.MulXV(e, r, i.ComputeAABB_s_v1), a = F.MulXV(e, s, i.ComputeAABB_s_v2);
I.MinV(o, a, t.lowerBound);
I.MaxV(o, a, t.upperBound);
};
i.prototype.ComputeMass = function(t, e) {
t.mass = 0;
t.center.SetZero();
t.I = 0;
};
i.prototype.SetupDistanceProxy = function(t, e) {
t.m_vertices = t.m_buffer;
t.m_vertices[0].Copy(this.m_vertices[e]);
e + 1 < this.m_count ? t.m_vertices[1].Copy(this.m_vertices[e + 1]) : t.m_vertices[1].Copy(this.m_vertices[0]);
t.m_count = 2;
t.m_radius = this.m_radius;
};
i.prototype.ComputeSubmergedArea = function(t, e, i, n) {
n.SetZero();
return 0;
};
i.prototype.Dump = function(t) {
t("    const shape: b2ChainShape = new b2ChainShape();\n");
t("    const vs: b2Vec2[] = b2Vec2.MakeArray(%d);\n", a);
for (var e = 0; e < this.m_count; ++e) t("    vs[%d].Set(%.15f, %.15f);\n", e, this.m_vertices[e].x, this.m_vertices[e].y);
t("    shape.CreateChain(vs, %d);\n", this.m_count);
t("    shape.m_prevVertex.Set(%.15f, %.15f);\n", this.m_prevVertex.x, this.m_prevVertex.y);
t("    shape.m_nextVertex.Set(%.15f, %.15f);\n", this.m_nextVertex.x, this.m_nextVertex.y);
t("    shape.m_hasPrevVertex = %s;\n", this.m_hasPrevVertex ? "true" : "false");
t("    shape.m_hasNextVertex = %s;\n", this.m_hasNextVertex ? "true" : "false");
};
i.ComputeDistance_s_edgeShape = new ii();
i.RayCast_s_edgeShape = new ii();
i.ComputeAABB_s_v1 = new I();
i.ComputeAABB_s_v2 = new I();
return i;
})(Ke), ri = (function() {
function t() {
this.categoryBits = 1;
this.maskBits = 65535;
this.groupIndex = 0;
}
t.prototype.Clone = function() {
return new t().Copy(this);
};
t.prototype.Copy = function(t) {
this.categoryBits = t.categoryBits;
this.maskBits = t.maskBits;
this.groupIndex = t.groupIndex || 0;
return this;
};
t.DEFAULT = new t();
return t;
})(), si = (function() {
return function() {
this.userData = null;
this.friction = .2;
this.restitution = 0;
this.density = 0;
this.isSensor = !1;
this.filter = new ri();
};
})(), oi = (function() {
return function(t) {
this.aabb = new Tt();
this.childIndex = 0;
this.fixture = t;
};
})(), ai = (function() {
function t(t, e) {
this.m_density = 0;
this.m_next = null;
this.m_friction = 0;
this.m_restitution = 0;
this.m_proxies = [];
this.m_proxyCount = 0;
this.m_filter = new ri();
this.m_isSensor = !1;
this.m_userData = null;
this.m_body = e;
this.m_shape = t.shape.Clone();
}
t.prototype.GetType = function() {
return this.m_shape.GetType();
};
t.prototype.GetShape = function() {
return this.m_shape;
};
t.prototype.SetSensor = function(t) {
if (t !== this.m_isSensor) {
this.m_body.SetAwake(!0);
this.m_isSensor = t;
}
};
t.prototype.IsSensor = function() {
return this.m_isSensor;
};
t.prototype.SetFilterData = function(t) {
this.m_filter.Copy(t);
this.Refilter();
};
t.prototype.GetFilterData = function() {
return this.m_filter;
};
t.prototype.Refilter = function() {
for (var t = this.m_body.GetContactList(); t; ) {
var e = t.contact, i = e.GetFixtureA(), n = e.GetFixtureB();
i !== this && n !== this || e.FlagForFiltering();
t = t.next;
}
var r = this.m_body.GetWorld();
if (null !== r) for (var s = r.m_contactManager.m_broadPhase, o = 0; o < this.m_proxyCount; ++o) s.TouchProxy(this.m_proxies[o].treeNode);
};
t.prototype.GetBody = function() {
return this.m_body;
};
t.prototype.GetNext = function() {
return this.m_next;
};
t.prototype.GetUserData = function() {
return this.m_userData;
};
t.prototype.SetUserData = function(t) {
this.m_userData = t;
};
t.prototype.TestPoint = function(t) {
return this.m_shape.TestPoint(this.m_body.GetTransform(), t);
};
t.prototype.ComputeDistance = function(t, e, i) {
return this.m_shape.ComputeDistance(this.m_body.GetTransform(), t, e, i);
};
t.prototype.RayCast = function(t, e, i) {
return this.m_shape.RayCast(t, e, this.m_body.GetTransform(), i);
};
t.prototype.GetMassData = function(t) {
void 0 === t && (t = new Ze());
this.m_shape.ComputeMass(t, this.m_density);
return t;
};
t.prototype.SetDensity = function(t) {
this.m_density = t;
};
t.prototype.GetDensity = function() {
return this.m_density;
};
t.prototype.GetFriction = function() {
return this.m_friction;
};
t.prototype.SetFriction = function(t) {
this.m_friction = t;
};
t.prototype.GetRestitution = function() {
return this.m_restitution;
};
t.prototype.SetRestitution = function(t) {
this.m_restitution = t;
};
t.prototype.GetAABB = function(t) {
return this.m_proxies[t].aabb;
};
t.prototype.Dump = function(t, e) {
t("    const fd: b2FixtureDef = new b2FixtureDef();\n");
t("    fd.friction = %.15f;\n", this.m_friction);
t("    fd.restitution = %.15f;\n", this.m_restitution);
t("    fd.density = %.15f;\n", this.m_density);
t("    fd.isSensor = %s;\n", this.m_isSensor ? "true" : "false");
t("    fd.filter.categoryBits = %d;\n", this.m_filter.categoryBits);
t("    fd.filter.maskBits = %d;\n", this.m_filter.maskBits);
t("    fd.filter.groupIndex = %d;\n", this.m_filter.groupIndex);
this.m_shape.Dump(t);
t("\n");
t("    fd.shape = shape;\n");
t("\n");
t("    bodies[%d].CreateFixture(fd);\n", e);
};
t.prototype.Create = function(t) {
var i = this;
this.m_userData = t.userData;
this.m_friction = e(t.friction, .2);
this.m_restitution = e(t.restitution, 0);
this.m_next = null;
this.m_filter.Copy(e(t.filter, ri.DEFAULT));
this.m_isSensor = e(t.isSensor, !1);
this.m_proxies = d(this.m_shape.GetChildCount(), (function(t) {
return new oi(i);
}));
this.m_proxyCount = 0;
this.m_density = e(t.density, 0);
};
t.prototype.Destroy = function() {};
t.prototype.CreateProxies = function(t) {
var e = this.m_body.m_world.m_contactManager.m_broadPhase;
this.m_proxyCount = this.m_shape.GetChildCount();
for (var i = 0; i < this.m_proxyCount; ++i) {
var n = this.m_proxies[i] = new oi(this);
this.m_shape.ComputeAABB(n.aabb, t, i);
n.treeNode = e.CreateProxy(n.aabb, n);
n.childIndex = i;
}
};
t.prototype.DestroyProxies = function() {
for (var t = this.m_body.m_world.m_contactManager.m_broadPhase, e = 0; e < this.m_proxyCount; ++e) {
var i = this.m_proxies[e];
delete i.treeNode.userData;
t.DestroyProxy(i.treeNode);
delete i.treeNode;
}
this.m_proxyCount = 0;
};
t.prototype.TouchProxies = function() {
for (var t = this.m_body.m_world.m_contactManager.m_broadPhase, e = this.m_proxyCount, i = 0; i < e; ++i) t.TouchProxy(this.m_proxies[i].treeNode);
};
t.prototype.Synchronize = function(e, i) {
if (0 !== this.m_proxyCount) for (var n = this.m_body.m_world.m_contactManager.m_broadPhase, r = 0; r < this.m_proxyCount; ++r) {
var s = this.m_proxies[r], o = t.Synchronize_s_aabb1, a = t.Synchronize_s_aabb2;
this.m_shape.ComputeAABB(o, e, r);
this.m_shape.ComputeAABB(a, i, r);
s.aabb.Combine2(o, a);
var c = I.SubVV(i.p, e.p, t.Synchronize_s_displacement);
n.MoveProxy(s.treeNode, s.aabb, c);
}
};
t.Synchronize_s_aabb1 = new Tt();
t.Synchronize_s_aabb2 = new Tt();
t.Synchronize_s_displacement = new I();
return t;
})();
(function(t) {
t[t.b2_unknown = -1] = "b2_unknown";
t[t.b2_staticBody = 0] = "b2_staticBody";
t[t.b2_kinematicBody = 1] = "b2_kinematicBody";
t[t.b2_dynamicBody = 2] = "b2_dynamicBody";
})(t.b2BodyType || (t.b2BodyType = {}));
var ci = (function() {
return function() {
this.type = t.b2BodyType.b2_staticBody;
this.position = new I(0, 0);
this.angle = 0;
this.linearVelocity = new I(0, 0);
this.angularVelocity = 0;
this.linearDamping = 0;
this.angularDamping = 0;
this.allowSleep = !0;
this.awake = !0;
this.fixedRotation = !1;
this.bullet = !1;
this.active = !0;
this.userData = null;
this.gravityScale = 1;
};
})(), li = (function() {
function i(i, n) {
this.m_type = t.b2BodyType.b2_staticBody;
this.m_islandFlag = !1;
this.m_awakeFlag = !1;
this.m_autoSleepFlag = !1;
this.m_bulletFlag = !1;
this.m_fixedRotationFlag = !1;
this.m_activeFlag = !1;
this.m_toiFlag = !1;
this.m_islandIndex = 0;
this.m_xf = new F();
this.m_xf0 = new F();
this.m_sweep = new z();
this.m_linearVelocity = new I();
this.m_angularVelocity = 0;
this.m_force = new I();
this.m_torque = 0;
this.m_prev = null;
this.m_next = null;
this.m_fixtureList = null;
this.m_fixtureCount = 0;
this.m_jointList = null;
this.m_contactList = null;
this.m_mass = 1;
this.m_invMass = 1;
this.m_I = 0;
this.m_invI = 0;
this.m_linearDamping = 0;
this.m_angularDamping = 0;
this.m_gravityScale = 1;
this.m_sleepTime = 0;
this.m_userData = null;
this.m_controllerList = null;
this.m_controllerCount = 0;
this.m_bulletFlag = e(i.bullet, !1);
this.m_fixedRotationFlag = e(i.fixedRotation, !1);
this.m_autoSleepFlag = e(i.allowSleep, !0);
this.m_awakeFlag = e(i.awake, !0);
this.m_activeFlag = e(i.active, !0);
this.m_world = n;
this.m_xf.p.Copy(e(i.position, I.ZERO));
this.m_xf.q.SetAngle(e(i.angle, 0));
this.m_xf0.Copy(this.m_xf);
this.m_sweep.localCenter.SetZero();
this.m_sweep.c0.Copy(this.m_xf.p);
this.m_sweep.c.Copy(this.m_xf.p);
this.m_sweep.a0 = this.m_sweep.a = this.m_xf.q.GetAngle();
this.m_sweep.alpha0 = 0;
this.m_linearVelocity.Copy(e(i.linearVelocity, I.ZERO));
this.m_angularVelocity = e(i.angularVelocity, 0);
this.m_linearDamping = e(i.linearDamping, 0);
this.m_angularDamping = e(i.angularDamping, 0);
this.m_gravityScale = e(i.gravityScale, 1);
this.m_force.SetZero();
this.m_torque = 0;
this.m_sleepTime = 0;
this.m_type = e(i.type, t.b2BodyType.b2_staticBody);
if (i.type === t.b2BodyType.b2_dynamicBody) {
this.m_mass = 1;
this.m_invMass = 1;
} else {
this.m_mass = 0;
this.m_invMass = 0;
}
this.m_I = 0;
this.m_invI = 0;
this.m_userData = i.userData;
this.m_fixtureList = null;
this.m_fixtureCount = 0;
this.m_controllerList = null;
this.m_controllerCount = 0;
}
i.prototype.CreateFixture = function(t, e) {
void 0 === e && (e = 0);
return t instanceof Ke ? this.CreateFixtureShapeDensity(t, e) : this.CreateFixtureDef(t);
};
i.prototype.CreateFixtureDef = function(t) {
if (this.m_world.IsLocked()) throw new Error();
var e = new ai(t, this);
e.Create(t);
this.m_activeFlag && e.CreateProxies(this.m_xf);
e.m_next = this.m_fixtureList;
this.m_fixtureList = e;
++this.m_fixtureCount;
e.m_density > 0 && this.ResetMassData();
this.m_world.m_newFixture = !0;
return e;
};
i.prototype.CreateFixtureShapeDensity = function(t, e) {
void 0 === e && (e = 0);
var n = i.CreateFixtureShapeDensity_s_def;
n.shape = t;
n.density = e;
return this.CreateFixtureDef(n);
};
i.prototype.DestroyFixture = function(t) {
if (this.m_world.IsLocked()) throw new Error();
for (var e = this.m_fixtureList, i = null; null !== e; ) {
if (e === t) {
i ? i.m_next = t.m_next : this.m_fixtureList = t.m_next;
break;
}
i = e;
e = e.m_next;
}
for (var n = this.m_contactList; n; ) {
var r = n.contact;
n = n.next;
var s = r.GetFixtureA(), o = r.GetFixtureB();
t !== s && t !== o || this.m_world.m_contactManager.Destroy(r);
}
this.m_activeFlag && t.DestroyProxies();
t.m_next = null;
t.Destroy();
--this.m_fixtureCount;
this.ResetMassData();
};
i.prototype.SetTransformVec = function(t, e) {
this.SetTransformXY(t.x, t.y, e);
};
i.prototype.SetTransformXY = function(t, e, i) {
if (this.m_world.IsLocked()) throw new Error();
this.m_xf.q.SetAngle(i);
this.m_xf.p.Set(t, e);
this.m_xf0.Copy(this.m_xf);
F.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);
this.m_sweep.a = i;
this.m_sweep.c0.Copy(this.m_sweep.c);
this.m_sweep.a0 = i;
for (var n = this.m_fixtureList; n; n = n.m_next) n.Synchronize(this.m_xf, this.m_xf);
this.m_world.m_contactManager.FindNewContacts();
};
i.prototype.SetTransform = function(t) {
this.SetTransformVec(t.p, t.GetAngle());
};
i.prototype.GetTransform = function() {
return this.m_xf;
};
i.prototype.GetPosition = function() {
return this.m_xf.p;
};
i.prototype.SetPosition = function(t) {
this.SetTransformVec(t, this.GetAngle());
};
i.prototype.SetPositionXY = function(t, e) {
this.SetTransformXY(t, e, this.GetAngle());
};
i.prototype.GetAngle = function() {
return this.m_sweep.a;
};
i.prototype.SetAngle = function(t) {
this.SetTransformVec(this.GetPosition(), t);
};
i.prototype.GetWorldCenter = function() {
return this.m_sweep.c;
};
i.prototype.GetLocalCenter = function() {
return this.m_sweep.localCenter;
};
i.prototype.SetLinearVelocity = function(e) {
if (this.m_type !== t.b2BodyType.b2_staticBody) {
I.DotVV(e, e) > 0 && this.SetAwake(!0);
this.m_linearVelocity.Copy(e);
}
};
i.prototype.GetLinearVelocity = function() {
return this.m_linearVelocity;
};
i.prototype.SetAngularVelocity = function(e) {
if (this.m_type !== t.b2BodyType.b2_staticBody) {
e * e > 0 && this.SetAwake(!0);
this.m_angularVelocity = e;
}
};
i.prototype.GetAngularVelocity = function() {
return this.m_angularVelocity;
};
i.prototype.GetDefinition = function(t) {
t.type = this.GetType();
t.allowSleep = this.m_autoSleepFlag;
t.angle = this.GetAngle();
t.angularDamping = this.m_angularDamping;
t.gravityScale = this.m_gravityScale;
t.angularVelocity = this.m_angularVelocity;
t.fixedRotation = this.m_fixedRotationFlag;
t.bullet = this.m_bulletFlag;
t.awake = this.m_awakeFlag;
t.linearDamping = this.m_linearDamping;
t.linearVelocity.Copy(this.GetLinearVelocity());
t.position.Copy(this.GetPosition());
t.userData = this.GetUserData();
return t;
};
i.prototype.ApplyForce = function(e, i, n) {
void 0 === n && (n = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
n && !this.m_awakeFlag && this.SetAwake(!0);
if (this.m_awakeFlag) {
this.m_force.x += e.x;
this.m_force.y += e.y;
this.m_torque += (i.x - this.m_sweep.c.x) * e.y - (i.y - this.m_sweep.c.y) * e.x;
}
}
};
i.prototype.ApplyForceToCenter = function(e, i) {
void 0 === i && (i = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
i && !this.m_awakeFlag && this.SetAwake(!0);
if (this.m_awakeFlag) {
this.m_force.x += e.x;
this.m_force.y += e.y;
}
}
};
i.prototype.ApplyTorque = function(e, i) {
void 0 === i && (i = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
i && !this.m_awakeFlag && this.SetAwake(!0);
this.m_awakeFlag && (this.m_torque += e);
}
};
i.prototype.ApplyLinearImpulse = function(e, i, n) {
void 0 === n && (n = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
n && !this.m_awakeFlag && this.SetAwake(!0);
if (this.m_awakeFlag) {
this.m_linearVelocity.x += this.m_invMass * e.x;
this.m_linearVelocity.y += this.m_invMass * e.y;
this.m_angularVelocity += this.m_invI * ((i.x - this.m_sweep.c.x) * e.y - (i.y - this.m_sweep.c.y) * e.x);
}
}
};
i.prototype.ApplyLinearImpulseToCenter = function(e, i) {
void 0 === i && (i = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
i && !this.m_awakeFlag && this.SetAwake(!0);
if (this.m_awakeFlag) {
this.m_linearVelocity.x += this.m_invMass * e.x;
this.m_linearVelocity.y += this.m_invMass * e.y;
}
}
};
i.prototype.ApplyAngularImpulse = function(e, i) {
void 0 === i && (i = !0);
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
i && !this.m_awakeFlag && this.SetAwake(!0);
this.m_awakeFlag && (this.m_angularVelocity += this.m_invI * e);
}
};
i.prototype.GetMass = function() {
return this.m_mass;
};
i.prototype.GetInertia = function() {
return this.m_I + this.m_mass * I.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);
};
i.prototype.GetMassData = function(t) {
t.mass = this.m_mass;
t.I = this.m_I + this.m_mass * I.DotVV(this.m_sweep.localCenter, this.m_sweep.localCenter);
t.center.Copy(this.m_sweep.localCenter);
return t;
};
i.prototype.SetMassData = function(e) {
if (this.m_world.IsLocked()) throw new Error();
if (this.m_type === t.b2BodyType.b2_dynamicBody) {
this.m_invMass = 0;
this.m_I = 0;
this.m_invI = 0;
this.m_mass = e.mass;
this.m_mass <= 0 && (this.m_mass = 1);
this.m_invMass = 1 / this.m_mass;
if (e.I > 0 && !this.m_fixedRotationFlag) {
this.m_I = e.I - this.m_mass * I.DotVV(e.center, e.center);
this.m_invI = 1 / this.m_I;
}
var n = i.SetMassData_s_oldCenter.Copy(this.m_sweep.c);
this.m_sweep.localCenter.Copy(e.center);
F.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);
this.m_sweep.c0.Copy(this.m_sweep.c);
I.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, I.SubVV(this.m_sweep.c, n, I.s_t0), this.m_linearVelocity);
}
};
i.prototype.ResetMassData = function() {
this.m_mass = 0;
this.m_invMass = 0;
this.m_I = 0;
this.m_invI = 0;
this.m_sweep.localCenter.SetZero();
if (this.m_type !== t.b2BodyType.b2_staticBody && this.m_type !== t.b2BodyType.b2_kinematicBody) {
for (var e = i.ResetMassData_s_localCenter.SetZero(), n = this.m_fixtureList; n; n = n.m_next) if (0 !== n.m_density) {
var r = n.GetMassData(i.ResetMassData_s_massData);
this.m_mass += r.mass;
e.x += r.center.x * r.mass;
e.y += r.center.y * r.mass;
this.m_I += r.I;
}
if (this.m_mass > 0) {
this.m_invMass = 1 / this.m_mass;
e.x *= this.m_invMass;
e.y *= this.m_invMass;
} else {
this.m_mass = 1;
this.m_invMass = 1;
}
if (this.m_I > 0 && !this.m_fixedRotationFlag) {
this.m_I -= this.m_mass * I.DotVV(e, e);
this.m_invI = 1 / this.m_I;
} else {
this.m_I = 0;
this.m_invI = 0;
}
var s = i.ResetMassData_s_oldCenter.Copy(this.m_sweep.c);
this.m_sweep.localCenter.Copy(e);
F.MulXV(this.m_xf, this.m_sweep.localCenter, this.m_sweep.c);
this.m_sweep.c0.Copy(this.m_sweep.c);
I.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, I.SubVV(this.m_sweep.c, s, I.s_t0), this.m_linearVelocity);
} else {
this.m_sweep.c0.Copy(this.m_xf.p);
this.m_sweep.c.Copy(this.m_xf.p);
this.m_sweep.a0 = this.m_sweep.a;
}
};
i.prototype.GetWorldPoint = function(t, e) {
return F.MulXV(this.m_xf, t, e);
};
i.prototype.GetWorldVector = function(t, e) {
return N.MulRV(this.m_xf.q, t, e);
};
i.prototype.GetLocalPoint = function(t, e) {
return F.MulTXV(this.m_xf, t, e);
};
i.prototype.GetLocalVector = function(t, e) {
return N.MulTRV(this.m_xf.q, t, e);
};
i.prototype.GetLinearVelocityFromWorldPoint = function(t, e) {
return I.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, I.SubVV(t, this.m_sweep.c, I.s_t0), e);
};
i.prototype.GetLinearVelocityFromLocalPoint = function(t, e) {
return this.GetLinearVelocityFromWorldPoint(this.GetWorldPoint(t, e), e);
};
i.prototype.GetLinearDamping = function() {
return this.m_linearDamping;
};
i.prototype.SetLinearDamping = function(t) {
this.m_linearDamping = t;
};
i.prototype.GetAngularDamping = function() {
return this.m_angularDamping;
};
i.prototype.SetAngularDamping = function(t) {
this.m_angularDamping = t;
};
i.prototype.GetGravityScale = function() {
return this.m_gravityScale;
};
i.prototype.SetGravityScale = function(t) {
this.m_gravityScale = t;
};
i.prototype.SetType = function(e) {
if (this.m_world.IsLocked()) throw new Error();
if (this.m_type !== e) {
this.m_type = e;
this.ResetMassData();
if (this.m_type === t.b2BodyType.b2_staticBody) {
this.m_linearVelocity.SetZero();
this.m_angularVelocity = 0;
this.m_sweep.a0 = this.m_sweep.a;
this.m_sweep.c0.Copy(this.m_sweep.c);
this.SynchronizeFixtures();
}
this.SetAwake(!0);
this.m_force.SetZero();
this.m_torque = 0;
for (var i = this.m_contactList; i; ) {
var n = i;
i = i.next;
this.m_world.m_contactManager.Destroy(n.contact);
}
this.m_contactList = null;
for (var r = this.m_fixtureList; r; r = r.m_next) r.TouchProxies();
}
};
i.prototype.GetType = function() {
return this.m_type;
};
i.prototype.SetBullet = function(t) {
this.m_bulletFlag = t;
};
i.prototype.IsBullet = function() {
return this.m_bulletFlag;
};
i.prototype.SetSleepingAllowed = function(t) {
this.m_autoSleepFlag = t;
t || this.SetAwake(!0);
};
i.prototype.IsSleepingAllowed = function() {
return this.m_autoSleepFlag;
};
i.prototype.SetAwake = function(t) {
if (t) {
this.m_awakeFlag = !0;
this.m_sleepTime = 0;
} else {
this.m_awakeFlag = !1;
this.m_sleepTime = 0;
this.m_linearVelocity.SetZero();
this.m_angularVelocity = 0;
this.m_force.SetZero();
this.m_torque = 0;
}
};
i.prototype.IsAwake = function() {
return this.m_awakeFlag;
};
i.prototype.SetActive = function(t) {
if (this.m_world.IsLocked()) throw new Error();
if (t !== this.IsActive()) {
this.m_activeFlag = t;
if (t) for (var e = this.m_fixtureList; e; e = e.m_next) e.CreateProxies(this.m_xf); else {
for (e = this.m_fixtureList; e; e = e.m_next) e.DestroyProxies();
for (var i = this.m_contactList; i; ) {
var n = i;
i = i.next;
this.m_world.m_contactManager.Destroy(n.contact);
}
this.m_contactList = null;
}
}
};
i.prototype.IsActive = function() {
return this.m_activeFlag;
};
i.prototype.SetFixedRotation = function(t) {
if (this.m_fixedRotationFlag !== t) {
this.m_fixedRotationFlag = t;
this.m_angularVelocity = 0;
this.ResetMassData();
}
};
i.prototype.IsFixedRotation = function() {
return this.m_fixedRotationFlag;
};
i.prototype.GetFixtureList = function() {
return this.m_fixtureList;
};
i.prototype.GetJointList = function() {
return this.m_jointList;
};
i.prototype.GetContactList = function() {
return this.m_contactList;
};
i.prototype.GetNext = function() {
return this.m_next;
};
i.prototype.GetUserData = function() {
return this.m_userData;
};
i.prototype.SetUserData = function(t) {
this.m_userData = t;
};
i.prototype.GetWorld = function() {
return this.m_world;
};
i.prototype.Dump = function(e) {
var i = this.m_islandIndex;
e("{\n");
e("  const bd: b2BodyDef = new b2BodyDef();\n");
var n = "";
switch (this.m_type) {
case t.b2BodyType.b2_staticBody:
n = "b2BodyType.b2_staticBody";
break;

case t.b2BodyType.b2_kinematicBody:
n = "b2BodyType.b2_kinematicBody";
break;

case t.b2BodyType.b2_dynamicBody:
n = "b2BodyType.b2_dynamicBody";
}
e("  bd.type = %s;\n", n);
e("  bd.position.Set(%.15f, %.15f);\n", this.m_xf.p.x, this.m_xf.p.y);
e("  bd.angle = %.15f;\n", this.m_sweep.a);
e("  bd.linearVelocity.Set(%.15f, %.15f);\n", this.m_linearVelocity.x, this.m_linearVelocity.y);
e("  bd.angularVelocity = %.15f;\n", this.m_angularVelocity);
e("  bd.linearDamping = %.15f;\n", this.m_linearDamping);
e("  bd.angularDamping = %.15f;\n", this.m_angularDamping);
e("  bd.allowSleep = %s;\n", this.m_autoSleepFlag ? "true" : "false");
e("  bd.awake = %s;\n", this.m_awakeFlag ? "true" : "false");
e("  bd.fixedRotation = %s;\n", this.m_fixedRotationFlag ? "true" : "false");
e("  bd.bullet = %s;\n", this.m_bulletFlag ? "true" : "false");
e("  bd.active = %s;\n", this.m_activeFlag ? "true" : "false");
e("  bd.gravityScale = %.15f;\n", this.m_gravityScale);
e("\n");
e("  bodies[%d] = this.m_world.CreateBody(bd);\n", this.m_islandIndex);
e("\n");
for (var r = this.m_fixtureList; r; r = r.m_next) {
e("  {\n");
r.Dump(e, i);
e("  }\n");
}
e("}\n");
};
i.prototype.SynchronizeFixtures = function() {
var t = i.SynchronizeFixtures_s_xf1;
t.q.SetAngle(this.m_sweep.a0);
N.MulRV(t.q, this.m_sweep.localCenter, t.p);
I.SubVV(this.m_sweep.c0, t.p, t.p);
for (var e = this.m_fixtureList; e; e = e.m_next) e.Synchronize(t, this.m_xf);
};
i.prototype.SynchronizeTransform = function() {
this.m_xf.q.SetAngle(this.m_sweep.a);
N.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);
I.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);
};
i.prototype.ShouldCollide = function(e) {
return (this.m_type !== t.b2BodyType.b2_staticBody || e.m_type !== t.b2BodyType.b2_staticBody) && this.ShouldCollideConnected(e);
};
i.prototype.ShouldCollideConnected = function(t) {
for (var e = this.m_jointList; e; e = e.next) if (e.other === t && !e.joint.m_collideConnected) return !1;
return !0;
};
i.prototype.Advance = function(t) {
this.m_sweep.Advance(t);
this.m_sweep.c.Copy(this.m_sweep.c0);
this.m_sweep.a = this.m_sweep.a0;
this.m_xf.q.SetAngle(this.m_sweep.a);
N.MulRV(this.m_xf.q, this.m_sweep.localCenter, this.m_xf.p);
I.SubVV(this.m_sweep.c, this.m_xf.p, this.m_xf.p);
};
i.prototype.GetControllerList = function() {
return this.m_controllerList;
};
i.prototype.GetControllerCount = function() {
return this.m_controllerCount;
};
i.CreateFixtureShapeDensity_s_def = new si();
i.SetMassData_s_oldCenter = new I();
i.ResetMassData_s_localCenter = new I();
i.ResetMassData_s_oldCenter = new I();
i.ResetMassData_s_massData = new Ze();
i.SynchronizeFixtures_s_xf1 = new F();
return i;
})();
(function(t) {
t[t.e_unknownJoint = 0] = "e_unknownJoint";
t[t.e_revoluteJoint = 1] = "e_revoluteJoint";
t[t.e_prismaticJoint = 2] = "e_prismaticJoint";
t[t.e_distanceJoint = 3] = "e_distanceJoint";
t[t.e_pulleyJoint = 4] = "e_pulleyJoint";
t[t.e_mouseJoint = 5] = "e_mouseJoint";
t[t.e_gearJoint = 6] = "e_gearJoint";
t[t.e_wheelJoint = 7] = "e_wheelJoint";
t[t.e_weldJoint = 8] = "e_weldJoint";
t[t.e_frictionJoint = 9] = "e_frictionJoint";
t[t.e_ropeJoint = 10] = "e_ropeJoint";
t[t.e_motorJoint = 11] = "e_motorJoint";
t[t.e_areaJoint = 12] = "e_areaJoint";
})(t.b2JointType || (t.b2JointType = {}));
(function(t) {
t[t.e_inactiveLimit = 0] = "e_inactiveLimit";
t[t.e_atLowerLimit = 1] = "e_atLowerLimit";
t[t.e_atUpperLimit = 2] = "e_atUpperLimit";
t[t.e_equalLimits = 3] = "e_equalLimits";
})(t.b2LimitState || (t.b2LimitState = {}));
var ui = (function() {
function t() {
this.linear = new I();
this.angularA = 0;
this.angularB = 0;
}
t.prototype.SetZero = function() {
this.linear.SetZero();
this.angularA = 0;
this.angularB = 0;
return this;
};
t.prototype.Set = function(t, e, i) {
this.linear.Copy(t);
this.angularA = e;
this.angularB = i;
return this;
};
return t;
})(), hi = (function() {
return function(t, e) {
this.prev = null;
this.next = null;
this.joint = t;
this.other = e;
};
})(), fi = (function() {
return function(e) {
this.type = t.b2JointType.e_unknownJoint;
this.userData = null;
this.collideConnected = !1;
this.type = e;
};
})(), _i = (function() {
function i(i) {
this.m_type = t.b2JointType.e_unknownJoint;
this.m_prev = null;
this.m_next = null;
this.m_index = 0;
this.m_islandFlag = !1;
this.m_collideConnected = !1;
this.m_userData = null;
this.m_type = i.type;
this.m_edgeA = new hi(this, i.bodyB);
this.m_edgeB = new hi(this, i.bodyA);
this.m_bodyA = i.bodyA;
this.m_bodyB = i.bodyB;
this.m_collideConnected = e(i.collideConnected, !1);
this.m_userData = i.userData;
}
i.prototype.GetType = function() {
return this.m_type;
};
i.prototype.GetBodyA = function() {
return this.m_bodyA;
};
i.prototype.GetBodyB = function() {
return this.m_bodyB;
};
i.prototype.GetNext = function() {
return this.m_next;
};
i.prototype.GetUserData = function() {
return this.m_userData;
};
i.prototype.SetUserData = function(t) {
this.m_userData = t;
};
i.prototype.IsActive = function() {
return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();
};
i.prototype.GetCollideConnected = function() {
return this.m_collideConnected;
};
i.prototype.Dump = function(t) {
t("// Dump is not supported for this joint type.\n");
};
i.prototype.ShiftOrigin = function(t) {};
return i;
})(), di = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_distanceJoint) || this;
i.localAnchorA = new I();
i.localAnchorB = new I();
i.length = 1;
i.frequencyHz = 0;
i.dampingRatio = 0;
return i;
}
i.prototype.Initialize = function(t, e, i, n) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(n, this.localAnchorB);
this.length = I.DistanceVV(i, n);
this.frequencyHz = 0;
this.dampingRatio = 0;
};
return i;
})(fi), pi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_frequencyHz = 0;
n.m_dampingRatio = 0;
n.m_bias = 0;
n.m_localAnchorA = new I();
n.m_localAnchorB = new I();
n.m_gamma = 0;
n.m_impulse = 0;
n.m_length = 0;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_u = new I();
n.m_rA = new I();
n.m_rB = new I();
n.m_localCenterA = new I();
n.m_localCenterB = new I();
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_mass = 0;
n.m_qA = new N();
n.m_qB = new N();
n.m_lalcA = new I();
n.m_lalcB = new I();
n.m_frequencyHz = e(i.frequencyHz, 0);
n.m_dampingRatio = e(i.dampingRatio, 0);
n.m_localAnchorA.Copy(i.localAnchorA);
n.m_localAnchorB.Copy(i.localAnchorB);
n.m_length = i.length;
return n;
}
i.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
e.x = t * this.m_impulse * this.m_u.x;
e.y = t * this.m_impulse * this.m_u.y;
return e;
};
i.prototype.GetReactionTorque = function(t) {
return 0;
};
i.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
i.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
i.prototype.SetLength = function(t) {
this.m_length = t;
};
i.prototype.Length = function() {
return this.m_length;
};
i.prototype.SetFrequency = function(t) {
this.m_frequencyHz = t;
};
i.prototype.GetFrequency = function() {
return this.m_frequencyHz;
};
i.prototype.SetDampingRatio = function(t) {
this.m_dampingRatio = t;
};
i.prototype.GetDampingRatio = function() {
return this.m_dampingRatio;
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2DistanceJointDef = new b2DistanceJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.length = %.15f;\n", this.m_length);
t("  jd.frequencyHz = %.15f;\n", this.m_frequencyHz);
t("  jd.dampingRatio = %.15f;\n", this.m_dampingRatio);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.velocities[this.m_indexA].v, o = t.velocities[this.m_indexA].w, a = t.positions[this.m_indexB].c, l = t.positions[this.m_indexB].a, u = t.velocities[this.m_indexB].v, h = t.velocities[this.m_indexB].w, f = this.m_qA.SetAngle(n), _ = this.m_qB.SetAngle(l);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
N.MulRV(f, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
N.MulRV(_, this.m_lalcB, this.m_rB);
this.m_u.x = a.x + this.m_rB.x - e.x - this.m_rA.x;
this.m_u.y = a.y + this.m_rB.y - e.y - this.m_rA.y;
var d = this.m_u.Length();
d > c ? this.m_u.SelfMul(1 / d) : this.m_u.SetZero();
var p = I.CrossVV(this.m_rA, this.m_u), m = I.CrossVV(this.m_rB, this.m_u), y = this.m_invMassA + this.m_invIA * p * p + this.m_invMassB + this.m_invIB * m * m;
this.m_mass = 0 !== y ? 1 / y : 0;
if (this.m_frequencyHz > 0) {
var v = d - this.m_length, g = 2 * s * this.m_frequencyHz, b = 2 * this.m_mass * this.m_dampingRatio * g, C = this.m_mass * g * g, x = t.step.dt;
this.m_gamma = x * (b + x * C);
this.m_gamma = 0 !== this.m_gamma ? 1 / this.m_gamma : 0;
this.m_bias = v * x * C * this.m_gamma;
y += this.m_gamma;
this.m_mass = 0 !== y ? 1 / y : 0;
} else {
this.m_gamma = 0;
this.m_bias = 0;
}
if (t.step.warmStarting) {
this.m_impulse *= t.step.dtRatio;
var A = I.MulSV(this.m_impulse, this.m_u, i.InitVelocityConstraints_s_P);
r.SelfMulSub(this.m_invMassA, A);
o -= this.m_invIA * I.CrossVV(this.m_rA, A);
u.SelfMulAdd(this.m_invMassB, A);
h += this.m_invIB * I.CrossVV(this.m_rB, A);
} else this.m_impulse = 0;
t.velocities[this.m_indexA].w = o;
t.velocities[this.m_indexB].w = h;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = I.AddVCrossSV(e, n, this.m_rA, i.SolveVelocityConstraints_s_vpA), a = I.AddVCrossSV(r, s, this.m_rB, i.SolveVelocityConstraints_s_vpB), c = I.DotVV(this.m_u, I.SubVV(a, o, I.s_t0)), l = -this.m_mass * (c + this.m_bias + this.m_gamma * this.m_impulse);
this.m_impulse += l;
var u = I.MulSV(l, this.m_u, i.SolveVelocityConstraints_s_P);
e.SelfMulSub(this.m_invMassA, u);
n -= this.m_invIA * I.CrossVV(this.m_rA, u);
r.SelfMulAdd(this.m_invMassB, u);
s += this.m_invIB * I.CrossVV(this.m_rB, u);
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = s;
};
i.prototype.SolvePositionConstraints = function(t) {
if (this.m_frequencyHz > 0) return !0;
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(n), a = this.m_qB.SetAngle(s), l = N.MulRV(o, this.m_lalcA, this.m_rA), u = N.MulRV(a, this.m_lalcB, this.m_rB), h = this.m_u;
h.x = r.x + u.x - e.x - l.x;
h.y = r.y + u.y - e.y - l.y;
var f = this.m_u.Normalize() - this.m_length;
f = C(f, -.2, .2);
var _ = -this.m_mass * f, d = I.MulSV(_, h, i.SolvePositionConstraints_s_P);
e.SelfMulSub(this.m_invMassA, d);
n -= this.m_invIA * I.CrossVV(l, d);
r.SelfMulAdd(this.m_invMassB, d);
s += this.m_invIB * I.CrossVV(u, d);
t.positions[this.m_indexA].a = n;
t.positions[this.m_indexB].a = s;
return v(f) < c;
};
i.InitVelocityConstraints_s_P = new I();
i.SolveVelocityConstraints_s_vpA = new I();
i.SolveVelocityConstraints_s_vpB = new I();
i.SolveVelocityConstraints_s_P = new I();
i.SolvePositionConstraints_s_P = new I();
return i;
})(_i), mi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_areaJoint) || this;
i.bodies = [];
i.frequencyHz = 0;
i.dampingRatio = 0;
return i;
}
i.prototype.AddBody = function(t) {
this.bodies.push(t);
1 === this.bodies.length ? this.bodyA = t : 2 === this.bodies.length && (this.bodyB = t);
};
return i;
})(fi), yi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_frequencyHz = 0;
n.m_dampingRatio = 0;
n.m_impulse = 0;
n.m_targetArea = 0;
n.m_bodies = i.bodies;
n.m_frequencyHz = e(i.frequencyHz, 0);
n.m_dampingRatio = e(i.dampingRatio, 0);
n.m_targetLengths = p(i.bodies.length);
n.m_normals = I.MakeArray(i.bodies.length);
n.m_joints = [];
n.m_deltas = I.MakeArray(i.bodies.length);
n.m_delta = new I();
var r = new di();
r.frequencyHz = n.m_frequencyHz;
r.dampingRatio = n.m_dampingRatio;
n.m_targetArea = 0;
for (var s = 0; s < n.m_bodies.length; ++s) {
var o = n.m_bodies[s], a = n.m_bodies[(s + 1) % n.m_bodies.length], c = o.GetWorldCenter(), l = a.GetWorldCenter();
n.m_targetLengths[s] = I.DistanceVV(c, l);
n.m_targetArea += I.CrossVV(c, l);
r.Initialize(o, a, c, l);
n.m_joints[s] = o.GetWorld().CreateJoint(r);
}
n.m_targetArea *= .5;
return n;
}
i.prototype.GetAnchorA = function(t) {
return t;
};
i.prototype.GetAnchorB = function(t) {
return t;
};
i.prototype.GetReactionForce = function(t, e) {
return e;
};
i.prototype.GetReactionTorque = function(t) {
return 0;
};
i.prototype.SetFrequency = function(t) {
this.m_frequencyHz = t;
for (var e = 0; e < this.m_joints.length; ++e) this.m_joints[e].SetFrequency(t);
};
i.prototype.GetFrequency = function() {
return this.m_frequencyHz;
};
i.prototype.SetDampingRatio = function(t) {
this.m_dampingRatio = t;
for (var e = 0; e < this.m_joints.length; ++e) this.m_joints[e].SetDampingRatio(t);
};
i.prototype.GetDampingRatio = function() {
return this.m_dampingRatio;
};
i.prototype.Dump = function(t) {
t("Area joint dumping is not supported.\n");
};
i.prototype.InitVelocityConstraints = function(t) {
for (var e = 0; e < this.m_bodies.length; ++e) {
var i = this.m_bodies[(e + this.m_bodies.length - 1) % this.m_bodies.length], n = this.m_bodies[(e + 1) % this.m_bodies.length], r = t.positions[i.m_islandIndex].c, s = t.positions[n.m_islandIndex].c, o = this.m_deltas[e];
I.SubVV(s, r, o);
}
if (t.step.warmStarting) {
this.m_impulse *= t.step.dtRatio;
for (e = 0; e < this.m_bodies.length; ++e) {
var a = this.m_bodies[e], c = t.velocities[a.m_islandIndex].v;
o = this.m_deltas[e];
c.x += a.m_invMass * o.y * .5 * this.m_impulse;
c.y += a.m_invMass * -o.x * .5 * this.m_impulse;
}
} else this.m_impulse = 0;
};
i.prototype.SolveVelocityConstraints = function(t) {
for (var e = 0, i = 0, n = 0; n < this.m_bodies.length; ++n) {
var r = this.m_bodies[n], s = t.velocities[r.m_islandIndex].v;
e += (a = this.m_deltas[n]).LengthSquared() / r.GetMass();
i += I.CrossVV(s, a);
}
var o = -2 * i / e;
this.m_impulse += o;
for (n = 0; n < this.m_bodies.length; ++n) {
r = this.m_bodies[n], s = t.velocities[r.m_islandIndex].v;
var a = this.m_deltas[n];
s.x += r.m_invMass * a.y * .5 * o;
s.y += r.m_invMass * -a.x * .5 * o;
}
};
i.prototype.SolvePositionConstraints = function(t) {
for (var e = 0, i = 0, r = 0; r < this.m_bodies.length; ++r) {
var s = this.m_bodies[r], o = this.m_bodies[(r + 1) % this.m_bodies.length], a = t.positions[s.m_islandIndex].c, l = t.positions[o.m_islandIndex].c, u = (_ = I.SubVV(l, a, this.m_delta)).Length();
u < n && (u = 1);
this.m_normals[r].x = _.y / u;
this.m_normals[r].y = -_.x / u;
e += u;
i += I.CrossVV(a, l);
}
i *= .5;
var h = .5 * (this.m_targetArea - i) / e, f = !0;
for (r = 0; r < this.m_bodies.length; ++r) {
s = this.m_bodies[r], a = t.positions[s.m_islandIndex].c;
var _, d = (r + 1) % this.m_bodies.length;
(_ = I.AddVV(this.m_normals[r], this.m_normals[d], this.m_delta)).SelfMul(h);
var p = _.LengthSquared();
p > A(.2) && _.SelfMul(.2 / w(p));
p > A(c) && (f = !1);
a.x += _.x;
a.y += _.y;
}
return f;
};
return i;
})(_i), vi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_frictionJoint) || this;
i.localAnchorA = new I();
i.localAnchorB = new I();
i.maxForce = 0;
i.maxTorque = 0;
return i;
}
i.prototype.Initialize = function(t, e, i) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(i, this.localAnchorB);
};
return i;
})(fi), gi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_localAnchorA = new I();
n.m_localAnchorB = new I();
n.m_linearImpulse = new I();
n.m_angularImpulse = 0;
n.m_maxForce = 0;
n.m_maxTorque = 0;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_rA = new I();
n.m_rB = new I();
n.m_localCenterA = new I();
n.m_localCenterB = new I();
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_linearMass = new L();
n.m_angularMass = 0;
n.m_qA = new N();
n.m_qB = new N();
n.m_lalcA = new I();
n.m_lalcB = new I();
n.m_K = new L();
n.m_localAnchorA.Copy(i.localAnchorA);
n.m_localAnchorB.Copy(i.localAnchorB);
n.m_linearImpulse.SetZero();
n.m_maxForce = e(i.maxForce, 0);
n.m_maxTorque = e(i.maxTorque, 0);
n.m_linearMass.SetZero();
return n;
}
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexA].a, i = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.positions[this.m_indexB].a, s = t.velocities[this.m_indexB].v, o = t.velocities[this.m_indexB].w, a = this.m_qA.SetAngle(e), c = this.m_qB.SetAngle(r);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var l = N.MulRV(a, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var u = N.MulRV(c, this.m_lalcB, this.m_rB), h = this.m_invMassA, f = this.m_invMassB, _ = this.m_invIA, d = this.m_invIB, p = this.m_K;
p.ex.x = h + f + _ * l.y * l.y + d * u.y * u.y;
p.ex.y = -_ * l.x * l.y - d * u.x * u.y;
p.ey.x = p.ex.y;
p.ey.y = h + f + _ * l.x * l.x + d * u.x * u.x;
p.GetInverse(this.m_linearMass);
this.m_angularMass = _ + d;
this.m_angularMass > 0 && (this.m_angularMass = 1 / this.m_angularMass);
if (t.step.warmStarting) {
this.m_linearImpulse.SelfMul(t.step.dtRatio);
this.m_angularImpulse *= t.step.dtRatio;
var m = this.m_linearImpulse;
i.SelfMulSub(h, m);
n -= _ * (I.CrossVV(this.m_rA, m) + this.m_angularImpulse);
s.SelfMulAdd(f, m);
o += d * (I.CrossVV(this.m_rB, m) + this.m_angularImpulse);
} else {
this.m_linearImpulse.SetZero();
this.m_angularImpulse = 0;
}
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = o;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = this.m_invMassA, a = this.m_invMassB, c = this.m_invIA, l = this.m_invIB, u = t.step.dt, h = s - n, f = -this.m_angularMass * h, _ = this.m_angularImpulse, d = u * this.m_maxTorque;
this.m_angularImpulse = C(this.m_angularImpulse + f, -d, d);
n -= c * (f = this.m_angularImpulse - _);
s += l * f;
var p = I.SubVV(I.AddVCrossSV(r, s, this.m_rB, I.s_t0), I.AddVCrossSV(e, n, this.m_rA, I.s_t1), i.SolveVelocityConstraints_s_Cdot_v2), m = L.MulMV(this.m_linearMass, p, i.SolveVelocityConstraints_s_impulseV).SelfNeg(), y = i.SolveVelocityConstraints_s_oldImpulseV.Copy(this.m_linearImpulse);
this.m_linearImpulse.SelfAdd(m);
d = u * this.m_maxForce;
if (this.m_linearImpulse.LengthSquared() > d * d) {
this.m_linearImpulse.Normalize();
this.m_linearImpulse.SelfMul(d);
}
I.SubVV(this.m_linearImpulse, y, m);
e.SelfMulSub(o, m);
n -= c * I.CrossVV(this.m_rA, m);
r.SelfMulAdd(a, m);
s += l * I.CrossVV(this.m_rB, m);
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = s;
};
i.prototype.SolvePositionConstraints = function(t) {
return !0;
};
i.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
e.x = t * this.m_linearImpulse.x;
e.y = t * this.m_linearImpulse.y;
return e;
};
i.prototype.GetReactionTorque = function(t) {
return t * this.m_angularImpulse;
};
i.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
i.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
i.prototype.SetMaxForce = function(t) {
this.m_maxForce = t;
};
i.prototype.GetMaxForce = function() {
return this.m_maxForce;
};
i.prototype.SetMaxTorque = function(t) {
this.m_maxTorque = t;
};
i.prototype.GetMaxTorque = function() {
return this.m_maxTorque;
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2FrictionJointDef = new b2FrictionJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.maxForce = %.15f;\n", this.m_maxForce);
t("  jd.maxTorque = %.15f;\n", this.m_maxTorque);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.SolveVelocityConstraints_s_Cdot_v2 = new I();
i.SolveVelocityConstraints_s_impulseV = new I();
i.SolveVelocityConstraints_s_oldImpulseV = new I();
return i;
})(_i), bi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_gearJoint) || this;
i.ratio = 1;
return i;
}
return i;
})(fi), Ci = (function(i) {
$e(n, i);
function n(n) {
var r, s, o = i.call(this, n) || this;
o.m_typeA = t.b2JointType.e_unknownJoint;
o.m_typeB = t.b2JointType.e_unknownJoint;
o.m_localAnchorA = new I();
o.m_localAnchorB = new I();
o.m_localAnchorC = new I();
o.m_localAnchorD = new I();
o.m_localAxisC = new I();
o.m_localAxisD = new I();
o.m_referenceAngleA = 0;
o.m_referenceAngleB = 0;
o.m_constant = 0;
o.m_ratio = 0;
o.m_impulse = 0;
o.m_indexA = 0;
o.m_indexB = 0;
o.m_indexC = 0;
o.m_indexD = 0;
o.m_lcA = new I();
o.m_lcB = new I();
o.m_lcC = new I();
o.m_lcD = new I();
o.m_mA = 0;
o.m_mB = 0;
o.m_mC = 0;
o.m_mD = 0;
o.m_iA = 0;
o.m_iB = 0;
o.m_iC = 0;
o.m_iD = 0;
o.m_JvAC = new I();
o.m_JvBD = new I();
o.m_JwA = 0;
o.m_JwB = 0;
o.m_JwC = 0;
o.m_JwD = 0;
o.m_mass = 0;
o.m_qA = new N();
o.m_qB = new N();
o.m_qC = new N();
o.m_qD = new N();
o.m_lalcA = new I();
o.m_lalcB = new I();
o.m_lalcC = new I();
o.m_lalcD = new I();
o.m_joint1 = n.joint1;
o.m_joint2 = n.joint2;
o.m_typeA = o.m_joint1.GetType();
o.m_typeB = o.m_joint2.GetType();
o.m_bodyC = o.m_joint1.GetBodyA();
o.m_bodyA = o.m_joint1.GetBodyB();
var a = o.m_bodyA.m_xf, c = o.m_bodyA.m_sweep.a, l = o.m_bodyC.m_xf, u = o.m_bodyC.m_sweep.a;
if (o.m_typeA === t.b2JointType.e_revoluteJoint) {
var h = n.joint1;
o.m_localAnchorC.Copy(h.m_localAnchorA);
o.m_localAnchorA.Copy(h.m_localAnchorB);
o.m_referenceAngleA = h.m_referenceAngle;
o.m_localAxisC.SetZero();
r = c - u - o.m_referenceAngleA;
} else {
var f = n.joint1;
o.m_localAnchorC.Copy(f.m_localAnchorA);
o.m_localAnchorA.Copy(f.m_localAnchorB);
o.m_referenceAngleA = f.m_referenceAngle;
o.m_localAxisC.Copy(f.m_localXAxisA);
var _ = o.m_localAnchorC, d = N.MulTRV(l.q, I.AddVV(N.MulRV(a.q, o.m_localAnchorA, I.s_t0), I.SubVV(a.p, l.p, I.s_t1), I.s_t0), I.s_t0);
r = I.DotVV(I.SubVV(d, _, I.s_t0), o.m_localAxisC);
}
o.m_bodyD = o.m_joint2.GetBodyA();
o.m_bodyB = o.m_joint2.GetBodyB();
var p = o.m_bodyB.m_xf, m = o.m_bodyB.m_sweep.a, y = o.m_bodyD.m_xf, v = o.m_bodyD.m_sweep.a;
if (o.m_typeB === t.b2JointType.e_revoluteJoint) {
h = n.joint2;
o.m_localAnchorD.Copy(h.m_localAnchorA);
o.m_localAnchorB.Copy(h.m_localAnchorB);
o.m_referenceAngleB = h.m_referenceAngle;
o.m_localAxisD.SetZero();
s = m - v - o.m_referenceAngleB;
} else {
f = n.joint2;
o.m_localAnchorD.Copy(f.m_localAnchorA);
o.m_localAnchorB.Copy(f.m_localAnchorB);
o.m_referenceAngleB = f.m_referenceAngle;
o.m_localAxisD.Copy(f.m_localXAxisA);
var g = o.m_localAnchorD, b = N.MulTRV(y.q, I.AddVV(N.MulRV(p.q, o.m_localAnchorB, I.s_t0), I.SubVV(p.p, y.p, I.s_t1), I.s_t0), I.s_t0);
s = I.DotVV(I.SubVV(b, g, I.s_t0), o.m_localAxisD);
}
o.m_ratio = e(n.ratio, 1);
o.m_constant = r + o.m_ratio * s;
o.m_impulse = 0;
return o;
}
n.prototype.InitVelocityConstraints = function(e) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_indexC = this.m_bodyC.m_islandIndex;
this.m_indexD = this.m_bodyD.m_islandIndex;
this.m_lcA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_lcB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_lcC.Copy(this.m_bodyC.m_sweep.localCenter);
this.m_lcD.Copy(this.m_bodyD.m_sweep.localCenter);
this.m_mA = this.m_bodyA.m_invMass;
this.m_mB = this.m_bodyB.m_invMass;
this.m_mC = this.m_bodyC.m_invMass;
this.m_mD = this.m_bodyD.m_invMass;
this.m_iA = this.m_bodyA.m_invI;
this.m_iB = this.m_bodyB.m_invI;
this.m_iC = this.m_bodyC.m_invI;
this.m_iD = this.m_bodyD.m_invI;
var i = e.positions[this.m_indexA].a, r = e.velocities[this.m_indexA].v, s = e.velocities[this.m_indexA].w, o = e.positions[this.m_indexB].a, a = e.velocities[this.m_indexB].v, c = e.velocities[this.m_indexB].w, l = e.positions[this.m_indexC].a, u = e.velocities[this.m_indexC].v, h = e.velocities[this.m_indexC].w, f = e.positions[this.m_indexD].a, _ = e.velocities[this.m_indexD].v, d = e.velocities[this.m_indexD].w, p = this.m_qA.SetAngle(i), m = this.m_qB.SetAngle(o), y = this.m_qC.SetAngle(l), v = this.m_qD.SetAngle(f);
this.m_mass = 0;
if (this.m_typeA === t.b2JointType.e_revoluteJoint) {
this.m_JvAC.SetZero();
this.m_JwA = 1;
this.m_JwC = 1;
this.m_mass += this.m_iA + this.m_iC;
} else {
var g = N.MulRV(y, this.m_localAxisC, n.InitVelocityConstraints_s_u);
I.SubVV(this.m_localAnchorC, this.m_lcC, this.m_lalcC);
var b = N.MulRV(y, this.m_lalcC, n.InitVelocityConstraints_s_rC);
I.SubVV(this.m_localAnchorA, this.m_lcA, this.m_lalcA);
var C = N.MulRV(p, this.m_lalcA, n.InitVelocityConstraints_s_rA);
this.m_JvAC.Copy(g);
this.m_JwC = I.CrossVV(b, g);
this.m_JwA = I.CrossVV(C, g);
this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;
}
if (this.m_typeB === t.b2JointType.e_revoluteJoint) {
this.m_JvBD.SetZero();
this.m_JwB = this.m_ratio;
this.m_JwD = this.m_ratio;
this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);
} else {
g = N.MulRV(v, this.m_localAxisD, n.InitVelocityConstraints_s_u);
I.SubVV(this.m_localAnchorD, this.m_lcD, this.m_lalcD);
var x = N.MulRV(v, this.m_lalcD, n.InitVelocityConstraints_s_rD);
I.SubVV(this.m_localAnchorB, this.m_lcB, this.m_lalcB);
var A = N.MulRV(m, this.m_lalcB, n.InitVelocityConstraints_s_rB);
I.MulSV(this.m_ratio, g, this.m_JvBD);
this.m_JwD = this.m_ratio * I.CrossVV(x, g);
this.m_JwB = this.m_ratio * I.CrossVV(A, g);
this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;
}
this.m_mass = this.m_mass > 0 ? 1 / this.m_mass : 0;
if (e.step.warmStarting) {
r.SelfMulAdd(this.m_mA * this.m_impulse, this.m_JvAC);
s += this.m_iA * this.m_impulse * this.m_JwA;
a.SelfMulAdd(this.m_mB * this.m_impulse, this.m_JvBD);
c += this.m_iB * this.m_impulse * this.m_JwB;
u.SelfMulSub(this.m_mC * this.m_impulse, this.m_JvAC);
h -= this.m_iC * this.m_impulse * this.m_JwC;
_.SelfMulSub(this.m_mD * this.m_impulse, this.m_JvBD);
d -= this.m_iD * this.m_impulse * this.m_JwD;
} else this.m_impulse = 0;
e.velocities[this.m_indexA].w = s;
e.velocities[this.m_indexB].w = c;
e.velocities[this.m_indexC].w = h;
e.velocities[this.m_indexD].w = d;
};
n.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, i = t.velocities[this.m_indexA].w, n = t.velocities[this.m_indexB].v, r = t.velocities[this.m_indexB].w, s = t.velocities[this.m_indexC].v, o = t.velocities[this.m_indexC].w, a = t.velocities[this.m_indexD].v, c = t.velocities[this.m_indexD].w, l = I.DotVV(this.m_JvAC, I.SubVV(e, s, I.s_t0)) + I.DotVV(this.m_JvBD, I.SubVV(n, a, I.s_t0));
l += this.m_JwA * i - this.m_JwC * o + (this.m_JwB * r - this.m_JwD * c);
var u = -this.m_mass * l;
this.m_impulse += u;
e.SelfMulAdd(this.m_mA * u, this.m_JvAC);
i += this.m_iA * u * this.m_JwA;
n.SelfMulAdd(this.m_mB * u, this.m_JvBD);
r += this.m_iB * u * this.m_JwB;
s.SelfMulSub(this.m_mC * u, this.m_JvAC);
o -= this.m_iC * u * this.m_JwC;
a.SelfMulSub(this.m_mD * u, this.m_JvBD);
c -= this.m_iD * u * this.m_JwD;
t.velocities[this.m_indexA].w = i;
t.velocities[this.m_indexB].w = r;
t.velocities[this.m_indexC].w = o;
t.velocities[this.m_indexD].w = c;
};
n.prototype.SolvePositionConstraints = function(e) {
var i, r, s, o, a, l, u = e.positions[this.m_indexA].c, h = e.positions[this.m_indexA].a, f = e.positions[this.m_indexB].c, _ = e.positions[this.m_indexB].a, d = e.positions[this.m_indexC].c, p = e.positions[this.m_indexC].a, m = e.positions[this.m_indexD].c, y = e.positions[this.m_indexD].a, v = this.m_qA.SetAngle(h), g = this.m_qB.SetAngle(_), b = this.m_qC.SetAngle(p), C = this.m_qD.SetAngle(y), x = this.m_JvAC, A = this.m_JvBD, S = 0;
if (this.m_typeA === t.b2JointType.e_revoluteJoint) {
x.SetZero();
s = 1;
a = 1;
S += this.m_iA + this.m_iC;
i = h - p - this.m_referenceAngleA;
} else {
var w = N.MulRV(b, this.m_localAxisC, n.SolvePositionConstraints_s_u), T = N.MulRV(b, this.m_lalcC, n.SolvePositionConstraints_s_rC), E = N.MulRV(v, this.m_lalcA, n.SolvePositionConstraints_s_rA);
x.Copy(w);
a = I.CrossVV(T, w);
s = I.CrossVV(E, w);
S += this.m_mC + this.m_mA + this.m_iC * a * a + this.m_iA * s * s;
var M = this.m_lalcC, B = N.MulTRV(b, I.AddVV(E, I.SubVV(u, d, I.s_t0), I.s_t0), I.s_t0);
i = I.DotVV(I.SubVV(B, M, I.s_t0), this.m_localAxisC);
}
if (this.m_typeB === t.b2JointType.e_revoluteJoint) {
A.SetZero();
o = this.m_ratio;
l = this.m_ratio;
S += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);
r = _ - y - this.m_referenceAngleB;
} else {
w = N.MulRV(C, this.m_localAxisD, n.SolvePositionConstraints_s_u);
var D = N.MulRV(C, this.m_lalcD, n.SolvePositionConstraints_s_rD), R = N.MulRV(g, this.m_lalcB, n.SolvePositionConstraints_s_rB);
I.MulSV(this.m_ratio, w, A);
l = this.m_ratio * I.CrossVV(D, w);
o = this.m_ratio * I.CrossVV(R, w);
S += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * l * l + this.m_iB * o * o;
var P = this.m_lalcD, O = N.MulTRV(C, I.AddVV(R, I.SubVV(f, m, I.s_t0), I.s_t0), I.s_t0);
r = I.DotVV(I.SubVV(O, P, I.s_t0), this.m_localAxisD);
}
var L = i + this.m_ratio * r - this.m_constant, V = 0;
S > 0 && (V = -L / S);
u.SelfMulAdd(this.m_mA * V, x);
h += this.m_iA * V * s;
f.SelfMulAdd(this.m_mB * V, A);
_ += this.m_iB * V * o;
d.SelfMulSub(this.m_mC * V, x);
p -= this.m_iC * V * a;
m.SelfMulSub(this.m_mD * V, A);
y -= this.m_iD * V * l;
e.positions[this.m_indexA].a = h;
e.positions[this.m_indexB].a = _;
e.positions[this.m_indexC].a = p;
e.positions[this.m_indexD].a = y;
return 0 < c;
};
n.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
n.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
n.prototype.GetReactionForce = function(t, e) {
return I.MulSV(t * this.m_impulse, this.m_JvAC, e);
};
n.prototype.GetReactionTorque = function(t) {
return t * this.m_impulse * this.m_JwA;
};
n.prototype.GetJoint1 = function() {
return this.m_joint1;
};
n.prototype.GetJoint2 = function() {
return this.m_joint2;
};
n.prototype.GetRatio = function() {
return this.m_ratio;
};
n.prototype.SetRatio = function(t) {
this.m_ratio = t;
};
n.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex, n = this.m_joint1.m_index, r = this.m_joint2.m_index;
t("  const jd: b2GearJointDef = new b2GearJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.joint1 = joints[%d];\n", n);
t("  jd.joint2 = joints[%d];\n", r);
t("  jd.ratio = %.15f;\n", this.m_ratio);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
n.InitVelocityConstraints_s_u = new I();
n.InitVelocityConstraints_s_rA = new I();
n.InitVelocityConstraints_s_rB = new I();
n.InitVelocityConstraints_s_rC = new I();
n.InitVelocityConstraints_s_rD = new I();
n.SolvePositionConstraints_s_u = new I();
n.SolvePositionConstraints_s_rA = new I();
n.SolvePositionConstraints_s_rB = new I();
n.SolvePositionConstraints_s_rC = new I();
n.SolvePositionConstraints_s_rD = new I();
return n;
})(_i), xi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_motorJoint) || this;
i.linearOffset = new I(0, 0);
i.angularOffset = 0;
i.maxForce = 1;
i.maxTorque = 1;
i.correctionFactor = .3;
return i;
}
i.prototype.Initialize = function(t, e) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(this.bodyB.GetPosition(), this.linearOffset);
var i = this.bodyA.GetAngle(), n = this.bodyB.GetAngle();
this.angularOffset = n - i;
};
return i;
})(fi), Ai = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_linearOffset = new I();
n.m_angularOffset = 0;
n.m_linearImpulse = new I();
n.m_angularImpulse = 0;
n.m_maxForce = 0;
n.m_maxTorque = 0;
n.m_correctionFactor = .3;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_rA = new I();
n.m_rB = new I();
n.m_localCenterA = new I();
n.m_localCenterB = new I();
n.m_linearError = new I();
n.m_angularError = 0;
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_linearMass = new L();
n.m_angularMass = 0;
n.m_qA = new N();
n.m_qB = new N();
n.m_K = new L();
n.m_linearOffset.Copy(e(i.linearOffset, I.ZERO));
n.m_linearImpulse.SetZero();
n.m_maxForce = e(i.maxForce, 0);
n.m_maxTorque = e(i.maxTorque, 0);
n.m_correctionFactor = e(i.correctionFactor, .3);
return n;
}
i.prototype.GetAnchorA = function(t) {
var e = this.m_bodyA.GetPosition();
t.x = e.x;
t.y = e.y;
return t;
};
i.prototype.GetAnchorB = function(t) {
var e = this.m_bodyB.GetPosition();
t.x = e.x;
t.y = e.y;
return t;
};
i.prototype.GetReactionForce = function(t, e) {
return I.MulSV(t, this.m_linearImpulse, e);
};
i.prototype.GetReactionTorque = function(t) {
return t * this.m_angularImpulse;
};
i.prototype.SetLinearOffset = function(t) {
if (!I.IsEqualToV(t, this.m_linearOffset)) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_linearOffset.Copy(t);
}
};
i.prototype.GetLinearOffset = function() {
return this.m_linearOffset;
};
i.prototype.SetAngularOffset = function(t) {
if (t !== this.m_angularOffset) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_angularOffset = t;
}
};
i.prototype.GetAngularOffset = function() {
return this.m_angularOffset;
};
i.prototype.SetMaxForce = function(t) {
this.m_maxForce = t;
};
i.prototype.GetMaxForce = function() {
return this.m_maxForce;
};
i.prototype.SetMaxTorque = function(t) {
this.m_maxTorque = t;
};
i.prototype.GetMaxTorque = function() {
return this.m_maxTorque;
};
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexA].c, i = t.positions[this.m_indexA].a, n = t.velocities[this.m_indexA].v, r = t.velocities[this.m_indexA].w, s = t.positions[this.m_indexB].c, o = t.positions[this.m_indexB].a, a = t.velocities[this.m_indexB].v, c = t.velocities[this.m_indexB].w, l = this.m_qA.SetAngle(i), u = this.m_qB.SetAngle(o), h = N.MulRV(l, I.SubVV(this.m_linearOffset, this.m_localCenterA, I.s_t0), this.m_rA), f = N.MulRV(u, I.NegV(this.m_localCenterB, I.s_t0), this.m_rB), _ = this.m_invMassA, d = this.m_invMassB, p = this.m_invIA, m = this.m_invIB, y = this.m_K;
y.ex.x = _ + d + p * h.y * h.y + m * f.y * f.y;
y.ex.y = -p * h.x * h.y - m * f.x * f.y;
y.ey.x = y.ex.y;
y.ey.y = _ + d + p * h.x * h.x + m * f.x * f.x;
y.GetInverse(this.m_linearMass);
this.m_angularMass = p + m;
this.m_angularMass > 0 && (this.m_angularMass = 1 / this.m_angularMass);
I.SubVV(I.AddVV(s, f, I.s_t0), I.AddVV(e, h, I.s_t1), this.m_linearError);
this.m_angularError = o - i - this.m_angularOffset;
if (t.step.warmStarting) {
this.m_linearImpulse.SelfMul(t.step.dtRatio);
this.m_angularImpulse *= t.step.dtRatio;
var v = this.m_linearImpulse;
n.SelfMulSub(_, v);
r -= p * (I.CrossVV(h, v) + this.m_angularImpulse);
a.SelfMulAdd(d, v);
c += m * (I.CrossVV(f, v) + this.m_angularImpulse);
} else {
this.m_linearImpulse.SetZero();
this.m_angularImpulse = 0;
}
t.velocities[this.m_indexA].w = r;
t.velocities[this.m_indexB].w = c;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = this.m_invMassA, a = this.m_invMassB, c = this.m_invIA, l = this.m_invIB, u = t.step.dt, h = t.step.inv_dt, f = s - n + h * this.m_correctionFactor * this.m_angularError, _ = -this.m_angularMass * f, d = this.m_angularImpulse, p = u * this.m_maxTorque;
this.m_angularImpulse = C(this.m_angularImpulse + _, -p, p);
n -= c * (_ = this.m_angularImpulse - d);
s += l * _;
var m = this.m_rA, y = this.m_rB, v = I.AddVV(I.SubVV(I.AddVV(r, I.CrossSV(s, y, I.s_t0), I.s_t0), I.AddVV(e, I.CrossSV(n, m, I.s_t1), I.s_t1), I.s_t2), I.MulSV(h * this.m_correctionFactor, this.m_linearError, I.s_t3), i.SolveVelocityConstraints_s_Cdot_v2), g = L.MulMV(this.m_linearMass, v, i.SolveVelocityConstraints_s_impulse_v2).SelfNeg(), b = i.SolveVelocityConstraints_s_oldImpulse_v2.Copy(this.m_linearImpulse);
this.m_linearImpulse.SelfAdd(g);
p = u * this.m_maxForce;
if (this.m_linearImpulse.LengthSquared() > p * p) {
this.m_linearImpulse.Normalize();
this.m_linearImpulse.SelfMul(p);
}
I.SubVV(this.m_linearImpulse, b, g);
e.SelfMulSub(o, g);
n -= c * I.CrossVV(m, g);
r.SelfMulAdd(a, g);
s += l * I.CrossVV(y, g);
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = s;
};
i.prototype.SolvePositionConstraints = function(t) {
return !0;
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2MotorJointDef = new b2MotorJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.linearOffset.Set(%.15f, %.15f);\n", this.m_linearOffset.x, this.m_linearOffset.y);
t("  jd.angularOffset = %.15f;\n", this.m_angularOffset);
t("  jd.maxForce = %.15f;\n", this.m_maxForce);
t("  jd.maxTorque = %.15f;\n", this.m_maxTorque);
t("  jd.correctionFactor = %.15f;\n", this.m_correctionFactor);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.SolveVelocityConstraints_s_Cdot_v2 = new I();
i.SolveVelocityConstraints_s_impulse_v2 = new I();
i.SolveVelocityConstraints_s_oldImpulse_v2 = new I();
return i;
})(_i), Si = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_mouseJoint) || this;
i.target = new I();
i.maxForce = 0;
i.frequencyHz = 5;
i.dampingRatio = .7;
return i;
}
return i;
})(fi), wi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_localAnchorB = new I();
n.m_targetA = new I();
n.m_frequencyHz = 0;
n.m_dampingRatio = 0;
n.m_beta = 0;
n.m_impulse = new I();
n.m_maxForce = 0;
n.m_gamma = 0;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_rB = new I();
n.m_localCenterB = new I();
n.m_invMassB = 0;
n.m_invIB = 0;
n.m_mass = new L();
n.m_C = new I();
n.m_qB = new N();
n.m_lalcB = new I();
n.m_K = new L();
n.m_targetA.Copy(e(i.target, I.ZERO));
F.MulTXV(n.m_bodyB.GetTransform(), n.m_targetA, n.m_localAnchorB);
n.m_maxForce = e(i.maxForce, 0);
n.m_impulse.SetZero();
n.m_frequencyHz = e(i.frequencyHz, 0);
n.m_dampingRatio = e(i.dampingRatio, 0);
n.m_beta = 0;
n.m_gamma = 0;
return n;
}
i.prototype.SetTarget = function(t) {
this.m_bodyB.IsAwake() || this.m_bodyB.SetAwake(!0);
this.m_targetA.Copy(t);
};
i.prototype.GetTarget = function() {
return this.m_targetA;
};
i.prototype.SetMaxForce = function(t) {
this.m_maxForce = t;
};
i.prototype.GetMaxForce = function() {
return this.m_maxForce;
};
i.prototype.SetFrequency = function(t) {
this.m_frequencyHz = t;
};
i.prototype.GetFrequency = function() {
return this.m_frequencyHz;
};
i.prototype.SetDampingRatio = function(t) {
this.m_dampingRatio = t;
};
i.prototype.GetDampingRatio = function() {
return this.m_dampingRatio;
};
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexB].c, i = t.positions[this.m_indexB].a, n = t.velocities[this.m_indexB].v, r = t.velocities[this.m_indexB].w, o = this.m_qB.SetAngle(i), a = this.m_bodyB.GetMass(), c = 2 * s * this.m_frequencyHz, l = 2 * a * this.m_dampingRatio * c, u = a * (c * c), h = t.step.dt;
this.m_gamma = h * (l + h * u);
0 !== this.m_gamma && (this.m_gamma = 1 / this.m_gamma);
this.m_beta = h * u * this.m_gamma;
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
N.MulRV(o, this.m_lalcB, this.m_rB);
var f = this.m_K;
f.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y + this.m_gamma;
f.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;
f.ey.x = f.ex.y;
f.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x + this.m_gamma;
f.GetInverse(this.m_mass);
this.m_C.x = e.x + this.m_rB.x - this.m_targetA.x;
this.m_C.y = e.y + this.m_rB.y - this.m_targetA.y;
this.m_C.SelfMul(this.m_beta);
r *= .98;
if (t.step.warmStarting) {
this.m_impulse.SelfMul(t.step.dtRatio);
n.x += this.m_invMassB * this.m_impulse.x;
n.y += this.m_invMassB * this.m_impulse.y;
r += this.m_invIB * I.CrossVV(this.m_rB, this.m_impulse);
} else this.m_impulse.SetZero();
t.velocities[this.m_indexB].w = r;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexB].v, n = t.velocities[this.m_indexB].w, r = I.AddVCrossSV(e, n, this.m_rB, i.SolveVelocityConstraints_s_Cdot), s = L.MulMV(this.m_mass, I.AddVV(r, I.AddVV(this.m_C, I.MulSV(this.m_gamma, this.m_impulse, I.s_t0), I.s_t0), I.s_t0).SelfNeg(), i.SolveVelocityConstraints_s_impulse), o = i.SolveVelocityConstraints_s_oldImpulse.Copy(this.m_impulse);
this.m_impulse.SelfAdd(s);
var a = t.step.dt * this.m_maxForce;
this.m_impulse.LengthSquared() > a * a && this.m_impulse.SelfMul(a / this.m_impulse.Length());
I.SubVV(this.m_impulse, o, s);
e.SelfMulAdd(this.m_invMassB, s);
n += this.m_invIB * I.CrossVV(this.m_rB, s);
t.velocities[this.m_indexB].w = n;
};
i.prototype.SolvePositionConstraints = function(t) {
return !0;
};
i.prototype.GetAnchorA = function(t) {
t.x = this.m_targetA.x;
t.y = this.m_targetA.y;
return t;
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
return I.MulSV(t, this.m_impulse, e);
};
i.prototype.GetReactionTorque = function(t) {
return 0;
};
i.prototype.Dump = function(t) {
t("Mouse joint dumping is not supported.\n");
};
i.prototype.ShiftOrigin = function(t) {
this.m_targetA.SelfSub(t);
};
i.SolveVelocityConstraints_s_Cdot = new I();
i.SolveVelocityConstraints_s_impulse = new I();
i.SolveVelocityConstraints_s_oldImpulse = new I();
return i;
})(_i), Ti = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_prismaticJoint) || this;
i.localAnchorA = new I();
i.localAnchorB = new I();
i.localAxisA = new I(1, 0);
i.referenceAngle = 0;
i.enableLimit = !1;
i.lowerTranslation = 0;
i.upperTranslation = 0;
i.enableMotor = !1;
i.maxMotorForce = 0;
i.motorSpeed = 0;
return i;
}
i.prototype.Initialize = function(t, e, i, n) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(i, this.localAnchorB);
this.bodyA.GetLocalVector(n, this.localAxisA);
this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
};
return i;
})(fi), Ei = (function(i) {
$e(n, i);
function n(n) {
var r = i.call(this, n) || this;
r.m_localAnchorA = new I();
r.m_localAnchorB = new I();
r.m_localXAxisA = new I();
r.m_localYAxisA = new I();
r.m_referenceAngle = 0;
r.m_impulse = new O(0, 0, 0);
r.m_motorImpulse = 0;
r.m_lowerTranslation = 0;
r.m_upperTranslation = 0;
r.m_maxMotorForce = 0;
r.m_motorSpeed = 0;
r.m_enableLimit = !1;
r.m_enableMotor = !1;
r.m_limitState = t.b2LimitState.e_inactiveLimit;
r.m_indexA = 0;
r.m_indexB = 0;
r.m_localCenterA = new I();
r.m_localCenterB = new I();
r.m_invMassA = 0;
r.m_invMassB = 0;
r.m_invIA = 0;
r.m_invIB = 0;
r.m_axis = new I(0, 0);
r.m_perp = new I(0, 0);
r.m_s1 = 0;
r.m_s2 = 0;
r.m_a1 = 0;
r.m_a2 = 0;
r.m_K = new V();
r.m_K3 = new V();
r.m_K2 = new L();
r.m_motorMass = 0;
r.m_qA = new N();
r.m_qB = new N();
r.m_lalcA = new I();
r.m_lalcB = new I();
r.m_rA = new I();
r.m_rB = new I();
r.m_localAnchorA.Copy(e(n.localAnchorA, I.ZERO));
r.m_localAnchorB.Copy(e(n.localAnchorB, I.ZERO));
r.m_localXAxisA.Copy(e(n.localAxisA, new I(1, 0))).SelfNormalize();
I.CrossOneV(r.m_localXAxisA, r.m_localYAxisA);
r.m_referenceAngle = e(n.referenceAngle, 0);
r.m_lowerTranslation = e(n.lowerTranslation, 0);
r.m_upperTranslation = e(n.upperTranslation, 0);
r.m_maxMotorForce = e(n.maxMotorForce, 0);
r.m_motorSpeed = e(n.motorSpeed, 0);
r.m_enableLimit = e(n.enableLimit, !1);
r.m_enableMotor = e(n.enableMotor, !1);
return r;
}
n.prototype.InitVelocityConstraints = function(e) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var i = e.positions[this.m_indexA].c, r = e.positions[this.m_indexA].a, s = e.velocities[this.m_indexA].v, o = e.velocities[this.m_indexA].w, a = e.positions[this.m_indexB].c, l = e.positions[this.m_indexB].a, u = e.velocities[this.m_indexB].v, h = e.velocities[this.m_indexB].w, f = this.m_qA.SetAngle(r), _ = this.m_qB.SetAngle(l);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var d = N.MulRV(f, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var p = N.MulRV(_, this.m_lalcB, this.m_rB), m = I.AddVV(I.SubVV(a, i, I.s_t0), I.SubVV(p, d, I.s_t1), n.InitVelocityConstraints_s_d), y = this.m_invMassA, g = this.m_invMassB, b = this.m_invIA, C = this.m_invIB;
N.MulRV(f, this.m_localXAxisA, this.m_axis);
this.m_a1 = I.CrossVV(I.AddVV(m, d, I.s_t0), this.m_axis);
this.m_a2 = I.CrossVV(p, this.m_axis);
this.m_motorMass = y + g + b * this.m_a1 * this.m_a1 + C * this.m_a2 * this.m_a2;
this.m_motorMass > 0 && (this.m_motorMass = 1 / this.m_motorMass);
N.MulRV(f, this.m_localYAxisA, this.m_perp);
this.m_s1 = I.CrossVV(I.AddVV(m, d, I.s_t0), this.m_perp);
this.m_s2 = I.CrossVV(p, this.m_perp);
this.m_K.ex.x = y + g + b * this.m_s1 * this.m_s1 + C * this.m_s2 * this.m_s2;
this.m_K.ex.y = b * this.m_s1 + C * this.m_s2;
this.m_K.ex.z = b * this.m_s1 * this.m_a1 + C * this.m_s2 * this.m_a2;
this.m_K.ey.x = this.m_K.ex.y;
this.m_K.ey.y = b + C;
0 === this.m_K.ey.y && (this.m_K.ey.y = 1);
this.m_K.ey.z = b * this.m_a1 + C * this.m_a2;
this.m_K.ez.x = this.m_K.ex.z;
this.m_K.ez.y = this.m_K.ey.z;
this.m_K.ez.z = y + g + b * this.m_a1 * this.m_a1 + C * this.m_a2 * this.m_a2;
if (this.m_enableLimit) {
var x = I.DotVV(this.m_axis, m);
if (v(this.m_upperTranslation - this.m_lowerTranslation) < 2 * c) this.m_limitState = t.b2LimitState.e_equalLimits; else if (x <= this.m_lowerTranslation) {
if (this.m_limitState !== t.b2LimitState.e_atLowerLimit) {
this.m_limitState = t.b2LimitState.e_atLowerLimit;
this.m_impulse.z = 0;
}
} else if (x >= this.m_upperTranslation) {
if (this.m_limitState !== t.b2LimitState.e_atUpperLimit) {
this.m_limitState = t.b2LimitState.e_atUpperLimit;
this.m_impulse.z = 0;
}
} else {
this.m_limitState = t.b2LimitState.e_inactiveLimit;
this.m_impulse.z = 0;
}
} else {
this.m_limitState = t.b2LimitState.e_inactiveLimit;
this.m_impulse.z = 0;
}
this.m_enableMotor || (this.m_motorImpulse = 0);
if (e.step.warmStarting) {
this.m_impulse.SelfMul(e.step.dtRatio);
this.m_motorImpulse *= e.step.dtRatio;
var A = I.AddVV(I.MulSV(this.m_impulse.x, this.m_perp, I.s_t0), I.MulSV(this.m_motorImpulse + this.m_impulse.z, this.m_axis, I.s_t1), n.InitVelocityConstraints_s_P), S = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1, w = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;
s.SelfMulSub(y, A);
o -= b * S;
u.SelfMulAdd(g, A);
h += C * w;
} else {
this.m_impulse.SetZero();
this.m_motorImpulse = 0;
}
e.velocities[this.m_indexA].w = o;
e.velocities[this.m_indexB].w = h;
};
n.prototype.SolveVelocityConstraints = function(e) {
var i = e.velocities[this.m_indexA].v, r = e.velocities[this.m_indexA].w, s = e.velocities[this.m_indexB].v, o = e.velocities[this.m_indexB].w, a = this.m_invMassA, c = this.m_invMassB, l = this.m_invIA, u = this.m_invIB;
if (this.m_enableMotor && this.m_limitState !== t.b2LimitState.e_equalLimits) {
var h = I.DotVV(this.m_axis, I.SubVV(s, i, I.s_t0)) + this.m_a2 * o - this.m_a1 * r, f = this.m_motorMass * (this.m_motorSpeed - h), _ = this.m_motorImpulse, d = e.step.dt * this.m_maxMotorForce;
this.m_motorImpulse = C(this.m_motorImpulse + f, -d, d);
f = this.m_motorImpulse - _;
var p = I.MulSV(f, this.m_axis, n.SolveVelocityConstraints_s_P), m = f * this.m_a1, y = f * this.m_a2;
i.SelfMulSub(a, p);
r -= l * m;
s.SelfMulAdd(c, p);
o += u * y;
}
var v = I.DotVV(this.m_perp, I.SubVV(s, i, I.s_t0)) + this.m_s2 * o - this.m_s1 * r, x = o - r;
if (this.m_enableLimit && this.m_limitState !== t.b2LimitState.e_inactiveLimit) {
var A = I.DotVV(this.m_axis, I.SubVV(s, i, I.s_t0)) + this.m_a2 * o - this.m_a1 * r, S = n.SolveVelocityConstraints_s_f1.Copy(this.m_impulse), w = this.m_K.Solve33(-v, -x, -A, n.SolveVelocityConstraints_s_df3);
this.m_impulse.SelfAdd(w);
this.m_limitState === t.b2LimitState.e_atLowerLimit ? this.m_impulse.z = b(this.m_impulse.z, 0) : this.m_limitState === t.b2LimitState.e_atUpperLimit && (this.m_impulse.z = g(this.m_impulse.z, 0));
var T = -v - (this.m_impulse.z - S.z) * this.m_K.ez.x, E = -x - (this.m_impulse.z - S.z) * this.m_K.ez.y, M = this.m_K.Solve22(T, E, n.SolveVelocityConstraints_s_f2r);
M.x += S.x;
M.y += S.y;
this.m_impulse.x = M.x;
this.m_impulse.y = M.y;
w.x = this.m_impulse.x - S.x;
w.y = this.m_impulse.y - S.y;
w.z = this.m_impulse.z - S.z;
p = I.AddVV(I.MulSV(w.x, this.m_perp, I.s_t0), I.MulSV(w.z, this.m_axis, I.s_t1), n.SolveVelocityConstraints_s_P), 
m = w.x * this.m_s1 + w.y + w.z * this.m_a1, y = w.x * this.m_s2 + w.y + w.z * this.m_a2;
i.SelfMulSub(a, p);
r -= l * m;
s.SelfMulAdd(c, p);
o += u * y;
} else {
var B = this.m_K.Solve22(-v, -x, n.SolveVelocityConstraints_s_df2);
this.m_impulse.x += B.x;
this.m_impulse.y += B.y;
p = I.MulSV(B.x, this.m_perp, n.SolveVelocityConstraints_s_P), m = B.x * this.m_s1 + B.y, 
y = B.x * this.m_s2 + B.y;
i.SelfMulSub(a, p);
r -= l * m;
s.SelfMulAdd(c, p);
o += u * y;
}
e.velocities[this.m_indexA].w = r;
e.velocities[this.m_indexB].w = o;
};
n.prototype.SolvePositionConstraints = function(t) {
var e = t.positions[this.m_indexA].c, i = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(i), a = this.m_qB.SetAngle(s), u = this.m_invMassA, h = this.m_invMassB, f = this.m_invIA, _ = this.m_invIB, d = N.MulRV(o, this.m_lalcA, this.m_rA), p = N.MulRV(a, this.m_lalcB, this.m_rB), m = I.SubVV(I.AddVV(r, p, I.s_t0), I.AddVV(e, d, I.s_t1), n.SolvePositionConstraints_s_d), y = N.MulRV(o, this.m_localXAxisA, this.m_axis), g = I.CrossVV(I.AddVV(m, d, I.s_t0), y), x = I.CrossVV(p, y), A = N.MulRV(o, this.m_localYAxisA, this.m_perp), S = I.CrossVV(I.AddVV(m, d, I.s_t0), A), w = I.CrossVV(p, A), T = n.SolvePositionConstraints_s_impulse, E = I.DotVV(A, m), M = s - i - this.m_referenceAngle, B = v(E), D = v(M), R = !1, P = 0;
if (this.m_enableLimit) {
var O = I.DotVV(y, m);
if (v(this.m_upperTranslation - this.m_lowerTranslation) < 2 * c) {
P = C(O, -.2, .2);
B = b(B, v(O));
R = !0;
} else if (O <= this.m_lowerTranslation) {
P = C(O - this.m_lowerTranslation + c, -.2, 0);
B = b(B, this.m_lowerTranslation - O);
R = !0;
} else if (O >= this.m_upperTranslation) {
P = C(O - this.m_upperTranslation - c, 0, .2);
B = b(B, O - this.m_upperTranslation);
R = !0;
}
}
if (R) {
var L = u + h + f * S * S + _ * w * w, V = f * S + _ * w, F = f * S * g + _ * w * x;
0 === (U = f + _) && (U = 1);
var z = f * g + _ * x, k = u + h + f * g * g + _ * x * x, G = this.m_K3;
G.ex.SetXYZ(L, V, F);
G.ey.SetXYZ(V, U, z);
G.ez.SetXYZ(F, z, k);
T = G.Solve33(-E, -M, -P, T);
} else {
var U;
L = u + h + f * S * S + _ * w * w, V = f * S + _ * w;
0 === (U = f + _) && (U = 1);
var j = this.m_K2;
j.ex.Set(L, V);
j.ey.Set(V, U);
var H = j.Solve(-E, -M, n.SolvePositionConstraints_s_impulse1);
T.x = H.x;
T.y = H.y;
T.z = 0;
}
var W = I.AddVV(I.MulSV(T.x, A, I.s_t0), I.MulSV(T.z, y, I.s_t1), n.SolvePositionConstraints_s_P), q = T.x * S + T.y + T.z * g, X = T.x * w + T.y + T.z * x;
e.SelfMulSub(u, W);
i -= f * q;
r.SelfMulAdd(h, W);
s += _ * X;
t.positions[this.m_indexA].a = i;
t.positions[this.m_indexB].a = s;
return B <= c && D <= l;
};
n.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
n.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
n.prototype.GetReactionForce = function(t, e) {
e.x = t * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x);
e.y = t * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y);
return e;
};
n.prototype.GetReactionTorque = function(t) {
return t * this.m_impulse.y;
};
n.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
n.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
n.prototype.GetLocalAxisA = function() {
return this.m_localXAxisA;
};
n.prototype.GetReferenceAngle = function() {
return this.m_referenceAngle;
};
n.prototype.GetJointTranslation = function() {
var t = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, n.GetJointTranslation_s_pA), e = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, n.GetJointTranslation_s_pB), i = I.SubVV(e, t, n.GetJointTranslation_s_d), r = this.m_bodyA.GetWorldVector(this.m_localXAxisA, n.GetJointTranslation_s_axis);
return I.DotVV(i, r);
};
n.prototype.GetJointSpeed = function() {
var t = this.m_bodyA, e = this.m_bodyB;
I.SubVV(this.m_localAnchorA, t.m_sweep.localCenter, this.m_lalcA);
var i = N.MulRV(t.m_xf.q, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, e.m_sweep.localCenter, this.m_lalcB);
var n = N.MulRV(e.m_xf.q, this.m_lalcB, this.m_rB), r = I.AddVV(t.m_sweep.c, i, I.s_t0), s = I.AddVV(e.m_sweep.c, n, I.s_t1), o = I.SubVV(s, r, I.s_t2), a = t.GetWorldVector(this.m_localXAxisA, this.m_axis), c = t.m_linearVelocity, l = e.m_linearVelocity, u = t.m_angularVelocity, h = e.m_angularVelocity;
return I.DotVV(o, I.CrossSV(u, a, I.s_t0)) + I.DotVV(a, I.SubVV(I.AddVCrossSV(l, h, n, I.s_t0), I.AddVCrossSV(c, u, i, I.s_t1), I.s_t0));
};
n.prototype.IsLimitEnabled = function() {
return this.m_enableLimit;
};
n.prototype.EnableLimit = function(t) {
if (t !== this.m_enableLimit) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_enableLimit = t;
this.m_impulse.z = 0;
}
};
n.prototype.GetLowerLimit = function() {
return this.m_lowerTranslation;
};
n.prototype.GetUpperLimit = function() {
return this.m_upperTranslation;
};
n.prototype.SetLimits = function(t, e) {
if (t !== this.m_lowerTranslation || e !== this.m_upperTranslation) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_lowerTranslation = t;
this.m_upperTranslation = e;
this.m_impulse.z = 0;
}
};
n.prototype.IsMotorEnabled = function() {
return this.m_enableMotor;
};
n.prototype.EnableMotor = function(t) {
if (t !== this.m_enableMotor) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_enableMotor = t;
}
};
n.prototype.SetMotorSpeed = function(t) {
if (t !== this.m_motorSpeed) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_motorSpeed = t;
}
};
n.prototype.GetMotorSpeed = function() {
return this.m_motorSpeed;
};
n.prototype.SetMaxMotorForce = function(t) {
if (t !== this.m_maxMotorForce) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_maxMotorForce = t;
}
};
n.prototype.GetMaxMotorForce = function() {
return this.m_maxMotorForce;
};
n.prototype.GetMotorForce = function(t) {
return t * this.m_motorImpulse;
};
n.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2PrismaticJointDef = new b2PrismaticJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.localAxisA.Set(%.15f, %.15f);\n", this.m_localXAxisA.x, this.m_localXAxisA.y);
t("  jd.referenceAngle = %.15f;\n", this.m_referenceAngle);
t("  jd.enableLimit = %s;\n", this.m_enableLimit ? "true" : "false");
t("  jd.lowerTranslation = %.15f;\n", this.m_lowerTranslation);
t("  jd.upperTranslation = %.15f;\n", this.m_upperTranslation);
t("  jd.enableMotor = %s;\n", this.m_enableMotor ? "true" : "false");
t("  jd.motorSpeed = %.15f;\n", this.m_motorSpeed);
t("  jd.maxMotorForce = %.15f;\n", this.m_maxMotorForce);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
n.InitVelocityConstraints_s_d = new I();
n.InitVelocityConstraints_s_P = new I();
n.SolveVelocityConstraints_s_P = new I();
n.SolveVelocityConstraints_s_f2r = new I();
n.SolveVelocityConstraints_s_f1 = new O();
n.SolveVelocityConstraints_s_df3 = new O();
n.SolveVelocityConstraints_s_df2 = new I();
n.SolvePositionConstraints_s_d = new I();
n.SolvePositionConstraints_s_impulse = new O();
n.SolvePositionConstraints_s_impulse1 = new I();
n.SolvePositionConstraints_s_P = new I();
n.GetJointTranslation_s_pA = new I();
n.GetJointTranslation_s_pB = new I();
n.GetJointTranslation_s_d = new I();
n.GetJointTranslation_s_axis = new I();
return n;
})(_i), Mi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_pulleyJoint) || this;
i.groundAnchorA = new I(-1, 1);
i.groundAnchorB = new I(1, 1);
i.localAnchorA = new I(-1, 0);
i.localAnchorB = new I(1, 0);
i.lengthA = 0;
i.lengthB = 0;
i.ratio = 1;
i.collideConnected = !0;
return i;
}
i.prototype.Initialize = function(t, e, i, n, r, s, o) {
this.bodyA = t;
this.bodyB = e;
this.groundAnchorA.Copy(i);
this.groundAnchorB.Copy(n);
this.bodyA.GetLocalPoint(r, this.localAnchorA);
this.bodyB.GetLocalPoint(s, this.localAnchorB);
this.lengthA = I.DistanceVV(r, i);
this.lengthB = I.DistanceVV(s, n);
this.ratio = o;
};
return i;
})(fi), Bi = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_groundAnchorA = new I();
n.m_groundAnchorB = new I();
n.m_lengthA = 0;
n.m_lengthB = 0;
n.m_localAnchorA = new I();
n.m_localAnchorB = new I();
n.m_constant = 0;
n.m_ratio = 0;
n.m_impulse = 0;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_uA = new I();
n.m_uB = new I();
n.m_rA = new I();
n.m_rB = new I();
n.m_localCenterA = new I();
n.m_localCenterB = new I();
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_mass = 0;
n.m_qA = new N();
n.m_qB = new N();
n.m_lalcA = new I();
n.m_lalcB = new I();
n.m_groundAnchorA.Copy(e(i.groundAnchorA, new I(-1, 1)));
n.m_groundAnchorB.Copy(e(i.groundAnchorB, new I(1, 0)));
n.m_localAnchorA.Copy(e(i.localAnchorA, new I(-1, 0)));
n.m_localAnchorB.Copy(e(i.localAnchorB, new I(1, 0)));
n.m_lengthA = e(i.lengthA, 0);
n.m_lengthB = e(i.lengthB, 0);
n.m_ratio = e(i.ratio, 1);
n.m_constant = e(i.lengthA, 0) + n.m_ratio * e(i.lengthB, 0);
n.m_impulse = 0;
return n;
}
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.velocities[this.m_indexA].v, s = t.velocities[this.m_indexA].w, o = t.positions[this.m_indexB].c, a = t.positions[this.m_indexB].a, l = t.velocities[this.m_indexB].v, u = t.velocities[this.m_indexB].w, h = this.m_qA.SetAngle(n), f = this.m_qB.SetAngle(a);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
N.MulRV(h, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
N.MulRV(f, this.m_lalcB, this.m_rB);
this.m_uA.Copy(e).SelfAdd(this.m_rA).SelfSub(this.m_groundAnchorA);
this.m_uB.Copy(o).SelfAdd(this.m_rB).SelfSub(this.m_groundAnchorB);
var _ = this.m_uA.Length(), d = this.m_uB.Length();
_ > 10 * c ? this.m_uA.SelfMul(1 / _) : this.m_uA.SetZero();
d > 10 * c ? this.m_uB.SelfMul(1 / d) : this.m_uB.SetZero();
var p = I.CrossVV(this.m_rA, this.m_uA), m = I.CrossVV(this.m_rB, this.m_uB), y = this.m_invMassA + this.m_invIA * p * p, v = this.m_invMassB + this.m_invIB * m * m;
this.m_mass = y + this.m_ratio * this.m_ratio * v;
this.m_mass > 0 && (this.m_mass = 1 / this.m_mass);
if (t.step.warmStarting) {
this.m_impulse *= t.step.dtRatio;
var g = I.MulSV(-this.m_impulse, this.m_uA, i.InitVelocityConstraints_s_PA), b = I.MulSV(-this.m_ratio * this.m_impulse, this.m_uB, i.InitVelocityConstraints_s_PB);
r.SelfMulAdd(this.m_invMassA, g);
s += this.m_invIA * I.CrossVV(this.m_rA, g);
l.SelfMulAdd(this.m_invMassB, b);
u += this.m_invIB * I.CrossVV(this.m_rB, b);
} else this.m_impulse = 0;
t.velocities[this.m_indexA].w = s;
t.velocities[this.m_indexB].w = u;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = I.AddVCrossSV(e, n, this.m_rA, i.SolveVelocityConstraints_s_vpA), a = I.AddVCrossSV(r, s, this.m_rB, i.SolveVelocityConstraints_s_vpB), c = -I.DotVV(this.m_uA, o) - this.m_ratio * I.DotVV(this.m_uB, a), l = -this.m_mass * c;
this.m_impulse += l;
var u = I.MulSV(-l, this.m_uA, i.SolveVelocityConstraints_s_PA), h = I.MulSV(-this.m_ratio * l, this.m_uB, i.SolveVelocityConstraints_s_PB);
e.SelfMulAdd(this.m_invMassA, u);
n += this.m_invIA * I.CrossVV(this.m_rA, u);
r.SelfMulAdd(this.m_invMassB, h);
s += this.m_invIB * I.CrossVV(this.m_rB, h);
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = s;
};
i.prototype.SolvePositionConstraints = function(t) {
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(n), a = this.m_qB.SetAngle(s);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var l = N.MulRV(o, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var u = N.MulRV(a, this.m_lalcB, this.m_rB), h = this.m_uA.Copy(e).SelfAdd(l).SelfSub(this.m_groundAnchorA), f = this.m_uB.Copy(r).SelfAdd(u).SelfSub(this.m_groundAnchorB), _ = h.Length(), d = f.Length();
_ > 10 * c ? h.SelfMul(1 / _) : h.SetZero();
d > 10 * c ? f.SelfMul(1 / d) : f.SetZero();
var p = I.CrossVV(l, h), m = I.CrossVV(u, f), y = this.m_invMassA + this.m_invIA * p * p, g = this.m_invMassB + this.m_invIB * m * m, b = y + this.m_ratio * this.m_ratio * g;
b > 0 && (b = 1 / b);
var C = this.m_constant - _ - this.m_ratio * d, x = v(C), A = -b * C, S = I.MulSV(-A, h, i.SolvePositionConstraints_s_PA), w = I.MulSV(-this.m_ratio * A, f, i.SolvePositionConstraints_s_PB);
e.SelfMulAdd(this.m_invMassA, S);
n += this.m_invIA * I.CrossVV(l, S);
r.SelfMulAdd(this.m_invMassB, w);
s += this.m_invIB * I.CrossVV(u, w);
t.positions[this.m_indexA].a = n;
t.positions[this.m_indexB].a = s;
return x < c;
};
i.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
e.x = t * this.m_impulse * this.m_uB.x;
e.y = t * this.m_impulse * this.m_uB.y;
return e;
};
i.prototype.GetReactionTorque = function(t) {
return 0;
};
i.prototype.GetGroundAnchorA = function() {
return this.m_groundAnchorA;
};
i.prototype.GetGroundAnchorB = function() {
return this.m_groundAnchorB;
};
i.prototype.GetLengthA = function() {
return this.m_lengthA;
};
i.prototype.GetLengthB = function() {
return this.m_lengthB;
};
i.prototype.GetRatio = function() {
return this.m_ratio;
};
i.prototype.GetCurrentLengthA = function() {
var t = this.m_bodyA.GetWorldPoint(this.m_localAnchorA, i.GetCurrentLengthA_s_p), e = this.m_groundAnchorA;
return I.DistanceVV(t, e);
};
i.prototype.GetCurrentLengthB = function() {
var t = this.m_bodyB.GetWorldPoint(this.m_localAnchorB, i.GetCurrentLengthB_s_p), e = this.m_groundAnchorB;
return I.DistanceVV(t, e);
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2PulleyJointDef = new b2PulleyJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.groundAnchorA.Set(%.15f, %.15f);\n", this.m_groundAnchorA.x, this.m_groundAnchorA.y);
t("  jd.groundAnchorB.Set(%.15f, %.15f);\n", this.m_groundAnchorB.x, this.m_groundAnchorB.y);
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.lengthA = %.15f;\n", this.m_lengthA);
t("  jd.lengthB = %.15f;\n", this.m_lengthB);
t("  jd.ratio = %.15f;\n", this.m_ratio);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.prototype.ShiftOrigin = function(t) {
this.m_groundAnchorA.SelfSub(t);
this.m_groundAnchorB.SelfSub(t);
};
i.InitVelocityConstraints_s_PA = new I();
i.InitVelocityConstraints_s_PB = new I();
i.SolveVelocityConstraints_s_vpA = new I();
i.SolveVelocityConstraints_s_vpB = new I();
i.SolveVelocityConstraints_s_PA = new I();
i.SolveVelocityConstraints_s_PB = new I();
i.SolvePositionConstraints_s_PA = new I();
i.SolvePositionConstraints_s_PB = new I();
i.GetCurrentLengthA_s_p = new I();
i.GetCurrentLengthB_s_p = new I();
return i;
})(_i), Di = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_revoluteJoint) || this;
i.localAnchorA = new I(0, 0);
i.localAnchorB = new I(0, 0);
i.referenceAngle = 0;
i.enableLimit = !1;
i.lowerAngle = 0;
i.upperAngle = 0;
i.enableMotor = !1;
i.motorSpeed = 0;
i.maxMotorTorque = 0;
return i;
}
i.prototype.Initialize = function(t, e, i) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(i, this.localAnchorB);
this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
};
return i;
})(fi), Ri = (function(i) {
$e(n, i);
function n(n) {
var r = i.call(this, n) || this;
r.m_localAnchorA = new I();
r.m_localAnchorB = new I();
r.m_impulse = new O();
r.m_motorImpulse = 0;
r.m_enableMotor = !1;
r.m_maxMotorTorque = 0;
r.m_motorSpeed = 0;
r.m_enableLimit = !1;
r.m_referenceAngle = 0;
r.m_lowerAngle = 0;
r.m_upperAngle = 0;
r.m_indexA = 0;
r.m_indexB = 0;
r.m_rA = new I();
r.m_rB = new I();
r.m_localCenterA = new I();
r.m_localCenterB = new I();
r.m_invMassA = 0;
r.m_invMassB = 0;
r.m_invIA = 0;
r.m_invIB = 0;
r.m_mass = new V();
r.m_motorMass = 0;
r.m_limitState = t.b2LimitState.e_inactiveLimit;
r.m_qA = new N();
r.m_qB = new N();
r.m_lalcA = new I();
r.m_lalcB = new I();
r.m_K = new L();
r.m_localAnchorA.Copy(e(n.localAnchorA, I.ZERO));
r.m_localAnchorB.Copy(e(n.localAnchorB, I.ZERO));
r.m_referenceAngle = e(n.referenceAngle, 0);
r.m_impulse.SetZero();
r.m_motorImpulse = 0;
r.m_lowerAngle = e(n.lowerAngle, 0);
r.m_upperAngle = e(n.upperAngle, 0);
r.m_maxMotorTorque = e(n.maxMotorTorque, 0);
r.m_motorSpeed = e(n.motorSpeed, 0);
r.m_enableLimit = e(n.enableLimit, !1);
r.m_enableMotor = e(n.enableMotor, !1);
r.m_limitState = t.b2LimitState.e_inactiveLimit;
return r;
}
n.prototype.InitVelocityConstraints = function(e) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var i = e.positions[this.m_indexA].a, r = e.velocities[this.m_indexA].v, s = e.velocities[this.m_indexA].w, o = e.positions[this.m_indexB].a, a = e.velocities[this.m_indexB].v, c = e.velocities[this.m_indexB].w, u = this.m_qA.SetAngle(i), h = this.m_qB.SetAngle(o);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
N.MulRV(u, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
N.MulRV(h, this.m_lalcB, this.m_rB);
var f = this.m_invMassA, _ = this.m_invMassB, d = this.m_invIA, p = this.m_invIB, m = d + p === 0;
this.m_mass.ex.x = f + _ + this.m_rA.y * this.m_rA.y * d + this.m_rB.y * this.m_rB.y * p;
this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * d - this.m_rB.y * this.m_rB.x * p;
this.m_mass.ez.x = -this.m_rA.y * d - this.m_rB.y * p;
this.m_mass.ex.y = this.m_mass.ey.x;
this.m_mass.ey.y = f + _ + this.m_rA.x * this.m_rA.x * d + this.m_rB.x * this.m_rB.x * p;
this.m_mass.ez.y = this.m_rA.x * d + this.m_rB.x * p;
this.m_mass.ex.z = this.m_mass.ez.x;
this.m_mass.ey.z = this.m_mass.ez.y;
this.m_mass.ez.z = d + p;
this.m_motorMass = d + p;
this.m_motorMass > 0 && (this.m_motorMass = 1 / this.m_motorMass);
this.m_enableMotor && !m || (this.m_motorImpulse = 0);
if (this.m_enableLimit && !m) {
var y = o - i - this.m_referenceAngle;
if (v(this.m_upperAngle - this.m_lowerAngle) < 2 * l) this.m_limitState = t.b2LimitState.e_equalLimits; else if (y <= this.m_lowerAngle) {
this.m_limitState !== t.b2LimitState.e_atLowerLimit && (this.m_impulse.z = 0);
this.m_limitState = t.b2LimitState.e_atLowerLimit;
} else if (y >= this.m_upperAngle) {
this.m_limitState !== t.b2LimitState.e_atUpperLimit && (this.m_impulse.z = 0);
this.m_limitState = t.b2LimitState.e_atUpperLimit;
} else {
this.m_limitState = t.b2LimitState.e_inactiveLimit;
this.m_impulse.z = 0;
}
} else this.m_limitState = t.b2LimitState.e_inactiveLimit;
if (e.step.warmStarting) {
this.m_impulse.SelfMul(e.step.dtRatio);
this.m_motorImpulse *= e.step.dtRatio;
var g = n.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);
r.SelfMulSub(f, g);
s -= d * (I.CrossVV(this.m_rA, g) + this.m_motorImpulse + this.m_impulse.z);
a.SelfMulAdd(_, g);
c += p * (I.CrossVV(this.m_rB, g) + this.m_motorImpulse + this.m_impulse.z);
} else {
this.m_impulse.SetZero();
this.m_motorImpulse = 0;
}
e.velocities[this.m_indexA].w = s;
e.velocities[this.m_indexB].w = c;
};
n.prototype.SolveVelocityConstraints = function(e) {
var i = e.velocities[this.m_indexA].v, r = e.velocities[this.m_indexA].w, s = e.velocities[this.m_indexB].v, o = e.velocities[this.m_indexB].w, a = this.m_invMassA, c = this.m_invMassB, l = this.m_invIA, u = this.m_invIB, h = l + u === 0;
if (this.m_enableMotor && this.m_limitState !== t.b2LimitState.e_equalLimits && !h) {
var f = o - r - this.m_motorSpeed, _ = -this.m_motorMass * f, d = this.m_motorImpulse, p = e.step.dt * this.m_maxMotorTorque;
this.m_motorImpulse = C(this.m_motorImpulse + _, -p, p);
r -= l * (_ = this.m_motorImpulse - d);
o += u * _;
}
if (this.m_enableLimit && this.m_limitState !== t.b2LimitState.e_inactiveLimit && !h) {
var m = I.SubVV(I.AddVCrossSV(s, o, this.m_rB, I.s_t0), I.AddVCrossSV(i, r, this.m_rA, I.s_t1), n.SolveVelocityConstraints_s_Cdot1), y = o - r, v = this.m_mass.Solve33(m.x, m.y, y, n.SolveVelocityConstraints_s_impulse_v3).SelfNeg();
if (this.m_limitState === t.b2LimitState.e_equalLimits) this.m_impulse.SelfAdd(v); else if (this.m_limitState === t.b2LimitState.e_atLowerLimit) {
if (this.m_impulse.z + v.z < 0) {
var g = -m.x + this.m_impulse.z * this.m_mass.ez.x, b = -m.y + this.m_impulse.z * this.m_mass.ez.y, x = this.m_mass.Solve22(g, b, n.SolveVelocityConstraints_s_reduced_v2);
v.x = x.x;
v.y = x.y;
v.z = -this.m_impulse.z;
this.m_impulse.x += x.x;
this.m_impulse.y += x.y;
this.m_impulse.z = 0;
} else this.m_impulse.SelfAdd(v);
} else if (this.m_limitState === t.b2LimitState.e_atUpperLimit) {
if (this.m_impulse.z + v.z > 0) {
g = -m.x + this.m_impulse.z * this.m_mass.ez.x, b = -m.y + this.m_impulse.z * this.m_mass.ez.y, 
x = this.m_mass.Solve22(g, b, n.SolveVelocityConstraints_s_reduced_v2);
v.x = x.x;
v.y = x.y;
v.z = -this.m_impulse.z;
this.m_impulse.x += x.x;
this.m_impulse.y += x.y;
this.m_impulse.z = 0;
} else this.m_impulse.SelfAdd(v);
}
var A = n.SolveVelocityConstraints_s_P.Set(v.x, v.y);
i.SelfMulSub(a, A);
r -= l * (I.CrossVV(this.m_rA, A) + v.z);
s.SelfMulAdd(c, A);
o += u * (I.CrossVV(this.m_rB, A) + v.z);
} else {
var S = I.SubVV(I.AddVCrossSV(s, o, this.m_rB, I.s_t0), I.AddVCrossSV(i, r, this.m_rA, I.s_t1), n.SolveVelocityConstraints_s_Cdot_v2), w = this.m_mass.Solve22(-S.x, -S.y, n.SolveVelocityConstraints_s_impulse_v2);
this.m_impulse.x += w.x;
this.m_impulse.y += w.y;
i.SelfMulSub(a, w);
r -= l * I.CrossVV(this.m_rA, w);
s.SelfMulAdd(c, w);
o += u * I.CrossVV(this.m_rB, w);
}
e.velocities[this.m_indexA].w = r;
e.velocities[this.m_indexB].w = o;
};
n.prototype.SolvePositionConstraints = function(e) {
var i, r = e.positions[this.m_indexA].c, s = e.positions[this.m_indexA].a, o = e.positions[this.m_indexB].c, a = e.positions[this.m_indexB].a, u = this.m_qA.SetAngle(s), h = this.m_qB.SetAngle(a), f = 0, _ = this.m_invIA + this.m_invIB === 0;
if (this.m_enableLimit && this.m_limitState !== t.b2LimitState.e_inactiveLimit && !_) {
var d = a - s - this.m_referenceAngle, p = 0;
if (this.m_limitState === t.b2LimitState.e_equalLimits) {
var m = C(d - this.m_lowerAngle, -.13962634015955555, .13962634015955555);
p = -this.m_motorMass * m;
f = v(m);
} else if (this.m_limitState === t.b2LimitState.e_atLowerLimit) {
f = -(m = d - this.m_lowerAngle);
m = C(m + l, -.13962634015955555, 0);
p = -this.m_motorMass * m;
} else if (this.m_limitState === t.b2LimitState.e_atUpperLimit) {
f = m = d - this.m_upperAngle;
m = C(m - l, 0, .13962634015955555);
p = -this.m_motorMass * m;
}
s -= this.m_invIA * p;
a += this.m_invIB * p;
}
u.SetAngle(s);
h.SetAngle(a);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var y = N.MulRV(u, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var g = N.MulRV(h, this.m_lalcB, this.m_rB), b = I.SubVV(I.AddVV(o, g, I.s_t0), I.AddVV(r, y, I.s_t1), n.SolvePositionConstraints_s_C_v2);
i = b.Length();
var x = this.m_invMassA, A = this.m_invMassB, S = this.m_invIA, w = this.m_invIB, T = this.m_K;
T.ex.x = x + A + S * y.y * y.y + w * g.y * g.y;
T.ex.y = -S * y.x * y.y - w * g.x * g.y;
T.ey.x = T.ex.y;
T.ey.y = x + A + S * y.x * y.x + w * g.x * g.x;
var E = T.Solve(b.x, b.y, n.SolvePositionConstraints_s_impulse).SelfNeg();
r.SelfMulSub(x, E);
s -= S * I.CrossVV(y, E);
o.SelfMulAdd(A, E);
a += w * I.CrossVV(g, E);
e.positions[this.m_indexA].a = s;
e.positions[this.m_indexB].a = a;
return i <= c && f <= l;
};
n.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
n.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
n.prototype.GetReactionForce = function(t, e) {
e.x = t * this.m_impulse.x;
e.y = t * this.m_impulse.y;
return e;
};
n.prototype.GetReactionTorque = function(t) {
return t * this.m_impulse.z;
};
n.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
n.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
n.prototype.GetReferenceAngle = function() {
return this.m_referenceAngle;
};
n.prototype.GetJointAngle = function() {
return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;
};
n.prototype.GetJointSpeed = function() {
return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;
};
n.prototype.IsMotorEnabled = function() {
return this.m_enableMotor;
};
n.prototype.EnableMotor = function(t) {
if (t !== this.m_enableMotor) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_enableMotor = t;
}
};
n.prototype.GetMotorTorque = function(t) {
return t * this.m_motorImpulse;
};
n.prototype.GetMotorSpeed = function() {
return this.m_motorSpeed;
};
n.prototype.SetMaxMotorTorque = function(t) {
if (t !== this.m_maxMotorTorque) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_maxMotorTorque = t;
}
};
n.prototype.GetMaxMotorTorque = function() {
return this.m_maxMotorTorque;
};
n.prototype.IsLimitEnabled = function() {
return this.m_enableLimit;
};
n.prototype.EnableLimit = function(t) {
if (t !== this.m_enableLimit) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_enableLimit = t;
this.m_impulse.z = 0;
}
};
n.prototype.GetLowerLimit = function() {
return this.m_lowerAngle;
};
n.prototype.GetUpperLimit = function() {
return this.m_upperAngle;
};
n.prototype.SetLimits = function(t, e) {
if (t !== this.m_lowerAngle || e !== this.m_upperAngle) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_impulse.z = 0;
this.m_lowerAngle = t;
this.m_upperAngle = e;
}
};
n.prototype.SetMotorSpeed = function(t) {
if (t !== this.m_motorSpeed) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_motorSpeed = t;
}
};
n.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2RevoluteJointDef = new b2RevoluteJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.referenceAngle = %.15f;\n", this.m_referenceAngle);
t("  jd.enableLimit = %s;\n", this.m_enableLimit ? "true" : "false");
t("  jd.lowerAngle = %.15f;\n", this.m_lowerAngle);
t("  jd.upperAngle = %.15f;\n", this.m_upperAngle);
t("  jd.enableMotor = %s;\n", this.m_enableMotor ? "true" : "false");
t("  jd.motorSpeed = %.15f;\n", this.m_motorSpeed);
t("  jd.maxMotorTorque = %.15f;\n", this.m_maxMotorTorque);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
n.InitVelocityConstraints_s_P = new I();
n.SolveVelocityConstraints_s_P = new I();
n.SolveVelocityConstraints_s_Cdot_v2 = new I();
n.SolveVelocityConstraints_s_Cdot1 = new I();
n.SolveVelocityConstraints_s_impulse_v3 = new O();
n.SolveVelocityConstraints_s_reduced_v2 = new I();
n.SolveVelocityConstraints_s_impulse_v2 = new I();
n.SolvePositionConstraints_s_C_v2 = new I();
n.SolvePositionConstraints_s_impulse = new I();
return n;
})(_i), Ii = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_ropeJoint) || this;
i.localAnchorA = new I(-1, 0);
i.localAnchorB = new I(1, 0);
i.maxLength = 0;
return i;
}
return i;
})(fi), Pi = (function(i) {
$e(n, i);
function n(n) {
var r = i.call(this, n) || this;
r.m_localAnchorA = new I();
r.m_localAnchorB = new I();
r.m_maxLength = 0;
r.m_length = 0;
r.m_impulse = 0;
r.m_indexA = 0;
r.m_indexB = 0;
r.m_u = new I();
r.m_rA = new I();
r.m_rB = new I();
r.m_localCenterA = new I();
r.m_localCenterB = new I();
r.m_invMassA = 0;
r.m_invMassB = 0;
r.m_invIA = 0;
r.m_invIB = 0;
r.m_mass = 0;
r.m_state = t.b2LimitState.e_inactiveLimit;
r.m_qA = new N();
r.m_qB = new N();
r.m_lalcA = new I();
r.m_lalcB = new I();
r.m_localAnchorA.Copy(e(n.localAnchorA, new I(-1, 0)));
r.m_localAnchorB.Copy(e(n.localAnchorB, new I(1, 0)));
r.m_maxLength = e(n.maxLength, 0);
return r;
}
n.prototype.InitVelocityConstraints = function(e) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var i = e.positions[this.m_indexA].c, r = e.positions[this.m_indexA].a, s = e.velocities[this.m_indexA].v, o = e.velocities[this.m_indexA].w, a = e.positions[this.m_indexB].c, l = e.positions[this.m_indexB].a, u = e.velocities[this.m_indexB].v, h = e.velocities[this.m_indexB].w, f = this.m_qA.SetAngle(r), _ = this.m_qB.SetAngle(l);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
N.MulRV(f, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
N.MulRV(_, this.m_lalcB, this.m_rB);
this.m_u.Copy(a).SelfAdd(this.m_rB).SelfSub(i).SelfSub(this.m_rA);
this.m_length = this.m_u.Length();
var d = this.m_length - this.m_maxLength;
this.m_state = d > 0 ? t.b2LimitState.e_atUpperLimit : t.b2LimitState.e_inactiveLimit;
if (this.m_length > c) {
this.m_u.SelfMul(1 / this.m_length);
var p = I.CrossVV(this.m_rA, this.m_u), m = I.CrossVV(this.m_rB, this.m_u), y = this.m_invMassA + this.m_invIA * p * p + this.m_invMassB + this.m_invIB * m * m;
this.m_mass = 0 !== y ? 1 / y : 0;
if (e.step.warmStarting) {
this.m_impulse *= e.step.dtRatio;
var v = I.MulSV(this.m_impulse, this.m_u, n.InitVelocityConstraints_s_P);
s.SelfMulSub(this.m_invMassA, v);
o -= this.m_invIA * I.CrossVV(this.m_rA, v);
u.SelfMulAdd(this.m_invMassB, v);
h += this.m_invIB * I.CrossVV(this.m_rB, v);
} else this.m_impulse = 0;
e.velocities[this.m_indexA].w = o;
e.velocities[this.m_indexB].w = h;
} else {
this.m_u.SetZero();
this.m_mass = 0;
this.m_impulse = 0;
}
};
n.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, i = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = I.AddVCrossSV(e, i, this.m_rA, n.SolveVelocityConstraints_s_vpA), a = I.AddVCrossSV(r, s, this.m_rB, n.SolveVelocityConstraints_s_vpB), c = this.m_length - this.m_maxLength, l = I.DotVV(this.m_u, I.SubVV(a, o, I.s_t0));
c < 0 && (l += t.step.inv_dt * c);
var u = -this.m_mass * l, h = this.m_impulse;
this.m_impulse = g(0, this.m_impulse + u);
u = this.m_impulse - h;
var f = I.MulSV(u, this.m_u, n.SolveVelocityConstraints_s_P);
e.SelfMulSub(this.m_invMassA, f);
i -= this.m_invIA * I.CrossVV(this.m_rA, f);
r.SelfMulAdd(this.m_invMassB, f);
s += this.m_invIB * I.CrossVV(this.m_rB, f);
t.velocities[this.m_indexA].w = i;
t.velocities[this.m_indexB].w = s;
};
n.prototype.SolvePositionConstraints = function(t) {
var e = t.positions[this.m_indexA].c, i = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(i), a = this.m_qB.SetAngle(s);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var l = N.MulRV(o, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var u = N.MulRV(a, this.m_lalcB, this.m_rB), h = this.m_u.Copy(r).SelfAdd(u).SelfSub(e).SelfSub(l), f = h.Normalize(), _ = f - this.m_maxLength;
_ = C(_, 0, .2);
var d = -this.m_mass * _, p = I.MulSV(d, h, n.SolvePositionConstraints_s_P);
e.SelfMulSub(this.m_invMassA, p);
i -= this.m_invIA * I.CrossVV(l, p);
r.SelfMulAdd(this.m_invMassB, p);
s += this.m_invIB * I.CrossVV(u, p);
t.positions[this.m_indexA].a = i;
t.positions[this.m_indexB].a = s;
return f - this.m_maxLength < c;
};
n.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
n.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
n.prototype.GetReactionForce = function(t, e) {
return I.MulSV(t * this.m_impulse, this.m_u, e);
};
n.prototype.GetReactionTorque = function(t) {
return 0;
};
n.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
n.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
n.prototype.SetMaxLength = function(t) {
this.m_maxLength = t;
};
n.prototype.GetMaxLength = function() {
return this.m_maxLength;
};
n.prototype.GetLimitState = function() {
return this.m_state;
};
n.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2RopeJointDef = new b2RopeJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.maxLength = %.15f;\n", this.m_maxLength);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
n.InitVelocityConstraints_s_P = new I();
n.SolveVelocityConstraints_s_vpA = new I();
n.SolveVelocityConstraints_s_vpB = new I();
n.SolveVelocityConstraints_s_P = new I();
n.SolvePositionConstraints_s_P = new I();
return n;
})(_i), Oi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_weldJoint) || this;
i.localAnchorA = new I();
i.localAnchorB = new I();
i.referenceAngle = 0;
i.frequencyHz = 0;
i.dampingRatio = 0;
return i;
}
i.prototype.Initialize = function(t, e, i) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(i, this.localAnchorB);
this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
};
return i;
})(fi), Li = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_frequencyHz = 0;
n.m_dampingRatio = 0;
n.m_bias = 0;
n.m_localAnchorA = new I();
n.m_localAnchorB = new I();
n.m_referenceAngle = 0;
n.m_gamma = 0;
n.m_impulse = new O(0, 0, 0);
n.m_indexA = 0;
n.m_indexB = 0;
n.m_rA = new I();
n.m_rB = new I();
n.m_localCenterA = new I();
n.m_localCenterB = new I();
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_mass = new V();
n.m_qA = new N();
n.m_qB = new N();
n.m_lalcA = new I();
n.m_lalcB = new I();
n.m_K = new V();
n.m_frequencyHz = e(i.frequencyHz, 0);
n.m_dampingRatio = e(i.dampingRatio, 0);
n.m_localAnchorA.Copy(e(i.localAnchorA, I.ZERO));
n.m_localAnchorB.Copy(e(i.localAnchorB, I.ZERO));
n.m_referenceAngle = e(i.referenceAngle, 0);
n.m_impulse.SetZero();
return n;
}
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = t.positions[this.m_indexA].a, n = t.velocities[this.m_indexA].v, r = t.velocities[this.m_indexA].w, o = t.positions[this.m_indexB].a, a = t.velocities[this.m_indexB].v, c = t.velocities[this.m_indexB].w, l = this.m_qA.SetAngle(e), u = this.m_qB.SetAngle(o);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
N.MulRV(l, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
N.MulRV(u, this.m_lalcB, this.m_rB);
var h = this.m_invMassA, f = this.m_invMassB, _ = this.m_invIA, d = this.m_invIB, p = this.m_K;
p.ex.x = h + f + this.m_rA.y * this.m_rA.y * _ + this.m_rB.y * this.m_rB.y * d;
p.ey.x = -this.m_rA.y * this.m_rA.x * _ - this.m_rB.y * this.m_rB.x * d;
p.ez.x = -this.m_rA.y * _ - this.m_rB.y * d;
p.ex.y = p.ey.x;
p.ey.y = h + f + this.m_rA.x * this.m_rA.x * _ + this.m_rB.x * this.m_rB.x * d;
p.ez.y = this.m_rA.x * _ + this.m_rB.x * d;
p.ex.z = p.ez.x;
p.ey.z = p.ez.y;
p.ez.z = _ + d;
if (this.m_frequencyHz > 0) {
p.GetInverse22(this.m_mass);
var m = _ + d, y = m > 0 ? 1 / m : 0, v = o - e - this.m_referenceAngle, g = 2 * s * this.m_frequencyHz, b = 2 * y * this.m_dampingRatio * g, C = y * g * g, x = t.step.dt;
this.m_gamma = x * (b + x * C);
this.m_gamma = 0 !== this.m_gamma ? 1 / this.m_gamma : 0;
this.m_bias = v * x * C * this.m_gamma;
m += this.m_gamma;
this.m_mass.ez.z = 0 !== m ? 1 / m : 0;
} else {
p.GetSymInverse33(this.m_mass);
this.m_gamma = 0;
this.m_bias = 0;
}
if (t.step.warmStarting) {
this.m_impulse.SelfMul(t.step.dtRatio);
var A = i.InitVelocityConstraints_s_P.Set(this.m_impulse.x, this.m_impulse.y);
n.SelfMulSub(h, A);
r -= _ * (I.CrossVV(this.m_rA, A) + this.m_impulse.z);
a.SelfMulAdd(f, A);
c += d * (I.CrossVV(this.m_rB, A) + this.m_impulse.z);
} else this.m_impulse.SetZero();
t.velocities[this.m_indexA].w = r;
t.velocities[this.m_indexB].w = c;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = t.velocities[this.m_indexA].v, n = t.velocities[this.m_indexA].w, r = t.velocities[this.m_indexB].v, s = t.velocities[this.m_indexB].w, o = this.m_invMassA, a = this.m_invMassB, c = this.m_invIA, l = this.m_invIB;
if (this.m_frequencyHz > 0) {
var u = s - n, h = -this.m_mass.ez.z * (u + this.m_bias + this.m_gamma * this.m_impulse.z);
this.m_impulse.z += h;
n -= c * h;
s += l * h;
var f = I.SubVV(I.AddVCrossSV(r, s, this.m_rB, I.s_t0), I.AddVCrossSV(e, n, this.m_rA, I.s_t1), i.SolveVelocityConstraints_s_Cdot1), _ = V.MulM33XY(this.m_mass, f.x, f.y, i.SolveVelocityConstraints_s_impulse1).SelfNeg();
this.m_impulse.x += _.x;
this.m_impulse.y += _.y;
var d = _;
e.SelfMulSub(o, d);
n -= c * I.CrossVV(this.m_rA, d);
r.SelfMulAdd(a, d);
s += l * I.CrossVV(this.m_rB, d);
} else {
f = I.SubVV(I.AddVCrossSV(r, s, this.m_rB, I.s_t0), I.AddVCrossSV(e, n, this.m_rA, I.s_t1), i.SolveVelocityConstraints_s_Cdot1), 
u = s - n;
var p = V.MulM33XYZ(this.m_mass, f.x, f.y, u, i.SolveVelocityConstraints_s_impulse).SelfNeg();
this.m_impulse.SelfAdd(p);
d = i.SolveVelocityConstraints_s_P.Set(p.x, p.y);
e.SelfMulSub(o, d);
n -= c * (I.CrossVV(this.m_rA, d) + p.z);
r.SelfMulAdd(a, d);
s += l * (I.CrossVV(this.m_rB, d) + p.z);
}
t.velocities[this.m_indexA].w = n;
t.velocities[this.m_indexB].w = s;
};
i.prototype.SolvePositionConstraints = function(t) {
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(n), a = this.m_qB.SetAngle(s), u = this.m_invMassA, h = this.m_invMassB, f = this.m_invIA, _ = this.m_invIB;
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var d = N.MulRV(o, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var p, m, y = N.MulRV(a, this.m_lalcB, this.m_rB), g = this.m_K;
g.ex.x = u + h + d.y * d.y * f + y.y * y.y * _;
g.ey.x = -d.y * d.x * f - y.y * y.x * _;
g.ez.x = -d.y * f - y.y * _;
g.ex.y = g.ey.x;
g.ey.y = u + h + d.x * d.x * f + y.x * y.x * _;
g.ez.y = d.x * f + y.x * _;
g.ex.z = g.ez.x;
g.ey.z = g.ez.y;
g.ez.z = f + _;
if (this.m_frequencyHz > 0) {
p = (C = I.SubVV(I.AddVV(r, y, I.s_t0), I.AddVV(e, d, I.s_t1), i.SolvePositionConstraints_s_C1)).Length();
m = 0;
var b = g.Solve22(C.x, C.y, i.SolvePositionConstraints_s_P).SelfNeg();
e.SelfMulSub(u, b);
n -= f * I.CrossVV(d, b);
r.SelfMulAdd(h, b);
s += _ * I.CrossVV(y, b);
} else {
var C = I.SubVV(I.AddVV(r, y, I.s_t0), I.AddVV(e, d, I.s_t1), i.SolvePositionConstraints_s_C1), x = s - n - this.m_referenceAngle;
p = C.Length();
m = v(x);
var A = g.Solve33(C.x, C.y, x, i.SolvePositionConstraints_s_impulse).SelfNeg();
b = i.SolvePositionConstraints_s_P.Set(A.x, A.y);
e.SelfMulSub(u, b);
n -= f * (I.CrossVV(this.m_rA, b) + A.z);
r.SelfMulAdd(h, b);
s += _ * (I.CrossVV(this.m_rB, b) + A.z);
}
t.positions[this.m_indexA].a = n;
t.positions[this.m_indexB].a = s;
return p <= c && m <= l;
};
i.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
e.x = t * this.m_impulse.x;
e.y = t * this.m_impulse.y;
return e;
};
i.prototype.GetReactionTorque = function(t) {
return t * this.m_impulse.z;
};
i.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
i.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
i.prototype.GetReferenceAngle = function() {
return this.m_referenceAngle;
};
i.prototype.SetFrequency = function(t) {
this.m_frequencyHz = t;
};
i.prototype.GetFrequency = function() {
return this.m_frequencyHz;
};
i.prototype.SetDampingRatio = function(t) {
this.m_dampingRatio = t;
};
i.prototype.GetDampingRatio = function() {
return this.m_dampingRatio;
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2WeldJointDef = new b2WeldJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.referenceAngle = %.15f;\n", this.m_referenceAngle);
t("  jd.frequencyHz = %.15f;\n", this.m_frequencyHz);
t("  jd.dampingRatio = %.15f;\n", this.m_dampingRatio);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.InitVelocityConstraints_s_P = new I();
i.SolveVelocityConstraints_s_Cdot1 = new I();
i.SolveVelocityConstraints_s_impulse1 = new I();
i.SolveVelocityConstraints_s_impulse = new O();
i.SolveVelocityConstraints_s_P = new I();
i.SolvePositionConstraints_s_C1 = new I();
i.SolvePositionConstraints_s_P = new I();
i.SolvePositionConstraints_s_impulse = new O();
return i;
})(_i), Vi = (function(e) {
$e(i, e);
function i() {
var i = e.call(this, t.b2JointType.e_wheelJoint) || this;
i.localAnchorA = new I(0, 0);
i.localAnchorB = new I(0, 0);
i.localAxisA = new I(1, 0);
i.enableMotor = !1;
i.maxMotorTorque = 0;
i.motorSpeed = 0;
i.frequencyHz = 2;
i.dampingRatio = .7;
return i;
}
i.prototype.Initialize = function(t, e, i, n) {
this.bodyA = t;
this.bodyB = e;
this.bodyA.GetLocalPoint(i, this.localAnchorA);
this.bodyB.GetLocalPoint(i, this.localAnchorB);
this.bodyA.GetLocalVector(n, this.localAxisA);
};
return i;
})(fi), Ni = (function(t) {
$e(i, t);
function i(i) {
var n = t.call(this, i) || this;
n.m_frequencyHz = 0;
n.m_dampingRatio = 0;
n.m_localAnchorA = new I();
n.m_localAnchorB = new I();
n.m_localXAxisA = new I();
n.m_localYAxisA = new I();
n.m_impulse = 0;
n.m_motorImpulse = 0;
n.m_springImpulse = 0;
n.m_maxMotorTorque = 0;
n.m_motorSpeed = 0;
n.m_enableMotor = !1;
n.m_indexA = 0;
n.m_indexB = 0;
n.m_localCenterA = new I();
n.m_localCenterB = new I();
n.m_invMassA = 0;
n.m_invMassB = 0;
n.m_invIA = 0;
n.m_invIB = 0;
n.m_ax = new I();
n.m_ay = new I();
n.m_sAx = 0;
n.m_sBx = 0;
n.m_sAy = 0;
n.m_sBy = 0;
n.m_mass = 0;
n.m_motorMass = 0;
n.m_springMass = 0;
n.m_bias = 0;
n.m_gamma = 0;
n.m_qA = new N();
n.m_qB = new N();
n.m_lalcA = new I();
n.m_lalcB = new I();
n.m_rA = new I();
n.m_rB = new I();
n.m_frequencyHz = e(i.frequencyHz, 2);
n.m_dampingRatio = e(i.dampingRatio, .7);
n.m_localAnchorA.Copy(e(i.localAnchorA, I.ZERO));
n.m_localAnchorB.Copy(e(i.localAnchorB, I.ZERO));
n.m_localXAxisA.Copy(e(i.localAxisA, I.UNITX));
I.CrossOneV(n.m_localXAxisA, n.m_localYAxisA);
n.m_maxMotorTorque = e(i.maxMotorTorque, 0);
n.m_motorSpeed = e(i.motorSpeed, 0);
n.m_enableMotor = e(i.enableMotor, !1);
n.m_ax.SetZero();
n.m_ay.SetZero();
return n;
}
i.prototype.GetMotorSpeed = function() {
return this.m_motorSpeed;
};
i.prototype.GetMaxMotorTorque = function() {
return this.m_maxMotorTorque;
};
i.prototype.SetSpringFrequencyHz = function(t) {
this.m_frequencyHz = t;
};
i.prototype.GetSpringFrequencyHz = function() {
return this.m_frequencyHz;
};
i.prototype.SetSpringDampingRatio = function(t) {
this.m_dampingRatio = t;
};
i.prototype.GetSpringDampingRatio = function() {
return this.m_dampingRatio;
};
i.prototype.InitVelocityConstraints = function(t) {
this.m_indexA = this.m_bodyA.m_islandIndex;
this.m_indexB = this.m_bodyB.m_islandIndex;
this.m_localCenterA.Copy(this.m_bodyA.m_sweep.localCenter);
this.m_localCenterB.Copy(this.m_bodyB.m_sweep.localCenter);
this.m_invMassA = this.m_bodyA.m_invMass;
this.m_invMassB = this.m_bodyB.m_invMass;
this.m_invIA = this.m_bodyA.m_invI;
this.m_invIB = this.m_bodyB.m_invI;
var e = this.m_invMassA, n = this.m_invMassB, r = this.m_invIA, o = this.m_invIB, a = t.positions[this.m_indexA].c, c = t.positions[this.m_indexA].a, l = t.velocities[this.m_indexA].v, u = t.velocities[this.m_indexA].w, h = t.positions[this.m_indexB].c, f = t.positions[this.m_indexB].a, _ = t.velocities[this.m_indexB].v, d = t.velocities[this.m_indexB].w, p = this.m_qA.SetAngle(c), m = this.m_qB.SetAngle(f);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var y = N.MulRV(p, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var v = N.MulRV(m, this.m_lalcB, this.m_rB), g = I.SubVV(I.AddVV(h, v, I.s_t0), I.AddVV(a, y, I.s_t1), i.InitVelocityConstraints_s_d);
N.MulRV(p, this.m_localYAxisA, this.m_ay);
this.m_sAy = I.CrossVV(I.AddVV(g, y, I.s_t0), this.m_ay);
this.m_sBy = I.CrossVV(v, this.m_ay);
this.m_mass = e + n + r * this.m_sAy * this.m_sAy + o * this.m_sBy * this.m_sBy;
this.m_mass > 0 && (this.m_mass = 1 / this.m_mass);
this.m_springMass = 0;
this.m_bias = 0;
this.m_gamma = 0;
if (this.m_frequencyHz > 0) {
N.MulRV(p, this.m_localXAxisA, this.m_ax);
this.m_sAx = I.CrossVV(I.AddVV(g, y, I.s_t0), this.m_ax);
this.m_sBx = I.CrossVV(v, this.m_ax);
var b = e + n + r * this.m_sAx * this.m_sAx + o * this.m_sBx * this.m_sBx;
if (b > 0) {
this.m_springMass = 1 / b;
var C = I.DotVV(g, this.m_ax), x = 2 * s * this.m_frequencyHz, A = 2 * this.m_springMass * this.m_dampingRatio * x, S = this.m_springMass * x * x, w = t.step.dt;
this.m_gamma = w * (A + w * S);
this.m_gamma > 0 && (this.m_gamma = 1 / this.m_gamma);
this.m_bias = C * w * S * this.m_gamma;
this.m_springMass = b + this.m_gamma;
this.m_springMass > 0 && (this.m_springMass = 1 / this.m_springMass);
}
} else this.m_springImpulse = 0;
if (this.m_enableMotor) {
this.m_motorMass = r + o;
this.m_motorMass > 0 && (this.m_motorMass = 1 / this.m_motorMass);
} else {
this.m_motorMass = 0;
this.m_motorImpulse = 0;
}
if (t.step.warmStarting) {
this.m_impulse *= t.step.dtRatio;
this.m_springImpulse *= t.step.dtRatio;
this.m_motorImpulse *= t.step.dtRatio;
var T = I.AddVV(I.MulSV(this.m_impulse, this.m_ay, I.s_t0), I.MulSV(this.m_springImpulse, this.m_ax, I.s_t1), i.InitVelocityConstraints_s_P), E = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse, M = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;
l.SelfMulSub(this.m_invMassA, T);
u -= this.m_invIA * E;
_.SelfMulAdd(this.m_invMassB, T);
d += this.m_invIB * M;
} else {
this.m_impulse = 0;
this.m_springImpulse = 0;
this.m_motorImpulse = 0;
}
t.velocities[this.m_indexA].w = u;
t.velocities[this.m_indexB].w = d;
};
i.prototype.SolveVelocityConstraints = function(t) {
var e = this.m_invMassA, n = this.m_invMassB, r = this.m_invIA, s = this.m_invIB, o = t.velocities[this.m_indexA].v, a = t.velocities[this.m_indexA].w, c = t.velocities[this.m_indexB].v, l = t.velocities[this.m_indexB].w, u = I.DotVV(this.m_ax, I.SubVV(c, o, I.s_t0)) + this.m_sBx * l - this.m_sAx * a, h = -this.m_springMass * (u + this.m_bias + this.m_gamma * this.m_springImpulse);
this.m_springImpulse += h;
var f = I.MulSV(h, this.m_ax, i.SolveVelocityConstraints_s_P), _ = h * this.m_sAx, d = h * this.m_sBx;
o.SelfMulSub(e, f);
a -= r * _;
c.SelfMulAdd(n, f);
u = (l += s * d) - a - this.m_motorSpeed, h = -this.m_motorMass * u;
var p = this.m_motorImpulse, m = t.step.dt * this.m_maxMotorTorque;
this.m_motorImpulse = C(this.m_motorImpulse + h, -m, m);
a -= r * (h = this.m_motorImpulse - p);
l += s * h;
u = I.DotVV(this.m_ay, I.SubVV(c, o, I.s_t0)) + this.m_sBy * l - this.m_sAy * a, 
h = -this.m_mass * u;
this.m_impulse += h;
f = I.MulSV(h, this.m_ay, i.SolveVelocityConstraints_s_P), _ = h * this.m_sAy, d = h * this.m_sBy;
o.SelfMulSub(e, f);
a -= r * _;
c.SelfMulAdd(n, f);
l += s * d;
t.velocities[this.m_indexA].w = a;
t.velocities[this.m_indexB].w = l;
};
i.prototype.SolvePositionConstraints = function(t) {
var e = t.positions[this.m_indexA].c, n = t.positions[this.m_indexA].a, r = t.positions[this.m_indexB].c, s = t.positions[this.m_indexB].a, o = this.m_qA.SetAngle(n), a = this.m_qB.SetAngle(s);
I.SubVV(this.m_localAnchorA, this.m_localCenterA, this.m_lalcA);
var l = N.MulRV(o, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, this.m_localCenterB, this.m_lalcB);
var u, h = N.MulRV(a, this.m_lalcB, this.m_rB), f = I.AddVV(I.SubVV(r, e, I.s_t0), I.SubVV(h, l, I.s_t1), i.SolvePositionConstraints_s_d), _ = N.MulRV(o, this.m_localYAxisA, this.m_ay), d = I.CrossVV(I.AddVV(f, l, I.s_t0), _), p = I.CrossVV(h, _), m = I.DotVV(f, this.m_ay), y = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy;
u = 0 !== y ? -m / y : 0;
var g = I.MulSV(u, _, i.SolvePositionConstraints_s_P), b = u * d, C = u * p;
e.SelfMulSub(this.m_invMassA, g);
n -= this.m_invIA * b;
r.SelfMulAdd(this.m_invMassB, g);
s += this.m_invIB * C;
t.positions[this.m_indexA].a = n;
t.positions[this.m_indexB].a = s;
return v(m) <= c;
};
i.prototype.GetDefinition = function(t) {
return t;
};
i.prototype.GetAnchorA = function(t) {
return this.m_bodyA.GetWorldPoint(this.m_localAnchorA, t);
};
i.prototype.GetAnchorB = function(t) {
return this.m_bodyB.GetWorldPoint(this.m_localAnchorB, t);
};
i.prototype.GetReactionForce = function(t, e) {
e.x = t * (this.m_impulse * this.m_ay.x + this.m_springImpulse * this.m_ax.x);
e.y = t * (this.m_impulse * this.m_ay.y + this.m_springImpulse * this.m_ax.y);
return e;
};
i.prototype.GetReactionTorque = function(t) {
return t * this.m_motorImpulse;
};
i.prototype.GetLocalAnchorA = function() {
return this.m_localAnchorA;
};
i.prototype.GetLocalAnchorB = function() {
return this.m_localAnchorB;
};
i.prototype.GetLocalAxisA = function() {
return this.m_localXAxisA;
};
i.prototype.GetJointTranslation = function() {
return this.GetPrismaticJointTranslation();
};
i.prototype.GetJointLinearSpeed = function() {
return this.GetPrismaticJointSpeed();
};
i.prototype.GetJointAngle = function() {
return this.GetRevoluteJointAngle();
};
i.prototype.GetJointAngularSpeed = function() {
return this.GetRevoluteJointSpeed();
};
i.prototype.GetPrismaticJointTranslation = function() {
var t = this.m_bodyA, e = this.m_bodyB, i = t.GetWorldPoint(this.m_localAnchorA, new I()), n = e.GetWorldPoint(this.m_localAnchorB, new I()), r = I.SubVV(n, i, new I()), s = t.GetWorldVector(this.m_localXAxisA, new I());
return I.DotVV(r, s);
};
i.prototype.GetPrismaticJointSpeed = function() {
var t = this.m_bodyA, e = this.m_bodyB;
I.SubVV(this.m_localAnchorA, t.m_sweep.localCenter, this.m_lalcA);
var i = N.MulRV(t.m_xf.q, this.m_lalcA, this.m_rA);
I.SubVV(this.m_localAnchorB, e.m_sweep.localCenter, this.m_lalcB);
var n = N.MulRV(e.m_xf.q, this.m_lalcB, this.m_rB), r = I.AddVV(t.m_sweep.c, i, I.s_t0), s = I.AddVV(e.m_sweep.c, n, I.s_t1), o = I.SubVV(s, r, I.s_t2), a = t.GetWorldVector(this.m_localXAxisA, new I()), c = t.m_linearVelocity, l = e.m_linearVelocity, u = t.m_angularVelocity, h = e.m_angularVelocity;
return I.DotVV(o, I.CrossSV(u, a, I.s_t0)) + I.DotVV(a, I.SubVV(I.AddVCrossSV(l, h, n, I.s_t0), I.AddVCrossSV(c, u, i, I.s_t1), I.s_t0));
};
i.prototype.GetRevoluteJointAngle = function() {
return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a;
};
i.prototype.GetRevoluteJointSpeed = function() {
var t = this.m_bodyA.m_angularVelocity;
return this.m_bodyB.m_angularVelocity - t;
};
i.prototype.IsMotorEnabled = function() {
return this.m_enableMotor;
};
i.prototype.EnableMotor = function(t) {
if (t !== this.m_enableMotor) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_enableMotor = t;
}
};
i.prototype.SetMotorSpeed = function(t) {
if (t !== this.m_motorSpeed) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_motorSpeed = t;
}
};
i.prototype.SetMaxMotorTorque = function(t) {
if (t !== this.m_maxMotorTorque) {
this.m_bodyA.SetAwake(!0);
this.m_bodyB.SetAwake(!0);
this.m_maxMotorTorque = t;
}
};
i.prototype.GetMotorTorque = function(t) {
return t * this.m_motorImpulse;
};
i.prototype.Dump = function(t) {
var e = this.m_bodyA.m_islandIndex, i = this.m_bodyB.m_islandIndex;
t("  const jd: b2WheelJointDef = new b2WheelJointDef();\n");
t("  jd.bodyA = bodies[%d];\n", e);
t("  jd.bodyB = bodies[%d];\n", i);
t("  jd.collideConnected = %s;\n", this.m_collideConnected ? "true" : "false");
t("  jd.localAnchorA.Set(%.15f, %.15f);\n", this.m_localAnchorA.x, this.m_localAnchorA.y);
t("  jd.localAnchorB.Set(%.15f, %.15f);\n", this.m_localAnchorB.x, this.m_localAnchorB.y);
t("  jd.localAxisA.Set(%.15f, %.15f);\n", this.m_localXAxisA.x, this.m_localXAxisA.y);
t("  jd.enableMotor = %s;\n", this.m_enableMotor ? "true" : "false");
t("  jd.motorSpeed = %.15f;\n", this.m_motorSpeed);
t("  jd.maxMotorTorque = %.15f;\n", this.m_maxMotorTorque);
t("  jd.frequencyHz = %.15f;\n", this.m_frequencyHz);
t("  jd.dampingRatio = %.15f;\n", this.m_dampingRatio);
t("  joints[%d] = this.m_world.CreateJoint(jd);\n", this.m_index);
};
i.InitVelocityConstraints_s_d = new I();
i.InitVelocityConstraints_s_P = new I();
i.SolveVelocityConstraints_s_P = new I();
i.SolvePositionConstraints_s_d = new I();
i.SolvePositionConstraints_s_P = new I();
return i;
})(_i);
function Fi(t, e) {
return w(t * e);
}
function zi(t, e) {
return t > e ? t : e;
}
var ki = (function() {
return function(t) {
this.prev = null;
this.next = null;
this.contact = t;
};
})(), Gi = (function() {
function t() {
this.m_islandFlag = !1;
this.m_touchingFlag = !1;
this.m_enabledFlag = !1;
this.m_filterFlag = !1;
this.m_bulletHitFlag = !1;
this.m_toiFlag = !1;
this.m_prev = null;
this.m_next = null;
this.m_indexA = 0;
this.m_indexB = 0;
this.m_manifold = new Ct();
this.m_toiCount = 0;
this.m_toi = 0;
this.m_friction = 0;
this.m_restitution = 0;
this.m_tangentSpeed = 0;
this.m_oldManifold = new Ct();
this.m_nodeA = new ki(this);
this.m_nodeB = new ki(this);
}
t.prototype.GetManifold = function() {
return this.m_manifold;
};
t.prototype.GetWorldManifold = function(t) {
var e = this.m_fixtureA.GetBody(), i = this.m_fixtureB.GetBody(), n = this.m_fixtureA.GetShape(), r = this.m_fixtureB.GetShape();
t.Initialize(this.m_manifold, e.GetTransform(), n.m_radius, i.GetTransform(), r.m_radius);
};
t.prototype.IsTouching = function() {
return this.m_touchingFlag;
};
t.prototype.SetEnabled = function(t) {
this.m_enabledFlag = t;
};
t.prototype.IsEnabled = function() {
return this.m_enabledFlag;
};
t.prototype.GetNext = function() {
return this.m_next;
};
t.prototype.GetFixtureA = function() {
return this.m_fixtureA;
};
t.prototype.GetChildIndexA = function() {
return this.m_indexA;
};
t.prototype.GetFixtureB = function() {
return this.m_fixtureB;
};
t.prototype.GetChildIndexB = function() {
return this.m_indexB;
};
t.prototype.FlagForFiltering = function() {
this.m_filterFlag = !0;
};
t.prototype.SetFriction = function(t) {
this.m_friction = t;
};
t.prototype.GetFriction = function() {
return this.m_friction;
};
t.prototype.ResetFriction = function() {
this.m_friction = Fi(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);
};
t.prototype.SetRestitution = function(t) {
this.m_restitution = t;
};
t.prototype.GetRestitution = function() {
return this.m_restitution;
};
t.prototype.ResetRestitution = function() {
this.m_restitution = zi(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);
};
t.prototype.SetTangentSpeed = function(t) {
this.m_tangentSpeed = t;
};
t.prototype.GetTangentSpeed = function() {
return this.m_tangentSpeed;
};
t.prototype.Reset = function(t, e, i, n) {
this.m_islandFlag = !1;
this.m_touchingFlag = !1;
this.m_enabledFlag = !0;
this.m_filterFlag = !1;
this.m_bulletHitFlag = !1;
this.m_toiFlag = !1;
this.m_fixtureA = t;
this.m_fixtureB = i;
this.m_indexA = e;
this.m_indexB = n;
this.m_manifold.pointCount = 0;
this.m_prev = null;
this.m_next = null;
delete this.m_nodeA.contact;
this.m_nodeA.prev = null;
this.m_nodeA.next = null;
delete this.m_nodeA.other;
delete this.m_nodeB.contact;
this.m_nodeB.prev = null;
this.m_nodeB.next = null;
delete this.m_nodeB.other;
this.m_toiCount = 0;
this.m_friction = Fi(this.m_fixtureA.m_friction, this.m_fixtureB.m_friction);
this.m_restitution = zi(this.m_fixtureA.m_restitution, this.m_fixtureB.m_restitution);
};
t.prototype.Update = function(t) {
var e = this.m_oldManifold;
this.m_oldManifold = this.m_manifold;
this.m_manifold = e;
this.m_enabledFlag = !0;
var i = !1, n = this.m_touchingFlag, r = this.m_fixtureA.IsSensor(), s = this.m_fixtureB.IsSensor(), o = r || s, a = this.m_fixtureA.GetBody(), c = this.m_fixtureB.GetBody(), l = a.GetTransform(), u = c.GetTransform();
if (o) {
var h = this.m_fixtureA.GetShape(), f = this.m_fixtureB.GetShape();
i = It(h, this.m_indexA, f, this.m_indexB, l, u);
this.m_manifold.pointCount = 0;
} else {
this.Evaluate(this.m_manifold, l, u);
i = this.m_manifold.pointCount > 0;
for (var _ = 0; _ < this.m_manifold.pointCount; ++_) {
var d = this.m_manifold.points[_];
d.normalImpulse = 0;
d.tangentImpulse = 0;
for (var p = d.id, m = 0; m < this.m_oldManifold.pointCount; ++m) {
var y = this.m_oldManifold.points[m];
if (y.id.key === p.key) {
d.normalImpulse = y.normalImpulse;
d.tangentImpulse = y.tangentImpulse;
break;
}
}
}
if (i !== n) {
a.SetAwake(!0);
c.SetAwake(!0);
}
}
this.m_touchingFlag = i;
!n && i && t && t.BeginContact(this);
n && !i && t && t.EndContact(this);
!o && i && t && t.PreSolve(this, this.m_oldManifold);
};
t.prototype.ComputeTOI = function(e, i) {
var n = t.ComputeTOI_s_input;
n.proxyA.SetShape(this.m_fixtureA.GetShape(), this.m_indexA);
n.proxyB.SetShape(this.m_fixtureB.GetShape(), this.m_indexB);
n.sweepA.Copy(e);
n.sweepB.Copy(i);
n.tMax = c;
var r = t.ComputeTOI_s_output;
re(r, n);
return r.t;
};
t.ComputeTOI_s_input = new qt();
t.ComputeTOI_s_output = new Xt();
return t;
})(), Ui = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, e, i) {
ae(t, this.m_fixtureA.GetShape(), e, this.m_fixtureB.GetShape(), i);
};
return e;
})(Gi), ji = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, e, i) {
Le(t, this.m_fixtureA.GetShape(), e, this.m_fixtureB.GetShape(), i);
};
return e;
})(Gi), Hi = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, e, i) {
he(t, this.m_fixtureA.GetShape(), e, this.m_fixtureB.GetShape(), i);
};
return e;
})(Gi), Wi = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, e, i) {
He(t, this.m_fixtureA.GetShape(), e, this.m_fixtureB.GetShape(), i);
};
return e;
})(Gi), qi = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, e, i) {
Je(t, this.m_fixtureA.GetShape(), e, this.m_fixtureB.GetShape(), i);
};
return e;
})(Gi), Xi = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, i, n) {
var r = this.m_fixtureA.GetShape(), s = this.m_fixtureB.GetShape(), o = r, a = e.Evaluate_s_edge;
o.GetChildEdge(a, this.m_indexA);
He(t, a, i, s, n);
};
e.Evaluate_s_edge = new ii();
return e;
})(Gi), Yi = (function(t) {
$e(e, t);
function e() {
return t.call(this) || this;
}
e.Create = function(t) {
return new e();
};
e.Destroy = function(t, e) {};
e.prototype.Reset = function(e, i, n, r) {
t.prototype.Reset.call(this, e, i, n, r);
};
e.prototype.Evaluate = function(t, i, n) {
var r = this.m_fixtureA.GetShape(), s = this.m_fixtureB.GetShape(), o = r, a = e.Evaluate_s_edge;
o.GetChildEdge(a, this.m_indexA);
Je(t, a, i, s, n);
};
e.Evaluate_s_edge = new ii();
return e;
})(Gi), Ji = (function() {
return function() {
this.createFcn = null;
this.destroyFcn = null;
this.primary = !1;
};
})(), Zi = (function() {
function e(t) {
this.m_allocator = null;
this.m_allocator = t;
this.InitializeRegisters();
}
e.prototype.AddType = function(t, e, i, n) {
var r = this, s = d(256, (function(e) {
return t(r.m_allocator);
}));
function o(e) {
return s.pop() || t(e);
}
function a(t, e) {
s.push(t);
}
this.m_registers[i][n].createFcn = o;
this.m_registers[i][n].destroyFcn = a;
this.m_registers[i][n].primary = !0;
if (i !== n) {
this.m_registers[n][i].createFcn = o;
this.m_registers[n][i].destroyFcn = a;
this.m_registers[n][i].primary = !1;
}
};
e.prototype.InitializeRegisters = function() {
this.m_registers = [];
for (var e = 0; e < t.b2ShapeType.e_shapeTypeCount; e++) {
this.m_registers[e] = [];
for (var i = 0; i < t.b2ShapeType.e_shapeTypeCount; i++) this.m_registers[e][i] = new Ji();
}
this.AddType(Ui.Create, Ui.Destroy, t.b2ShapeType.e_circleShape, t.b2ShapeType.e_circleShape);
this.AddType(Hi.Create, Hi.Destroy, t.b2ShapeType.e_polygonShape, t.b2ShapeType.e_circleShape);
this.AddType(ji.Create, ji.Destroy, t.b2ShapeType.e_polygonShape, t.b2ShapeType.e_polygonShape);
this.AddType(Wi.Create, Wi.Destroy, t.b2ShapeType.e_edgeShape, t.b2ShapeType.e_circleShape);
this.AddType(qi.Create, qi.Destroy, t.b2ShapeType.e_edgeShape, t.b2ShapeType.e_polygonShape);
this.AddType(Xi.Create, Xi.Destroy, t.b2ShapeType.e_chainShape, t.b2ShapeType.e_circleShape);
this.AddType(Yi.Create, Yi.Destroy, t.b2ShapeType.e_chainShape, t.b2ShapeType.e_polygonShape);
};
e.prototype.Create = function(t, e, i, n) {
var r = t.GetType(), s = i.GetType(), o = this.m_registers[r][s];
if (o.createFcn) {
var a = o.createFcn(this.m_allocator);
o.primary ? a.Reset(t, e, i, n) : a.Reset(i, n, t, e);
return a;
}
return null;
};
e.prototype.Destroy = function(t) {
var e = t.m_fixtureA, i = t.m_fixtureB;
if (t.m_manifold.pointCount > 0 && !e.IsSensor() && !i.IsSensor()) {
e.GetBody().SetAwake(!0);
i.GetBody().SetAwake(!0);
}
var n = e.GetType(), r = i.GetType(), s = this.m_registers[n][r];
s.destroyFcn && s.destroyFcn(t, this.m_allocator);
};
return e;
})(), Ki = (function() {
function t() {}
t.prototype.SayGoodbyeJoint = function(t) {};
t.prototype.SayGoodbyeFixture = function(t) {};
t.prototype.SayGoodbyeParticleGroup = function(t) {};
t.prototype.SayGoodbyeParticle = function(t, e) {};
return t;
})(), Qi = (function() {
function e() {}
e.prototype.ShouldCollide = function(e, i) {
var n = e.GetBody(), r = i.GetBody();
if (r.GetType() === t.b2BodyType.b2_staticBody && n.GetType() === t.b2BodyType.b2_staticBody) return !1;
if (!r.ShouldCollideConnected(n)) return !1;
var s = e.GetFilterData(), o = i.GetFilterData();
return s.groupIndex === o.groupIndex && 0 !== s.groupIndex ? s.groupIndex > 0 : 0 != (s.maskBits & o.categoryBits) && 0 != (s.categoryBits & o.maskBits);
};
e.prototype.ShouldCollideFixtureParticle = function(t, e, i) {
return !0;
};
e.prototype.ShouldCollideParticleParticle = function(t, e, i) {
return !0;
};
e.b2_defaultFilter = new e();
return e;
})(), $i = (function() {
return function() {
this.normalImpulses = p(o);
this.tangentImpulses = p(o);
this.count = 0;
};
})(), tn = (function() {
function t() {}
t.prototype.BeginContact = function(t) {};
t.prototype.EndContact = function(t) {};
t.prototype.BeginContactFixtureParticle = function(t, e) {};
t.prototype.EndContactFixtureParticle = function(t, e) {};
t.prototype.BeginContactParticleParticle = function(t, e) {};
t.prototype.EndContactParticleParticle = function(t, e) {};
t.prototype.PreSolve = function(t, e) {};
t.prototype.PostSolve = function(t, e) {};
t.b2_defaultListener = new t();
return t;
})(), en = (function() {
function t() {}
t.prototype.ReportFixture = function(t) {
return !0;
};
t.prototype.ReportParticle = function(t, e) {
return !1;
};
t.prototype.ShouldQueryParticleSystem = function(t) {
return !0;
};
return t;
})(), nn = (function() {
function t() {}
t.prototype.ReportFixture = function(t, e, i, n) {
return n;
};
t.prototype.ReportParticle = function(t, e, i, n, r) {
return 0;
};
t.prototype.ShouldQueryParticleSystem = function(t) {
return !0;
};
return t;
})(), rn = (function() {
function e() {
this.m_broadPhase = new Nt();
this.m_contactList = null;
this.m_contactCount = 0;
this.m_contactFilter = Qi.b2_defaultFilter;
this.m_contactListener = tn.b2_defaultListener;
this.m_allocator = null;
this.m_contactFactory = new Zi(this.m_allocator);
}
e.prototype.AddPair = function(t, e) {
var i = t.fixture, n = e.fixture, r = t.childIndex, s = e.childIndex, o = i.GetBody(), a = n.GetBody();
if (o !== a) {
for (var c = a.GetContactList(); c; ) {
if (c.other === o) {
var l = c.contact.GetFixtureA(), u = c.contact.GetFixtureB(), h = c.contact.GetChildIndexA(), f = c.contact.GetChildIndexB();
if (l === i && u === n && h === r && f === s) return;
if (l === n && u === i && h === s && f === r) return;
}
c = c.next;
}
if (!this.m_contactFilter || this.m_contactFilter.ShouldCollide(i, n)) {
var _ = this.m_contactFactory.Create(i, r, n, s);
if (null !== _) {
i = _.GetFixtureA();
n = _.GetFixtureB();
r = _.GetChildIndexA();
s = _.GetChildIndexB();
o = i.m_body;
a = n.m_body;
_.m_prev = null;
_.m_next = this.m_contactList;
null !== this.m_contactList && (this.m_contactList.m_prev = _);
this.m_contactList = _;
_.m_nodeA.contact = _;
_.m_nodeA.other = a;
_.m_nodeA.prev = null;
_.m_nodeA.next = o.m_contactList;
null !== o.m_contactList && (o.m_contactList.prev = _.m_nodeA);
o.m_contactList = _.m_nodeA;
_.m_nodeB.contact = _;
_.m_nodeB.other = o;
_.m_nodeB.prev = null;
_.m_nodeB.next = a.m_contactList;
null !== a.m_contactList && (a.m_contactList.prev = _.m_nodeB);
a.m_contactList = _.m_nodeB;
if (!i.IsSensor() && !n.IsSensor()) {
o.SetAwake(!0);
a.SetAwake(!0);
}
++this.m_contactCount;
}
}
}
};
e.prototype.FindNewContacts = function() {
var t = this;
this.m_broadPhase.UpdatePairs((function(e, i) {
t.AddPair(e, i);
}));
};
e.prototype.Destroy = function(t) {
var e = t.GetFixtureA(), i = t.GetFixtureB(), n = e.GetBody(), r = i.GetBody();
this.m_contactListener && t.IsTouching() && this.m_contactListener.EndContact(t);
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
t === this.m_contactList && (this.m_contactList = t.m_next);
t.m_nodeA.prev && (t.m_nodeA.prev.next = t.m_nodeA.next);
t.m_nodeA.next && (t.m_nodeA.next.prev = t.m_nodeA.prev);
t.m_nodeA === n.m_contactList && (n.m_contactList = t.m_nodeA.next);
t.m_nodeB.prev && (t.m_nodeB.prev.next = t.m_nodeB.next);
t.m_nodeB.next && (t.m_nodeB.next.prev = t.m_nodeB.prev);
t.m_nodeB === r.m_contactList && (r.m_contactList = t.m_nodeB.next);
this.m_contactFactory.Destroy(t);
--this.m_contactCount;
};
e.prototype.Collide = function() {
for (var e = this.m_contactList; e; ) {
var i = e.GetFixtureA(), n = e.GetFixtureB(), r = e.GetChildIndexA(), s = e.GetChildIndexB(), o = i.GetBody(), a = n.GetBody();
if (e.m_filterFlag) {
if (this.m_contactFilter && !this.m_contactFilter.ShouldCollide(i, n)) {
e = (f = e).m_next;
this.Destroy(f);
continue;
}
e.m_filterFlag = !1;
}
var c = o.IsAwake() && o.m_type !== t.b2BodyType.b2_staticBody, l = a.IsAwake() && a.m_type !== t.b2BodyType.b2_staticBody;
if (c || l) {
var u = i.m_proxies[r].treeNode, h = n.m_proxies[s].treeNode;
if (Et(u.aabb, h.aabb)) {
e.Update(this.m_contactListener);
e = e.m_next;
} else {
var f;
e = (f = e).m_next;
this.Destroy(f);
}
} else e = e.m_next;
}
};
return e;
})(), sn = (function() {
function t() {
this.step = 0;
this.collide = 0;
this.solve = 0;
this.solveInit = 0;
this.solveVelocity = 0;
this.solvePosition = 0;
this.broadphase = 0;
this.solveTOI = 0;
}
t.prototype.Reset = function() {
this.step = 0;
this.collide = 0;
this.solve = 0;
this.solveInit = 0;
this.solveVelocity = 0;
this.solvePosition = 0;
this.broadphase = 0;
this.solveTOI = 0;
return this;
};
return t;
})(), on = (function() {
function t() {
this.dt = 0;
this.inv_dt = 0;
this.dtRatio = 0;
this.velocityIterations = 0;
this.positionIterations = 0;
this.particleIterations = 0;
this.warmStarting = !1;
}
t.prototype.Copy = function(t) {
this.dt = t.dt;
this.inv_dt = t.inv_dt;
this.dtRatio = t.dtRatio;
this.positionIterations = t.positionIterations;
this.velocityIterations = t.velocityIterations;
this.particleIterations = t.particleIterations;
this.warmStarting = t.warmStarting;
return this;
};
return t;
})(), an = (function() {
function t() {
this.c = new I();
this.a = 0;
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
return t;
})(), cn = (function() {
function t() {
this.v = new I();
this.w = 0;
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
return t;
})(), ln = (function() {
return function() {
this.step = new on();
};
})(), un = (function() {
function t() {
this.rA = new I();
this.rB = new I();
this.normalImpulse = 0;
this.tangentImpulse = 0;
this.normalMass = 0;
this.tangentMass = 0;
this.velocityBias = 0;
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
return t;
})(), hn = (function() {
function t() {
this.points = un.MakeArray(o);
this.normal = new I();
this.tangent = new I();
this.normalMass = new L();
this.K = new L();
this.indexA = 0;
this.indexB = 0;
this.invMassA = 0;
this.invMassB = 0;
this.invIA = 0;
this.invIB = 0;
this.friction = 0;
this.restitution = 0;
this.tangentSpeed = 0;
this.pointCount = 0;
this.contactIndex = 0;
}
t.MakeArray = function(e) {
return d(e, (function(e) {
return new t();
}));
};
return t;
})(), fn = (function() {
function e() {
this.localPoints = I.MakeArray(o);
this.localNormal = new I();
this.localPoint = new I();
this.indexA = 0;
this.indexB = 0;
this.invMassA = 0;
this.invMassB = 0;
this.localCenterA = new I();
this.localCenterB = new I();
this.invIA = 0;
this.invIB = 0;
this.type = t.b2ManifoldType.e_unknown;
this.radiusA = 0;
this.radiusB = 0;
this.pointCount = 0;
}
e.MakeArray = function(t) {
return d(t, (function(t) {
return new e();
}));
};
return e;
})(), _n = (function() {
return function() {
this.step = new on();
this.count = 0;
this.allocator = null;
};
})(), dn = (function() {
function e() {
this.normal = new I();
this.point = new I();
this.separation = 0;
}
e.prototype.Initialize = function(i, n, r, s) {
var o = e.Initialize_s_pointA, a = e.Initialize_s_pointB, c = e.Initialize_s_planePoint, l = e.Initialize_s_clipPoint;
switch (i.type) {
case t.b2ManifoldType.e_circles:
F.MulXV(n, i.localPoint, o);
F.MulXV(r, i.localPoints[0], a);
I.SubVV(a, o, this.normal).SelfNormalize();
I.MidVV(o, a, this.point);
this.separation = I.DotVV(I.SubVV(a, o, I.s_t0), this.normal) - i.radiusA - i.radiusB;
break;

case t.b2ManifoldType.e_faceA:
N.MulRV(n.q, i.localNormal, this.normal);
F.MulXV(n, i.localPoint, c);
F.MulXV(r, i.localPoints[s], l);
this.separation = I.DotVV(I.SubVV(l, c, I.s_t0), this.normal) - i.radiusA - i.radiusB;
this.point.Copy(l);
break;

case t.b2ManifoldType.e_faceB:
N.MulRV(r.q, i.localNormal, this.normal);
F.MulXV(r, i.localPoint, c);
F.MulXV(n, i.localPoints[s], l);
this.separation = I.DotVV(I.SubVV(l, c, I.s_t0), this.normal) - i.radiusA - i.radiusB;
this.point.Copy(l);
this.normal.SelfNeg();
}
};
e.Initialize_s_pointA = new I();
e.Initialize_s_pointB = new I();
e.Initialize_s_planePoint = new I();
e.Initialize_s_clipPoint = new I();
return e;
})(), pn = (function() {
function t() {
this.m_step = new on();
this.m_allocator = null;
this.m_positionConstraints = fn.MakeArray(1024);
this.m_velocityConstraints = hn.MakeArray(1024);
this.m_count = 0;
}
t.prototype.Initialize = function(t) {
this.m_step.Copy(t.step);
this.m_allocator = t.allocator;
this.m_count = t.count;
if (this.m_positionConstraints.length < this.m_count) for (var e = b(2 * this.m_positionConstraints.length, this.m_count); this.m_positionConstraints.length < e; ) this.m_positionConstraints[this.m_positionConstraints.length] = new fn();
if (this.m_velocityConstraints.length < this.m_count) for (e = b(2 * this.m_velocityConstraints.length, this.m_count); this.m_velocityConstraints.length < e; ) this.m_velocityConstraints[this.m_velocityConstraints.length] = new hn();
this.m_positions = t.positions;
this.m_velocities = t.velocities;
this.m_contacts = t.contacts;
for (var i = 0; i < this.m_count; ++i) {
var n = this.m_contacts[i], r = n.m_fixtureA, s = n.m_fixtureB, o = r.GetShape(), a = s.GetShape(), c = o.m_radius, l = a.m_radius, u = r.GetBody(), h = s.GetBody(), f = n.GetManifold(), _ = f.pointCount, d = this.m_velocityConstraints[i];
d.friction = n.m_friction;
d.restitution = n.m_restitution;
d.tangentSpeed = n.m_tangentSpeed;
d.indexA = u.m_islandIndex;
d.indexB = h.m_islandIndex;
d.invMassA = u.m_invMass;
d.invMassB = h.m_invMass;
d.invIA = u.m_invI;
d.invIB = h.m_invI;
d.contactIndex = i;
d.pointCount = _;
d.K.SetZero();
d.normalMass.SetZero();
var p = this.m_positionConstraints[i];
p.indexA = u.m_islandIndex;
p.indexB = h.m_islandIndex;
p.invMassA = u.m_invMass;
p.invMassB = h.m_invMass;
p.localCenterA.Copy(u.m_sweep.localCenter);
p.localCenterB.Copy(h.m_sweep.localCenter);
p.invIA = u.m_invI;
p.invIB = h.m_invI;
p.localNormal.Copy(f.localNormal);
p.localPoint.Copy(f.localPoint);
p.pointCount = _;
p.radiusA = c;
p.radiusB = l;
p.type = f.type;
for (var m = 0; m < _; ++m) {
var y = f.points[m], v = d.points[m];
if (this.m_step.warmStarting) {
v.normalImpulse = this.m_step.dtRatio * y.normalImpulse;
v.tangentImpulse = this.m_step.dtRatio * y.tangentImpulse;
} else {
v.normalImpulse = 0;
v.tangentImpulse = 0;
}
v.rA.SetZero();
v.rB.SetZero();
v.normalMass = 0;
v.tangentMass = 0;
v.velocityBias = 0;
p.localPoints[m].Copy(y.localPoint);
}
}
return this;
};
t.prototype.InitializeVelocityConstraints = function() {
for (var e = t.InitializeVelocityConstraints_s_xfA, i = t.InitializeVelocityConstraints_s_xfB, n = t.InitializeVelocityConstraints_s_worldManifold, r = 0; r < this.m_count; ++r) {
var s = this.m_velocityConstraints[r], o = this.m_positionConstraints[r], a = o.radiusA, c = o.radiusB, l = this.m_contacts[s.contactIndex].GetManifold(), u = s.indexA, h = s.indexB, f = s.invMassA, _ = s.invMassB, d = s.invIA, p = s.invIB, m = o.localCenterA, y = o.localCenterB, v = this.m_positions[u].c, g = this.m_positions[u].a, b = this.m_velocities[u].v, C = this.m_velocities[u].w, x = this.m_positions[h].c, A = this.m_positions[h].a, S = this.m_velocities[h].v, w = this.m_velocities[h].w;
e.q.SetAngle(g);
i.q.SetAngle(A);
I.SubVV(v, N.MulRV(e.q, m, I.s_t0), e.p);
I.SubVV(x, N.MulRV(i.q, y, I.s_t0), i.p);
n.Initialize(l, e, a, i, c);
s.normal.Copy(n.normal);
I.CrossVOne(s.normal, s.tangent);
for (var T = s.pointCount, E = 0; E < T; ++E) {
var M = s.points[E];
I.SubVV(n.points[E], v, M.rA);
I.SubVV(n.points[E], x, M.rB);
var B = I.CrossVV(M.rA, s.normal), D = I.CrossVV(M.rB, s.normal), R = f + _ + d * B * B + p * D * D;
M.normalMass = R > 0 ? 1 / R : 0;
var P = s.tangent, O = I.CrossVV(M.rA, P), L = I.CrossVV(M.rB, P), V = f + _ + d * O * O + p * L * L;
M.tangentMass = V > 0 ? 1 / V : 0;
M.velocityBias = 0;
var F = I.DotVV(s.normal, I.SubVV(I.AddVCrossSV(S, w, M.rB, I.s_t0), I.AddVCrossSV(b, C, M.rA, I.s_t1), I.s_t0));
F < -1 && (M.velocityBias += -s.restitution * F);
}
s.pointCount;
}
};
t.prototype.WarmStart = function() {
for (var e = t.WarmStart_s_P, i = 0; i < this.m_count; ++i) {
for (var n = this.m_velocityConstraints[i], r = n.indexA, s = n.indexB, o = n.invMassA, a = n.invIA, c = n.invMassB, l = n.invIB, u = n.pointCount, h = this.m_velocities[r].v, f = this.m_velocities[r].w, _ = this.m_velocities[s].v, d = this.m_velocities[s].w, p = n.normal, m = n.tangent, y = 0; y < u; ++y) {
var v = n.points[y];
I.AddVV(I.MulSV(v.normalImpulse, p, I.s_t0), I.MulSV(v.tangentImpulse, m, I.s_t1), e);
f -= a * I.CrossVV(v.rA, e);
h.SelfMulSub(o, e);
d += l * I.CrossVV(v.rB, e);
_.SelfMulAdd(c, e);
}
this.m_velocities[r].w = f;
this.m_velocities[s].w = d;
}
};
t.prototype.SolveVelocityConstraints = function() {
for (var e = t.SolveVelocityConstraints_s_dv, i = (t.SolveVelocityConstraints_s_dv1, 
t.SolveVelocityConstraints_s_dv2, t.SolveVelocityConstraints_s_P), n = (t.SolveVelocityConstraints_s_a, 
t.SolveVelocityConstraints_s_b, t.SolveVelocityConstraints_s_x, t.SolveVelocityConstraints_s_d, 
t.SolveVelocityConstraints_s_P1, t.SolveVelocityConstraints_s_P2, t.SolveVelocityConstraints_s_P1P2, 
0); n < this.m_count; ++n) {
for (var r = this.m_velocityConstraints[n], s = r.indexA, o = r.indexB, a = r.invMassA, c = r.invIA, l = r.invMassB, u = r.invIB, h = r.pointCount, f = this.m_velocities[s].v, _ = this.m_velocities[s].w, d = this.m_velocities[o].v, p = this.m_velocities[o].w, m = r.normal, y = r.tangent, v = r.friction, g = 0; g < h; ++g) {
var x = r.points[g];
I.SubVV(I.AddVCrossSV(d, p, x.rB, I.s_t0), I.AddVCrossSV(f, _, x.rA, I.s_t1), e);
var A = I.DotVV(e, y) - r.tangentSpeed, S = x.tangentMass * -A, w = v * x.normalImpulse;
S = (T = C(x.tangentImpulse + S, -w, w)) - x.tangentImpulse;
x.tangentImpulse = T;
I.MulSV(S, y, i);
f.SelfMulSub(a, i);
_ -= c * I.CrossVV(x.rA, i);
d.SelfMulAdd(l, i);
p += u * I.CrossVV(x.rB, i);
}
r.pointCount;
for (g = 0; g < h; ++g) {
x = r.points[g];
I.SubVV(I.AddVCrossSV(d, p, x.rB, I.s_t0), I.AddVCrossSV(f, _, x.rA, I.s_t1), e);
var T, E = I.DotVV(e, m);
S = -x.normalMass * (E - x.velocityBias);
S = (T = b(x.normalImpulse + S, 0)) - x.normalImpulse;
x.normalImpulse = T;
I.MulSV(S, m, i);
f.SelfMulSub(a, i);
_ -= c * I.CrossVV(x.rA, i);
d.SelfMulAdd(l, i);
p += u * I.CrossVV(x.rB, i);
}
this.m_velocities[s].w = _;
this.m_velocities[o].w = p;
}
};
t.prototype.StoreImpulses = function() {
for (var t = 0; t < this.m_count; ++t) for (var e = this.m_velocityConstraints[t], i = this.m_contacts[e.contactIndex].GetManifold(), n = 0; n < e.pointCount; ++n) {
i.points[n].normalImpulse = e.points[n].normalImpulse;
i.points[n].tangentImpulse = e.points[n].tangentImpulse;
}
};
t.prototype.SolvePositionConstraints = function() {
for (var e = t.SolvePositionConstraints_s_xfA, i = t.SolvePositionConstraints_s_xfB, n = t.SolvePositionConstraints_s_psm, r = t.SolvePositionConstraints_s_rA, s = t.SolvePositionConstraints_s_rB, o = t.SolvePositionConstraints_s_P, a = 0, l = 0; l < this.m_count; ++l) {
for (var u = this.m_positionConstraints[l], h = u.indexA, f = u.indexB, _ = u.localCenterA, d = u.invMassA, p = u.invIA, m = u.localCenterB, y = u.invMassB, v = u.invIB, b = u.pointCount, x = this.m_positions[h].c, A = this.m_positions[h].a, S = this.m_positions[f].c, w = this.m_positions[f].a, T = 0; T < b; ++T) {
e.q.SetAngle(A);
i.q.SetAngle(w);
I.SubVV(x, N.MulRV(e.q, _, I.s_t0), e.p);
I.SubVV(S, N.MulRV(i.q, m, I.s_t0), i.p);
n.Initialize(u, e, i, T);
var E = n.normal, M = n.point, B = n.separation;
I.SubVV(M, x, r);
I.SubVV(M, S, s);
a = g(a, B);
var D = C(.2 * (B + c), -.2, 0), R = I.CrossVV(r, E), P = I.CrossVV(s, E), O = d + y + p * R * R + v * P * P, L = O > 0 ? -D / O : 0;
I.MulSV(L, E, o);
x.SelfMulSub(d, o);
A -= p * I.CrossVV(r, o);
S.SelfMulAdd(y, o);
w += v * I.CrossVV(s, o);
}
this.m_positions[h].a = A;
this.m_positions[f].a = w;
}
return a > -3 * c;
};
t.prototype.SolveTOIPositionConstraints = function(e, i) {
for (var n = t.SolveTOIPositionConstraints_s_xfA, r = t.SolveTOIPositionConstraints_s_xfB, s = t.SolveTOIPositionConstraints_s_psm, o = t.SolveTOIPositionConstraints_s_rA, a = t.SolveTOIPositionConstraints_s_rB, l = t.SolveTOIPositionConstraints_s_P, u = 0, h = 0; h < this.m_count; ++h) {
var f = this.m_positionConstraints[h], _ = f.indexA, d = f.indexB, p = f.localCenterA, m = f.localCenterB, y = f.pointCount, v = 0, b = 0;
if (_ === e || _ === i) {
v = f.invMassA;
b = f.invIA;
}
var x = 0, A = 0;
if (d === e || d === i) {
x = f.invMassB;
A = f.invIB;
}
for (var S = this.m_positions[_].c, w = this.m_positions[_].a, T = this.m_positions[d].c, E = this.m_positions[d].a, M = 0; M < y; ++M) {
n.q.SetAngle(w);
r.q.SetAngle(E);
I.SubVV(S, N.MulRV(n.q, p, I.s_t0), n.p);
I.SubVV(T, N.MulRV(r.q, m, I.s_t0), r.p);
s.Initialize(f, n, r, M);
var B = s.normal, D = s.point, R = s.separation;
I.SubVV(D, S, o);
I.SubVV(D, T, a);
u = g(u, R);
var P = C(.75 * (R + c), -.2, 0), O = I.CrossVV(o, B), L = I.CrossVV(a, B), V = v + x + b * O * O + A * L * L, F = V > 0 ? -P / V : 0;
I.MulSV(F, B, l);
S.SelfMulSub(v, l);
w -= b * I.CrossVV(o, l);
T.SelfMulAdd(x, l);
E += A * I.CrossVV(a, l);
}
this.m_positions[_].a = w;
this.m_positions[d].a = E;
}
return u >= -1.5 * c;
};
t.InitializeVelocityConstraints_s_xfA = new F();
t.InitializeVelocityConstraints_s_xfB = new F();
t.InitializeVelocityConstraints_s_worldManifold = new xt();
t.WarmStart_s_P = new I();
t.SolveVelocityConstraints_s_dv = new I();
t.SolveVelocityConstraints_s_dv1 = new I();
t.SolveVelocityConstraints_s_dv2 = new I();
t.SolveVelocityConstraints_s_P = new I();
t.SolveVelocityConstraints_s_a = new I();
t.SolveVelocityConstraints_s_b = new I();
t.SolveVelocityConstraints_s_x = new I();
t.SolveVelocityConstraints_s_d = new I();
t.SolveVelocityConstraints_s_P1 = new I();
t.SolveVelocityConstraints_s_P2 = new I();
t.SolveVelocityConstraints_s_P1P2 = new I();
t.SolvePositionConstraints_s_xfA = new F();
t.SolvePositionConstraints_s_xfB = new F();
t.SolvePositionConstraints_s_psm = new dn();
t.SolvePositionConstraints_s_rA = new I();
t.SolvePositionConstraints_s_rB = new I();
t.SolvePositionConstraints_s_P = new I();
t.SolveTOIPositionConstraints_s_xfA = new F();
t.SolveTOIPositionConstraints_s_xfB = new F();
t.SolveTOIPositionConstraints_s_psm = new dn();
t.SolveTOIPositionConstraints_s_rA = new I();
t.SolveTOIPositionConstraints_s_rB = new I();
t.SolveTOIPositionConstraints_s_P = new I();
return t;
})(), mn = (function() {
function e() {
this.m_allocator = null;
this.m_bodies = [];
this.m_contacts = [];
this.m_joints = [];
this.m_positions = an.MakeArray(1024);
this.m_velocities = cn.MakeArray(1024);
this.m_bodyCount = 0;
this.m_jointCount = 0;
this.m_contactCount = 0;
this.m_bodyCapacity = 0;
this.m_contactCapacity = 0;
this.m_jointCapacity = 0;
}
e.prototype.Initialize = function(t, e, i, n, r) {
this.m_bodyCapacity = t;
this.m_contactCapacity = e;
this.m_jointCapacity = i;
this.m_bodyCount = 0;
this.m_contactCount = 0;
this.m_jointCount = 0;
this.m_allocator = n;
this.m_listener = r;
if (this.m_positions.length < t) for (var s = b(2 * this.m_positions.length, t); this.m_positions.length < s; ) this.m_positions[this.m_positions.length] = new an();
if (this.m_velocities.length < t) for (s = b(2 * this.m_velocities.length, t); this.m_velocities.length < s; ) this.m_velocities[this.m_velocities.length] = new cn();
};
e.prototype.Clear = function() {
this.m_bodyCount = 0;
this.m_contactCount = 0;
this.m_jointCount = 0;
};
e.prototype.AddBody = function(t) {
t.m_islandIndex = this.m_bodyCount;
this.m_bodies[this.m_bodyCount++] = t;
};
e.prototype.AddContact = function(t) {
this.m_contacts[this.m_contactCount++] = t;
};
e.prototype.AddJoint = function(t) {
this.m_joints[this.m_jointCount++] = t;
};
e.prototype.Solve = function(n, r, s, o) {
for (var a = e.s_timer.Reset(), c = r.dt, l = 0; l < this.m_bodyCount; ++l) {
var u = this.m_bodies[l];
this.m_positions[l].c.Copy(u.m_sweep.c);
var h = u.m_sweep.a, f = this.m_velocities[l].v.Copy(u.m_linearVelocity), _ = u.m_angularVelocity;
u.m_sweep.c0.Copy(u.m_sweep.c);
u.m_sweep.a0 = u.m_sweep.a;
if (u.m_type === t.b2BodyType.b2_dynamicBody) {
f.x += c * (u.m_gravityScale * s.x + u.m_invMass * u.m_force.x);
f.y += c * (u.m_gravityScale * s.y + u.m_invMass * u.m_force.y);
_ += c * u.m_invI * u.m_torque;
f.SelfMul(1 / (1 + c * u.m_linearDamping));
_ *= 1 / (1 + c * u.m_angularDamping);
}
this.m_positions[l].a = h;
this.m_velocities[l].w = _;
}
a.Reset();
var d = e.s_solverData;
d.step.Copy(r);
d.positions = this.m_positions;
d.velocities = this.m_velocities;
var p = e.s_contactSolverDef;
p.step.Copy(r);
p.contacts = this.m_contacts;
p.count = this.m_contactCount;
p.positions = this.m_positions;
p.velocities = this.m_velocities;
p.allocator = this.m_allocator;
var m = e.s_contactSolver.Initialize(p);
m.InitializeVelocityConstraints();
r.warmStarting && m.WarmStart();
for (l = 0; l < this.m_jointCount; ++l) this.m_joints[l].InitVelocityConstraints(d);
n.solveInit = a.GetMilliseconds();
a.Reset();
for (l = 0; l < r.velocityIterations; ++l) {
for (var y = 0; y < this.m_jointCount; ++y) this.m_joints[y].SolveVelocityConstraints(d);
m.SolveVelocityConstraints();
}
m.StoreImpulses();
n.solveVelocity = a.GetMilliseconds();
for (l = 0; l < this.m_bodyCount; ++l) {
var b = this.m_positions[l].c, C = (h = this.m_positions[l].a, f = this.m_velocities[l].v, 
_ = this.m_velocities[l].w, I.MulSV(c, f, e.s_translation));
if (I.DotVV(C, C) > 4) {
var x = 2 / C.Length();
f.SelfMul(x);
}
var A = c * _;
if (A * A > 2.4674011002726646) {
_ *= x = 1.570796326795 / v(A);
}
b.x += c * f.x;
b.y += c * f.y;
h += c * _;
this.m_positions[l].a = h;
this.m_velocities[l].w = _;
}
a.Reset();
var S = !1;
for (l = 0; l < r.positionIterations; ++l) {
var w = m.SolvePositionConstraints(), T = !0;
for (y = 0; y < this.m_jointCount; ++y) {
var E = this.m_joints[y].SolvePositionConstraints(d);
T = T && E;
}
if (w && T) {
S = !0;
break;
}
}
for (l = 0; l < this.m_bodyCount; ++l) {
var M = this.m_bodies[l];
M.m_sweep.c.Copy(this.m_positions[l].c);
M.m_sweep.a = this.m_positions[l].a;
M.m_linearVelocity.Copy(this.m_velocities[l].v);
M.m_angularVelocity = this.m_velocities[l].w;
M.SynchronizeTransform();
}
n.solvePosition = a.GetMilliseconds();
this.Report(m.m_velocityConstraints);
if (o) {
var B = i;
for (l = 0; l < this.m_bodyCount; ++l) {
if ((u = this.m_bodies[l]).GetType() !== t.b2BodyType.b2_staticBody) if (!u.m_autoSleepFlag || u.m_angularVelocity * u.m_angularVelocity > .0012184696791469947 || I.DotVV(u.m_linearVelocity, u.m_linearVelocity) > 1e-4) {
u.m_sleepTime = 0;
B = 0;
} else {
u.m_sleepTime += c;
B = g(B, u.m_sleepTime);
}
}
if (B >= .5 && S) for (l = 0; l < this.m_bodyCount; ++l) {
(u = this.m_bodies[l]).SetAwake(!1);
}
}
};
e.prototype.SolveTOI = function(t, i, n) {
for (var r = 0; r < this.m_bodyCount; ++r) {
var s = this.m_bodies[r];
this.m_positions[r].c.Copy(s.m_sweep.c);
this.m_positions[r].a = s.m_sweep.a;
this.m_velocities[r].v.Copy(s.m_linearVelocity);
this.m_velocities[r].w = s.m_angularVelocity;
}
var o = e.s_contactSolverDef;
o.contacts = this.m_contacts;
o.count = this.m_contactCount;
o.allocator = this.m_allocator;
o.step.Copy(t);
o.positions = this.m_positions;
o.velocities = this.m_velocities;
var a = e.s_contactSolver.Initialize(o);
for (r = 0; r < t.positionIterations; ++r) {
if (a.SolveTOIPositionConstraints(i, n)) break;
}
this.m_bodies[i].m_sweep.c0.Copy(this.m_positions[i].c);
this.m_bodies[i].m_sweep.a0 = this.m_positions[i].a;
this.m_bodies[n].m_sweep.c0.Copy(this.m_positions[n].c);
this.m_bodies[n].m_sweep.a0 = this.m_positions[n].a;
a.InitializeVelocityConstraints();
for (r = 0; r < t.velocityIterations; ++r) a.SolveVelocityConstraints();
var c = t.dt;
for (r = 0; r < this.m_bodyCount; ++r) {
var l = this.m_positions[r].c, u = this.m_positions[r].a, h = this.m_velocities[r].v, f = this.m_velocities[r].w, _ = I.MulSV(c, h, e.s_translation);
if (I.DotVV(_, _) > 4) {
var d = 2 / _.Length();
h.SelfMul(d);
}
var p = c * f;
if (p * p > 2.4674011002726646) {
f *= d = 1.570796326795 / v(p);
}
l.SelfMulAdd(c, h);
u += c * f;
this.m_positions[r].a = u;
this.m_velocities[r].w = f;
var m = this.m_bodies[r];
m.m_sweep.c.Copy(l);
m.m_sweep.a = u;
m.m_linearVelocity.Copy(h);
m.m_angularVelocity = f;
m.SynchronizeTransform();
}
this.Report(a.m_velocityConstraints);
};
e.prototype.Report = function(t) {
if (null !== this.m_listener) for (var i = 0; i < this.m_contactCount; ++i) {
var n = this.m_contacts[i];
if (n) {
var r = t[i], s = e.s_impulse;
s.count = r.pointCount;
for (var o = 0; o < r.pointCount; ++o) {
s.normalImpulses[o] = r.points[o].normalImpulse;
s.tangentImpulses[o] = r.points[o].tangentImpulse;
}
this.m_listener.PostSolve(n, s);
}
}
};
e.s_timer = new U();
e.s_solverData = new ln();
e.s_contactSolverDef = new _n();
e.s_contactSolver = new pn();
e.s_translation = new I();
e.s_impulse = new $i();
return e;
})();
(function(t) {
t[t.b2_waterParticle = 0] = "b2_waterParticle";
t[t.b2_zombieParticle = 2] = "b2_zombieParticle";
t[t.b2_wallParticle = 4] = "b2_wallParticle";
t[t.b2_springParticle = 8] = "b2_springParticle";
t[t.b2_elasticParticle = 16] = "b2_elasticParticle";
t[t.b2_viscousParticle = 32] = "b2_viscousParticle";
t[t.b2_powderParticle = 64] = "b2_powderParticle";
t[t.b2_tensileParticle = 128] = "b2_tensileParticle";
t[t.b2_colorMixingParticle = 256] = "b2_colorMixingParticle";
t[t.b2_destructionListenerParticle = 512] = "b2_destructionListenerParticle";
t[t.b2_barrierParticle = 1024] = "b2_barrierParticle";
t[t.b2_staticPressureParticle = 2048] = "b2_staticPressureParticle";
t[t.b2_reactiveParticle = 4096] = "b2_reactiveParticle";
t[t.b2_repulsiveParticle = 8192] = "b2_repulsiveParticle";
t[t.b2_fixtureContactListenerParticle = 16384] = "b2_fixtureContactListenerParticle";
t[t.b2_particleContactListenerParticle = 32768] = "b2_particleContactListenerParticle";
t[t.b2_fixtureContactFilterParticle = 65536] = "b2_fixtureContactFilterParticle";
t[t.b2_particleContactFilterParticle = 131072] = "b2_particleContactFilterParticle";
})(t.b2ParticleFlag || (t.b2ParticleFlag = {}));
var yn = (function() {
return function() {
this.flags = 0;
this.position = new I();
this.velocity = new I();
this.color = new k(0, 0, 0, 0);
this.lifetime = 0;
this.userData = null;
this.group = null;
};
})();
function vn(t, e, i) {
return C(Math.ceil(Math.sqrt(t / (.01 * e)) * i), 1, 8);
}
var gn = (function() {
function t() {
this.m_index = h;
}
t.prototype.GetIndex = function() {
return this.m_index;
};
t.prototype.SetIndex = function(t) {
this.m_index = t;
};
return t;
})();
(function(t) {
t[t.b2_solidParticleGroup = 1] = "b2_solidParticleGroup";
t[t.b2_rigidParticleGroup = 2] = "b2_rigidParticleGroup";
t[t.b2_particleGroupCanBeEmpty = 4] = "b2_particleGroupCanBeEmpty";
t[t.b2_particleGroupWillBeDestroyed = 8] = "b2_particleGroupWillBeDestroyed";
t[t.b2_particleGroupNeedsUpdateDepth = 16] = "b2_particleGroupNeedsUpdateDepth";
t[t.b2_particleGroupInternalMask = 24] = "b2_particleGroupInternalMask";
})(t.b2ParticleGroupFlag || (t.b2ParticleGroupFlag = {}));
var bn = (function() {
return function() {
this.flags = 0;
this.groupFlags = 0;
this.position = new I();
this.angle = 0;
this.linearVelocity = new I();
this.angularVelocity = 0;
this.color = new k();
this.strength = 1;
this.shapeCount = 0;
this.stride = 0;
this.particleCount = 0;
this.lifetime = 0;
this.userData = null;
this.group = null;
};
})(), Cn = (function() {
function e(t) {
this.m_firstIndex = 0;
this.m_lastIndex = 0;
this.m_groupFlags = 0;
this.m_strength = 1;
this.m_prev = null;
this.m_next = null;
this.m_timestamp = -1;
this.m_mass = 0;
this.m_inertia = 0;
this.m_center = new I();
this.m_linearVelocity = new I();
this.m_angularVelocity = 0;
this.m_transform = new F();
this.m_userData = null;
this.m_system = t;
}
e.prototype.GetNext = function() {
return this.m_next;
};
e.prototype.GetParticleSystem = function() {
return this.m_system;
};
e.prototype.GetParticleCount = function() {
return this.m_lastIndex - this.m_firstIndex;
};
e.prototype.GetBufferIndex = function() {
return this.m_firstIndex;
};
e.prototype.ContainsParticle = function(t) {
return this.m_firstIndex <= t && t < this.m_lastIndex;
};
e.prototype.GetAllParticleFlags = function() {
if (!this.m_system.m_flagsBuffer.data) throw new Error();
for (var t = 0, e = this.m_firstIndex; e < this.m_lastIndex; e++) t |= this.m_system.m_flagsBuffer.data[e];
return t;
};
e.prototype.GetGroupFlags = function() {
return this.m_groupFlags;
};
e.prototype.SetGroupFlags = function(e) {
e |= this.m_groupFlags & t.b2ParticleGroupFlag.b2_particleGroupInternalMask;
this.m_system.SetGroupFlags(this, e);
};
e.prototype.GetMass = function() {
this.UpdateStatistics();
return this.m_mass;
};
e.prototype.GetInertia = function() {
this.UpdateStatistics();
return this.m_inertia;
};
e.prototype.GetCenter = function() {
this.UpdateStatistics();
return this.m_center;
};
e.prototype.GetLinearVelocity = function() {
this.UpdateStatistics();
return this.m_linearVelocity;
};
e.prototype.GetAngularVelocity = function() {
this.UpdateStatistics();
return this.m_angularVelocity;
};
e.prototype.GetTransform = function() {
return this.m_transform;
};
e.prototype.GetPosition = function() {
return this.m_transform.p;
};
e.prototype.GetAngle = function() {
return this.m_transform.q.GetAngle();
};
e.prototype.GetLinearVelocityFromWorldPoint = function(t, i) {
var n = e.GetLinearVelocityFromWorldPoint_s_t0;
this.UpdateStatistics();
return I.AddVCrossSV(this.m_linearVelocity, this.m_angularVelocity, I.SubVV(t, this.m_center, n), i);
};
e.prototype.GetUserData = function() {
return this.m_userData;
};
e.prototype.SetUserData = function(t) {
this.m_userData = t;
};
e.prototype.ApplyForce = function(t) {
this.m_system.ApplyForce(this.m_firstIndex, this.m_lastIndex, t);
};
e.prototype.ApplyLinearImpulse = function(t) {
this.m_system.ApplyLinearImpulse(this.m_firstIndex, this.m_lastIndex, t);
};
e.prototype.DestroyParticles = function(t) {
if (this.m_system.m_world.IsLocked()) throw new Error();
for (var e = this.m_firstIndex; e < this.m_lastIndex; e++) this.m_system.DestroyParticle(e, t);
};
e.prototype.UpdateStatistics = function() {
if (!this.m_system.m_positionBuffer.data) throw new Error();
if (!this.m_system.m_velocityBuffer.data) throw new Error();
var t = new I(), e = new I();
if (this.m_timestamp !== this.m_system.m_timestamp) {
var i = this.m_system.GetParticleMass();
this.m_mass = i * (this.m_lastIndex - this.m_firstIndex);
this.m_center.SetZero();
this.m_linearVelocity.SetZero();
for (var n = this.m_firstIndex; n < this.m_lastIndex; n++) {
this.m_center.SelfMulAdd(i, this.m_system.m_positionBuffer.data[n]);
this.m_linearVelocity.SelfMulAdd(i, this.m_system.m_velocityBuffer.data[n]);
}
if (this.m_mass > 0) {
var r = 1 / this.m_mass;
this.m_center.SelfMul(r);
this.m_linearVelocity.SelfMul(r);
}
this.m_inertia = 0;
this.m_angularVelocity = 0;
for (n = this.m_firstIndex; n < this.m_lastIndex; n++) {
I.SubVV(this.m_system.m_positionBuffer.data[n], this.m_center, t);
I.SubVV(this.m_system.m_velocityBuffer.data[n], this.m_linearVelocity, e);
this.m_inertia += i * I.DotVV(t, t);
this.m_angularVelocity += i * I.CrossVV(t, e);
}
this.m_inertia > 0 && (this.m_angularVelocity *= 1 / this.m_inertia);
this.m_timestamp = this.m_system.m_timestamp;
}
};
e.GetLinearVelocityFromWorldPoint_s_t0 = new I();
return e;
})(), xn = (function() {
function t(t) {
this.m_front = 0;
this.m_back = 0;
this.m_capacity = 0;
this.m_buffer = d(t, (function(t) {
return null;
}));
this.m_capacity = t;
}
t.prototype.Push = function(t) {
if (this.m_back >= this.m_capacity) {
for (var e = this.m_front; e < this.m_back; e++) this.m_buffer[e - this.m_front] = this.m_buffer[e];
this.m_back -= this.m_front;
this.m_front = 0;
if (this.m_back >= this.m_capacity) if (this.m_capacity > 0) {
this.m_buffer.concat(d(this.m_capacity, (function(t) {
return null;
})));
this.m_capacity *= 2;
} else {
this.m_buffer.concat(d(1, (function(t) {
return null;
})));
this.m_capacity = 1;
}
}
this.m_buffer[this.m_back] = t;
this.m_back++;
};
t.prototype.Pop = function() {
this.m_buffer[this.m_front] = null;
this.m_front++;
};
t.prototype.Empty = function() {
return this.m_front === this.m_back;
};
t.prototype.Front = function() {
var t = this.m_buffer[this.m_front];
if (!t) throw new Error();
return t;
};
return t;
})(), An = (function() {
function t(e) {
this.m_generatorCapacity = 0;
this.m_generatorCount = 0;
this.m_countX = 0;
this.m_countY = 0;
this.m_diagram = [];
this.m_generatorBuffer = d(e, (function(e) {
return new t.Generator();
}));
this.m_generatorCapacity = e;
}
t.prototype.AddGenerator = function(t, e, i) {
var n = this.m_generatorBuffer[this.m_generatorCount++];
n.center.Copy(t);
n.tag = e;
n.necessary = i;
};
t.prototype.Generate = function(e, n) {
for (var r = 1 / e, s = new I(+i, +i), o = new I(-i, -i), a = 0, c = 0; c < this.m_generatorCount; c++) {
if ((_ = this.m_generatorBuffer[c]).necessary) {
I.MinV(s, _.center, s);
I.MaxV(o, _.center, o);
++a;
}
}
if (0 !== a) {
s.x -= n;
s.y -= n;
o.x += n;
o.y += n;
this.m_countX = 1 + Math.floor(r * (o.x - s.x));
this.m_countY = 1 + Math.floor(r * (o.y - s.y));
this.m_diagram = [];
var l = new xn(4 * this.m_countX * this.m_countY);
for (c = 0; c < this.m_generatorCount; c++) {
(_ = this.m_generatorBuffer[c]).center.SelfSub(s).SelfMul(r);
var u = Math.floor(_.center.x), h = Math.floor(_.center.y);
u >= 0 && h >= 0 && u < this.m_countX && h < this.m_countY && l.Push(new t.Task(u, h, u + h * this.m_countX, _));
}
for (;!l.Empty(); ) {
u = (d = l.Front()).m_x, h = d.m_y;
var f = d.m_i, _ = d.m_generator;
l.Pop();
if (!this.m_diagram[f]) {
this.m_diagram[f] = _;
u > 0 && l.Push(new t.Task(u - 1, h, f - 1, _));
h > 0 && l.Push(new t.Task(u, h - 1, f - this.m_countX, _));
u < this.m_countX - 1 && l.Push(new t.Task(u + 1, h, f + 1, _));
h < this.m_countY - 1 && l.Push(new t.Task(u, h + 1, f + this.m_countX, _));
}
}
for (h = 0; h < this.m_countY; h++) for (u = 0; u < this.m_countX - 1; u++) {
f = u + h * this.m_countX;
if ((p = this.m_diagram[f]) !== (m = this.m_diagram[f + 1])) {
l.Push(new t.Task(u, h, f, m));
l.Push(new t.Task(u + 1, h, f + 1, p));
}
}
for (h = 0; h < this.m_countY - 1; h++) for (u = 0; u < this.m_countX; u++) {
f = u + h * this.m_countX;
if ((p = this.m_diagram[f]) !== (m = this.m_diagram[f + this.m_countX])) {
l.Push(new t.Task(u, h, f, m));
l.Push(new t.Task(u, h + 1, f + this.m_countX, p));
}
}
for (;!l.Empty(); ) {
var d, p, m;
u = (d = l.Front()).m_x, h = d.m_y, f = d.m_i, c = d.m_generator;
l.Pop();
if ((p = this.m_diagram[f]) !== (m = c)) {
var y = p.center.x - u, v = p.center.y - h, g = m.center.x - u, b = m.center.y - h;
if (y * y + v * v > g * g + b * b) {
this.m_diagram[f] = m;
u > 0 && l.Push(new t.Task(u - 1, h, f - 1, m));
h > 0 && l.Push(new t.Task(u, h - 1, f - this.m_countX, m));
u < this.m_countX - 1 && l.Push(new t.Task(u + 1, h, f + 1, m));
h < this.m_countY - 1 && l.Push(new t.Task(u, h + 1, f + this.m_countX, m));
}
}
}
} else {
this.m_countX = 0;
this.m_countY = 0;
}
};
t.prototype.GetNodes = function(t) {
for (var e = 0; e < this.m_countY - 1; e++) for (var i = 0; i < this.m_countX - 1; i++) {
var n = i + e * this.m_countX, r = this.m_diagram[n], s = this.m_diagram[n + 1], o = this.m_diagram[n + this.m_countX], a = this.m_diagram[n + 1 + this.m_countX];
if (s !== o) {
r !== s && r !== o && (r.necessary || s.necessary || o.necessary) && t(r.tag, s.tag, o.tag);
a !== s && a !== o && (r.necessary || s.necessary || o.necessary) && t(s.tag, a.tag, o.tag);
}
}
};
return t;
})();
(function(t) {
var e = (function() {
return function() {
this.center = new I();
this.tag = 0;
this.necessary = !1;
};
})();
t.Generator = e;
var i = (function() {
return function(t, e, i, n) {
this.m_x = t;
this.m_y = e;
this.m_i = i;
this.m_generator = n;
};
})();
t.Task = i;
})(An || (An = {}));
function Sn(t, e, i) {
var n = t[e];
t[e] = t[i];
t[i] = n;
}
function wn(t, e) {
return t < e;
}
function Tn(t, e, i, n) {
void 0 === e && (e = 0);
void 0 === i && (i = t.length - e);
void 0 === n && (n = wn);
for (var r = e, s = [], o = 0; ;) {
for (;r + 1 < i; i++) {
var a = t[r + Math.floor(Math.random() * (i - r))];
s[o++] = i;
for (var c = r - 1; ;) {
for (;n(t[++c], a); ) ;
for (;n(a, t[--i]); ) ;
if (c >= i) break;
Sn(t, c, i);
}
}
if (0 === o) break;
r = i;
i = s[--o];
}
return t;
}
function En(t, e, i, n) {
void 0 === e && (e = 0);
void 0 === i && (i = t.length - e);
void 0 === n && (n = wn);
return Tn(t, e, i, n);
}
function Mn(t, e, i) {
void 0 === i && (i = t.length);
for (var n = 0, r = 0; r < i; ++r) e(t[r]) || (r !== n ? Sn(t, n++, r) : ++n);
return n;
}
function Bn(t, e, i, n, r) {
void 0 === r && (r = wn);
for (var s = i - e; s > 0; ) {
var o = Math.floor(s / 2), a = e + o;
if (r(t[a], n)) {
e = ++a;
s -= o + 1;
} else s = o;
}
return e;
}
function Dn(t, e, i, n, r) {
void 0 === r && (r = wn);
for (var s = i - e; s > 0; ) {
var o = Math.floor(s / 2), a = e + o;
if (r(n, t[a])) s = o; else {
e = ++a;
s -= o + 1;
}
}
return e;
}
function Rn(t, e, i, n) {
for (var r = i; e !== r; ) {
Sn(t, e++, r++);
r === n ? r = i : e === i && (i = r);
}
}
function In(t, e, i, n) {
if (e === i) return i;
for (var r = e; ++e !== i; ) n(t[r], t[e]) || Sn(t, ++r, e);
return ++r;
}
var Pn = (function() {
function t(t) {
this.data = [];
this.count = 0;
this.capacity = 0;
this.allocator = t;
}
t.prototype.Append = function() {
this.count >= this.capacity && this.Grow();
return this.count++;
};
t.prototype.Reserve = function(t) {
if (!(this.capacity >= t)) {
for (var e = this.capacity; e < t; ++e) this.data[e] = this.allocator();
this.capacity = t;
}
};
t.prototype.Grow = function() {
var t = this.capacity ? 2 * this.capacity : 256;
this.Reserve(t);
};
t.prototype.Free = function() {
if (0 !== this.data.length) {
this.data = [];
this.capacity = 0;
this.count = 0;
}
};
t.prototype.Shorten = function(t) {};
t.prototype.Data = function() {
return this.data;
};
t.prototype.GetCount = function() {
return this.count;
};
t.prototype.SetCount = function(t) {
this.count = t;
};
t.prototype.GetCapacity = function() {
return this.capacity;
};
t.prototype.RemoveIf = function(t) {
this.count = Mn(this.data, t, this.count);
};
t.prototype.Unique = function(t) {
this.count = In(this.data, 0, this.count, t);
};
return t;
})(), On = (function(t) {
$e(e, t);
function e(e) {
var i = t.call(this) || this;
i.m_system = e;
return i;
}
e.prototype.ShouldQueryParticleSystem = function(t) {
return !1;
};
e.prototype.ReportFixture = function(t) {
if (t.IsSensor()) return !0;
for (var e = t.GetShape().GetChildCount(), i = 0; i < e; i++) for (var n = t.GetAABB(i), r = this.m_system.GetInsideBoundsEnumerator(n), s = void 0; (s = r.GetNext()) >= 0; ) this.ReportFixtureAndParticle(t, i, s);
return !0;
};
e.prototype.ReportParticle = function(t, e) {
return !1;
};
e.prototype.ReportFixtureAndParticle = function(t, e, i) {};
return e;
})(en), Ln = (function() {
function t() {
this.indexA = 0;
this.indexB = 0;
this.weight = 0;
this.normal = new I();
this.flags = 0;
}
t.prototype.SetIndices = function(t, e) {
this.indexA = t;
this.indexB = e;
};
t.prototype.SetWeight = function(t) {
this.weight = t;
};
t.prototype.SetNormal = function(t) {
this.normal.Copy(t);
};
t.prototype.SetFlags = function(t) {
this.flags = t;
};
t.prototype.GetIndexA = function() {
return this.indexA;
};
t.prototype.GetIndexB = function() {
return this.indexB;
};
t.prototype.GetWeight = function() {
return this.weight;
};
t.prototype.GetNormal = function() {
return this.normal;
};
t.prototype.GetFlags = function() {
return this.flags;
};
t.prototype.IsEqual = function(t) {
return this.indexA === t.indexA && this.indexB === t.indexB && this.flags === t.flags && this.weight === t.weight && this.normal.x === t.normal.x && this.normal.y === t.normal.y;
};
t.prototype.IsNotEqual = function(t) {
return !this.IsEqual(t);
};
t.prototype.ApproximatelyEqual = function(t) {
return this.indexA === t.indexA && this.indexB === t.indexB && this.flags === t.flags && v(this.weight - t.weight) < .01 && I.DistanceSquaredVV(this.normal, t.normal) < 1e-4;
};
return t;
})(), Vn = (function() {
return function() {
this.index = 0;
this.weight = 0;
this.normal = new I();
this.mass = 0;
};
})(), Nn = (function() {
return function() {
this.indexA = 0;
this.indexB = 0;
this.flags = 0;
this.strength = 0;
this.distance = 0;
};
})(), Fn = (function() {
return function() {
this.indexA = 0;
this.indexB = 0;
this.indexC = 0;
this.flags = 0;
this.strength = 0;
this.pa = new I(0, 0);
this.pb = new I(0, 0);
this.pc = new I(0, 0);
this.ka = 0;
this.kb = 0;
this.kc = 0;
this.s = 0;
};
})(), zn = (function() {
function t() {
this.strictContactCheck = !1;
this.density = 1;
this.gravityScale = 1;
this.radius = 1;
this.maxCount = 0;
this.pressureStrength = .005;
this.dampingStrength = 1;
this.elasticStrength = .25;
this.springStrength = .25;
this.viscousStrength = .25;
this.surfaceTensionPressureStrength = .2;
this.surfaceTensionNormalStrength = .2;
this.repulsiveStrength = 1;
this.powderStrength = .5;
this.ejectionStrength = .5;
this.staticPressureStrength = .2;
this.staticPressureRelaxation = .2;
this.staticPressureIterations = 8;
this.colorMixingStrength = .5;
this.destroyByAge = !0;
this.lifetimeGranularity = 1 / 60;
}
t.prototype.Copy = function(t) {
this.strictContactCheck = t.strictContactCheck;
this.density = t.density;
this.gravityScale = t.gravityScale;
this.radius = t.radius;
this.maxCount = t.maxCount;
this.pressureStrength = t.pressureStrength;
this.dampingStrength = t.dampingStrength;
this.elasticStrength = t.elasticStrength;
this.springStrength = t.springStrength;
this.viscousStrength = t.viscousStrength;
this.surfaceTensionPressureStrength = t.surfaceTensionPressureStrength;
this.surfaceTensionNormalStrength = t.surfaceTensionNormalStrength;
this.repulsiveStrength = t.repulsiveStrength;
this.powderStrength = t.powderStrength;
this.ejectionStrength = t.ejectionStrength;
this.staticPressureStrength = t.staticPressureStrength;
this.staticPressureRelaxation = t.staticPressureRelaxation;
this.staticPressureIterations = t.staticPressureIterations;
this.colorMixingStrength = t.colorMixingStrength;
this.destroyByAge = t.destroyByAge;
this.lifetimeGranularity = t.lifetimeGranularity;
return this;
};
t.prototype.Clone = function() {
return new t().Copy(this);
};
return t;
})();
t.b2ParticleSystem = (function() {
function n(t, e) {
this.m_paused = !1;
this.m_timestamp = 0;
this.m_allParticleFlags = 0;
this.m_needsUpdateAllParticleFlags = !1;
this.m_allGroupFlags = 0;
this.m_needsUpdateAllGroupFlags = !1;
this.m_hasForce = !1;
this.m_iterationIndex = 0;
this.m_inverseDensity = 0;
this.m_particleDiameter = 0;
this.m_inverseDiameter = 0;
this.m_squaredDiameter = 0;
this.m_count = 0;
this.m_internalAllocatedCapacity = 0;
this.m_handleIndexBuffer = new n.UserOverridableBuffer();
this.m_flagsBuffer = new n.UserOverridableBuffer();
this.m_positionBuffer = new n.UserOverridableBuffer();
this.m_velocityBuffer = new n.UserOverridableBuffer();
this.m_forceBuffer = [];
this.m_weightBuffer = [];
this.m_staticPressureBuffer = [];
this.m_accumulationBuffer = [];
this.m_accumulation2Buffer = [];
this.m_depthBuffer = [];
this.m_colorBuffer = new n.UserOverridableBuffer();
this.m_groupBuffer = [];
this.m_userDataBuffer = new n.UserOverridableBuffer();
this.m_stuckThreshold = 0;
this.m_lastBodyContactStepBuffer = new n.UserOverridableBuffer();
this.m_bodyContactCountBuffer = new n.UserOverridableBuffer();
this.m_consecutiveContactStepsBuffer = new n.UserOverridableBuffer();
this.m_stuckParticleBuffer = new Pn(function() {
return 0;
});
this.m_proxyBuffer = new Pn(function() {
return new n.Proxy();
});
this.m_contactBuffer = new Pn(function() {
return new Ln();
});
this.m_bodyContactBuffer = new Pn(function() {
return new Vn();
});
this.m_pairBuffer = new Pn(function() {
return new Nn();
});
this.m_triadBuffer = new Pn(function() {
return new Fn();
});
this.m_expirationTimeBuffer = new n.UserOverridableBuffer();
this.m_indexByExpirationTimeBuffer = new n.UserOverridableBuffer();
this.m_timeElapsed = 0;
this.m_expirationTimeBufferRequiresSorting = !1;
this.m_groupCount = 0;
this.m_groupList = null;
this.m_def = new zn();
this.m_prev = null;
this.m_next = null;
this.SetStrictContactCheck(t.strictContactCheck);
this.SetDensity(t.density);
this.SetGravityScale(t.gravityScale);
this.SetRadius(t.radius);
this.SetMaxParticleCount(t.maxCount);
this.m_def = t.Clone();
this.m_world = e;
this.SetDestructionByAge(this.m_def.destroyByAge);
}
n.computeTag = function(t, e) {
return (e + n.yOffset >>> 0 << n.yShift) + (n.xScale * t + n.xOffset >>> 0) >>> 0;
};
n.computeRelativeTag = function(t, e, i) {
return t + (i << n.yShift) + (e << n.xShift) >>> 0;
};
n.prototype.Drop = function() {
for (;this.m_groupList; ) this.DestroyParticleGroup(this.m_groupList);
this.FreeUserOverridableBuffer(this.m_handleIndexBuffer);
this.FreeUserOverridableBuffer(this.m_flagsBuffer);
this.FreeUserOverridableBuffer(this.m_lastBodyContactStepBuffer);
this.FreeUserOverridableBuffer(this.m_bodyContactCountBuffer);
this.FreeUserOverridableBuffer(this.m_consecutiveContactStepsBuffer);
this.FreeUserOverridableBuffer(this.m_positionBuffer);
this.FreeUserOverridableBuffer(this.m_velocityBuffer);
this.FreeUserOverridableBuffer(this.m_colorBuffer);
this.FreeUserOverridableBuffer(this.m_userDataBuffer);
this.FreeUserOverridableBuffer(this.m_expirationTimeBuffer);
this.FreeUserOverridableBuffer(this.m_indexByExpirationTimeBuffer);
this.FreeBuffer(this.m_forceBuffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_weightBuffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_staticPressureBuffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_accumulationBuffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_accumulation2Buffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_depthBuffer, this.m_internalAllocatedCapacity);
this.FreeBuffer(this.m_groupBuffer, this.m_internalAllocatedCapacity);
};
n.prototype.CreateParticle = function(t) {
if (this.m_world.IsLocked()) throw new Error();
if (this.m_count >= this.m_internalAllocatedCapacity) {
var i = this.m_count ? 2 * this.m_count : 256;
this.ReallocateInternalAllocatedBuffers(i);
}
if (this.m_count >= this.m_internalAllocatedCapacity) {
if (!this.m_def.destroyByAge) return h;
this.DestroyOldestParticle(0, !1);
this.SolveZombie();
}
var n = this.m_count++;
if (!this.m_flagsBuffer.data) throw new Error();
this.m_flagsBuffer.data[n] = 0;
this.m_lastBodyContactStepBuffer.data && (this.m_lastBodyContactStepBuffer.data[n] = 0);
this.m_bodyContactCountBuffer.data && (this.m_bodyContactCountBuffer.data[n] = 0);
this.m_consecutiveContactStepsBuffer.data && (this.m_consecutiveContactStepsBuffer.data[n] = 0);
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
this.m_positionBuffer.data[n] = (this.m_positionBuffer.data[n] || new I()).Copy(e(t.position, I.ZERO));
this.m_velocityBuffer.data[n] = (this.m_velocityBuffer.data[n] || new I()).Copy(e(t.velocity, I.ZERO));
this.m_weightBuffer[n] = 0;
this.m_forceBuffer[n] = (this.m_forceBuffer[n] || new I()).SetZero();
this.m_staticPressureBuffer && (this.m_staticPressureBuffer[n] = 0);
this.m_depthBuffer && (this.m_depthBuffer[n] = 0);
var r = new k().Copy(e(t.color, k.ZERO));
if (this.m_colorBuffer.data || !r.IsZero()) {
this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);
this.m_colorBuffer.data[n] = (this.m_colorBuffer.data[n] || new k()).Copy(r);
}
if (this.m_userDataBuffer.data || t.userData) {
this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);
this.m_userDataBuffer.data[n] = t.userData;
}
this.m_handleIndexBuffer.data && (this.m_handleIndexBuffer.data[n] = null);
var s = this.m_proxyBuffer.data[this.m_proxyBuffer.Append()], o = e(t.lifetime, 0), a = o > 0;
if (this.m_expirationTimeBuffer.data || a) {
this.SetParticleLifetime(n, a ? o : this.ExpirationTimeToLifetime(-this.GetQuantizedTimeElapsed()));
if (!this.m_indexByExpirationTimeBuffer.data) throw new Error();
this.m_indexByExpirationTimeBuffer.data[n] = n;
}
s.index = n;
var c = e(t.group, null);
this.m_groupBuffer[n] = c;
if (c) if (c.m_firstIndex < c.m_lastIndex) {
this.RotateBuffer(c.m_firstIndex, c.m_lastIndex, n);
c.m_lastIndex = n + 1;
} else {
c.m_firstIndex = n;
c.m_lastIndex = n + 1;
}
this.SetParticleFlags(n, e(t.flags, 0));
return n;
};
n.prototype.GetParticleHandleFromIndex = function(t) {
this.m_handleIndexBuffer.data = this.RequestBuffer(this.m_handleIndexBuffer.data);
var e = this.m_handleIndexBuffer.data[t];
if (e) return e;
(e = new gn()).SetIndex(t);
this.m_handleIndexBuffer.data[t] = e;
return e;
};
n.prototype.DestroyParticle = function(e, i) {
void 0 === i && (i = !1);
if (!this.m_flagsBuffer.data) throw new Error();
var n = t.b2ParticleFlag.b2_zombieParticle;
i && (n |= t.b2ParticleFlag.b2_destructionListenerParticle);
this.SetParticleFlags(e, this.m_flagsBuffer.data[e] | n);
};
n.prototype.DestroyOldestParticle = function(t, e) {
void 0 === e && (e = !1);
var i = this.GetParticleCount();
if (!this.m_indexByExpirationTimeBuffer.data) throw new Error();
if (!this.m_expirationTimeBuffer.data) throw new Error();
var n = this.m_indexByExpirationTimeBuffer.data[i - (t + 1)], r = this.m_indexByExpirationTimeBuffer.data[t];
this.DestroyParticle(this.m_expirationTimeBuffer.data[n] > 0 ? n : r, e);
};
n.prototype.DestroyParticlesInShape = function(t, e, i) {
void 0 === i && (i = !1);
var r = n.DestroyParticlesInShape_s_aabb;
if (this.m_world.IsLocked()) throw new Error();
var s = new n.DestroyParticlesInShapeCallback(this, t, e, i), o = r;
t.ComputeAABB(o, e, 0);
this.m_world.QueryAABB(s, o);
return s.Destroyed();
};
n.prototype.CreateParticleGroup = function(t) {
var i = n.CreateParticleGroup_s_transform;
if (this.m_world.IsLocked()) throw new Error();
var r = i;
r.SetPositionAngle(e(t.position, I.ZERO), e(t.angle, 0));
var s = this.m_count;
t.shape && this.CreateParticlesWithShapeForGroup(t.shape, t, r);
t.shapes && this.CreateParticlesWithShapesForGroup(t.shapes, e(t.shapeCount, t.shapes.length), t, r);
if (t.positionData) for (var o = e(t.particleCount, t.positionData.length), a = 0; a < o; a++) {
var c = t.positionData[a];
this.CreateParticleForGroup(t, r, c);
}
var l = this.m_count, u = new Cn(this);
u.m_firstIndex = s;
u.m_lastIndex = l;
u.m_strength = e(t.strength, 1);
u.m_userData = t.userData;
u.m_transform.Copy(r);
u.m_prev = null;
u.m_next = this.m_groupList;
this.m_groupList && (this.m_groupList.m_prev = u);
this.m_groupList = u;
++this.m_groupCount;
for (a = s; a < l; a++) this.m_groupBuffer[a] = u;
this.SetGroupFlags(u, e(t.groupFlags, 0));
var h = new n.ConnectionFilter();
this.UpdateContacts(!0);
this.UpdatePairsAndTriads(s, l, h);
if (t.group) {
this.JoinParticleGroups(t.group, u);
u = t.group;
}
return u;
};
n.prototype.JoinParticleGroups = function(t, e) {
if (this.m_world.IsLocked()) throw new Error();
this.RotateBuffer(e.m_firstIndex, e.m_lastIndex, this.m_count);
this.RotateBuffer(t.m_firstIndex, t.m_lastIndex, e.m_firstIndex);
var i = new n.JoinParticleGroupsFilter(e.m_firstIndex);
this.UpdateContacts(!0);
this.UpdatePairsAndTriads(t.m_firstIndex, e.m_lastIndex, i);
for (var r = e.m_firstIndex; r < e.m_lastIndex; r++) this.m_groupBuffer[r] = t;
var s = t.m_groupFlags | e.m_groupFlags;
this.SetGroupFlags(t, s);
t.m_lastIndex = e.m_lastIndex;
e.m_firstIndex = e.m_lastIndex;
this.DestroyParticleGroup(e);
};
n.prototype.SplitParticleGroup = function(t) {
this.UpdateContacts(!0);
var e = d(t.GetParticleCount(), (function(t) {
return new n.ParticleListNode();
}));
n.InitializeParticleLists(t, e);
this.MergeParticleListsInContact(t, e);
var i = n.FindLongestParticleList(t, e);
this.MergeZombieParticleListNodes(t, e, i);
this.CreateParticleGroupsFromParticleList(t, e, i);
this.UpdatePairsAndTriadsWithParticleList(t, e);
};
n.prototype.GetParticleGroupList = function() {
return this.m_groupList;
};
n.prototype.GetParticleGroupCount = function() {
return this.m_groupCount;
};
n.prototype.GetParticleCount = function() {
return this.m_count;
};
n.prototype.GetMaxParticleCount = function() {
return this.m_def.maxCount;
};
n.prototype.SetMaxParticleCount = function(t) {
this.m_def.maxCount = t;
};
n.prototype.GetAllParticleFlags = function() {
return this.m_allParticleFlags;
};
n.prototype.GetAllGroupFlags = function() {
return this.m_allGroupFlags;
};
n.prototype.SetPaused = function(t) {
this.m_paused = t;
};
n.prototype.GetPaused = function() {
return this.m_paused;
};
n.prototype.SetDensity = function(t) {
this.m_def.density = t;
this.m_inverseDensity = 1 / this.m_def.density;
};
n.prototype.GetDensity = function() {
return this.m_def.density;
};
n.prototype.SetGravityScale = function(t) {
this.m_def.gravityScale = t;
};
n.prototype.GetGravityScale = function() {
return this.m_def.gravityScale;
};
n.prototype.SetDamping = function(t) {
this.m_def.dampingStrength = t;
};
n.prototype.GetDamping = function() {
return this.m_def.dampingStrength;
};
n.prototype.SetStaticPressureIterations = function(t) {
this.m_def.staticPressureIterations = t;
};
n.prototype.GetStaticPressureIterations = function() {
return this.m_def.staticPressureIterations;
};
n.prototype.SetRadius = function(t) {
this.m_particleDiameter = 2 * t;
this.m_squaredDiameter = this.m_particleDiameter * this.m_particleDiameter;
this.m_inverseDiameter = 1 / this.m_particleDiameter;
};
n.prototype.GetRadius = function() {
return this.m_particleDiameter / 2;
};
n.prototype.GetPositionBuffer = function() {
if (!this.m_positionBuffer.data) throw new Error();
return this.m_positionBuffer.data;
};
n.prototype.GetVelocityBuffer = function() {
if (!this.m_velocityBuffer.data) throw new Error();
return this.m_velocityBuffer.data;
};
n.prototype.GetColorBuffer = function() {
this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data);
return this.m_colorBuffer.data;
};
n.prototype.GetGroupBuffer = function() {
return this.m_groupBuffer;
};
n.prototype.GetWeightBuffer = function() {
return this.m_weightBuffer;
};
n.prototype.GetUserDataBuffer = function() {
this.m_userDataBuffer.data = this.RequestBuffer(this.m_userDataBuffer.data);
return this.m_userDataBuffer.data;
};
n.prototype.GetFlagsBuffer = function() {
if (!this.m_flagsBuffer.data) throw new Error();
return this.m_flagsBuffer.data;
};
n.prototype.SetParticleFlags = function(e, i) {
if (!this.m_flagsBuffer.data) throw new Error();
this.m_flagsBuffer.data[e] & ~i && (this.m_needsUpdateAllParticleFlags = !0);
if (~this.m_allParticleFlags & i) {
i & t.b2ParticleFlag.b2_tensileParticle && (this.m_accumulation2Buffer = this.RequestBuffer(this.m_accumulation2Buffer));
i & t.b2ParticleFlag.b2_colorMixingParticle && (this.m_colorBuffer.data = this.RequestBuffer(this.m_colorBuffer.data));
this.m_allParticleFlags |= i;
}
this.m_flagsBuffer.data[e] = i;
};
n.prototype.GetParticleFlags = function(t) {
if (!this.m_flagsBuffer.data) throw new Error();
return this.m_flagsBuffer.data[t];
};
n.prototype.SetFlagsBuffer = function(t, e) {
this.SetUserOverridableBuffer(this.m_flagsBuffer, t, e);
};
n.prototype.SetPositionBuffer = function(t, e) {
this.SetUserOverridableBuffer(this.m_positionBuffer, t, e);
};
n.prototype.SetVelocityBuffer = function(t, e) {
this.SetUserOverridableBuffer(this.m_velocityBuffer, t, e);
};
n.prototype.SetColorBuffer = function(t, e) {
this.SetUserOverridableBuffer(this.m_colorBuffer, t, e);
};
n.prototype.SetUserDataBuffer = function(t, e) {
this.SetUserOverridableBuffer(this.m_userDataBuffer, t, e);
};
n.prototype.GetContacts = function() {
return this.m_contactBuffer.data;
};
n.prototype.GetContactCount = function() {
return this.m_contactBuffer.count;
};
n.prototype.GetBodyContacts = function() {
return this.m_bodyContactBuffer.data;
};
n.prototype.GetBodyContactCount = function() {
return this.m_bodyContactBuffer.count;
};
n.prototype.GetPairs = function() {
return this.m_pairBuffer.data;
};
n.prototype.GetPairCount = function() {
return this.m_pairBuffer.count;
};
n.prototype.GetTriads = function() {
return this.m_triadBuffer.data;
};
n.prototype.GetTriadCount = function() {
return this.m_triadBuffer.count;
};
n.prototype.SetStuckThreshold = function(t) {
this.m_stuckThreshold = t;
if (t > 0) {
this.m_lastBodyContactStepBuffer.data = this.RequestBuffer(this.m_lastBodyContactStepBuffer.data);
this.m_bodyContactCountBuffer.data = this.RequestBuffer(this.m_bodyContactCountBuffer.data);
this.m_consecutiveContactStepsBuffer.data = this.RequestBuffer(this.m_consecutiveContactStepsBuffer.data);
}
};
n.prototype.GetStuckCandidates = function() {
return this.m_stuckParticleBuffer.Data();
};
n.prototype.GetStuckCandidateCount = function() {
return this.m_stuckParticleBuffer.GetCount();
};
n.prototype.ComputeCollisionEnergy = function() {
if (!this.m_velocityBuffer.data) throw new Error();
for (var t = n.ComputeCollisionEnergy_s_v, e = this.m_velocityBuffer.data, i = 0, r = 0; r < this.m_contactBuffer.count; r++) {
var s = this.m_contactBuffer.data[r], o = s.indexA, a = s.indexB, c = s.normal, l = I.SubVV(e[a], e[o], t), u = I.DotVV(l, c);
u < 0 && (i += u * u);
}
return .5 * this.GetParticleMass() * i;
};
n.prototype.SetStrictContactCheck = function(t) {
this.m_def.strictContactCheck = t;
};
n.prototype.GetStrictContactCheck = function() {
return this.m_def.strictContactCheck;
};
n.prototype.SetParticleLifetime = function(t, e) {
var i = null === this.m_indexByExpirationTimeBuffer.data;
this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);
this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);
if (i) for (var n = this.GetParticleCount(), r = 0; r < n; ++r) this.m_indexByExpirationTimeBuffer.data[r] = r;
var s = e / this.m_def.lifetimeGranularity, o = s > 0 ? this.GetQuantizedTimeElapsed() + s : s;
if (o !== this.m_expirationTimeBuffer.data[t]) {
this.m_expirationTimeBuffer.data[t] = o;
this.m_expirationTimeBufferRequiresSorting = !0;
}
};
n.prototype.GetParticleLifetime = function(t) {
return this.ExpirationTimeToLifetime(this.GetExpirationTimeBuffer()[t]);
};
n.prototype.SetDestructionByAge = function(t) {
t && this.GetExpirationTimeBuffer();
this.m_def.destroyByAge = t;
};
n.prototype.GetDestructionByAge = function() {
return this.m_def.destroyByAge;
};
n.prototype.GetExpirationTimeBuffer = function() {
this.m_expirationTimeBuffer.data = this.RequestBuffer(this.m_expirationTimeBuffer.data);
return this.m_expirationTimeBuffer.data;
};
n.prototype.ExpirationTimeToLifetime = function(t) {
return (t > 0 ? t - this.GetQuantizedTimeElapsed() : t) * this.m_def.lifetimeGranularity;
};
n.prototype.GetIndexByExpirationTimeBuffer = function() {
this.GetParticleCount() ? this.SetParticleLifetime(0, this.GetParticleLifetime(0)) : this.m_indexByExpirationTimeBuffer.data = this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data);
if (!this.m_indexByExpirationTimeBuffer.data) throw new Error();
return this.m_indexByExpirationTimeBuffer.data;
};
n.prototype.ParticleApplyLinearImpulse = function(t, e) {
this.ApplyLinearImpulse(t, t + 1, e);
};
n.prototype.ApplyLinearImpulse = function(t, e, i) {
if (!this.m_velocityBuffer.data) throw new Error();
for (var n = this.m_velocityBuffer.data, r = (e - t) * this.GetParticleMass(), s = new I().Copy(i).SelfMul(1 / r), o = t; o < e; o++) n[o].SelfAdd(s);
};
n.IsSignificantForce = function(t) {
return 0 !== t.x || 0 !== t.y;
};
n.prototype.ParticleApplyForce = function(t, e) {
if (!this.m_flagsBuffer.data) throw new Error();
if (n.IsSignificantForce(e) && this.ForceCanBeApplied(this.m_flagsBuffer.data[t])) {
this.PrepareForceBuffer();
this.m_forceBuffer[t].SelfAdd(e);
}
};
n.prototype.ApplyForce = function(t, e, i) {
var r = new I().Copy(i).SelfMul(1 / (e - t));
if (n.IsSignificantForce(r)) {
this.PrepareForceBuffer();
for (var s = t; s < e; s++) this.m_forceBuffer[s].SelfAdd(r);
}
};
n.prototype.GetNext = function() {
return this.m_next;
};
n.prototype.QueryAABB = function(t, e) {
if (0 !== this.m_proxyBuffer.count) {
var i = this.m_proxyBuffer.count, r = Bn(this.m_proxyBuffer.data, 0, i, n.computeTag(this.m_inverseDiameter * e.lowerBound.x, this.m_inverseDiameter * e.lowerBound.y), n.Proxy.CompareProxyTag), s = Dn(this.m_proxyBuffer.data, r, i, n.computeTag(this.m_inverseDiameter * e.upperBound.x, this.m_inverseDiameter * e.upperBound.y), n.Proxy.CompareTagProxy);
if (!this.m_positionBuffer.data) throw new Error();
for (var o = this.m_positionBuffer.data, a = r; a < s; ++a) {
var c = this.m_proxyBuffer.data[a].index, l = o[c];
if (e.lowerBound.x < l.x && l.x < e.upperBound.x && e.lowerBound.y < l.y && l.y < e.upperBound.y && !t.ReportParticle(this, c)) break;
}
}
};
n.prototype.QueryShapeAABB = function(t, e, i, r) {
void 0 === r && (r = 0);
var s = n.QueryShapeAABB_s_aabb;
e.ComputeAABB(s, i, r);
this.QueryAABB(t, s);
};
n.prototype.QueryPointAABB = function(t, e, i) {
void 0 === i && (i = c);
var r = n.QueryPointAABB_s_aabb;
r.lowerBound.Set(e.x - i, e.y - i);
r.upperBound.Set(e.x + i, e.y + i);
this.QueryAABB(t, r);
};
n.prototype.RayCast = function(t, e, i) {
var r = n.RayCast_s_aabb, s = n.RayCast_s_p, o = n.RayCast_s_v, a = n.RayCast_s_n, c = n.RayCast_s_point;
if (0 !== this.m_proxyBuffer.count) {
if (!this.m_positionBuffer.data) throw new Error();
var l = this.m_positionBuffer.data, u = r;
I.MinV(e, i, u.lowerBound);
I.MaxV(e, i, u.upperBound);
for (var h, f = 1, _ = I.SubVV(i, e, o), d = I.DotVV(_, _), p = this.GetInsideBoundsEnumerator(u); (h = p.GetNext()) >= 0; ) {
var m = I.SubVV(e, l[h], s), y = I.DotVV(m, _), v = y * y - d * (I.DotVV(m, m) - this.m_squaredDiameter);
if (v >= 0) {
var b = w(v), C = (-y - b) / d;
if (C > f) continue;
if (C < 0 && ((C = (-y + b) / d) < 0 || C > f)) continue;
var x = I.AddVMulSV(m, C, _, a);
x.Normalize();
var A = t.ReportParticle(this, h, I.AddVMulSV(e, C, _, c), x, C);
if ((f = g(f, A)) <= 0) break;
}
}
}
};
n.prototype.ComputeAABB = function(t) {
var e = this.GetParticleCount();
t.lowerBound.x = +i;
t.lowerBound.y = +i;
t.upperBound.x = -i;
t.upperBound.y = -i;
if (!this.m_positionBuffer.data) throw new Error();
for (var n = this.m_positionBuffer.data, r = 0; r < e; r++) {
var s = n[r];
I.MinV(t.lowerBound, s, t.lowerBound);
I.MaxV(t.upperBound, s, t.upperBound);
}
t.lowerBound.x -= this.m_particleDiameter;
t.lowerBound.y -= this.m_particleDiameter;
t.upperBound.x += this.m_particleDiameter;
t.upperBound.y += this.m_particleDiameter;
};
n.prototype.FreeBuffer = function(t, e) {
null !== t && (t.length = 0);
};
n.prototype.FreeUserOverridableBuffer = function(t) {
0 === t.userSuppliedCapacity && this.FreeBuffer(t.data, this.m_internalAllocatedCapacity);
};
n.prototype.ReallocateBuffer3 = function(t, e, i) {
if (i <= e) throw new Error();
var n = t ? t.slice() : [];
n.length = i;
return n;
};
n.prototype.ReallocateBuffer5 = function(t, e, i, n, r) {
if (n <= i) throw new Error();
if (e && !(n <= e)) throw new Error();
r && !t || e || (t = this.ReallocateBuffer3(t, i, n));
return t;
};
n.prototype.ReallocateBuffer4 = function(t, e, i, n) {
return this.ReallocateBuffer5(t.data, t.userSuppliedCapacity, e, i, n);
};
n.prototype.RequestBuffer = function(t) {
if (!t) {
0 === this.m_internalAllocatedCapacity && this.ReallocateInternalAllocatedBuffers(256);
(t = []).length = this.m_internalAllocatedCapacity;
}
return t;
};
n.prototype.ReallocateHandleBuffers = function(t) {
this.m_handleIndexBuffer.data = this.ReallocateBuffer4(this.m_handleIndexBuffer, this.m_internalAllocatedCapacity, t, !0);
};
n.prototype.ReallocateInternalAllocatedBuffers = function(t) {
function e(t, e) {
return e && t > e ? e : t;
}
t = e(t = e(t = e(t = e(t = e(t = e(t, this.m_def.maxCount), this.m_flagsBuffer.userSuppliedCapacity), this.m_positionBuffer.userSuppliedCapacity), this.m_velocityBuffer.userSuppliedCapacity), this.m_colorBuffer.userSuppliedCapacity), this.m_userDataBuffer.userSuppliedCapacity);
if (this.m_internalAllocatedCapacity < t) {
this.ReallocateHandleBuffers(t);
this.m_flagsBuffer.data = this.ReallocateBuffer4(this.m_flagsBuffer, this.m_internalAllocatedCapacity, t, !1);
var i = this.m_stuckThreshold > 0;
this.m_lastBodyContactStepBuffer.data = this.ReallocateBuffer4(this.m_lastBodyContactStepBuffer, this.m_internalAllocatedCapacity, t, i);
this.m_bodyContactCountBuffer.data = this.ReallocateBuffer4(this.m_bodyContactCountBuffer, this.m_internalAllocatedCapacity, t, i);
this.m_consecutiveContactStepsBuffer.data = this.ReallocateBuffer4(this.m_consecutiveContactStepsBuffer, this.m_internalAllocatedCapacity, t, i);
this.m_positionBuffer.data = this.ReallocateBuffer4(this.m_positionBuffer, this.m_internalAllocatedCapacity, t, !1);
this.m_velocityBuffer.data = this.ReallocateBuffer4(this.m_velocityBuffer, this.m_internalAllocatedCapacity, t, !1);
this.m_forceBuffer = this.ReallocateBuffer5(this.m_forceBuffer, 0, this.m_internalAllocatedCapacity, t, !1);
this.m_weightBuffer = this.ReallocateBuffer5(this.m_weightBuffer, 0, this.m_internalAllocatedCapacity, t, !1);
this.m_staticPressureBuffer = this.ReallocateBuffer5(this.m_staticPressureBuffer, 0, this.m_internalAllocatedCapacity, t, !0);
this.m_accumulationBuffer = this.ReallocateBuffer5(this.m_accumulationBuffer, 0, this.m_internalAllocatedCapacity, t, !1);
this.m_accumulation2Buffer = this.ReallocateBuffer5(this.m_accumulation2Buffer, 0, this.m_internalAllocatedCapacity, t, !0);
this.m_depthBuffer = this.ReallocateBuffer5(this.m_depthBuffer, 0, this.m_internalAllocatedCapacity, t, !0);
this.m_colorBuffer.data = this.ReallocateBuffer4(this.m_colorBuffer, this.m_internalAllocatedCapacity, t, !0);
this.m_groupBuffer = this.ReallocateBuffer5(this.m_groupBuffer, 0, this.m_internalAllocatedCapacity, t, !1);
this.m_userDataBuffer.data = this.ReallocateBuffer4(this.m_userDataBuffer, this.m_internalAllocatedCapacity, t, !0);
this.m_expirationTimeBuffer.data = this.ReallocateBuffer4(this.m_expirationTimeBuffer, this.m_internalAllocatedCapacity, t, !0);
this.m_indexByExpirationTimeBuffer.data = this.ReallocateBuffer4(this.m_indexByExpirationTimeBuffer, this.m_internalAllocatedCapacity, t, !1);
this.m_internalAllocatedCapacity = t;
}
};
n.prototype.CreateParticleForGroup = function(t, i, n) {
var r = new yn();
r.flags = e(t.flags, 0);
F.MulXV(i, n, r.position);
I.AddVV(e(t.linearVelocity, I.ZERO), I.CrossSV(e(t.angularVelocity, 0), I.SubVV(r.position, e(t.position, I.ZERO), I.s_t0), I.s_t0), r.velocity);
r.color.Copy(e(t.color, k.ZERO));
r.lifetime = e(t.lifetime, 0);
r.userData = t.userData;
this.CreateParticle(r);
};
n.prototype.CreateParticlesStrokeShapeForGroup = function(i, r, s) {
var o = n.CreateParticlesStrokeShapeForGroup_s_edge, a = n.CreateParticlesStrokeShapeForGroup_s_d, c = n.CreateParticlesStrokeShapeForGroup_s_p, l = e(r.stride, 0);
0 === l && (l = this.GetParticleStride());
for (var u = 0, h = i.GetChildCount(), f = 0; f < h; f++) {
var _ = null;
if (i.GetType() === t.b2ShapeType.e_edgeShape) _ = i; else {
_ = o;
i.GetChildEdge(_, f);
}
for (var d = I.SubVV(_.m_vertex2, _.m_vertex1, a), p = d.Length(); u < p; ) {
var m = I.AddVMulSV(_.m_vertex1, u / p, d, c);
this.CreateParticleForGroup(r, s, m);
u += l;
}
u -= p;
}
};
n.prototype.CreateParticlesFillShapeForGroup = function(t, i, r) {
var s = n.CreateParticlesFillShapeForGroup_s_aabb, o = n.CreateParticlesFillShapeForGroup_s_p, a = e(i.stride, 0);
0 === a && (a = this.GetParticleStride());
var c = F.IDENTITY, l = s;
t.ComputeAABB(l, c, 0);
for (var u = Math.floor(l.lowerBound.y / a) * a; u < l.upperBound.y; u += a) for (var h = Math.floor(l.lowerBound.x / a) * a; h < l.upperBound.x; h += a) {
var f = o.Set(h, u);
t.TestPoint(c, f) && this.CreateParticleForGroup(i, r, f);
}
};
n.prototype.CreateParticlesWithShapeForGroup = function(e, i, n) {
switch (e.GetType()) {
case t.b2ShapeType.e_edgeShape:
case t.b2ShapeType.e_chainShape:
this.CreateParticlesStrokeShapeForGroup(e, i, n);
break;

case t.b2ShapeType.e_polygonShape:
case t.b2ShapeType.e_circleShape:
this.CreateParticlesFillShapeForGroup(e, i, n);
}
};
n.prototype.CreateParticlesWithShapesForGroup = function(t, e, i, r) {
var s = new n.CompositeShape(t, e);
this.CreateParticlesFillShapeForGroup(s, i, r);
};
n.prototype.CloneParticle = function(t, e) {
var i = new yn();
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
i.flags = this.m_flagsBuffer.data[t];
i.position.Copy(this.m_positionBuffer.data[t]);
i.velocity.Copy(this.m_velocityBuffer.data[t]);
this.m_colorBuffer.data && i.color.Copy(this.m_colorBuffer.data[t]);
this.m_userDataBuffer.data && (i.userData = this.m_userDataBuffer.data[t]);
i.group = e;
var n = this.CreateParticle(i);
if (this.m_handleIndexBuffer.data) {
var r = this.m_handleIndexBuffer.data[t];
r && r.SetIndex(n);
this.m_handleIndexBuffer.data[n] = r;
this.m_handleIndexBuffer.data[t] = null;
}
this.m_lastBodyContactStepBuffer.data && (this.m_lastBodyContactStepBuffer.data[n] = this.m_lastBodyContactStepBuffer.data[t]);
this.m_bodyContactCountBuffer.data && (this.m_bodyContactCountBuffer.data[n] = this.m_bodyContactCountBuffer.data[t]);
this.m_consecutiveContactStepsBuffer.data && (this.m_consecutiveContactStepsBuffer.data[n] = this.m_consecutiveContactStepsBuffer.data[t]);
this.m_hasForce && this.m_forceBuffer[n].Copy(this.m_forceBuffer[t]);
this.m_staticPressureBuffer && (this.m_staticPressureBuffer[n] = this.m_staticPressureBuffer[t]);
this.m_depthBuffer && (this.m_depthBuffer[n] = this.m_depthBuffer[t]);
this.m_expirationTimeBuffer.data && (this.m_expirationTimeBuffer.data[n] = this.m_expirationTimeBuffer.data[t]);
return n;
};
n.prototype.DestroyParticlesInGroup = function(t, e) {
void 0 === e && (e = !1);
for (var i = t.m_firstIndex; i < t.m_lastIndex; i++) this.DestroyParticle(i, e);
};
n.prototype.DestroyParticleGroup = function(t) {
this.m_world.m_destructionListener && this.m_world.m_destructionListener.SayGoodbyeParticleGroup(t);
this.SetGroupFlags(t, 0);
for (var e = t.m_firstIndex; e < t.m_lastIndex; e++) this.m_groupBuffer[e] = null;
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
t === this.m_groupList && (this.m_groupList = t.m_next);
--this.m_groupCount;
};
n.ParticleCanBeConnected = function(e, i) {
return 0 != (e & (t.b2ParticleFlag.b2_wallParticle | t.b2ParticleFlag.b2_springParticle | t.b2ParticleFlag.b2_elasticParticle)) || null !== i && 0 != (i.GetGroupFlags() & t.b2ParticleGroupFlag.b2_rigidParticleGroup);
};
n.prototype.UpdatePairsAndTriads = function(e, i, r) {
var s = n.UpdatePairsAndTriads_s_dab, o = n.UpdatePairsAndTriads_s_dbc, a = n.UpdatePairsAndTriads_s_dca;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var c = this.m_positionBuffer.data, l = 0, u = e; u < i; u++) l |= this.m_flagsBuffer.data[u];
if (l & n.k_pairFlags) for (var h = 0; h < this.m_contactBuffer.count; h++) {
var f = this.m_contactBuffer.data[h], _ = f.indexA, d = f.indexB, p = this.m_flagsBuffer.data[_], m = this.m_flagsBuffer.data[d], y = this.m_groupBuffer[_], v = this.m_groupBuffer[d];
if (_ >= e && _ < i && d >= e && d < i && !((p | m) & t.b2ParticleFlag.b2_zombieParticle) && (p | m) & n.k_pairFlags && (r.IsNecessary(_) || r.IsNecessary(d)) && n.ParticleCanBeConnected(p, y) && n.ParticleCanBeConnected(m, v) && r.ShouldCreatePair(_, d)) {
var b = this.m_pairBuffer.data[this.m_pairBuffer.Append()];
b.indexA = _;
b.indexB = d;
b.flags = f.flags;
b.strength = g(y ? y.m_strength : 1, v ? v.m_strength : 1);
b.distance = I.DistanceVV(c[_], c[d]);
}
En(this.m_pairBuffer.data, 0, this.m_pairBuffer.count, n.ComparePairIndices);
this.m_pairBuffer.Unique(n.MatchPairIndices);
}
if (l & n.k_triadFlags) {
var C = new An(i - e);
for (u = e; u < i; u++) {
var x = this.m_flagsBuffer.data[u], A = this.m_groupBuffer[u];
x & t.b2ParticleFlag.b2_zombieParticle || !n.ParticleCanBeConnected(x, A) || C.AddGenerator(c[u], u, r.IsNecessary(u));
}
var S = this.GetParticleStride();
C.Generate(S / 2, 2 * S);
var w = this;
C.GetNodes((function(t, e, i) {
if (!w.m_flagsBuffer.data) throw new Error();
var l = w.m_flagsBuffer.data[t], u = w.m_flagsBuffer.data[e], h = w.m_flagsBuffer.data[i];
if ((l | u | h) & n.k_triadFlags && r.ShouldCreateTriad(t, e, i)) {
var f = c[t], _ = c[e], d = c[i], p = I.SubVV(f, _, s), m = I.SubVV(_, d, o), y = I.SubVV(d, f, a), v = 4 * w.m_squaredDiameter;
if (I.DotVV(p, p) > v || I.DotVV(m, m) > v || I.DotVV(y, y) > v) return;
var b = w.m_groupBuffer[t], C = w.m_groupBuffer[e], x = w.m_groupBuffer[i], A = w.m_triadBuffer.data[w.m_triadBuffer.Append()];
A.indexA = t;
A.indexB = e;
A.indexC = i;
A.flags = l | u | h;
A.strength = g(g(b ? b.m_strength : 1, C ? C.m_strength : 1), x ? x.m_strength : 1);
var S = (f.x + _.x + d.x) / 3, T = (f.y + _.y + d.y) / 3;
A.pa.x = f.x - S;
A.pa.y = f.y - T;
A.pb.x = _.x - S;
A.pb.y = _.y - T;
A.pc.x = d.x - S;
A.pc.y = d.y - T;
A.ka = -I.DotVV(y, p);
A.kb = -I.DotVV(p, m);
A.kc = -I.DotVV(m, y);
A.s = I.CrossVV(f, _) + I.CrossVV(_, d) + I.CrossVV(d, f);
}
}));
En(this.m_triadBuffer.data, 0, this.m_triadBuffer.count, n.CompareTriadIndices);
this.m_triadBuffer.Unique(n.MatchTriadIndices);
}
};
n.prototype.UpdatePairsAndTriadsWithReactiveParticles = function() {
var e = new n.ReactiveFilter(this.m_flagsBuffer);
this.UpdatePairsAndTriads(0, this.m_count, e);
if (!this.m_flagsBuffer.data) throw new Error();
for (var i = 0; i < this.m_count; i++) this.m_flagsBuffer.data[i] &= ~t.b2ParticleFlag.b2_reactiveParticle;
this.m_allParticleFlags &= ~t.b2ParticleFlag.b2_reactiveParticle;
};
n.ComparePairIndices = function(t, e) {
var i = t.indexA - e.indexA;
return 0 !== i ? i < 0 : t.indexB < e.indexB;
};
n.MatchPairIndices = function(t, e) {
return t.indexA === e.indexA && t.indexB === e.indexB;
};
n.CompareTriadIndices = function(t, e) {
var i = t.indexA - e.indexA;
if (0 !== i) return i < 0;
var n = t.indexB - e.indexB;
return 0 !== n ? n < 0 : t.indexC < e.indexC;
};
n.MatchTriadIndices = function(t, e) {
return t.indexA === e.indexA && t.indexB === e.indexB && t.indexC === e.indexC;
};
n.InitializeParticleLists = function(t, e) {
for (var i = t.GetBufferIndex(), n = t.GetParticleCount(), r = 0; r < n; r++) {
var s = e[r];
s.list = s;
s.next = null;
s.count = 1;
s.index = r + i;
}
};
n.prototype.MergeParticleListsInContact = function(t, e) {
for (var i = t.GetBufferIndex(), r = 0; r < this.m_contactBuffer.count; r++) {
var s = this.m_contactBuffer.data[r], o = s.indexA, a = s.indexB;
if (t.ContainsParticle(o) && t.ContainsParticle(a)) {
var c = e[o - i].list, l = e[a - i].list;
if (c !== l) {
if (c.count < l.count) {
var u = c;
c = l;
l = u;
}
n.MergeParticleLists(c, l);
}
}
}
};
n.MergeParticleLists = function(t, e) {
for (var i = e; ;) {
i.list = t;
var n = i.next;
if (!n) {
i.next = t.next;
break;
}
i = n;
}
t.next = e;
t.count += e.count;
e.count = 0;
};
n.FindLongestParticleList = function(t, e) {
for (var i = t.GetParticleCount(), n = e[0], r = 0; r < i; r++) {
var s = e[r];
n.count < s.count && (n = s);
}
return n;
};
n.prototype.MergeZombieParticleListNodes = function(e, i, r) {
if (!this.m_flagsBuffer.data) throw new Error();
for (var s = e.GetParticleCount(), o = 0; o < s; o++) {
var a = i[o];
a !== r && this.m_flagsBuffer.data[a.index] & t.b2ParticleFlag.b2_zombieParticle && n.MergeParticleListAndNode(r, a);
}
};
n.MergeParticleListAndNode = function(t, e) {
e.list = t;
e.next = t.next;
t.next = e;
t.count++;
e.count = 0;
};
n.prototype.CreateParticleGroupsFromParticleList = function(e, i, n) {
if (!this.m_flagsBuffer.data) throw new Error();
var r = e.GetParticleCount(), s = new bn();
s.groupFlags = e.GetGroupFlags();
s.userData = e.GetUserData();
for (var o = 0; o < r; o++) {
var a = i[o];
if (a.count && a !== n) for (var c = this.CreateParticleGroup(s), l = a; l; l = l.next) {
var u = l.index, h = this.CloneParticle(u, c);
this.m_flagsBuffer.data[u] |= t.b2ParticleFlag.b2_zombieParticle;
l.index = h;
}
}
};
n.prototype.UpdatePairsAndTriadsWithParticleList = function(t, e) {
for (var i = t.GetBufferIndex(), n = 0; n < this.m_pairBuffer.count; n++) {
var r = this.m_pairBuffer.data[n], s = r.indexA, o = r.indexB;
t.ContainsParticle(s) && (r.indexA = e[s - i].index);
t.ContainsParticle(o) && (r.indexB = e[o - i].index);
}
for (n = 0; n < this.m_triadBuffer.count; n++) {
var a = this.m_triadBuffer.data[n], c = (s = a.indexA, o = a.indexB, a.indexC);
t.ContainsParticle(s) && (a.indexA = e[s - i].index);
t.ContainsParticle(o) && (a.indexB = e[o - i].index);
t.ContainsParticle(c) && (a.indexC = e[c - i].index);
}
};
n.prototype.ComputeDepth = function() {
for (var e = [], n = 0, r = 0; r < this.m_contactBuffer.count; r++) {
var s = (v = this.m_contactBuffer.data[r]).indexA, o = v.indexB, a = this.m_groupBuffer[s], c = this.m_groupBuffer[o];
a && a === c && a.m_groupFlags & t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth && (e[n++] = v);
}
for (var l = [], u = 0, h = this.m_groupList; h; h = h.GetNext()) if (h.m_groupFlags & t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth) {
l[u++] = h;
this.SetGroupFlags(h, h.m_groupFlags & ~t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);
for (var f = h.m_firstIndex; f < h.m_lastIndex; f++) this.m_accumulationBuffer[f] = 0;
}
for (r = 0; r < n; r++) {
s = (v = e[r]).indexA, o = v.indexB;
var _ = v.weight;
this.m_accumulationBuffer[s] += _;
this.m_accumulationBuffer[o] += _;
}
for (f = 0; f < u; f++) for (var d = (h = l[f]).m_firstIndex; d < h.m_lastIndex; d++) {
_ = this.m_accumulationBuffer[d];
this.m_depthBuffer[d] = _ < .8 ? 0 : i;
}
for (var p = w(this.m_count) >> 0, m = 0; m < p; m++) {
var y = !1;
for (r = 0; r < n; r++) {
s = (v = e[r]).indexA, o = v.indexB;
var v, g = 1 - v.weight, b = this.m_depthBuffer[s], C = this.m_depthBuffer[o], x = C + g, A = b + g;
if (b > x) {
this.m_depthBuffer[s] = x;
y = !0;
}
if (C > A) {
this.m_depthBuffer[o] = A;
y = !0;
}
}
if (!y) break;
}
for (f = 0; f < u; f++) for (var S = (h = l[f]).m_firstIndex; S < h.m_lastIndex; S++) this.m_depthBuffer[S] < i ? this.m_depthBuffer[S] *= this.m_particleDiameter : this.m_depthBuffer[S] = 0;
};
n.prototype.GetInsideBoundsEnumerator = function(t) {
var e = n.computeTag(this.m_inverseDiameter * t.lowerBound.x - 1, this.m_inverseDiameter * t.lowerBound.y - 1), i = n.computeTag(this.m_inverseDiameter * t.upperBound.x + 1, this.m_inverseDiameter * t.upperBound.y + 1), r = this.m_proxyBuffer.count, s = Bn(this.m_proxyBuffer.data, 0, r, e, n.Proxy.CompareProxyTag), o = Dn(this.m_proxyBuffer.data, 0, r, i, n.Proxy.CompareTagProxy);
return new n.InsideBoundsEnumerator(this, e, i, s, o);
};
n.prototype.UpdateAllParticleFlags = function() {
if (!this.m_flagsBuffer.data) throw new Error();
this.m_allParticleFlags = 0;
for (var t = 0; t < this.m_count; t++) this.m_allParticleFlags |= this.m_flagsBuffer.data[t];
this.m_needsUpdateAllParticleFlags = !1;
};
n.prototype.UpdateAllGroupFlags = function() {
this.m_allGroupFlags = 0;
for (var t = this.m_groupList; t; t = t.GetNext()) this.m_allGroupFlags |= t.m_groupFlags;
this.m_needsUpdateAllGroupFlags = !1;
};
n.prototype.AddContact = function(t, e, i) {
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
var r = n.AddContact_s_d, s = this.m_positionBuffer.data, o = I.SubVV(s[e], s[t], r), a = I.DotVV(o, o);
if (a < this.m_squaredDiameter) {
var c = S(a);
isFinite(c) || (c = 198177537e11);
var l = this.m_contactBuffer.data[this.m_contactBuffer.Append()];
l.indexA = t;
l.indexB = e;
l.flags = this.m_flagsBuffer.data[t] | this.m_flagsBuffer.data[e];
l.weight = 1 - a * c * this.m_inverseDiameter;
I.MulSV(c, o, l.normal);
}
};
n.prototype.FindContacts_Reference = function(t) {
var e = this.m_proxyBuffer.count;
this.m_contactBuffer.count = 0;
for (var i = 0, r = 0; i < e; i++) {
for (var s = n.computeRelativeTag(this.m_proxyBuffer.data[i].tag, 1, 0), o = i + 1; o < e && !(s < this.m_proxyBuffer.data[o].tag); o++) this.AddContact(this.m_proxyBuffer.data[i].index, this.m_proxyBuffer.data[o].index, this.m_contactBuffer);
for (var a = n.computeRelativeTag(this.m_proxyBuffer.data[i].tag, -1, 1); r < e && !(a <= this.m_proxyBuffer.data[r].tag); r++) ;
var c = n.computeRelativeTag(this.m_proxyBuffer.data[i].tag, 1, 1);
for (o = r; o < e && !(c < this.m_proxyBuffer.data[o].tag); o++) this.AddContact(this.m_proxyBuffer.data[i].index, this.m_proxyBuffer.data[o].index, this.m_contactBuffer);
}
};
n.prototype.FindContacts = function(t) {
this.FindContacts_Reference(t);
};
n.prototype.UpdateProxies_Reference = function(t) {
if (!this.m_positionBuffer.data) throw new Error();
for (var e = this.m_positionBuffer.data, i = this.m_inverseDiameter, r = 0; r < this.m_proxyBuffer.count; ++r) {
var s = this.m_proxyBuffer.data[r], o = e[s.index];
s.tag = n.computeTag(i * o.x, i * o.y);
}
};
n.prototype.UpdateProxies = function(t) {
this.UpdateProxies_Reference(t);
};
n.prototype.SortProxies = function(t) {
Tn(this.m_proxyBuffer.data, 0, this.m_proxyBuffer.count, n.Proxy.CompareProxyProxy);
};
n.prototype.FilterContacts = function(e) {
var i = this.GetParticleContactFilter();
if (null !== i) {
var n = this;
this.m_contactBuffer.RemoveIf((function(e) {
return 0 != (e.flags & t.b2ParticleFlag.b2_particleContactFilterParticle) && !i.ShouldCollideParticleParticle(n, e.indexA, e.indexB);
}));
}
};
n.prototype.NotifyContactListenerPreContact = function(t) {
if (null !== this.GetParticleContactListener()) {
t.Initialize(this.m_contactBuffer, this.m_flagsBuffer);
throw new Error();
}
};
n.prototype.NotifyContactListenerPostContact = function(t) {
var e = this.GetParticleContactListener();
if (null !== e) {
for (var i = 0; i < this.m_contactBuffer.count; ++i) {
var n = this.m_contactBuffer.data[i];
e.BeginContactParticleParticle(this, n);
}
throw new Error();
}
};
n.b2ParticleContactIsZombie = function(e) {
return (e.flags & t.b2ParticleFlag.b2_zombieParticle) === t.b2ParticleFlag.b2_zombieParticle;
};
n.prototype.UpdateContacts = function(t) {
this.UpdateProxies(this.m_proxyBuffer);
this.SortProxies(this.m_proxyBuffer);
var e = new n.b2ParticlePairSet();
this.NotifyContactListenerPreContact(e);
this.FindContacts(this.m_contactBuffer);
this.FilterContacts(this.m_contactBuffer);
this.NotifyContactListenerPostContact(e);
t && this.m_contactBuffer.RemoveIf(n.b2ParticleContactIsZombie);
};
n.prototype.NotifyBodyContactListenerPreContact = function(t) {
if (null !== this.GetFixtureContactListener()) {
t.Initialize(this.m_bodyContactBuffer, this.m_flagsBuffer);
throw new Error();
}
};
n.prototype.NotifyBodyContactListenerPostContact = function(t) {
var e = this.GetFixtureContactListener();
if (null !== e) {
for (var i = 0; i < this.m_bodyContactBuffer.count; i++) {
var n = this.m_bodyContactBuffer.data[i];
e.BeginContactFixtureParticle(this, n);
}
throw new Error();
}
};
n.prototype.UpdateBodyContacts = function() {
var t = n.UpdateBodyContacts_s_aabb, e = new n.FixtureParticleSet();
this.NotifyBodyContactListenerPreContact(e);
if (this.m_stuckThreshold > 0) {
if (!this.m_bodyContactCountBuffer.data) throw new Error();
if (!this.m_lastBodyContactStepBuffer.data) throw new Error();
if (!this.m_consecutiveContactStepsBuffer.data) throw new Error();
for (var i = this.GetParticleCount(), r = 0; r < i; r++) {
this.m_bodyContactCountBuffer.data[r] = 0;
this.m_timestamp > this.m_lastBodyContactStepBuffer.data[r] + 1 && (this.m_consecutiveContactStepsBuffer.data[r] = 0);
}
}
this.m_bodyContactBuffer.SetCount(0);
this.m_stuckParticleBuffer.SetCount(0);
var s = t;
this.ComputeAABB(s);
var o = new n.UpdateBodyContactsCallback(this, this.GetFixtureContactFilter());
this.m_world.QueryAABB(o, s);
this.m_def.strictContactCheck && this.RemoveSpuriousBodyContacts();
this.NotifyBodyContactListenerPostContact(e);
};
n.prototype.Solve = function(e) {
var i = n.Solve_s_subStep;
if (0 !== this.m_count) {
this.m_expirationTimeBuffer.data && this.SolveLifetimes(e);
this.m_allParticleFlags & t.b2ParticleFlag.b2_zombieParticle && this.SolveZombie();
this.m_needsUpdateAllParticleFlags && this.UpdateAllParticleFlags();
this.m_needsUpdateAllGroupFlags && this.UpdateAllGroupFlags();
if (!this.m_paused) for (this.m_iterationIndex = 0; this.m_iterationIndex < e.particleIterations; this.m_iterationIndex++) {
++this.m_timestamp;
var r = i.Copy(e);
r.dt /= e.particleIterations;
r.inv_dt *= e.particleIterations;
this.UpdateContacts(!1);
this.UpdateBodyContacts();
this.ComputeWeight();
this.m_allGroupFlags & t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth && this.ComputeDepth();
this.m_allParticleFlags & t.b2ParticleFlag.b2_reactiveParticle && this.UpdatePairsAndTriadsWithReactiveParticles();
this.m_hasForce && this.SolveForce(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_viscousParticle && this.SolveViscous();
this.m_allParticleFlags & t.b2ParticleFlag.b2_repulsiveParticle && this.SolveRepulsive(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_powderParticle && this.SolvePowder(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_tensileParticle && this.SolveTensile(r);
this.m_allGroupFlags & t.b2ParticleGroupFlag.b2_solidParticleGroup && this.SolveSolid(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_colorMixingParticle && this.SolveColorMixing();
this.SolveGravity(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_staticPressureParticle && this.SolveStaticPressure(r);
this.SolvePressure(r);
this.SolveDamping(r);
this.m_allParticleFlags & n.k_extraDampingFlags && this.SolveExtraDamping();
this.m_allParticleFlags & t.b2ParticleFlag.b2_elasticParticle && this.SolveElastic(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_springParticle && this.SolveSpring(r);
this.LimitVelocity(r);
this.m_allGroupFlags & t.b2ParticleGroupFlag.b2_rigidParticleGroup && this.SolveRigidDamping();
this.m_allParticleFlags & t.b2ParticleFlag.b2_barrierParticle && this.SolveBarrier(r);
this.SolveCollision(r);
this.m_allGroupFlags & t.b2ParticleGroupFlag.b2_rigidParticleGroup && this.SolveRigid(r);
this.m_allParticleFlags & t.b2ParticleFlag.b2_wallParticle && this.SolveWall();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var s = 0; s < this.m_count; s++) this.m_positionBuffer.data[s].SelfMulAdd(r.dt, this.m_velocityBuffer.data[s]);
}
}
};
n.prototype.SolveCollision = function(t) {
var e = n.SolveCollision_s_aabb;
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
var r = this.m_positionBuffer.data, s = this.m_velocityBuffer.data, o = e;
o.lowerBound.x = +i;
o.lowerBound.y = +i;
o.upperBound.x = -i;
o.upperBound.y = -i;
for (var a = 0; a < this.m_count; a++) {
var c = s[a], l = r[a], u = l.x + t.dt * c.x, h = l.y + t.dt * c.y;
o.lowerBound.x = g(o.lowerBound.x, g(l.x, u));
o.lowerBound.y = g(o.lowerBound.y, g(l.y, h));
o.upperBound.x = b(o.upperBound.x, b(l.x, u));
o.upperBound.y = b(o.upperBound.y, b(l.y, h));
}
var f = new n.SolveCollisionCallback(this, t);
this.m_world.QueryAABB(f, o);
};
n.prototype.LimitVelocity = function(t) {
if (!this.m_velocityBuffer.data) throw new Error();
for (var e = this.m_velocityBuffer.data, i = this.GetCriticalVelocitySquared(t), n = 0; n < this.m_count; n++) {
var r = e[n], s = I.DotVV(r, r);
s > i && r.SelfMul(w(i / s));
}
};
n.prototype.SolveGravity = function(t) {
if (!this.m_velocityBuffer.data) throw new Error();
for (var e = n.SolveGravity_s_gravity, i = this.m_velocityBuffer.data, r = I.MulSV(t.dt * this.m_def.gravityScale, this.m_world.GetGravity(), e), s = 0; s < this.m_count; s++) i[s].SelfAdd(r);
};
n.prototype.SolveBarrier = function(e) {
var i = n.SolveBarrier_s_aabb, r = n.SolveBarrier_s_va, s = n.SolveBarrier_s_vb, o = n.SolveBarrier_s_pba, a = n.SolveBarrier_s_vba, c = n.SolveBarrier_s_vc, l = n.SolveBarrier_s_pca, u = n.SolveBarrier_s_vca, h = n.SolveBarrier_s_qba, f = n.SolveBarrier_s_qca, _ = n.SolveBarrier_s_dv, d = n.SolveBarrier_s_f;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var p = this.m_positionBuffer.data, m = this.m_velocityBuffer.data, y = 0; y < this.m_count; y++) {
0 != (this.m_flagsBuffer.data[y] & n.k_barrierWallFlags) && m[y].SetZero();
}
for (var v = 2.5 * e.dt, g = this.GetParticleMass(), b = 0; b < this.m_pairBuffer.count; b++) {
var C = this.m_pairBuffer.data[b];
if (C.flags & t.b2ParticleFlag.b2_barrierParticle) {
var x = C.indexA, A = C.indexB, S = p[x], T = p[A], E = i;
I.MinV(S, T, E.lowerBound);
I.MaxV(S, T, E.upperBound);
for (var M = this.m_groupBuffer[x], B = this.m_groupBuffer[A], D = this.GetLinearVelocity(M, x, S, r), R = this.GetLinearVelocity(B, A, T, s), P = I.SubVV(T, S, o), O = I.SubVV(R, D, a), L = this.GetInsideBoundsEnumerator(E), V = void 0; (V = L.GetNext()) >= 0; ) {
var N = p[V], F = this.m_groupBuffer[V];
if (M !== F && B !== F) {
var z = this.GetLinearVelocity(F, V, N, c), k = I.SubVV(N, S, l), G = I.SubVV(z, D, u), U = I.CrossVV(O, G), j = I.CrossVV(P, G) - I.CrossVV(k, O), H = I.CrossVV(P, k), W = void 0, q = void 0, X = h, Y = f;
if (0 === U) {
if (0 === j) continue;
if (!((q = -H / j) >= 0 && q < v)) continue;
I.AddVMulSV(P, q, O, X);
I.AddVMulSV(k, q, G, Y);
if (!((W = I.DotVV(X, Y) / I.DotVV(X, X)) >= 0 && W <= 1)) continue;
} else {
var J = j * j - 4 * H * U;
if (J < 0) continue;
var Z = w(J), K = (-j - Z) / (2 * U), Q = (-j + Z) / (2 * U);
if (K > Q) {
var $ = K;
K = Q;
Q = $;
}
q = K;
I.AddVMulSV(P, q, O, X);
I.AddVMulSV(k, q, G, Y);
W = I.DotVV(X, Y) / I.DotVV(X, X);
if (!(q >= 0 && q < v && W >= 0 && W <= 1)) {
if (!((q = Q) >= 0 && q < v)) continue;
I.AddVMulSV(P, q, O, X);
I.AddVMulSV(k, q, G, Y);
if (!((W = I.DotVV(X, Y) / I.DotVV(X, X)) >= 0 && W <= 1)) continue;
}
}
var tt = _;
tt.x = D.x + W * O.x - z.x;
tt.y = D.y + W * O.y - z.y;
var et = I.MulSV(g, tt, d);
if (F && this.IsRigidGroup(F)) {
var it = F.GetMass(), nt = F.GetInertia();
it > 0 && F.m_linearVelocity.SelfMulAdd(1 / it, et);
nt > 0 && (F.m_angularVelocity += I.CrossVV(I.SubVV(N, F.GetCenter(), I.s_t0), et) / nt);
} else m[V].SelfAdd(tt);
this.ParticleApplyForce(V, et.SelfMul(-e.inv_dt));
}
}
}
}
};
n.prototype.SolveStaticPressure = function(e) {
if (!this.m_flagsBuffer.data) throw new Error();
this.m_staticPressureBuffer = this.RequestBuffer(this.m_staticPressureBuffer);
for (var i = this.GetCriticalPressure(e), n = this.m_def.staticPressureStrength * i, r = .25 * i, s = this.m_def.staticPressureRelaxation, o = 0; o < this.m_def.staticPressureIterations; o++) {
for (var a = 0; a < this.m_count; a++) this.m_accumulationBuffer[a] = 0;
for (var c = 0; c < this.m_contactBuffer.count; c++) {
var l = this.m_contactBuffer.data[c];
if (l.flags & t.b2ParticleFlag.b2_staticPressureParticle) {
var u = l.indexA, h = l.indexB, f = l.weight;
this.m_accumulationBuffer[u] += f * this.m_staticPressureBuffer[h];
this.m_accumulationBuffer[h] += f * this.m_staticPressureBuffer[u];
}
}
for (a = 0; a < this.m_count; a++) {
f = this.m_weightBuffer[a];
if (this.m_flagsBuffer.data[a] & t.b2ParticleFlag.b2_staticPressureParticle) {
var _ = (this.m_accumulationBuffer[a] + n * (f - 1)) / (f + s);
this.m_staticPressureBuffer[a] = C(_, 0, r);
} else this.m_staticPressureBuffer[a] = 0;
}
}
};
n.prototype.ComputeWeight = function() {
for (var t = 0; t < this.m_count; t++) this.m_weightBuffer[t] = 0;
for (t = 0; t < this.m_bodyContactBuffer.count; t++) {
var e = (n = this.m_bodyContactBuffer.data[t]).index, i = n.weight;
this.m_weightBuffer[e] += i;
}
for (t = 0; t < this.m_contactBuffer.count; t++) {
e = (n = this.m_contactBuffer.data[t]).indexA;
var n, r = n.indexB;
i = n.weight;
this.m_weightBuffer[e] += i;
this.m_weightBuffer[r] += i;
}
};
n.prototype.SolvePressure = function(e) {
var i = n.SolvePressure_s_f;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var r = this.m_positionBuffer.data, s = this.m_velocityBuffer.data, o = this.GetCriticalPressure(e), a = this.m_def.pressureStrength * o, c = .25 * o, l = 0; l < this.m_count; l++) {
var u = this.m_weightBuffer[l], h = a * b(0, u - 1);
this.m_accumulationBuffer[l] = g(h, c);
}
if (this.m_allParticleFlags & n.k_noPressureFlags) for (l = 0; l < this.m_count; l++) this.m_flagsBuffer.data[l] & n.k_noPressureFlags && (this.m_accumulationBuffer[l] = 0);
if (this.m_allParticleFlags & t.b2ParticleFlag.b2_staticPressureParticle) for (l = 0; l < this.m_count; l++) this.m_flagsBuffer.data[l] & t.b2ParticleFlag.b2_staticPressureParticle && (this.m_accumulationBuffer[l] += this.m_staticPressureBuffer[l]);
for (var f = e.dt / (this.m_def.density * this.m_particleDiameter), _ = this.GetParticleInvMass(), d = 0; d < this.m_bodyContactBuffer.count; d++) {
var p = (A = this.m_bodyContactBuffer.data[d]).index, m = A.body, y = (u = A.weight, 
A.mass), v = A.normal, C = r[p], x = (h = this.m_accumulationBuffer[p] + a * u, 
I.MulSV(f * u * y * h, v, i));
s[p].SelfMulSub(_, x);
m.ApplyLinearImpulse(x, C, !0);
}
for (d = 0; d < this.m_contactBuffer.count; d++) {
var A;
p = (A = this.m_contactBuffer.data[d]).indexA, m = A.indexB, u = A.weight, v = A.normal, 
h = this.m_accumulationBuffer[p] + this.m_accumulationBuffer[m], x = I.MulSV(f * u * h, v, i);
s[p].SelfSub(x);
s[m].SelfAdd(x);
}
};
n.prototype.SolveDamping = function(t) {
var e = n.SolveDamping_s_v, i = n.SolveDamping_s_f;
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var r = this.m_positionBuffer.data, s = this.m_velocityBuffer.data, o = this.m_def.dampingStrength, a = 1 / this.GetCriticalVelocity(t), c = this.GetParticleInvMass(), l = 0; l < this.m_bodyContactBuffer.count; l++) {
var u = (C = this.m_bodyContactBuffer.data[l]).index, h = C.body, f = C.weight, _ = C.mass, d = C.normal, p = r[u], m = I.SubVV(h.GetLinearVelocityFromWorldPoint(p, I.s_t0), s[u], e);
if ((x = I.DotVV(m, d)) < 0) {
var y = b(o * f, g(-a * x, .5)), v = I.MulSV(y * _ * x, d, i);
s[u].SelfMulAdd(c, v);
h.ApplyLinearImpulse(v.SelfNeg(), p, !0);
}
}
for (l = 0; l < this.m_contactBuffer.count; l++) {
var C, x;
u = (C = this.m_contactBuffer.data[l]).indexA, h = C.indexB, f = C.weight, d = C.normal, 
m = I.SubVV(s[h], s[u], e);
if ((x = I.DotVV(m, d)) < 0) {
y = b(o * f, g(-a * x, .5)), v = I.MulSV(y * x, d, i);
s[u].SelfAdd(v);
s[h].SelfSub(v);
}
}
};
n.prototype.SolveRigidDamping = function() {
var t = n.SolveRigidDamping_s_t0, e = n.SolveRigidDamping_s_t1, i = n.SolveRigidDamping_s_p, r = n.SolveRigidDamping_s_v, s = [ 0 ], o = [ 0 ], a = [ 0 ], c = [ 0 ], l = [ 0 ], u = [ 0 ];
if (!this.m_positionBuffer.data) throw new Error();
for (var h = this.m_positionBuffer.data, f = this.m_def.dampingStrength, _ = 0; _ < this.m_bodyContactBuffer.count; _++) {
var d = (x = this.m_bodyContactBuffer.data[_]).index;
if ((A = this.m_groupBuffer[d]) && this.IsRigidGroup(A)) {
var p = x.body, m = x.normal, y = x.weight, v = h[d], b = I.SubVV(p.GetLinearVelocityFromWorldPoint(v, t), A.GetLinearVelocityFromWorldPoint(v, e), r);
if ((E = I.DotVV(b, m)) < 0) {
this.InitDampingParameterWithRigidGroupOrParticle(s, o, a, !0, A, d, v, m);
this.InitDampingParameter(c, l, u, p.GetMass(), p.GetInertia() - p.GetMass() * p.GetLocalCenter().LengthSquared(), p.GetWorldCenter(), v, m);
var C = f * g(y, 1) * this.ComputeDampingImpulse(s[0], o[0], a[0], c[0], l[0], u[0], E);
this.ApplyDamping(s[0], o[0], a[0], !0, A, d, C, m);
p.ApplyLinearImpulse(I.MulSV(-C, m, I.s_t0), v, !0);
}
}
}
for (_ = 0; _ < this.m_contactBuffer.count; _++) {
d = (x = this.m_contactBuffer.data[_]).indexA, p = x.indexB, m = x.normal, y = x.weight;
var x, A = this.m_groupBuffer[d], S = this.m_groupBuffer[p], w = this.IsRigidGroup(A), T = this.IsRigidGroup(S);
if (A !== S && (w || T)) {
var E;
v = I.MidVV(h[d], h[p], i), b = I.SubVV(this.GetLinearVelocity(S, p, v, t), this.GetLinearVelocity(A, d, v, e), r);
if ((E = I.DotVV(b, m)) < 0) {
this.InitDampingParameterWithRigidGroupOrParticle(s, o, a, w, A, d, v, m);
this.InitDampingParameterWithRigidGroupOrParticle(c, l, u, T, S, p, v, m);
C = f * y * this.ComputeDampingImpulse(s[0], o[0], a[0], c[0], l[0], u[0], E);
this.ApplyDamping(s[0], o[0], a[0], w, A, d, C, m);
this.ApplyDamping(c[0], l[0], u[0], T, S, p, -C, m);
}
}
}
};
n.prototype.SolveExtraDamping = function() {
var t = n.SolveExtraDamping_s_v, e = n.SolveExtraDamping_s_f;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var i = this.m_velocityBuffer.data, r = this.m_positionBuffer.data, s = this.GetParticleInvMass(), o = 0; o < this.m_bodyContactBuffer.count; o++) {
var a = this.m_bodyContactBuffer.data[o], c = a.index;
if (this.m_flagsBuffer.data[c] & n.k_extraDampingFlags) {
var l = a.body, u = a.mass, h = a.normal, f = r[c], _ = I.SubVV(l.GetLinearVelocityFromWorldPoint(f, I.s_t0), i[c], t), d = I.DotVV(_, h);
if (d < 0) {
var p = I.MulSV(.5 * u * d, h, e);
i[c].SelfMulAdd(s, p);
l.ApplyLinearImpulse(p.SelfNeg(), f, !0);
}
}
}
};
n.prototype.SolveWall = function() {
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var e = this.m_velocityBuffer.data, i = 0; i < this.m_count; i++) this.m_flagsBuffer.data[i] & t.b2ParticleFlag.b2_wallParticle && e[i].SetZero();
};
n.prototype.SolveRigid = function(e) {
var i = n.SolveRigid_s_position, r = n.SolveRigid_s_rotation, s = n.SolveRigid_s_transform, o = n.SolveRigid_s_velocityTransform;
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var a = this.m_positionBuffer.data, c = this.m_velocityBuffer.data, l = this.m_groupList; l; l = l.GetNext()) if (l.m_groupFlags & t.b2ParticleGroupFlag.b2_rigidParticleGroup) {
l.UpdateStatistics();
var u = r;
u.SetAngle(e.dt * l.m_angularVelocity);
var h = I.AddVV(l.m_center, I.SubVV(I.MulSV(e.dt, l.m_linearVelocity, I.s_t0), N.MulRV(u, l.m_center, I.s_t1), I.s_t0), i), f = s;
f.SetPositionRotation(h, u);
F.MulXX(f, l.m_transform, l.m_transform);
var _ = o;
_.p.x = e.inv_dt * f.p.x;
_.p.y = e.inv_dt * f.p.y;
_.q.s = e.inv_dt * f.q.s;
_.q.c = e.inv_dt * (f.q.c - 1);
for (var d = l.m_firstIndex; d < l.m_lastIndex; d++) F.MulXV(_, a[d], c[d]);
}
};
n.prototype.SolveElastic = function(e) {
var i = n.SolveElastic_s_pa, r = n.SolveElastic_s_pb, s = n.SolveElastic_s_pc, o = n.SolveElastic_s_r, a = n.SolveElastic_s_t0;
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var c = this.m_positionBuffer.data, l = this.m_velocityBuffer.data, u = e.inv_dt * this.m_def.elasticStrength, h = 0; h < this.m_triadBuffer.count; h++) {
var f = this.m_triadBuffer.data[h];
if (f.flags & t.b2ParticleFlag.b2_elasticParticle) {
var _ = f.indexA, d = f.indexB, p = f.indexC, m = f.pa, y = f.pb, v = f.pc, g = i.Copy(c[_]), b = r.Copy(c[d]), C = s.Copy(c[p]), x = l[_], A = l[d], w = l[p];
g.SelfMulAdd(e.dt, x);
b.SelfMulAdd(e.dt, A);
C.SelfMulAdd(e.dt, w);
var T = (g.x + b.x + C.x) / 3, E = (g.y + b.y + C.y) / 3;
g.x -= T;
g.y -= E;
b.x -= T;
b.y -= E;
C.x -= T;
C.y -= E;
var M = o;
M.s = I.CrossVV(m, g) + I.CrossVV(y, b) + I.CrossVV(v, C);
M.c = I.DotVV(m, g) + I.DotVV(y, b) + I.DotVV(v, C);
var B = S(M.s * M.s + M.c * M.c);
isFinite(B) || (B = 198177537e11);
M.s *= B;
M.c *= B;
var D = u * f.strength;
N.MulRV(M, m, a);
I.SubVV(a, g, a);
I.MulSV(D, a, a);
x.SelfAdd(a);
N.MulRV(M, y, a);
I.SubVV(a, b, a);
I.MulSV(D, a, a);
A.SelfAdd(a);
N.MulRV(M, v, a);
I.SubVV(a, C, a);
I.MulSV(D, a, a);
w.SelfAdd(a);
}
}
};
n.prototype.SolveSpring = function(e) {
var i = n.SolveSpring_s_pa, r = n.SolveSpring_s_pb, s = n.SolveSpring_s_d, o = n.SolveSpring_s_f;
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var a = this.m_positionBuffer.data, c = this.m_velocityBuffer.data, l = e.inv_dt * this.m_def.springStrength, u = 0; u < this.m_pairBuffer.count; u++) {
var h = this.m_pairBuffer.data[u];
if (h.flags & t.b2ParticleFlag.b2_springParticle) {
var f = h.indexA, _ = h.indexB, d = i.Copy(a[f]), p = r.Copy(a[_]), m = c[f], y = c[_];
d.SelfMulAdd(e.dt, m);
p.SelfMulAdd(e.dt, y);
var v = I.SubVV(p, d, s), g = h.distance, b = v.Length(), C = l * h.strength, x = I.MulSV(C * (g - b) / b, v, o);
m.SelfSub(x);
y.SelfAdd(x);
}
}
};
n.prototype.SolveTensile = function(e) {
var i = n.SolveTensile_s_weightedNormal, r = n.SolveTensile_s_s, s = n.SolveTensile_s_f;
if (!this.m_velocityBuffer.data) throw new Error();
for (var o = this.m_velocityBuffer.data, a = 0; a < this.m_count; a++) {
this.m_accumulation2Buffer[a] = new I();
this.m_accumulation2Buffer[a].SetZero();
}
for (var c = 0; c < this.m_contactBuffer.count; c++) {
if ((v = this.m_contactBuffer.data[c]).flags & t.b2ParticleFlag.b2_tensileParticle) {
var l = v.indexA, u = v.indexB, h = v.weight, f = v.normal, _ = I.MulSV((1 - h) * h, f, i);
this.m_accumulation2Buffer[l].SelfSub(_);
this.m_accumulation2Buffer[u].SelfAdd(_);
}
}
var d = this.GetCriticalVelocity(e), p = this.m_def.surfaceTensionPressureStrength * d, m = this.m_def.surfaceTensionNormalStrength * d, y = .5 * d;
for (c = 0; c < this.m_contactBuffer.count; c++) {
var v;
if ((v = this.m_contactBuffer.data[c]).flags & t.b2ParticleFlag.b2_tensileParticle) {
l = v.indexA, u = v.indexB, h = v.weight, f = v.normal;
var b = this.m_weightBuffer[l] + this.m_weightBuffer[u], C = I.SubVV(this.m_accumulation2Buffer[u], this.m_accumulation2Buffer[l], r), x = g(p * (b - 2) + m * I.DotVV(C, f), y) * h, A = I.MulSV(x, f, s);
o[l].SelfSub(A);
o[u].SelfAdd(A);
}
}
};
n.prototype.SolveViscous = function() {
var e = n.SolveViscous_s_v, i = n.SolveViscous_s_f;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var r = this.m_positionBuffer.data, s = this.m_velocityBuffer.data, o = this.m_def.viscousStrength, a = this.GetParticleInvMass(), c = 0; c < this.m_bodyContactBuffer.count; c++) {
var l = (m = this.m_bodyContactBuffer.data[c]).index;
if (this.m_flagsBuffer.data[l] & t.b2ParticleFlag.b2_viscousParticle) {
var u = m.body, h = m.weight, f = m.mass, _ = r[l], d = I.SubVV(u.GetLinearVelocityFromWorldPoint(_, I.s_t0), s[l], e), p = I.MulSV(o * f * h, d, i);
s[l].SelfMulAdd(a, p);
u.ApplyLinearImpulse(p.SelfNeg(), _, !0);
}
}
for (c = 0; c < this.m_contactBuffer.count; c++) {
var m;
if ((m = this.m_contactBuffer.data[c]).flags & t.b2ParticleFlag.b2_viscousParticle) {
l = m.indexA, u = m.indexB, h = m.weight, d = I.SubVV(s[u], s[l], e), p = I.MulSV(o * h, d, i);
s[l].SelfAdd(p);
s[u].SelfSub(p);
}
}
};
n.prototype.SolveRepulsive = function(e) {
var i = n.SolveRepulsive_s_f;
if (!this.m_velocityBuffer.data) throw new Error();
for (var r = this.m_velocityBuffer.data, s = this.m_def.repulsiveStrength * this.GetCriticalVelocity(e), o = 0; o < this.m_contactBuffer.count; o++) {
var a = this.m_contactBuffer.data[o];
if (a.flags & t.b2ParticleFlag.b2_repulsiveParticle) {
var c = a.indexA, l = a.indexB;
if (this.m_groupBuffer[c] !== this.m_groupBuffer[l]) {
var u = a.weight, h = a.normal, f = I.MulSV(s * u, h, i);
r[c].SelfSub(f);
r[l].SelfAdd(f);
}
}
}
};
n.prototype.SolvePowder = function(e) {
var i = n.SolvePowder_s_f;
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var r = this.m_positionBuffer.data, s = this.m_velocityBuffer.data, o = this.m_def.powderStrength * this.GetCriticalVelocity(e), a = this.GetParticleInvMass(), c = 0; c < this.m_bodyContactBuffer.count; c++) {
var l = (p = this.m_bodyContactBuffer.data[c]).index;
if (this.m_flagsBuffer.data[l] & t.b2ParticleFlag.b2_powderParticle) {
if ((m = p.weight) > .25) {
var u = p.body, h = p.mass, f = r[l], _ = p.normal, d = I.MulSV(o * h * (m - .25), _, i);
s[l].SelfMulSub(a, d);
u.ApplyLinearImpulse(d, f, !0);
}
}
}
for (c = 0; c < this.m_contactBuffer.count; c++) {
var p;
if ((p = this.m_contactBuffer.data[c]).flags & t.b2ParticleFlag.b2_powderParticle) {
var m;
if ((m = p.weight) > .25) {
l = p.indexA, u = p.indexB, _ = p.normal, d = I.MulSV(o * (m - .25), _, i);
s[l].SelfSub(d);
s[u].SelfAdd(d);
}
}
}
};
n.prototype.SolveSolid = function(t) {
var e = n.SolveSolid_s_f;
if (!this.m_velocityBuffer.data) throw new Error();
var i = this.m_velocityBuffer.data;
this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer);
for (var r = t.inv_dt * this.m_def.ejectionStrength, s = 0; s < this.m_contactBuffer.count; s++) {
var o = this.m_contactBuffer.data[s], a = o.indexA, c = o.indexB;
if (this.m_groupBuffer[a] !== this.m_groupBuffer[c]) {
var l = o.weight, u = o.normal, h = this.m_depthBuffer[a] + this.m_depthBuffer[c], f = I.MulSV(r * h * l, u, e);
i[a].SelfSub(f);
i[c].SelfAdd(f);
}
}
};
n.prototype.SolveForce = function(t) {
if (!this.m_velocityBuffer.data) throw new Error();
for (var e = this.m_velocityBuffer.data, i = t.dt * this.GetParticleInvMass(), n = 0; n < this.m_count; n++) e[n].SelfMulAdd(i, this.m_forceBuffer[n]);
this.m_hasForce = !1;
};
n.prototype.SolveColorMixing = function() {
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_colorBuffer.data) throw new Error();
var e = .5 * this.m_def.colorMixingStrength;
if (e) for (var i = 0; i < this.m_contactBuffer.count; i++) {
var n = this.m_contactBuffer.data[i], r = n.indexA, s = n.indexB;
if (this.m_flagsBuffer.data[r] & this.m_flagsBuffer.data[s] & t.b2ParticleFlag.b2_colorMixingParticle) {
var o = this.m_colorBuffer.data[r], a = this.m_colorBuffer.data[s];
k.MixColors(o, a, e);
}
}
};
n.prototype.SolveZombie = function() {
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
for (var e = 0, i = [], n = 0; n < this.m_count; n++) i[n] = h;
var r = 0;
for (n = 0; n < this.m_count; n++) {
var s = this.m_flagsBuffer.data[n];
if (s & t.b2ParticleFlag.b2_zombieParticle) {
var o = this.m_world.m_destructionListener;
s & t.b2ParticleFlag.b2_destructionListenerParticle && o && o.SayGoodbyeParticle(this, n);
if (this.m_handleIndexBuffer.data) {
if (a = this.m_handleIndexBuffer.data[n]) {
a.SetIndex(h);
this.m_handleIndexBuffer.data[n] = null;
}
}
i[n] = h;
} else {
i[n] = e;
if (n !== e) {
if (this.m_handleIndexBuffer.data) {
var a;
(a = this.m_handleIndexBuffer.data[n]) && a.SetIndex(e);
this.m_handleIndexBuffer.data[e] = a;
}
this.m_flagsBuffer.data[e] = this.m_flagsBuffer.data[n];
this.m_lastBodyContactStepBuffer.data && (this.m_lastBodyContactStepBuffer.data[e] = this.m_lastBodyContactStepBuffer.data[n]);
this.m_bodyContactCountBuffer.data && (this.m_bodyContactCountBuffer.data[e] = this.m_bodyContactCountBuffer.data[n]);
this.m_consecutiveContactStepsBuffer.data && (this.m_consecutiveContactStepsBuffer.data[e] = this.m_consecutiveContactStepsBuffer.data[n]);
this.m_positionBuffer.data[e].Copy(this.m_positionBuffer.data[n]);
this.m_velocityBuffer.data[e].Copy(this.m_velocityBuffer.data[n]);
this.m_groupBuffer[e] = this.m_groupBuffer[n];
this.m_hasForce && this.m_forceBuffer[e].Copy(this.m_forceBuffer[n]);
this.m_staticPressureBuffer && (this.m_staticPressureBuffer[e] = this.m_staticPressureBuffer[n]);
this.m_depthBuffer && (this.m_depthBuffer[e] = this.m_depthBuffer[n]);
this.m_colorBuffer.data && this.m_colorBuffer.data[e].Copy(this.m_colorBuffer.data[n]);
this.m_userDataBuffer.data && (this.m_userDataBuffer.data[e] = this.m_userDataBuffer.data[n]);
this.m_expirationTimeBuffer.data && (this.m_expirationTimeBuffer.data[e] = this.m_expirationTimeBuffer.data[n]);
}
e++;
r |= s;
}
}
for (var c = function(t) {
return t.index < 0;
}, l = function(t) {
return t.indexA < 0 || t.indexB < 0;
}, u = function(t) {
return t.index < 0;
}, f = function(t) {
return t.indexA < 0 || t.indexB < 0;
}, _ = function(t) {
return t.indexA < 0 || t.indexB < 0 || t.indexC < 0;
}, d = 0; d < this.m_proxyBuffer.count; d++) {
var p = this.m_proxyBuffer.data[d];
p.index = i[p.index];
}
this.m_proxyBuffer.RemoveIf(c);
for (d = 0; d < this.m_contactBuffer.count; d++) {
(m = this.m_contactBuffer.data[d]).indexA = i[m.indexA];
m.indexB = i[m.indexB];
}
this.m_contactBuffer.RemoveIf(l);
for (d = 0; d < this.m_bodyContactBuffer.count; d++) {
var m;
(m = this.m_bodyContactBuffer.data[d]).index = i[m.index];
}
this.m_bodyContactBuffer.RemoveIf(u);
for (d = 0; d < this.m_pairBuffer.count; d++) {
var y = this.m_pairBuffer.data[d];
y.indexA = i[y.indexA];
y.indexB = i[y.indexB];
}
this.m_pairBuffer.RemoveIf(f);
for (d = 0; d < this.m_triadBuffer.count; d++) {
var v = this.m_triadBuffer.data[d];
v.indexA = i[v.indexA];
v.indexB = i[v.indexB];
v.indexC = i[v.indexC];
}
this.m_triadBuffer.RemoveIf(_);
if (this.m_indexByExpirationTimeBuffer.data) for (var C = 0, x = 0; x < this.m_count; x++) {
var A = i[this.m_indexByExpirationTimeBuffer.data[x]];
A !== h && (this.m_indexByExpirationTimeBuffer.data[C++] = A);
}
for (var S = this.m_groupList; S; S = S.GetNext()) {
var w = e, T = 0, E = !1;
for (n = S.m_firstIndex; n < S.m_lastIndex; n++) {
var M = i[n];
if (M >= 0) {
w = g(w, M);
T = b(T, M + 1);
} else E = !0;
}
if (w < T) {
S.m_firstIndex = w;
S.m_lastIndex = T;
E && S.m_groupFlags & t.b2ParticleGroupFlag.b2_solidParticleGroup && this.SetGroupFlags(S, S.m_groupFlags | t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);
} else {
S.m_firstIndex = 0;
S.m_lastIndex = 0;
S.m_groupFlags & t.b2ParticleGroupFlag.b2_particleGroupCanBeEmpty || this.SetGroupFlags(S, S.m_groupFlags | t.b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed);
}
}
this.m_count = e;
this.m_allParticleFlags = r;
this.m_needsUpdateAllParticleFlags = !1;
for (S = this.m_groupList; S; ) {
var B = S.GetNext();
S.m_groupFlags & t.b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed && this.DestroyParticleGroup(S);
S = B;
}
};
n.prototype.SolveLifetimes = function(t) {
if (!this.m_expirationTimeBuffer.data) throw new Error();
if (!this.m_indexByExpirationTimeBuffer.data) throw new Error();
this.m_timeElapsed = this.LifetimeToExpirationTime(t.dt);
var e = this.GetQuantizedTimeElapsed(), i = this.m_expirationTimeBuffer.data, n = this.m_indexByExpirationTimeBuffer.data, r = this.GetParticleCount();
if (this.m_expirationTimeBufferRequiresSorting) {
Tn(n, 0, r, (function(t, e) {
var n = i[t], r = i[e], s = n <= 0;
return s === r <= 0 ? n > r : s;
}));
this.m_expirationTimeBufferRequiresSorting = !1;
}
for (var s = r - 1; s >= 0; --s) {
var o = n[s], a = i[o];
if (e < a || a <= 0) break;
this.DestroyParticle(o);
}
};
n.prototype.RotateBuffer = function(t, e, i) {
if (t !== e && e !== i) {
if (!this.m_flagsBuffer.data) throw new Error();
if (!this.m_positionBuffer.data) throw new Error();
if (!this.m_velocityBuffer.data) throw new Error();
Rn(this.m_flagsBuffer.data, t, e, i);
this.m_lastBodyContactStepBuffer.data && Rn(this.m_lastBodyContactStepBuffer.data, t, e, i);
this.m_bodyContactCountBuffer.data && Rn(this.m_bodyContactCountBuffer.data, t, e, i);
this.m_consecutiveContactStepsBuffer.data && Rn(this.m_consecutiveContactStepsBuffer.data, t, e, i);
Rn(this.m_positionBuffer.data, t, e, i);
Rn(this.m_velocityBuffer.data, t, e, i);
Rn(this.m_groupBuffer, t, e, i);
this.m_hasForce && Rn(this.m_forceBuffer, t, e, i);
this.m_staticPressureBuffer && Rn(this.m_staticPressureBuffer, t, e, i);
this.m_depthBuffer && Rn(this.m_depthBuffer, t, e, i);
this.m_colorBuffer.data && Rn(this.m_colorBuffer.data, t, e, i);
this.m_userDataBuffer.data && Rn(this.m_userDataBuffer.data, t, e, i);
if (this.m_handleIndexBuffer.data) {
Rn(this.m_handleIndexBuffer.data, t, e, i);
for (var n = t; n < i; ++n) {
var r = this.m_handleIndexBuffer.data[n];
r && r.SetIndex(_(r.GetIndex()));
}
}
if (this.m_expirationTimeBuffer.data) {
Rn(this.m_expirationTimeBuffer.data, t, e, i);
var s = this.GetParticleCount();
if (!this.m_indexByExpirationTimeBuffer.data) throw new Error();
var o = this.m_indexByExpirationTimeBuffer.data;
for (n = 0; n < s; ++n) o[n] = _(o[n]);
}
for (var a = 0; a < this.m_proxyBuffer.count; a++) {
var c = this.m_proxyBuffer.data[a];
c.index = _(c.index);
}
for (a = 0; a < this.m_contactBuffer.count; a++) {
(l = this.m_contactBuffer.data[a]).indexA = _(l.indexA);
l.indexB = _(l.indexB);
}
for (a = 0; a < this.m_bodyContactBuffer.count; a++) {
var l;
(l = this.m_bodyContactBuffer.data[a]).index = _(l.index);
}
for (a = 0; a < this.m_pairBuffer.count; a++) {
var u = this.m_pairBuffer.data[a];
u.indexA = _(u.indexA);
u.indexB = _(u.indexB);
}
for (a = 0; a < this.m_triadBuffer.count; a++) {
var h = this.m_triadBuffer.data[a];
h.indexA = _(h.indexA);
h.indexB = _(h.indexB);
h.indexC = _(h.indexC);
}
for (var f = this.m_groupList; f; f = f.GetNext()) {
f.m_firstIndex = _(f.m_firstIndex);
f.m_lastIndex = _(f.m_lastIndex - 1) + 1;
}
}
function _(n) {
return n < t ? n : n < e ? n + i - e : n < i ? n + t - e : n;
}
};
n.prototype.GetCriticalVelocity = function(t) {
return this.m_particleDiameter * t.inv_dt;
};
n.prototype.GetCriticalVelocitySquared = function(t) {
var e = this.GetCriticalVelocity(t);
return e * e;
};
n.prototype.GetCriticalPressure = function(t) {
return this.m_def.density * this.GetCriticalVelocitySquared(t);
};
n.prototype.GetParticleStride = function() {
return .75 * this.m_particleDiameter;
};
n.prototype.GetParticleMass = function() {
var t = this.GetParticleStride();
return this.m_def.density * t * t;
};
n.prototype.GetParticleInvMass = function() {
var t = this.m_inverseDiameter * (1 / .75);
return this.m_inverseDensity * t * t;
};
n.prototype.GetFixtureContactFilter = function() {
return this.m_allParticleFlags & t.b2ParticleFlag.b2_fixtureContactFilterParticle ? this.m_world.m_contactManager.m_contactFilter : null;
};
n.prototype.GetParticleContactFilter = function() {
return this.m_allParticleFlags & t.b2ParticleFlag.b2_particleContactFilterParticle ? this.m_world.m_contactManager.m_contactFilter : null;
};
n.prototype.GetFixtureContactListener = function() {
return this.m_allParticleFlags & t.b2ParticleFlag.b2_fixtureContactListenerParticle ? this.m_world.m_contactManager.m_contactListener : null;
};
n.prototype.GetParticleContactListener = function() {
return this.m_allParticleFlags & t.b2ParticleFlag.b2_particleContactListenerParticle ? this.m_world.m_contactManager.m_contactListener : null;
};
n.prototype.SetUserOverridableBuffer = function(t, e, i) {
t.data = e;
t.userSuppliedCapacity = i;
};
n.prototype.SetGroupFlags = function(e, i) {
var n = e.m_groupFlags;
(n ^ i) & t.b2ParticleGroupFlag.b2_solidParticleGroup && (i |= t.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);
n & ~i && (this.m_needsUpdateAllGroupFlags = !0);
if (~this.m_allGroupFlags & i) {
i & t.b2ParticleGroupFlag.b2_solidParticleGroup && (this.m_depthBuffer = this.RequestBuffer(this.m_depthBuffer));
this.m_allGroupFlags |= i;
}
e.m_groupFlags = i;
};
n.BodyContactCompare = function(t, e) {
return t.index === e.index ? t.weight > e.weight : t.index < e.index;
};
n.prototype.RemoveSpuriousBodyContacts = function() {
Tn(this.m_bodyContactBuffer.data, 0, this.m_bodyContactBuffer.count, n.BodyContactCompare);
var t = n.RemoveSpuriousBodyContacts_s_n, e = n.RemoveSpuriousBodyContacts_s_pos, i = n.RemoveSpuriousBodyContacts_s_normal, r = this, s = -1, o = 0;
this.m_bodyContactBuffer.count = Mn(this.m_bodyContactBuffer.data, (function(n) {
if (n.index !== s) {
o = 0;
s = n.index;
}
if (o++ > 3) return !0;
var a = t.Copy(n.normal);
a.SelfMul(r.m_particleDiameter * (1 - n.weight));
if (!r.m_positionBuffer.data) throw new Error();
var l = I.AddVV(r.m_positionBuffer.data[n.index], a, e);
if (!n.fixture.TestPoint(l)) {
for (var u = n.fixture.GetShape().GetChildCount(), h = 0; h < u; h++) {
var f = i;
if (n.fixture.ComputeDistance(l, f, h) < c) return !1;
}
return !0;
}
return !1;
}), this.m_bodyContactBuffer.count);
};
n.prototype.DetectStuckParticle = function(t) {
if (!(this.m_stuckThreshold <= 0)) {
if (!this.m_bodyContactCountBuffer.data) throw new Error();
if (!this.m_consecutiveContactStepsBuffer.data) throw new Error();
if (!this.m_lastBodyContactStepBuffer.data) throw new Error();
++this.m_bodyContactCountBuffer.data[t];
if (2 === this.m_bodyContactCountBuffer.data[t]) {
++this.m_consecutiveContactStepsBuffer.data[t];
this.m_consecutiveContactStepsBuffer.data[t] > this.m_stuckThreshold && (this.m_stuckParticleBuffer.data[this.m_stuckParticleBuffer.Append()] = t);
}
this.m_lastBodyContactStepBuffer.data[t] = this.m_timestamp;
}
};
n.prototype.ValidateParticleIndex = function(t) {
return t >= 0 && t < this.GetParticleCount() && t !== h;
};
n.prototype.GetQuantizedTimeElapsed = function() {
return Math.floor(this.m_timeElapsed / 4294967296);
};
n.prototype.LifetimeToExpirationTime = function(t) {
return this.m_timeElapsed + Math.floor(t / this.m_def.lifetimeGranularity * 4294967296);
};
n.prototype.ForceCanBeApplied = function(e) {
return !(e & t.b2ParticleFlag.b2_wallParticle);
};
n.prototype.PrepareForceBuffer = function() {
if (!this.m_hasForce) {
for (var t = 0; t < this.m_count; t++) this.m_forceBuffer[t].SetZero();
this.m_hasForce = !0;
}
};
n.prototype.IsRigidGroup = function(e) {
return null !== e && 0 != (e.m_groupFlags & t.b2ParticleGroupFlag.b2_rigidParticleGroup);
};
n.prototype.GetLinearVelocity = function(t, e, i, n) {
if (t && this.IsRigidGroup(t)) return t.GetLinearVelocityFromWorldPoint(i, n);
if (!this.m_velocityBuffer.data) throw new Error();
return n.Copy(this.m_velocityBuffer.data[e]);
};
n.prototype.InitDampingParameter = function(t, e, i, n, r, s, o, a) {
t[0] = n > 0 ? 1 / n : 0;
e[0] = r > 0 ? 1 / r : 0;
i[0] = I.CrossVV(I.SubVV(o, s, I.s_t0), a);
};
n.prototype.InitDampingParameterWithRigidGroupOrParticle = function(e, i, n, r, s, o, a, c) {
if (s && r) this.InitDampingParameter(e, i, n, s.GetMass(), s.GetInertia(), s.GetCenter(), a, c); else {
if (!this.m_flagsBuffer.data) throw new Error();
var l = this.m_flagsBuffer.data[o];
this.InitDampingParameter(e, i, n, l & t.b2ParticleFlag.b2_wallParticle ? 0 : this.GetParticleMass(), 0, a, a, c);
}
};
n.prototype.ComputeDampingImpulse = function(t, e, i, n, r, s, o) {
var a = t + e * i * i + n + r * s * s;
return a > 0 ? o / a : 0;
};
n.prototype.ApplyDamping = function(t, e, i, n, r, s, o, a) {
if (r && n) {
r.m_linearVelocity.SelfMulAdd(o * t, a);
r.m_angularVelocity += o * i * e;
} else {
if (!this.m_velocityBuffer.data) throw new Error();
this.m_velocityBuffer.data[s].SelfMulAdd(o * t, a);
}
};
n.xTruncBits = 12;
n.yTruncBits = 12;
n.tagBits = 32;
n.yOffset = 1 << n.yTruncBits - 1;
n.yShift = n.tagBits - n.yTruncBits;
n.xShift = n.tagBits - n.yTruncBits - n.xTruncBits;
n.xScale = 1 << n.xShift;
n.xOffset = n.xScale * (1 << n.xTruncBits - 1);
n.yMask = (1 << n.yTruncBits) - 1 << n.yShift;
n.xMask = ~n.yMask;
n.DestroyParticlesInShape_s_aabb = new Tt();
n.CreateParticleGroup_s_transform = new F();
n.ComputeCollisionEnergy_s_v = new I();
n.QueryShapeAABB_s_aabb = new Tt();
n.QueryPointAABB_s_aabb = new Tt();
n.RayCast_s_aabb = new Tt();
n.RayCast_s_p = new I();
n.RayCast_s_v = new I();
n.RayCast_s_n = new I();
n.RayCast_s_point = new I();
n.k_pairFlags = t.b2ParticleFlag.b2_springParticle;
n.k_triadFlags = t.b2ParticleFlag.b2_elasticParticle;
n.k_noPressureFlags = t.b2ParticleFlag.b2_powderParticle | t.b2ParticleFlag.b2_tensileParticle;
n.k_extraDampingFlags = t.b2ParticleFlag.b2_staticPressureParticle;
n.k_barrierWallFlags = t.b2ParticleFlag.b2_barrierParticle | t.b2ParticleFlag.b2_wallParticle;
n.CreateParticlesStrokeShapeForGroup_s_edge = new ii();
n.CreateParticlesStrokeShapeForGroup_s_d = new I();
n.CreateParticlesStrokeShapeForGroup_s_p = new I();
n.CreateParticlesFillShapeForGroup_s_aabb = new Tt();
n.CreateParticlesFillShapeForGroup_s_p = new I();
n.UpdatePairsAndTriads_s_dab = new I();
n.UpdatePairsAndTriads_s_dbc = new I();
n.UpdatePairsAndTriads_s_dca = new I();
n.AddContact_s_d = new I();
n.UpdateBodyContacts_s_aabb = new Tt();
n.Solve_s_subStep = new on();
n.SolveCollision_s_aabb = new Tt();
n.SolveGravity_s_gravity = new I();
n.SolveBarrier_s_aabb = new Tt();
n.SolveBarrier_s_va = new I();
n.SolveBarrier_s_vb = new I();
n.SolveBarrier_s_pba = new I();
n.SolveBarrier_s_vba = new I();
n.SolveBarrier_s_vc = new I();
n.SolveBarrier_s_pca = new I();
n.SolveBarrier_s_vca = new I();
n.SolveBarrier_s_qba = new I();
n.SolveBarrier_s_qca = new I();
n.SolveBarrier_s_dv = new I();
n.SolveBarrier_s_f = new I();
n.SolvePressure_s_f = new I();
n.SolveDamping_s_v = new I();
n.SolveDamping_s_f = new I();
n.SolveRigidDamping_s_t0 = new I();
n.SolveRigidDamping_s_t1 = new I();
n.SolveRigidDamping_s_p = new I();
n.SolveRigidDamping_s_v = new I();
n.SolveExtraDamping_s_v = new I();
n.SolveExtraDamping_s_f = new I();
n.SolveRigid_s_position = new I();
n.SolveRigid_s_rotation = new N();
n.SolveRigid_s_transform = new F();
n.SolveRigid_s_velocityTransform = new F();
n.SolveElastic_s_pa = new I();
n.SolveElastic_s_pb = new I();
n.SolveElastic_s_pc = new I();
n.SolveElastic_s_r = new N();
n.SolveElastic_s_t0 = new I();
n.SolveSpring_s_pa = new I();
n.SolveSpring_s_pb = new I();
n.SolveSpring_s_d = new I();
n.SolveSpring_s_f = new I();
n.SolveTensile_s_weightedNormal = new I();
n.SolveTensile_s_s = new I();
n.SolveTensile_s_f = new I();
n.SolveViscous_s_v = new I();
n.SolveViscous_s_f = new I();
n.SolveRepulsive_s_f = new I();
n.SolvePowder_s_f = new I();
n.SolveSolid_s_f = new I();
n.RemoveSpuriousBodyContacts_s_n = new I();
n.RemoveSpuriousBodyContacts_s_pos = new I();
n.RemoveSpuriousBodyContacts_s_normal = new I();
return n;
})();
(function(e) {
var n = (function() {
return function() {
this.data = null;
this.userSuppliedCapacity = 0;
};
})();
e.UserOverridableBuffer = n;
var r = (function() {
function t() {
this.index = h;
this.tag = 0;
}
t.CompareProxyProxy = function(t, e) {
return t.tag < e.tag;
};
t.CompareTagProxy = function(t, e) {
return t < e.tag;
};
t.CompareProxyTag = function(t, e) {
return t.tag < e;
};
return t;
})();
e.Proxy = r;
var s = (function() {
function t(t, i, n, r, s) {
this.m_system = t;
this.m_xLower = (i & e.xMask) >>> 0;
this.m_xUpper = (n & e.xMask) >>> 0;
this.m_yLower = (i & e.yMask) >>> 0;
this.m_yUpper = (n & e.yMask) >>> 0;
this.m_first = r;
this.m_last = s;
}
t.prototype.GetNext = function() {
for (;this.m_first < this.m_last; ) {
var t = (this.m_system.m_proxyBuffer.data[this.m_first].tag & e.xMask) >>> 0;
if (t >= this.m_xLower && t <= this.m_xUpper) return this.m_system.m_proxyBuffer.data[this.m_first++].index;
this.m_first++;
}
return h;
};
return t;
})();
e.InsideBoundsEnumerator = s;
var o = (function() {
return function() {
this.next = null;
this.count = 0;
this.index = 0;
};
})();
e.ParticleListNode = o;
var a = (function() {
function t() {}
t.prototype.Allocate = function(t, e) {
return e;
};
t.prototype.Clear = function() {};
t.prototype.GetCount = function() {
return 0;
};
t.prototype.Invalidate = function(t) {};
t.prototype.GetValidBuffer = function() {
return [];
};
t.prototype.GetBuffer = function() {
return [];
};
t.prototype.SetCount = function(t) {};
return t;
})();
e.FixedSetAllocator = a;
var l = (function() {
return function(t, e) {
this.second = h;
this.first = t;
this.second = e;
};
})();
e.FixtureParticle = l;
var u = (function(t) {
$e(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.Initialize = function(t, e) {};
e.prototype.Find = function(t) {
return h;
};
return e;
})(e.FixedSetAllocator);
e.FixtureParticleSet = u;
var f = (function() {
return function(t, e) {
this.first = h;
this.second = h;
this.first = t;
this.second = e;
};
})();
e.ParticlePair = f;
var _ = (function(t) {
$e(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.Initialize = function(t, e) {};
e.prototype.Find = function(t) {
return h;
};
return e;
})(e.FixedSetAllocator);
e.b2ParticlePairSet = _;
var d = (function() {
function t() {}
t.prototype.IsNecessary = function(t) {
return !0;
};
t.prototype.ShouldCreatePair = function(t, e) {
return !0;
};
t.prototype.ShouldCreateTriad = function(t, e, i) {
return !0;
};
return t;
})();
e.ConnectionFilter = d;
var p = (function(t) {
$e(e, t);
function e(e, i, n, r) {
var s = t.call(this) || this;
s.m_callDestructionListener = !1;
s.m_destroyed = 0;
s.m_system = e;
s.m_shape = i;
s.m_xf = n;
s.m_callDestructionListener = r;
s.m_destroyed = 0;
return s;
}
e.prototype.ReportFixture = function(t) {
return !1;
};
e.prototype.ReportParticle = function(t, e) {
if (t !== this.m_system) return !1;
if (!this.m_system.m_positionBuffer.data) throw new Error();
if (this.m_shape.TestPoint(this.m_xf, this.m_system.m_positionBuffer.data[e])) {
this.m_system.DestroyParticle(e, this.m_callDestructionListener);
this.m_destroyed++;
}
return !0;
};
e.prototype.Destroyed = function() {
return this.m_destroyed;
};
return e;
})(en);
e.DestroyParticlesInShapeCallback = p;
var m = (function(t) {
$e(e, t);
function e(e) {
var i = t.call(this) || this;
i.m_threshold = 0;
i.m_threshold = e;
return i;
}
e.prototype.ShouldCreatePair = function(t, e) {
return t < this.m_threshold && this.m_threshold <= e || e < this.m_threshold && this.m_threshold <= t;
};
e.prototype.ShouldCreateTriad = function(t, e, i) {
return (t < this.m_threshold || e < this.m_threshold || i < this.m_threshold) && (this.m_threshold <= t || this.m_threshold <= e || this.m_threshold <= i);
};
return e;
})(e.ConnectionFilter);
e.JoinParticleGroupsFilter = m;
var y = (function(e) {
$e(n, e);
function n(i, n) {
void 0 === n && (n = i.length);
var r = e.call(this, t.b2ShapeType.e_unknown, 0) || this;
r.m_shapeCount = 0;
r.m_shapes = i;
r.m_shapeCount = n;
return r;
}
n.prototype.Clone = function() {
throw new Error();
};
n.prototype.GetChildCount = function() {
return 1;
};
n.prototype.TestPoint = function(t, e) {
for (var i = 0; i < this.m_shapeCount; i++) if (this.m_shapes[i].TestPoint(t, e)) return !0;
return !1;
};
n.prototype.ComputeDistance = function(t, e, i, n) {
return 0;
};
n.prototype.RayCast = function(t, e, i, n) {
return !1;
};
n.prototype.ComputeAABB = function(t, e, n) {
var r = new Tt();
t.lowerBound.x = +i;
t.lowerBound.y = +i;
t.upperBound.x = -i;
t.upperBound.y = -i;
for (var s = 0; s < this.m_shapeCount; s++) for (var o = this.m_shapes[s].GetChildCount(), a = 0; a < o; a++) {
var c = r;
this.m_shapes[s].ComputeAABB(c, e, a);
t.Combine1(c);
}
};
n.prototype.ComputeMass = function(t, e) {};
n.prototype.SetupDistanceProxy = function(t, e) {};
n.prototype.ComputeSubmergedArea = function(t, e, i, n) {
return 0;
};
n.prototype.Dump = function(t) {};
return n;
})(Ke);
e.CompositeShape = y;
var v = (function(e) {
$e(i, e);
function i(t) {
var i = e.call(this) || this;
i.m_flagsBuffer = t;
return i;
}
i.prototype.IsNecessary = function(e) {
if (!this.m_flagsBuffer.data) throw new Error();
return 0 != (this.m_flagsBuffer.data[e] & t.b2ParticleFlag.b2_reactiveParticle);
};
return i;
})(e.ConnectionFilter);
e.ReactiveFilter = v;
var g = (function(i) {
$e(n, i);
function n(t, e) {
var n = i.call(this, t) || this;
n.m_contactFilter = e;
return n;
}
n.prototype.ShouldCollideFixtureParticle = function(e, i, n) {
if (this.m_contactFilter) {
if (this.m_system.GetFlagsBuffer()[n] & t.b2ParticleFlag.b2_fixtureContactFilterParticle) return this.m_contactFilter.ShouldCollideFixtureParticle(e, this.m_system, n);
}
return !0;
};
n.prototype.ReportFixtureAndParticle = function(i, n, r) {
var s = e.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_n, o = e.UpdateBodyContactsCallback.ReportFixtureAndParticle_s_rp;
if (!this.m_system.m_flagsBuffer.data) throw new Error();
if (!this.m_system.m_positionBuffer.data) throw new Error();
var a = this.m_system.m_positionBuffer.data[r], c = s, l = i.ComputeDistance(a, c, n);
if (l < this.m_system.m_particleDiameter && this.ShouldCollideFixtureParticle(i, this.m_system, r)) {
var u = i.GetBody(), h = u.GetWorldCenter(), f = u.GetMass(), _ = u.GetInertia() - f * u.GetLocalCenter().LengthSquared(), d = f > 0 ? 1 / f : 0, p = _ > 0 ? 1 / _ : 0, m = this.m_system.m_flagsBuffer.data[r] & t.b2ParticleFlag.b2_wallParticle ? 0 : this.m_system.GetParticleInvMass(), y = I.SubVV(a, h, o), v = I.CrossVV(y, c), g = m + d + p * v * v, b = this.m_system.m_bodyContactBuffer.data[this.m_system.m_bodyContactBuffer.Append()];
b.index = r;
b.body = u;
b.fixture = i;
b.weight = 1 - l * this.m_system.m_inverseDiameter;
b.normal.Copy(c.SelfNeg());
b.mass = g > 0 ? 1 / g : 0;
this.m_system.DetectStuckParticle(r);
}
};
n.ReportFixtureAndParticle_s_n = new I();
n.ReportFixtureAndParticle_s_rp = new I();
return n;
})(On);
e.UpdateBodyContactsCallback = g;
var b = (function(i) {
$e(n, i);
function n(t, e) {
var n = i.call(this, t) || this;
n.m_step = e;
return n;
}
n.prototype.ReportFixtureAndParticle = function(i, n, r) {
var s = e.SolveCollisionCallback.ReportFixtureAndParticle_s_p1, o = e.SolveCollisionCallback.ReportFixtureAndParticle_s_output, a = e.SolveCollisionCallback.ReportFixtureAndParticle_s_input, l = e.SolveCollisionCallback.ReportFixtureAndParticle_s_p, u = e.SolveCollisionCallback.ReportFixtureAndParticle_s_v, h = e.SolveCollisionCallback.ReportFixtureAndParticle_s_f, f = i.GetBody();
if (!this.m_system.m_positionBuffer.data) throw new Error();
if (!this.m_system.m_velocityBuffer.data) throw new Error();
var _ = this.m_system.m_positionBuffer.data[r], d = this.m_system.m_velocityBuffer.data[r], p = o, m = a;
if (0 === this.m_system.m_iterationIndex) {
var y = F.MulTXV(f.m_xf0, _, s);
if (i.GetShape().GetType() === t.b2ShapeType.e_circleShape) {
y.SelfSub(f.GetLocalCenter());
N.MulRV(f.m_xf0.q, y, y);
N.MulTRV(f.m_xf.q, y, y);
y.SelfAdd(f.GetLocalCenter());
}
F.MulXV(f.m_xf, y, m.p1);
} else m.p1.Copy(_);
I.AddVMulSV(_, this.m_step.dt, d, m.p2);
m.maxFraction = 1;
if (i.RayCast(p, m, n)) {
var v = p.normal, g = l;
g.x = (1 - p.fraction) * m.p1.x + p.fraction * m.p2.x + c * v.x;
g.y = (1 - p.fraction) * m.p1.y + p.fraction * m.p2.y + c * v.y;
var b = u;
b.x = this.m_step.inv_dt * (g.x - _.x);
b.y = this.m_step.inv_dt * (g.y - _.y);
this.m_system.m_velocityBuffer.data[r].Copy(b);
var C = h;
C.x = this.m_step.inv_dt * this.m_system.GetParticleMass() * (d.x - b.x);
C.y = this.m_step.inv_dt * this.m_system.GetParticleMass() * (d.y - b.y);
this.m_system.ParticleApplyForce(r, C);
}
};
n.prototype.ReportParticle = function(t, e) {
return !1;
};
n.ReportFixtureAndParticle_s_p1 = new I();
n.ReportFixtureAndParticle_s_output = new wt();
n.ReportFixtureAndParticle_s_input = new St();
n.ReportFixtureAndParticle_s_p = new I();
n.ReportFixtureAndParticle_s_v = new I();
n.ReportFixtureAndParticle_s_f = new I();
return n;
})(On);
e.SolveCollisionCallback = b;
})(t.b2ParticleSystem || (t.b2ParticleSystem = {}));
var kn = (function() {
function e(t) {
this.m_newFixture = !1;
this.m_locked = !1;
this.m_clearForces = !0;
this.m_contactManager = new rn();
this.m_bodyList = null;
this.m_jointList = null;
this.m_particleSystemList = null;
this.m_bodyCount = 0;
this.m_jointCount = 0;
this.m_gravity = new I();
this.m_allowSleep = !0;
this.m_destructionListener = null;
this.m_debugDraw = null;
this.m_inv_dt0 = 0;
this.m_warmStarting = !0;
this.m_continuousPhysics = !0;
this.m_subStepping = !1;
this.m_stepComplete = !0;
this.m_profile = new sn();
this.m_island = new mn();
this.s_stack = [];
this.m_controllerList = null;
this.m_controllerCount = 0;
this.m_gravity.Copy(t);
}
e.prototype.SetDestructionListener = function(t) {
this.m_destructionListener = t;
};
e.prototype.SetContactFilter = function(t) {
this.m_contactManager.m_contactFilter = t;
};
e.prototype.SetContactListener = function(t) {
this.m_contactManager.m_contactListener = t;
};
e.prototype.SetDebugDraw = function(t) {
this.m_debugDraw = t;
};
e.prototype.CreateBody = function(t) {
void 0 === t && (t = {});
if (this.IsLocked()) throw new Error();
var e = new li(t, this);
e.m_prev = null;
e.m_next = this.m_bodyList;
this.m_bodyList && (this.m_bodyList.m_prev = e);
this.m_bodyList = e;
++this.m_bodyCount;
return e;
};
e.prototype.DestroyBody = function(t) {
if (this.IsLocked()) throw new Error();
for (var e = t.m_jointList; e; ) {
var i = e;
e = e.next;
this.m_destructionListener && this.m_destructionListener.SayGoodbyeJoint(i.joint);
this.DestroyJoint(i.joint);
t.m_jointList = e;
}
t.m_jointList = null;
for (var n = t.m_controllerList; n; ) {
var r = n;
n = n.nextController;
r.controller.RemoveBody(t);
}
for (var s = t.m_contactList; s; ) {
var o = s;
s = s.next;
this.m_contactManager.Destroy(o.contact);
}
t.m_contactList = null;
for (var a = t.m_fixtureList; a; ) {
var c = a;
a = a.m_next;
this.m_destructionListener && this.m_destructionListener.SayGoodbyeFixture(c);
c.DestroyProxies();
c.Destroy();
t.m_fixtureList = a;
t.m_fixtureCount -= 1;
}
t.m_fixtureList = null;
t.m_fixtureCount = 0;
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
t === this.m_bodyList && (this.m_bodyList = t.m_next);
--this.m_bodyCount;
};
e._Joint_Create = function(e, i) {
switch (e.type) {
case t.b2JointType.e_distanceJoint:
return new pi(e);

case t.b2JointType.e_mouseJoint:
return new wi(e);

case t.b2JointType.e_prismaticJoint:
return new Ei(e);

case t.b2JointType.e_revoluteJoint:
return new Ri(e);

case t.b2JointType.e_pulleyJoint:
return new Bi(e);

case t.b2JointType.e_gearJoint:
return new Ci(e);

case t.b2JointType.e_wheelJoint:
return new Ni(e);

case t.b2JointType.e_weldJoint:
return new Li(e);

case t.b2JointType.e_frictionJoint:
return new gi(e);

case t.b2JointType.e_ropeJoint:
return new Pi(e);

case t.b2JointType.e_motorJoint:
return new Ai(e);

case t.b2JointType.e_areaJoint:
return new yi(e);
}
throw new Error();
};
e._Joint_Destroy = function(t, e) {};
e.prototype.CreateJoint = function(t) {
if (this.IsLocked()) throw new Error();
var i = e._Joint_Create(t, null);
i.m_prev = null;
i.m_next = this.m_jointList;
this.m_jointList && (this.m_jointList.m_prev = i);
this.m_jointList = i;
++this.m_jointCount;
i.m_edgeA.prev = null;
i.m_edgeA.next = i.m_bodyA.m_jointList;
i.m_bodyA.m_jointList && (i.m_bodyA.m_jointList.prev = i.m_edgeA);
i.m_bodyA.m_jointList = i.m_edgeA;
i.m_edgeB.prev = null;
i.m_edgeB.next = i.m_bodyB.m_jointList;
i.m_bodyB.m_jointList && (i.m_bodyB.m_jointList.prev = i.m_edgeB);
i.m_bodyB.m_jointList = i.m_edgeB;
var n = t.bodyA, r = t.bodyB;
if (!t.collideConnected) for (var s = r.GetContactList(); s; ) {
s.other === n && s.contact.FlagForFiltering();
s = s.next;
}
return i;
};
e.prototype.DestroyJoint = function(t) {
if (this.IsLocked()) throw new Error();
var i = t.m_collideConnected;
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
t === this.m_jointList && (this.m_jointList = t.m_next);
var n = t.m_bodyA, r = t.m_bodyB;
n.SetAwake(!0);
r.SetAwake(!0);
t.m_edgeA.prev && (t.m_edgeA.prev.next = t.m_edgeA.next);
t.m_edgeA.next && (t.m_edgeA.next.prev = t.m_edgeA.prev);
t.m_edgeA === n.m_jointList && (n.m_jointList = t.m_edgeA.next);
t.m_edgeA.prev = null;
t.m_edgeA.next = null;
t.m_edgeB.prev && (t.m_edgeB.prev.next = t.m_edgeB.next);
t.m_edgeB.next && (t.m_edgeB.next.prev = t.m_edgeB.prev);
t.m_edgeB === r.m_jointList && (r.m_jointList = t.m_edgeB.next);
t.m_edgeB.prev = null;
t.m_edgeB.next = null;
e._Joint_Destroy(t, null);
--this.m_jointCount;
if (!i) for (var s = r.GetContactList(); s; ) {
s.other === n && s.contact.FlagForFiltering();
s = s.next;
}
};
e.prototype.CreateParticleSystem = function(e) {
if (this.IsLocked()) throw new Error();
var i = new t.b2ParticleSystem(e, this);
i.m_prev = null;
i.m_next = this.m_particleSystemList;
this.m_particleSystemList && (this.m_particleSystemList.m_prev = i);
this.m_particleSystemList = i;
return i;
};
e.prototype.DestroyParticleSystem = function(t) {
if (this.IsLocked()) throw new Error();
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
t === this.m_particleSystemList && (this.m_particleSystemList = t.m_next);
};
e.prototype.CalculateReasonableParticleIterations = function(t) {
if (null === this.m_particleSystemList) return 1;
return vn(this.m_gravity.Length(), (function(t) {
for (var e = i, n = t.GetParticleSystemList(); null !== n; n = n.m_next) e = g(e, n.GetRadius());
return e;
})(this), t);
};
e.prototype.Step = function(t, i, n, r) {
void 0 === r && (r = this.CalculateReasonableParticleIterations(t));
var s = e.Step_s_stepTimer.Reset();
if (this.m_newFixture) {
this.m_contactManager.FindNewContacts();
this.m_newFixture = !1;
}
this.m_locked = !0;
var o = e.Step_s_step;
o.dt = t;
o.velocityIterations = i;
o.positionIterations = n;
o.particleIterations = r;
o.inv_dt = t > 0 ? 1 / t : 0;
o.dtRatio = this.m_inv_dt0 * t;
o.warmStarting = this.m_warmStarting;
var a = e.Step_s_timer.Reset();
this.m_contactManager.Collide();
this.m_profile.collide = a.GetMilliseconds();
if (this.m_stepComplete && o.dt > 0) {
for (var c = e.Step_s_timer.Reset(), l = this.m_particleSystemList; l; l = l.m_next) l.Solve(o);
this.Solve(o);
this.m_profile.solve = c.GetMilliseconds();
}
if (this.m_continuousPhysics && o.dt > 0) {
var u = e.Step_s_timer.Reset();
this.SolveTOI(o);
this.m_profile.solveTOI = u.GetMilliseconds();
}
o.dt > 0 && (this.m_inv_dt0 = o.inv_dt);
this.m_clearForces && this.ClearForces();
this.m_locked = !1;
this.m_profile.step = s.GetMilliseconds();
};
e.prototype.ClearForces = function() {
for (var t = this.m_bodyList; t; t = t.m_next) {
t.m_force.SetZero();
t.m_torque = 0;
}
};
e.prototype.DrawParticleSystem = function(t) {
if (null !== this.m_debugDraw) {
var e = t.GetParticleCount();
if (e) {
var i = t.GetRadius(), n = t.GetPositionBuffer();
if (t.m_colorBuffer.data) {
var r = t.GetColorBuffer();
this.m_debugDraw.DrawParticles(n, i, r, e);
} else this.m_debugDraw.DrawParticles(n, i, null, e);
}
}
};
e.prototype.DrawDebugData = function() {
if (null !== this.m_debugDraw) {
var i = this.m_debugDraw.GetFlags(), n = e.DrawDebugData_s_color.SetRGB(0, 0, 0);
if (i & t.b2DrawFlags.e_shapeBit) for (var r = this.m_bodyList; r; r = r.m_next) {
var s = r.m_xf;
this.m_debugDraw.PushTransform(s);
for (var o = r.GetFixtureList(); o; o = o.m_next) if (r.IsActive()) if (r.GetType() === t.b2BodyType.b2_staticBody) {
n.SetRGB(.5, .9, .5);
this.DrawShape(o, n);
} else if (r.GetType() === t.b2BodyType.b2_kinematicBody) {
n.SetRGB(.5, .5, .9);
this.DrawShape(o, n);
} else if (r.IsAwake()) {
n.SetRGB(.9, .7, .7);
this.DrawShape(o, n);
} else {
n.SetRGB(.6, .6, .6);
this.DrawShape(o, n);
} else {
n.SetRGB(.5, .5, .3);
this.DrawShape(o, n);
}
this.m_debugDraw.PopTransform(s);
}
if (i & t.b2DrawFlags.e_particleBit) for (var a = this.m_particleSystemList; a; a = a.m_next) this.DrawParticleSystem(a);
if (i & t.b2DrawFlags.e_jointBit) for (var c = this.m_jointList; c; c = c.m_next) this.DrawJoint(c);
if (i & t.b2DrawFlags.e_aabbBit) {
n.SetRGB(.9, .3, .9);
var l = e.DrawDebugData_s_vs;
for (r = this.m_bodyList; r; r = r.m_next) if (r.IsActive()) for (o = r.GetFixtureList(); o; o = o.m_next) for (var u = 0; u < o.m_proxyCount; ++u) {
var h = o.m_proxies[u].treeNode.aabb;
l[0].Set(h.lowerBound.x, h.lowerBound.y);
l[1].Set(h.upperBound.x, h.lowerBound.y);
l[2].Set(h.upperBound.x, h.upperBound.y);
l[3].Set(h.lowerBound.x, h.upperBound.y);
this.m_debugDraw.DrawPolygon(l, 4, n);
}
}
if (i & t.b2DrawFlags.e_centerOfMassBit) for (r = this.m_bodyList; r; r = r.m_next) {
(s = e.DrawDebugData_s_xf).q.Copy(r.m_xf.q);
s.p.Copy(r.GetWorldCenter());
this.m_debugDraw.DrawTransform(s);
}
if (i & t.b2DrawFlags.e_controllerBit) for (var f = this.m_controllerList; f; f = f.m_next) f.Draw(this.m_debugDraw);
}
};
e.prototype.QueryAABB = function(t, e, i) {
this.m_contactManager.m_broadPhase.Query(e, (function(e) {
var n = e.userData.fixture;
return t ? t.ReportFixture(n) : !i || i(n);
}));
if (t instanceof en) for (var n = this.m_particleSystemList; n; n = n.m_next) t.ShouldQueryParticleSystem(n) && n.QueryAABB(t, e);
};
e.prototype.QueryAllAABB = function(t, e) {
void 0 === e && (e = []);
this.QueryAABB(null, t, (function(t) {
e.push(t);
return !0;
}));
return e;
};
e.prototype.QueryPointAABB = function(t, e, i) {
this.m_contactManager.m_broadPhase.QueryPoint(e, (function(e) {
var n = e.userData.fixture;
return t ? t.ReportFixture(n) : !i || i(n);
}));
if (t instanceof en) for (var n = this.m_particleSystemList; n; n = n.m_next) t.ShouldQueryParticleSystem(n) && n.QueryPointAABB(t, e);
};
e.prototype.QueryAllPointAABB = function(t, e) {
void 0 === e && (e = []);
this.QueryPointAABB(null, t, (function(t) {
e.push(t);
return !0;
}));
return e;
};
e.prototype.QueryFixtureShape = function(t, i, n, r, s) {
var o = e.QueryFixtureShape_s_aabb;
i.ComputeAABB(o, r, n);
this.m_contactManager.m_broadPhase.Query(o, (function(e) {
var o = e.userData, a = o.fixture;
if (It(i, n, a.GetShape(), o.childIndex, r, a.GetBody().GetTransform())) {
if (t) return t.ReportFixture(a);
if (s) return s(a);
}
return !0;
}));
if (t instanceof en) for (var a = this.m_particleSystemList; a; a = a.m_next) t.ShouldQueryParticleSystem(a) && a.QueryAABB(t, o);
};
e.prototype.QueryAllFixtureShape = function(t, e, i, n) {
void 0 === n && (n = []);
this.QueryFixtureShape(null, t, e, i, (function(t) {
n.push(t);
return !0;
}));
return n;
};
e.prototype.QueryFixturePoint = function(t, e, i) {
this.m_contactManager.m_broadPhase.QueryPoint(e, (function(n) {
var r = n.userData.fixture;
if (r.TestPoint(e)) {
if (t) return t.ReportFixture(r);
if (i) return i(r);
}
return !0;
}));
if (t) for (var n = this.m_particleSystemList; n; n = n.m_next) t.ShouldQueryParticleSystem(n) && n.QueryPointAABB(t, e);
};
e.prototype.QueryAllFixturePoint = function(t, e) {
void 0 === e && (e = []);
this.QueryFixturePoint(null, t, (function(t) {
e.push(t);
return !0;
}));
return e;
};
e.prototype.RayCast = function(t, i, n, r) {
var s = e.RayCast_s_input;
s.maxFraction = 1;
s.p1.Copy(i);
s.p2.Copy(n);
this.m_contactManager.m_broadPhase.RayCast(s, (function(s, o) {
var a = o.userData, c = a.fixture, l = a.childIndex, u = e.RayCast_s_output;
if (c.RayCast(u, s, l)) {
var h = u.fraction, f = e.RayCast_s_point;
f.Set((1 - h) * i.x + h * n.x, (1 - h) * i.y + h * n.y);
if (t) return t.ReportFixture(c, f, u.normal, h);
if (r) return r(c, f, u.normal, h);
}
return s.maxFraction;
}));
if (t) for (var o = this.m_particleSystemList; o; o = o.m_next) t.ShouldQueryParticleSystem(o) && o.RayCast(t, i, n);
};
e.prototype.RayCastOne = function(t, e) {
var i = null, n = 1;
this.RayCast(null, t, e, (function(t, e, r, s) {
if (s < n) {
n = s;
i = t;
}
return n;
}));
return i;
};
e.prototype.RayCastAll = function(t, e, i) {
void 0 === i && (i = []);
this.RayCast(null, t, e, (function(t, e, n, r) {
i.push(t);
return 1;
}));
return i;
};
e.prototype.GetBodyList = function() {
return this.m_bodyList;
};
e.prototype.GetJointList = function() {
return this.m_jointList;
};
e.prototype.GetParticleSystemList = function() {
return this.m_particleSystemList;
};
e.prototype.GetContactList = function() {
return this.m_contactManager.m_contactList;
};
e.prototype.SetAllowSleeping = function(t) {
if (t !== this.m_allowSleep) {
this.m_allowSleep = t;
if (!this.m_allowSleep) for (var e = this.m_bodyList; e; e = e.m_next) e.SetAwake(!0);
}
};
e.prototype.GetAllowSleeping = function() {
return this.m_allowSleep;
};
e.prototype.SetWarmStarting = function(t) {
this.m_warmStarting = t;
};
e.prototype.GetWarmStarting = function() {
return this.m_warmStarting;
};
e.prototype.SetContinuousPhysics = function(t) {
this.m_continuousPhysics = t;
};
e.prototype.GetContinuousPhysics = function() {
return this.m_continuousPhysics;
};
e.prototype.SetSubStepping = function(t) {
this.m_subStepping = t;
};
e.prototype.GetSubStepping = function() {
return this.m_subStepping;
};
e.prototype.GetProxyCount = function() {
return this.m_contactManager.m_broadPhase.GetProxyCount();
};
e.prototype.GetBodyCount = function() {
return this.m_bodyCount;
};
e.prototype.GetJointCount = function() {
return this.m_jointCount;
};
e.prototype.GetContactCount = function() {
return this.m_contactManager.m_contactCount;
};
e.prototype.GetTreeHeight = function() {
return this.m_contactManager.m_broadPhase.GetTreeHeight();
};
e.prototype.GetTreeBalance = function() {
return this.m_contactManager.m_broadPhase.GetTreeBalance();
};
e.prototype.GetTreeQuality = function() {
return this.m_contactManager.m_broadPhase.GetTreeQuality();
};
e.prototype.SetGravity = function(t, e) {
void 0 === e && (e = !0);
if (!I.IsEqualToV(this.m_gravity, t)) {
this.m_gravity.Copy(t);
if (e) for (var i = this.m_bodyList; i; i = i.m_next) i.SetAwake(!0);
}
};
e.prototype.GetGravity = function() {
return this.m_gravity;
};
e.prototype.IsLocked = function() {
return this.m_locked;
};
e.prototype.SetAutoClearForces = function(t) {
this.m_clearForces = t;
};
e.prototype.GetAutoClearForces = function() {
return this.m_clearForces;
};
e.prototype.ShiftOrigin = function(t) {
if (this.IsLocked()) throw new Error();
for (var e = this.m_bodyList; e; e = e.m_next) {
e.m_xf.p.SelfSub(t);
e.m_sweep.c0.SelfSub(t);
e.m_sweep.c.SelfSub(t);
}
for (var i = this.m_jointList; i; i = i.m_next) i.ShiftOrigin(t);
this.m_contactManager.m_broadPhase.ShiftOrigin(t);
};
e.prototype.GetContactManager = function() {
return this.m_contactManager;
};
e.prototype.GetProfile = function() {
return this.m_profile;
};
e.prototype.Dump = function(e) {
if (!this.m_locked) {
e("const g: b2Vec2 = new b2Vec2(%.15f, %.15f);\n", this.m_gravity.x, this.m_gravity.y);
e("this.m_world.SetGravity(g);\n");
e("const bodies: b2Body[] = [];\n");
e("const joints: b2Joint[] = [];\n");
for (var i = 0, n = this.m_bodyList; n; n = n.m_next) {
n.m_islandIndex = i;
n.Dump(e);
++i;
}
i = 0;
for (var r = this.m_jointList; r; r = r.m_next) {
r.m_index = i;
++i;
}
for (r = this.m_jointList; r; r = r.m_next) if (r.m_type !== t.b2JointType.e_gearJoint) {
e("{\n");
r.Dump(e);
e("}\n");
}
for (r = this.m_jointList; r; r = r.m_next) if (r.m_type === t.b2JointType.e_gearJoint) {
e("{\n");
r.Dump(e);
e("}\n");
}
}
};
e.prototype.DrawJoint = function(i) {
if (null !== this.m_debugDraw) {
var n = i.GetBodyA(), r = i.GetBodyB(), s = n.m_xf, o = r.m_xf, a = s.p, c = o.p, l = i.GetAnchorA(e.DrawJoint_s_p1), u = i.GetAnchorB(e.DrawJoint_s_p2), h = e.DrawJoint_s_color.SetRGB(.5, .8, .8);
switch (i.m_type) {
case t.b2JointType.e_distanceJoint:
this.m_debugDraw.DrawSegment(l, u, h);
break;

case t.b2JointType.e_pulleyJoint:
var f = i, _ = f.GetGroundAnchorA(), d = f.GetGroundAnchorB();
this.m_debugDraw.DrawSegment(_, l, h);
this.m_debugDraw.DrawSegment(d, u, h);
this.m_debugDraw.DrawSegment(_, d, h);
break;

case t.b2JointType.e_mouseJoint:
var p = e.DrawJoint_s_c;
p.Set(0, 1, 0);
this.m_debugDraw.DrawPoint(l, 4, p);
this.m_debugDraw.DrawPoint(u, 4, p);
p.Set(.8, .8, .8);
this.m_debugDraw.DrawSegment(l, u, p);
break;

default:
this.m_debugDraw.DrawSegment(a, l, h);
this.m_debugDraw.DrawSegment(l, u, h);
this.m_debugDraw.DrawSegment(c, u, h);
}
}
};
e.prototype.DrawShape = function(i, n) {
if (null !== this.m_debugDraw) {
var r = i.GetShape();
switch (r.m_type) {
case t.b2ShapeType.e_circleShape:
var s = r, o = s.m_p, a = s.m_radius, c = I.UNITX;
this.m_debugDraw.DrawSolidCircle(o, a, c, n);
break;

case t.b2ShapeType.e_edgeShape:
var l = r, u = l.m_vertex1, h = l.m_vertex2;
this.m_debugDraw.DrawSegment(u, h, n);
break;

case t.b2ShapeType.e_chainShape:
var f = r, _ = f.m_count, d = f.m_vertices, p = e.DrawShape_s_ghostColor.SetRGBA(.75 * n.r, .75 * n.g, .75 * n.b, n.a);
u = d[0];
this.m_debugDraw.DrawPoint(u, 4, n);
if (f.m_hasPrevVertex) {
var m = f.m_prevVertex;
this.m_debugDraw.DrawSegment(m, u, p);
this.m_debugDraw.DrawCircle(m, .1, p);
}
for (var y = 1; y < _; ++y) {
h = d[y];
this.m_debugDraw.DrawSegment(u, h, n);
this.m_debugDraw.DrawPoint(h, 4, n);
u = h;
}
if (f.m_hasNextVertex) {
var v = f.m_nextVertex;
this.m_debugDraw.DrawSegment(v, u, p);
this.m_debugDraw.DrawCircle(v, .1, p);
}
break;

case t.b2ShapeType.e_polygonShape:
var g = r, b = g.m_count;
d = g.m_vertices;
this.m_debugDraw.DrawSolidPolygon(d, b, n);
}
}
};
e.prototype.Solve = function(e) {
for (var i = this.m_bodyList; i; i = i.m_next) i.m_xf0.Copy(i.m_xf);
for (var n = this.m_controllerList; n; n = n.m_next) n.Step(e);
this.m_profile.solveInit = 0;
this.m_profile.solveVelocity = 0;
this.m_profile.solvePosition = 0;
var r = this.m_island;
r.Initialize(this.m_bodyCount, this.m_contactManager.m_contactCount, this.m_jointCount, null, this.m_contactManager.m_contactListener);
for (i = this.m_bodyList; i; i = i.m_next) i.m_islandFlag = !1;
for (var s = this.m_contactManager.m_contactList; s; s = s.m_next) s.m_islandFlag = !1;
for (var o = this.m_jointList; o; o = o.m_next) o.m_islandFlag = !1;
for (var a = this.s_stack, c = this.m_bodyList; c; c = c.m_next) if (!c.m_islandFlag && c.IsAwake() && c.IsActive() && c.GetType() !== t.b2BodyType.b2_staticBody) {
r.Clear();
var l = 0;
a[l++] = c;
c.m_islandFlag = !0;
for (;l > 0; ) {
if (!(i = a[--l])) throw new Error();
r.AddBody(i);
i.m_awakeFlag = !0;
if (i.GetType() !== t.b2BodyType.b2_staticBody) {
for (var u = i.m_contactList; u; u = u.next) {
var h = u.contact;
if (!h.m_islandFlag && (h.IsEnabled() && h.IsTouching())) {
var f = h.m_fixtureA.m_isSensor, _ = h.m_fixtureB.m_isSensor;
if (!f && !_) {
r.AddContact(h);
h.m_islandFlag = !0;
if (!(p = u.other)) throw new Error();
if (!p.m_islandFlag) {
a[l++] = p;
p.m_islandFlag = !0;
}
}
}
}
for (var d = i.m_jointList; d; d = d.next) if (!d.joint.m_islandFlag) {
var p;
if ((p = d.other).IsActive()) {
r.AddJoint(d.joint);
d.joint.m_islandFlag = !0;
if (!p.m_islandFlag) {
a[l++] = p;
p.m_islandFlag = !0;
}
}
}
}
}
var m = new sn();
r.Solve(m, e, this.m_gravity, this.m_allowSleep);
this.m_profile.solveInit += m.solveInit;
this.m_profile.solveVelocity += m.solveVelocity;
this.m_profile.solvePosition += m.solvePosition;
for (var y = 0; y < r.m_bodyCount; ++y) {
(i = r.m_bodies[y]).GetType() === t.b2BodyType.b2_staticBody && (i.m_islandFlag = !1);
}
}
for (y = 0; y < a.length && a[y]; ++y) a[y] = null;
var v = new U();
for (i = this.m_bodyList; i; i = i.m_next) i.m_islandFlag && i.GetType() !== t.b2BodyType.b2_staticBody && i.SynchronizeFixtures();
this.m_contactManager.FindNewContacts();
this.m_profile.broadphase = v.GetMilliseconds();
};
e.prototype.SolveTOI = function(i) {
var r = this.m_island;
r.Initialize(64, 32, 0, null, this.m_contactManager.m_contactListener);
if (this.m_stepComplete) {
for (var s = this.m_bodyList; s; s = s.m_next) {
s.m_islandFlag = !1;
s.m_sweep.alpha0 = 0;
}
for (var o = this.m_contactManager.m_contactList; o; o = o.m_next) {
o.m_toiFlag = !1;
o.m_islandFlag = !1;
o.m_toiCount = 0;
o.m_toi = 1;
}
}
for (;;) {
var a = null, c = 1;
for (o = this.m_contactManager.m_contactList; o; o = o.m_next) if (o.IsEnabled() && !(o.m_toiCount > 8)) {
var l = 1;
if (o.m_toiFlag) l = o.m_toi; else {
var u = o.GetFixtureA(), h = o.GetFixtureB();
if (u.IsSensor() || h.IsSensor()) continue;
var f = u.GetBody(), _ = h.GetBody(), d = f.m_type, p = _.m_type, m = f.IsAwake() && d !== t.b2BodyType.b2_staticBody, y = _.IsAwake() && p !== t.b2BodyType.b2_staticBody;
if (!m && !y) continue;
var v = f.IsBullet() || d !== t.b2BodyType.b2_dynamicBody, b = _.IsBullet() || p !== t.b2BodyType.b2_dynamicBody;
if (!v && !b) continue;
var C = f.m_sweep.alpha0;
if (f.m_sweep.alpha0 < _.m_sweep.alpha0) {
C = _.m_sweep.alpha0;
f.m_sweep.Advance(C);
} else if (_.m_sweep.alpha0 < f.m_sweep.alpha0) {
C = f.m_sweep.alpha0;
_.m_sweep.Advance(C);
}
var x = o.GetChildIndexA(), A = o.GetChildIndexB(), S = e.SolveTOI_s_toi_input;
S.proxyA.SetShape(u.GetShape(), x);
S.proxyB.SetShape(h.GetShape(), A);
S.sweepA.Copy(f.m_sweep);
S.sweepB.Copy(_.m_sweep);
S.tMax = 1;
var w = e.SolveTOI_s_toi_output;
re(w, S);
var T = w.t;
l = w.state === t.b2TOIOutputState.e_touching ? g(C + (1 - C) * T, 1) : 1;
o.m_toi = l;
o.m_toiFlag = !0;
}
if (l < c) {
a = o;
c = l;
}
}
if (null === a || 1 - 10 * n < c) {
this.m_stepComplete = !0;
break;
}
var E = a.GetFixtureA(), M = a.GetFixtureB(), B = E.GetBody(), D = M.GetBody(), R = e.SolveTOI_s_backup1.Copy(B.m_sweep), I = e.SolveTOI_s_backup2.Copy(D.m_sweep);
B.Advance(c);
D.Advance(c);
a.Update(this.m_contactManager.m_contactListener);
a.m_toiFlag = !1;
++a.m_toiCount;
if (a.IsEnabled() && a.IsTouching()) {
B.SetAwake(!0);
D.SetAwake(!0);
r.Clear();
r.AddBody(B);
r.AddBody(D);
r.AddContact(a);
B.m_islandFlag = !0;
D.m_islandFlag = !0;
a.m_islandFlag = !0;
for (var P = 0; P < 2; ++P) {
if ((G = 0 === P ? B : D).m_type === t.b2BodyType.b2_dynamicBody) for (var O = G.m_contactList; O && r.m_bodyCount !== r.m_bodyCapacity && r.m_contactCount !== r.m_contactCapacity; O = O.next) {
var L = O.contact;
if (!L.m_islandFlag) {
var V = O.other;
if (V.m_type !== t.b2BodyType.b2_dynamicBody || G.IsBullet() || V.IsBullet()) {
var N = L.m_fixtureA.m_isSensor, F = L.m_fixtureB.m_isSensor;
if (!N && !F) {
var z = e.SolveTOI_s_backup.Copy(V.m_sweep);
V.m_islandFlag || V.Advance(c);
L.Update(this.m_contactManager.m_contactListener);
if (L.IsEnabled()) if (L.IsTouching()) {
L.m_islandFlag = !0;
r.AddContact(L);
if (!V.m_islandFlag) {
V.m_islandFlag = !0;
V.m_type !== t.b2BodyType.b2_staticBody && V.SetAwake(!0);
r.AddBody(V);
}
} else {
V.m_sweep.Copy(z);
V.SynchronizeTransform();
} else {
V.m_sweep.Copy(z);
V.SynchronizeTransform();
}
}
}
}
}
}
var k = e.SolveTOI_s_subStep;
k.dt = (1 - c) * i.dt;
k.inv_dt = 1 / k.dt;
k.dtRatio = 1;
k.positionIterations = 20;
k.velocityIterations = i.velocityIterations;
k.particleIterations = i.particleIterations;
k.warmStarting = !1;
r.SolveTOI(k, B.m_islandIndex, D.m_islandIndex);
for (P = 0; P < r.m_bodyCount; ++P) {
var G;
(G = r.m_bodies[P]).m_islandFlag = !1;
if (G.m_type === t.b2BodyType.b2_dynamicBody) {
G.SynchronizeFixtures();
for (O = G.m_contactList; O; O = O.next) {
O.contact.m_toiFlag = !1;
O.contact.m_islandFlag = !1;
}
}
}
this.m_contactManager.FindNewContacts();
if (this.m_subStepping) {
this.m_stepComplete = !1;
break;
}
} else {
a.SetEnabled(!1);
B.m_sweep.Copy(R);
D.m_sweep.Copy(I);
B.SynchronizeTransform();
D.SynchronizeTransform();
}
}
};
e.prototype.AddController = function(t) {
t.m_next = this.m_controllerList;
t.m_prev = null;
this.m_controllerList && (this.m_controllerList.m_prev = t);
this.m_controllerList = t;
++this.m_controllerCount;
return t;
};
e.prototype.RemoveController = function(t) {
t.m_prev && (t.m_prev.m_next = t.m_next);
t.m_next && (t.m_next.m_prev = t.m_prev);
this.m_controllerList === t && (this.m_controllerList = t.m_next);
--this.m_controllerCount;
t.m_prev = null;
t.m_next = null;
return t;
};
e.Step_s_step = new on();
e.Step_s_stepTimer = new U();
e.Step_s_timer = new U();
e.DrawDebugData_s_color = new k(0, 0, 0);
e.DrawDebugData_s_vs = I.MakeArray(4);
e.DrawDebugData_s_xf = new F();
e.QueryFixtureShape_s_aabb = new Tt();
e.RayCast_s_input = new St();
e.RayCast_s_output = new wt();
e.RayCast_s_point = new I();
e.DrawJoint_s_p1 = new I();
e.DrawJoint_s_p2 = new I();
e.DrawJoint_s_color = new k(.5, .8, .8);
e.DrawJoint_s_c = new k();
e.DrawShape_s_ghostColor = new k();
e.SolveTOI_s_subStep = new on();
e.SolveTOI_s_backup = new z();
e.SolveTOI_s_backup1 = new z();
e.SolveTOI_s_backup2 = new z();
e.SolveTOI_s_toi_input = new qt();
e.SolveTOI_s_toi_output = new Xt();
return e;
})(), Gn = (function() {
return function(t, e) {
this.prevBody = null;
this.nextBody = null;
this.prevController = null;
this.nextController = null;
this.controller = t;
this.body = e;
};
})(), Un = (function() {
function t() {
this.m_bodyList = null;
this.m_bodyCount = 0;
this.m_prev = null;
this.m_next = null;
}
t.prototype.GetNext = function() {
return this.m_next;
};
t.prototype.GetPrev = function() {
return this.m_prev;
};
t.prototype.GetBodyList = function() {
return this.m_bodyList;
};
t.prototype.AddBody = function(t) {
var e = new Gn(this, t);
e.nextBody = this.m_bodyList;
e.prevBody = null;
this.m_bodyList && (this.m_bodyList.prevBody = e);
this.m_bodyList = e;
++this.m_bodyCount;
e.nextController = t.m_controllerList;
e.prevController = null;
t.m_controllerList && (t.m_controllerList.prevController = e);
t.m_controllerList = e;
++t.m_controllerCount;
};
t.prototype.RemoveBody = function(t) {
if (this.m_bodyCount <= 0) throw new Error();
for (var e = this.m_bodyList; e && e.body !== t; ) e = e.nextBody;
if (null === e) throw new Error();
e.prevBody && (e.prevBody.nextBody = e.nextBody);
e.nextBody && (e.nextBody.prevBody = e.prevBody);
this.m_bodyList === e && (this.m_bodyList = e.nextBody);
--this.m_bodyCount;
e.nextController && (e.nextController.prevController = e.prevController);
e.prevController && (e.prevController.nextController = e.nextController);
t.m_controllerList === e && (t.m_controllerList = e.nextController);
--t.m_controllerCount;
};
t.prototype.Clear = function() {
for (;this.m_bodyList; ) this.RemoveBody(this.m_bodyList.body);
this.m_bodyCount = 0;
};
return t;
})(), jn = (function(t) {
$e(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.normal = new I(0, 1);
e.offset = 0;
e.density = 0;
e.velocity = new I(0, 0);
e.linearDrag = 0;
e.angularDrag = 0;
e.useDensity = !1;
e.useWorldGravity = !0;
e.gravity = new I(0, 0);
return e;
}
e.prototype.Step = function(t) {
if (this.m_bodyList) {
this.useWorldGravity && this.gravity.Copy(this.m_bodyList.body.GetWorld().GetGravity());
for (var e = this.m_bodyList; e; e = e.nextBody) {
var i = e.body;
if (i.IsAwake()) {
for (var r = new I(), s = new I(), o = 0, a = 0, c = i.GetFixtureList(); c; c = c.m_next) {
var l = new I(), u = c.GetShape().ComputeSubmergedArea(this.normal, this.offset, i.GetTransform(), l);
o += u;
r.x += u * l.x;
r.y += u * l.y;
var h = 0;
a += u * (h = this.useDensity ? c.GetDensity() : 1);
s.x += u * l.x * h;
s.y += u * l.y * h;
}
r.x /= o;
r.y /= o;
s.x /= a;
s.y /= a;
if (!(o < n)) {
var f = this.gravity.Clone().SelfNeg();
f.SelfMul(this.density * o);
i.ApplyForce(f, s);
var _ = i.GetLinearVelocityFromWorldPoint(r, new I());
_.SelfSub(this.velocity);
_.SelfMul(-this.linearDrag * o);
i.ApplyForce(_, r);
i.ApplyTorque(-i.GetInertia() / i.GetMass() * o * i.GetAngularVelocity() * this.angularDrag);
}
}
}
}
};
e.prototype.Draw = function(t) {
var e = 100, i = new I(), n = new I();
i.x = this.normal.x * this.offset + this.normal.y * e;
i.y = this.normal.y * this.offset - this.normal.x * e;
n.x = this.normal.x * this.offset - this.normal.y * e;
n.y = this.normal.y * this.offset + this.normal.x * e;
var r = new k(0, 0, .8);
t.DrawSegment(i, n, r);
};
return e;
})(Un), Hn = (function(t) {
$e(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.A = new I(0, 0);
return e;
}
e.prototype.Step = function(t) {
for (var i = I.MulSV(t.dt, this.A, e.Step_s_dtA), n = this.m_bodyList; n; n = n.nextBody) {
var r = n.body;
r.IsAwake() && r.SetLinearVelocity(I.AddVV(r.GetLinearVelocity(), i, I.s_t0));
}
};
e.prototype.Draw = function(t) {};
e.Step_s_dtA = new I();
return e;
})(Un), Wn = (function(t) {
$e(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.F = new I(0, 0);
return e;
}
e.prototype.Step = function(t) {
for (var e = this.m_bodyList; e; e = e.nextBody) {
var i = e.body;
i.IsAwake() && i.ApplyForce(this.F, i.GetWorldCenter());
}
};
e.prototype.Draw = function(t) {};
return e;
})(Un), qn = (function(t) {
$e(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.G = 1;
e.invSqr = !0;
return e;
}
e.prototype.Step = function(t) {
if (this.invSqr) for (var i = this.m_bodyList; i; i = i.nextBody) for (var r = (l = i.body).GetWorldCenter(), s = l.GetMass(), o = this.m_bodyList; o && o !== i; o = o.nextBody) {
var a = (u = o.body).GetWorldCenter(), c = u.GetMass();
if (!((_ = (h = a.x - r.x) * h + (f = a.y - r.y) * f) < n)) {
(d = e.Step_s_f.Set(h, f)).SelfMul(this.G / _ / w(_) * s * c);
l.IsAwake() && l.ApplyForce(d, r);
u.IsAwake() && u.ApplyForce(d.SelfMul(-1), a);
}
} else for (i = this.m_bodyList; i; i = i.nextBody) {
var l;
for (r = (l = i.body).GetWorldCenter(), s = l.GetMass(), o = this.m_bodyList; o && o !== i; o = o.nextBody) {
var u, h, f, _;
a = (u = o.body).GetWorldCenter(), c = u.GetMass();
if (!((_ = (h = a.x - r.x) * h + (f = a.y - r.y) * f) < n)) {
var d;
(d = e.Step_s_f.Set(h, f)).SelfMul(this.G / _ * s * c);
l.IsAwake() && l.ApplyForce(d, r);
u.IsAwake() && u.ApplyForce(d.SelfMul(-1), a);
}
}
}
};
e.prototype.Draw = function(t) {};
e.Step_s_f = new I();
return e;
})(Un), Xn = (function(t) {
$e(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.T = new L();
e.maxTimestep = 0;
return e;
}
e.prototype.Step = function(t) {
var i = t.dt;
if (!(i <= n)) {
i > this.maxTimestep && this.maxTimestep > 0 && (i = this.maxTimestep);
for (var r = this.m_bodyList; r; r = r.nextBody) {
var s = r.body;
if (s.IsAwake()) {
var o = s.GetWorldVector(L.MulMV(this.T, s.GetLocalVector(s.GetLinearVelocity(), I.s_t0), I.s_t1), e.Step_s_damping);
s.SetLinearVelocity(I.AddVV(s.GetLinearVelocity(), I.MulSV(i, o, I.s_t0), I.s_t1));
}
}
}
};
e.prototype.Draw = function(t) {};
e.prototype.SetAxisAligned = function(t, e) {
this.T.ex.x = -t;
this.T.ex.y = 0;
this.T.ey.x = 0;
this.T.ey.y = -e;
this.maxTimestep = t > 0 || e > 0 ? 1 / b(t, e) : 0;
};
e.Step_s_damping = new I();
return e;
})(Un), Yn = (function() {
return function() {
this.vertices = [];
this.count = 0;
this.masses = [];
this.gravity = new I(0, 0);
this.damping = .1;
this.k2 = .9;
this.k3 = .1;
};
})(), Jn = (function() {
function t() {
this.m_count = 0;
this.m_ps = [];
this.m_p0s = [];
this.m_vs = [];
this.m_ims = [];
this.m_Ls = [];
this.m_as = [];
this.m_gravity = new I();
this.m_damping = 0;
this.m_k2 = 1;
this.m_k3 = .1;
}
t.prototype.GetVertexCount = function() {
return this.m_count;
};
t.prototype.GetVertices = function() {
return this.m_ps;
};
t.prototype.Initialize = function(t) {
this.m_count = t.count;
this.m_ps = I.MakeArray(this.m_count);
this.m_p0s = I.MakeArray(this.m_count);
this.m_vs = I.MakeArray(this.m_count);
this.m_ims = p(this.m_count);
for (var e = 0; e < this.m_count; ++e) {
this.m_ps[e].Copy(t.vertices[e]);
this.m_p0s[e].Copy(t.vertices[e]);
this.m_vs[e].SetZero();
var i = t.masses[e];
this.m_ims[e] = i > 0 ? 1 / i : 0;
}
var n = this.m_count - 1, r = this.m_count - 2;
this.m_Ls = p(n);
this.m_as = p(r);
for (e = 0; e < n; ++e) {
var s = this.m_ps[e], o = this.m_ps[e + 1];
this.m_Ls[e] = I.DistanceVV(s, o);
}
for (e = 0; e < r; ++e) {
s = this.m_ps[e], o = this.m_ps[e + 1];
var a = this.m_ps[e + 2], c = I.SubVV(o, s, I.s_t0), l = I.SubVV(a, o, I.s_t1), u = I.CrossVV(c, l), h = I.DotVV(c, l);
this.m_as[e] = R(u, h);
}
this.m_gravity.Copy(t.gravity);
this.m_damping = t.damping;
this.m_k2 = t.k2;
this.m_k3 = t.k3;
};
t.prototype.Step = function(t, e) {
if (0 !== t) {
for (var i = Math.exp(-t * this.m_damping), n = 0; n < this.m_count; ++n) {
this.m_p0s[n].Copy(this.m_ps[n]);
this.m_ims[n] > 0 && this.m_vs[n].SelfMulAdd(t, this.m_gravity);
this.m_vs[n].SelfMul(i);
this.m_ps[n].SelfMulAdd(t, this.m_vs[n]);
}
for (n = 0; n < e; ++n) {
this.SolveC2();
this.SolveC3();
this.SolveC2();
}
var r = 1 / t;
for (n = 0; n < this.m_count; ++n) I.MulSV(r, I.SubVV(this.m_ps[n], this.m_p0s[n], I.s_t0), this.m_vs[n]);
}
};
t.prototype.SolveC2 = function() {
for (var e = this.m_count - 1, i = 0; i < e; ++i) {
var n = this.m_ps[i], r = this.m_ps[i + 1], s = I.SubVV(r, n, t.s_d), o = s.Normalize(), a = this.m_ims[i], c = this.m_ims[i + 1];
if (a + c !== 0) {
var l = a / (a + c), u = c / (a + c);
n.SelfMulSub(this.m_k2 * l * (this.m_Ls[i] - o), s);
r.SelfMulAdd(this.m_k2 * u * (this.m_Ls[i] - o), s);
}
}
};
t.prototype.SetAngle = function(t) {
for (var e = this.m_count - 2, i = 0; i < e; ++i) this.m_as[i] = t;
};
t.prototype.SolveC3 = function() {
for (var e = this.m_count - 2, i = 0; i < e; ++i) {
var n = this.m_ps[i], r = this.m_ps[i + 1], o = this.m_ps[i + 2], a = this.m_ims[i], c = this.m_ims[i + 1], l = this.m_ims[i + 2], u = I.SubVV(r, n, t.s_d1), h = I.SubVV(o, r, t.s_d2), f = u.LengthSquared(), _ = h.LengthSquared();
if (f * _ != 0) {
var d = I.CrossVV(u, h), p = I.DotVV(u, h), m = R(d, p), y = I.MulSV(-1 / f, u.SelfSkew(), t.s_Jd1), v = I.MulSV(1 / _, h.SelfSkew(), t.s_Jd2), g = I.NegV(y, t.s_J1), b = I.SubVV(y, v, t.s_J2), C = v, x = a * I.DotVV(g, g) + c * I.DotVV(b, b) + l * I.DotVV(C, C);
if (0 !== x) {
x = 1 / x;
for (var A = m - this.m_as[i]; A > s; ) A = (m -= 2 * s) - this.m_as[i];
for (;A < -s; ) A = (m += 2 * s) - this.m_as[i];
var S = -this.m_k3 * x * A;
n.SelfMulAdd(a * S, g);
r.SelfMulAdd(c * S, b);
o.SelfMulAdd(l * S, C);
}
}
}
};
t.prototype.Draw = function(t) {
for (var e = new k(.4, .5, .7), i = 0; i < this.m_count - 1; ++i) t.DrawSegment(this.m_ps[i], this.m_ps[i + 1], e);
};
t.s_d = new I();
t.s_d1 = new I();
t.s_d2 = new I();
t.s_Jd1 = new I();
t.s_Jd2 = new I();
t.s_J1 = new I();
t.s_J2 = new I();
return t;
})();
t.b2Assert = function(t) {
for (var e = [], i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
if (!t) throw new (Error.bind.apply(Error, [ void 0 ].concat(e)))();
};
t.b2Maybe = e;
t.b2_maxFloat = i;
t.b2_epsilon = n;
t.b2_epsilon_sq = r;
t.b2_pi = s;
t.b2_maxManifoldPoints = o;
t.b2_maxPolygonVertices = a;
t.b2_aabbExtension = .1;
t.b2_aabbMultiplier = 2;
t.b2_linearSlop = c;
t.b2_angularSlop = l;
t.b2_polygonRadius = u;
t.b2_maxSubSteps = 8;
t.b2_maxTOIContacts = 32;
t.b2_velocityThreshold = 1;
t.b2_maxLinearCorrection = .2;
t.b2_maxAngularCorrection = .13962634015955555;
t.b2_maxTranslation = 2;
t.b2_maxTranslationSquared = 4;
t.b2_maxRotation = 1.570796326795;
t.b2_maxRotationSquared = 2.4674011002726646;
t.b2_baumgarte = .2;
t.b2_toiBaumgarte = .75;
t.b2_invalidParticleIndex = h;
t.b2_maxParticleIndex = 2147483647;
t.b2_particleStride = .75;
t.b2_minParticleWeight = 1;
t.b2_maxParticlePressure = .25;
t.b2_maxParticleForce = .5;
t.b2_maxTriadDistance = 2;
t.b2_maxTriadDistanceSquared = 4;
t.b2_minParticleSystemBufferCapacity = 256;
t.b2_barrierCollisionTime = 2.5;
t.b2_timeToSleep = .5;
t.b2_linearSleepTolerance = .01;
t.b2_angularSleepTolerance = .03490658503988889;
t.b2Alloc = function(t) {
return null;
};
t.b2Free = function(t) {};
t.b2Log = function(t) {
for (var e = [], i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
};
t.b2Version = f;
t.b2_version = _;
t.b2_branch = "master";
t.b2_commit = "fbf51801d80fc389d43dc46524520e89043b6faf";
t.b2ParseInt = function(t) {
return parseInt(t, 10);
};
t.b2ParseUInt = function(t) {
return Math.abs(parseInt(t, 10));
};
t.b2MakeArray = d;
t.b2MakeNullArray = function(t) {
for (var e = [], i = 0; i < t; ++i) e.push(null);
return e;
};
t.b2MakeNumberArray = p;
t.b2_pi_over_180 = m;
t.b2_180_over_pi = y;
t.b2_two_pi = 6.28318530718;
t.b2Abs = v;
t.b2Min = g;
t.b2Max = b;
t.b2Clamp = C;
t.b2Swap = function(t, e) {
var i = t[0];
t[0] = e[0];
e[0] = i;
};
t.b2IsValid = x;
t.b2Sq = A;
t.b2InvSqrt = S;
t.b2Sqrt = w;
t.b2Pow = T;
t.b2DegToRad = function(t) {
return t * m;
};
t.b2RadToDeg = function(t) {
return t * y;
};
t.b2Cos = E;
t.b2Sin = M;
t.b2Acos = B;
t.b2Asin = D;
t.b2Atan2 = R;
t.b2NextPowerOfTwo = function(t) {
t |= t >> 1 & 2147483647;
t |= t >> 2 & 1073741823;
t |= t >> 4 & 268435455;
t |= t >> 8 & 16777215;
return 1 + (t |= t >> 16 & 65535);
};
t.b2IsPowerOfTwo = function(t) {
return t > 0 && 0 == (t & t - 1);
};
t.b2Random = function() {
return 2 * Math.random() - 1;
};
t.b2RandomRange = function(t, e) {
return (e - t) * Math.random() + t;
};
t.b2Vec2 = I;
t.b2Vec2_zero = P;
t.b2Vec3 = O;
t.b2Mat22 = L;
t.b2Mat33 = V;
t.b2Rot = N;
t.b2Transform = F;
t.b2Sweep = z;
t.b2Color = k;
t.b2Draw = G;
t.b2Timer = U;
t.b2Counter = j;
t.b2GrowableStack = H;
t.b2BlockAllocator = W;
t.b2StackAllocator = q;
t.b2ContactFeature = vt;
t.b2ContactID = gt;
t.b2ManifoldPoint = bt;
t.b2Manifold = Ct;
t.b2WorldManifold = xt;
t.b2GetPointStates = function(e, i, n, r) {
var s;
for (s = 0; s < n.pointCount; ++s) {
var a = n.points[s].id.key;
e[s] = t.b2PointState.b2_removeState;
for (var c = 0, l = r.pointCount; c < l; ++c) if (r.points[c].id.key === a) {
e[s] = t.b2PointState.b2_persistState;
break;
}
}
for (;s < o; ++s) e[s] = t.b2PointState.b2_nullState;
for (s = 0; s < r.pointCount; ++s) {
a = r.points[s].id.key;
i[s] = t.b2PointState.b2_addState;
for (c = 0, l = n.pointCount; c < l; ++c) if (n.points[c].id.key === a) {
i[s] = t.b2PointState.b2_persistState;
break;
}
}
for (;s < o; ++s) i[s] = t.b2PointState.b2_nullState;
};
t.b2ClipVertex = At;
t.b2RayCastInput = St;
t.b2RayCastOutput = wt;
t.b2AABB = Tt;
t.b2TestOverlapAABB = Et;
t.b2ClipSegmentToLine = Mt;
t.b2TestOverlapShape = It;
t.b2DistanceProxy = X;
t.b2SimplexCache = Y;
t.b2DistanceInput = J;
t.b2DistanceOutput = Z;
t.b2ShapeCastInput = K;
t.b2ShapeCastOutput = Q;
t.b2_gjk_reset = function() {
t.b2_gjkCalls = 0;
t.b2_gjkIters = 0;
t.b2_gjkMaxIters = 0;
};
t.b2SimplexVertex = $;
t.b2Simplex = tt;
t.b2Distance = lt;
t.b2ShapeCast = function(t, e) {
t.iterations = 0;
t.lambda = 1;
t.normal.SetZero();
t.point.SetZero();
var i = e.proxyA, n = e.proxyB, r = b(i.m_radius, u) + b(n.m_radius, u), s = e.transformA, o = e.transformB, a = e.translationB, l = ut.Set(0, 0), h = 0, f = ht;
f.m_count = 0;
for (var _ = f.m_vertices, d = i.GetSupport(N.MulTRV(s.q, I.NegV(a, I.s_t1), I.s_t0)), p = F.MulXV(s, i.GetVertex(d), ft), m = n.GetSupport(N.MulTRV(o.q, a, I.s_t0)), y = F.MulXV(o, n.GetVertex(m), _t), g = I.SubVV(p, y, dt), C = b(u, r - u), x = .5 * c, A = 0; A < 20 && v(g.Length() - C) > x; ) {
t.iterations += 1;
d = i.GetSupport(N.MulTRV(s.q, I.NegV(g, I.s_t1), I.s_t0));
p = F.MulXV(s, i.GetVertex(d), ft);
m = n.GetSupport(N.MulTRV(o.q, g, I.s_t0));
y = F.MulXV(o, n.GetVertex(m), _t);
var S = I.SubVV(p, y, pt);
g.Normalize();
var w = I.DotVV(g, S), T = I.DotVV(g, a);
if (w - C > h * T) {
if (T <= 0) return !1;
if ((h = (w - C) / T) > 1) return !1;
l.Copy(g).SelfNeg();
f.m_count = 0;
}
var E = _[f.m_count];
E.indexA = m;
E.wA.Copy(y).SelfMulAdd(h, a);
E.indexB = d;
E.wB.Copy(p);
E.w.Copy(E.wB).SelfSub(E.wA);
E.a = 1;
f.m_count += 1;
switch (f.m_count) {
case 1:
break;

case 2:
f.Solve2();
break;

case 3:
f.Solve3();
}
if (3 === f.m_count) return !1;
f.GetClosestPoint(g);
++A;
}
var M = mt, B = yt;
f.GetWitnessPoints(M, B);
if (g.LengthSquared() > 0) {
l.Copy(g).SelfNeg();
l.Normalize();
}
t.normal.Copy(l);
t.lambda = h;
t.iterations = A;
return !0;
};
t.b2Pair = Vt;
t.b2BroadPhase = Nt;
t.b2PairLessThan = Ft;
t.b2TreeNode = Ot;
t.b2DynamicTree = Lt;
t.b2_toi_reset = function() {
t.b2_toiTime = 0;
t.b2_toiMaxTime = 0;
t.b2_toiCalls = 0;
t.b2_toiIters = 0;
t.b2_toiMaxIters = 0;
t.b2_toiRootIters = 0;
t.b2_toiMaxRootIters = 0;
};
t.b2TOIInput = qt;
t.b2TOIOutput = Xt;
t.b2SeparationFunction = Yt;
t.b2TimeOfImpact = re;
t.b2CollideCircles = ae;
t.b2CollidePolygonAndCircle = he;
t.b2CollidePolygons = Le;
t.b2CollideEdgeAndCircle = He;
t.b2CollideEdgeAndPolygon = Je;
t.b2MassData = Ze;
t.b2Shape = Ke;
t.b2CircleShape = ti;
t.b2PolygonShape = ei;
t.b2EdgeShape = ii;
t.b2ChainShape = ni;
t.b2Filter = ri;
t.b2FixtureDef = si;
t.b2FixtureProxy = oi;
t.b2Fixture = ai;
t.b2BodyDef = ci;
t.b2Body = li;
t.b2World = kn;
t.b2DestructionListener = Ki;
t.b2ContactFilter = Qi;
t.b2ContactImpulse = $i;
t.b2ContactListener = tn;
t.b2QueryCallback = en;
t.b2RayCastCallback = nn;
t.b2Island = mn;
t.b2Profile = sn;
t.b2TimeStep = on;
t.b2Position = an;
t.b2Velocity = cn;
t.b2SolverData = ln;
t.b2ContactManager = rn;
t.b2MixFriction = Fi;
t.b2MixRestitution = zi;
t.b2ContactEdge = ki;
t.b2Contact = Gi;
t.b2ContactRegister = Ji;
t.b2ContactFactory = Zi;
t.g_blockSolve = !1;
t.b2VelocityConstraintPoint = un;
t.b2ContactVelocityConstraint = hn;
t.b2ContactPositionConstraint = fn;
t.b2ContactSolverDef = _n;
t.b2PositionSolverManifold = dn;
t.b2ContactSolver = pn;
t.b2CircleContact = Ui;
t.b2PolygonContact = ji;
t.b2PolygonAndCircleContact = Hi;
t.b2EdgeAndCircleContact = Wi;
t.b2EdgeAndPolygonContact = qi;
t.b2ChainAndCircleContact = Xi;
t.b2ChainAndPolygonContact = Yi;
t.b2Jacobian = ui;
t.b2JointEdge = hi;
t.b2JointDef = fi;
t.b2Joint = _i;
t.b2AreaJointDef = mi;
t.b2AreaJoint = yi;
t.b2DistanceJointDef = di;
t.b2DistanceJoint = pi;
t.b2FrictionJointDef = vi;
t.b2FrictionJoint = gi;
t.b2GearJointDef = bi;
t.b2GearJoint = Ci;
t.b2MotorJointDef = xi;
t.b2MotorJoint = Ai;
t.b2MouseJointDef = Si;
t.b2MouseJoint = wi;
t.b2PrismaticJointDef = Ti;
t.b2PrismaticJoint = Ei;
t.b2_minPulleyLength = 2;
t.b2PulleyJointDef = Mi;
t.b2PulleyJoint = Bi;
t.b2RevoluteJointDef = Di;
t.b2RevoluteJoint = Ri;
t.b2RopeJointDef = Ii;
t.b2RopeJoint = Pi;
t.b2WeldJointDef = Oi;
t.b2WeldJoint = Li;
t.b2WheelJointDef = Vi;
t.b2WheelJoint = Ni;
t.b2ControllerEdge = Gn;
t.b2Controller = Un;
t.b2BuoyancyController = jn;
t.b2ConstantAccelController = Hn;
t.b2ConstantForceController = Wn;
t.b2GravityController = qn;
t.b2TensorDampingController = Xn;
t.b2ParticleDef = yn;
t.b2CalculateParticleIterations = vn;
t.b2ParticleHandle = gn;
t.b2ParticleGroupDef = bn;
t.b2ParticleGroup = Cn;
t.b2GrowableBuffer = Pn;
t.b2FixtureParticleQueryCallback = On;
t.b2ParticleContact = Ln;
t.b2ParticleBodyContact = Vn;
t.b2ParticlePair = Nn;
t.b2ParticleTriad = Fn;
t.b2ParticleSystemDef = zn;
t.b2RopeDef = Yn;
t.b2Rope = Jn;
Object.defineProperty(t, "__esModule", {
value: !0
});
}));
}), {} ],
390: [ (function(t, e, i) {
"use strict";
var n = "undefined" == typeof window ? global : window;
n.cc = n.cc || {};
cc.internal = cc.internal || {};
t("./predefine");
t("./polyfill/string");
t("./polyfill/misc");
t("./polyfill/array");
t("./polyfill/object");
t("./polyfill/array-buffer");
t("./polyfill/number");
t("./polyfill/typescript");
t("./cocos2d/core/predefine");
t("./cocos2d");
t("./extends");
0;
e.exports = n.cc;
}), {
"./cocos2d": 341,
"./cocos2d/core/predefine": 255,
"./extends": 374,
"./package": void 0,
"./polyfill/array": 392,
"./polyfill/array-buffer": 391,
"./polyfill/misc": 393,
"./polyfill/number": 394,
"./polyfill/object": 395,
"./polyfill/string": 396,
"./polyfill/typescript": 397,
"./predefine": 398
} ],
391: [ (function(t, e, i) {
"use strict";
if (!ArrayBuffer.isView) {
var n = Object.getPrototypeOf(Int8Array);
ArrayBuffer.isView = "function" == typeof n ? function(t) {
return t instanceof n;
} : function(t) {
if ("object" != typeof t) return !1;
var e = t.constructor;
return e === Float32Array || e === Uint8Array || e === Uint32Array || e === Int8Array;
};
}
}), {} ],
392: [ (function(t, e, i) {
"use strict";
Array.isArray || (Array.isArray = function(t) {
return "[object Array]" === Object.prototype.toString.call(t);
});
Array.prototype.find || (Array.prototype.find = function(t) {
for (var e = this.length, i = 0; i < e; i++) {
var n = this[i];
if (t.call(this, n, i, this)) return n;
}
});
Array.prototype.includes || (Array.prototype.includes = function(t) {
return -1 !== this.indexOf(t);
});
}), {} ],
393: [ (function(t, e, i) {
"use strict";
Math.sign || (Math.sign = function(t) {
return 0 === (t = +t) || isNaN(t) ? t : t > 0 ? 1 : -1;
});
Math.log2 || (Math.log2 = function(t) {
return Math.log(t) * Math.LOG2E;
});
Number.isInteger || (Number.isInteger = function(t) {
return "number" == typeof t && isFinite(t) && Math.floor(t) === t;
});
var n = window.performance || Date, r = Object.create(null);
console.time = function(t) {
r[t] = n.now();
};
console.timeEnd = function(t) {
var e = r[t], i = n.now() - e;
console.log(t + ": " + i + "ms");
};
}), {} ],
394: [ (function(t, e, i) {
"use strict";
Number.parseFloat = Number.parseFloat || parseFloat;
Number.parseInt = Number.parseInt || parseInt;
}), {} ],
395: [ (function(t, e, i) {
"use strict";
Object.assign || (Object.assign = function(t, e) {
return cc.js.mixin(t, e);
});
Object.getOwnPropertyDescriptors || (Object.getOwnPropertyDescriptors = function(t) {
var e = {}, i = Object.getOwnPropertyNames(t);
Object.getOwnPropertySymbols && (i = i.concat(Object.getOwnPropertySymbols(t)));
for (var n = 0; n < i.length; ++n) {
var r = i[n];
e[r] = Object.getOwnPropertyDescriptor(t, r);
}
return e;
});
}), {} ],
396: [ (function(t, e, i) {
"use strict";
String.prototype.startsWith || (String.prototype.startsWith = function(t, e) {
e = e || 0;
return this.lastIndexOf(t, e) === e;
});
String.prototype.endsWith || (String.prototype.endsWith = function(t, e) {
("undefined" == typeof e || e > this.length) && (e = this.length);
e -= t.length;
var i = this.indexOf(t, e);
return -1 !== i && i === e;
});
String.prototype.trimLeft || (String.prototype.trimLeft = function() {
return this.replace(/^\s+/, "");
});
}), {} ],
397: [ (function(t, e, i) {
"use strict";
var n = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
};
window.__extends = function(t, e) {
n(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
};
window.__assign = Object.assign || function(t) {
for (var e, i = 1, n = arguments.length; i < n; i++) {
e = arguments[i];
for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
}
return t;
};
window.__rest = function(t, e) {
var i = {};
for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e.indexOf(n) < 0 && (i[n] = t[n]);
if (null != t && "function" == typeof Object.getOwnPropertySymbols) {
var r = 0;
for (n = Object.getOwnPropertySymbols(t); r < n.length; r++) e.indexOf(n[r]) < 0 && (i[n[r]] = t[n[r]]);
}
return i;
};
window.__decorate = function(t, e, i, n) {
var r, s = arguments.length, o = s < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var a = t.length - 1; a >= 0; a--) (r = t[a]) && (o = (s < 3 ? r(o) : s > 3 ? r(e, i, o) : r(e, i)) || o);
return s > 3 && o && Object.defineProperty(e, i, o), o;
};
window.__param = function(t, e) {
return function(i, n) {
e(i, n, t);
};
};
window.__metadata = function(t, e) {
if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(t, e);
};
window.__awaiter = function(t, e, i, n) {
return new (i || (i = Promise))(function(r, s) {
function o(t) {
try {
c(n.next(t));
} catch (t) {
s(t);
}
}
function a(t) {
try {
c(n.throw(t));
} catch (t) {
s(t);
}
}
function c(t) {
t.done ? r(t.value) : new i(function(e) {
e(t.value);
}).then(o, a);
}
c((n = n.apply(t, e || [])).next());
});
};
window.__generator = function(t, e) {
var i, n, r, s, o = {
label: 0,
sent: function() {
if (1 & r[0]) throw r[1];
return r[1];
},
trys: [],
ops: []
};
return s = {
next: a(0),
throw: a(1),
return: a(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function a(t) {
return function(e) {
return c([ t, e ]);
};
}
function c(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;o; ) try {
if (i = 1, n && (r = 2 & s[0] ? n.return : s[0] ? n.throw || ((r = n.return) && r.call(n), 
0) : n.next) && !(r = r.call(n, s[1])).done) return r;
(n = 0, r) && (s = [ 2 & s[0], r.value ]);
switch (s[0]) {
case 0:
case 1:
r = s;
break;

case 4:
o.label++;
return {
value: s[1],
done: !1
};

case 5:
o.label++;
n = s[1];
s = [ 0 ];
continue;

case 7:
s = o.ops.pop();
o.trys.pop();
continue;

default:
if (!(r = o.trys, r = r.length > 0 && r[r.length - 1]) && (6 === s[0] || 2 === s[0])) {
o = 0;
continue;
}
if (3 === s[0] && (!r || s[1] > r[0] && s[1] < r[3])) {
o.label = s[1];
break;
}
if (6 === s[0] && o.label < r[1]) {
o.label = r[1];
r = s;
break;
}
if (r && o.label < r[2]) {
o.label = r[2];
o.ops.push(s);
break;
}
r[2] && o.ops.pop();
o.trys.pop();
continue;
}
s = e.call(t, o);
} catch (t) {
s = [ 6, t ];
n = 0;
} finally {
i = r = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
window.__exportStar = function(t, e) {
for (var i in t) e.hasOwnProperty(i) || (e[i] = t[i]);
};
window.__values = function(t) {
var e = "function" == typeof Symbol && t[Symbol.iterator], i = 0;
return e ? e.call(t) : {
next: function() {
t && i >= t.length && (t = void 0);
return {
value: t && t[i++],
done: !t
};
}
};
};
window.__read = function(t, e) {
var i = "function" == typeof Symbol && t[Symbol.iterator];
if (!i) return t;
var n, r, s = i.call(t), o = [];
try {
for (;(void 0 === e || e-- > 0) && !(n = s.next()).done; ) o.push(n.value);
} catch (t) {
r = {
error: t
};
} finally {
try {
n && !n.done && (i = s.return) && i.call(s);
} finally {
if (r) throw r.error;
}
}
return o;
};
window.__spread = function() {
for (var t = [], e = 0; e < arguments.length; e++) t = t.concat(__read(arguments[e]));
return t;
};
window.__await = function(t) {
return this instanceof __await ? (this.v = t, this) : new __await(t);
};
window.__asyncGenerator = function(t, e, i) {
if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
var n, r = i.apply(t, e || []), s = [];
return n = {}, o("next"), o("throw"), o("return"), n[Symbol.asyncIterator] = function() {
return this;
}, n;
function o(t) {
r[t] && (n[t] = function(e) {
return new Promise(function(i, n) {
s.push([ t, e, i, n ]) > 1 || a(t, e);
});
});
}
function a(t, e) {
try {
c(r[t](e));
} catch (t) {
h(s[0][3], t);
}
}
function c(t) {
t.value instanceof __await ? Promise.resolve(t.value.v).then(l, u) : h(s[0][2], t);
}
function l(t) {
a("next", t);
}
function u(t) {
a("throw", t);
}
function h(t, e) {
(t(e), s.shift(), s.length) && a(s[0][0], s[0][1]);
}
};
window.__asyncDelegator = function(t) {
var e, i;
return e = {}, n("next"), n("throw", (function(t) {
throw t;
})), n("return"), e[Symbol.iterator] = function() {
return this;
}, e;
function n(n, r) {
e[n] = t[n] ? function(e) {
return (i = !i) ? {
value: __await(t[n](e)),
done: "return" === n
} : r ? r(e) : e;
} : r;
}
};
window.__asyncValues = function(t) {
if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
var e, i = t[Symbol.asyncIterator];
return i ? i.call(t) : (t = "function" == typeof __values ? __values(t) : t[Symbol.iterator](), 
e = {}, n("next"), n("throw"), n("return"), e[Symbol.asyncIterator] = function() {
return this;
}, e);
function n(i) {
e[i] = t[i] && function(e) {
return new Promise(function(n, s) {
r(n, s, (e = t[i](e)).done, e.value);
});
};
}
function r(t, e, i, n) {
Promise.resolve(n).then((function(e) {
t({
value: e,
done: i
});
}), e);
}
};
window.__makeTemplateObject = function(t, e) {
Object.defineProperty ? Object.defineProperty(t, "raw", {
value: e
}) : t.raw = e;
return t;
};
window.__importStar = function(t) {
if (t && t.__esModule) return t;
var e = {};
if (null != t) for (var i in t) Object.hasOwnProperty.call(t, i) && (e[i] = t[i]);
e.default = t;
return e;
};
window.__importDefault = function(t) {
return t && t.__esModule ? t : {
default: t
};
};
}), {} ],
398: [ (function(t, e, i) {
"use strict";
var n = "undefined" == typeof window ? global : window;
function r(t, e) {
"undefined" == typeof n[t] && (n[t] = e);
}
function s(t, e) {
"undefined" == typeof n[t] && Object.defineProperty(n, t, {
get: function() {
var i;
"CC_WECHATGAMESUB" === t ? i = "cc.sys.platform === cc.sys.WECHAT_GAME_SUB" : "CC_WECHATGAME" === t ? i = "cc.sys.platform === cc.sys.WECHAT_GAME" : "CC_QQPLAY" === t && (i = "cc.sys.platform === cc.sys.QQ_PLAY");
cc.warnID(1400, t, i);
return e;
}
});
}
function o(t) {
return "object" == typeof n[t];
}
r("CC_BUILD", !1);
n.CC_BUILD = !0;
n.CC_DEV = !1;
n.CC_DEBUG = !1;
n.CC_JSB = !0;
n.CC_NATIVERENDERER = !0;
n.CC_SUPPORT_JIT = !0;
n.CC_PHYSICS_BUILTIN = !1;
n.CC_PHYSICS_CANNON = !0;
n.CC_EDITOR = !1;
n.CC_PREVIEW = !1;
n.CC_TEST = !1;
n.CC_RUNTIME = !1;
n.CC_JSB = !0;
var a = !(!o("wx") || !wx.getSharedCanvas), c = !(!o("wx") || !wx.getSystemInfoSync && !wx.getSharedCanvas), l = o("bk");
s("CC_WECHATGAMESUB", a);
s("CC_WECHATGAME", c);
s("CC_QQPLAY", l);
0;
n.CocosEngine = cc.ENGINE_VERSION = "2.3.3";
}), {} ]
}, {}, [ 390 ]);